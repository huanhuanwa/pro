"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const ts = __importStar(require("typescript"));
const css_selector_for_ts_1 = require("./css-selector-for-ts");
function createSourceFile(content, name = '') {
    return ts.createSourceFile(name, content, ts.ScriptTarget.Latest, true, ts.ScriptKind.TSX);
}
function mockSourceFile() {
    return createSourceFile('');
}
describe('用于ts node的css选择器', () => {
    it('初始化', () => {
        let sourceFile = mockSourceFile();
        let cssSelector = css_selector_for_ts_1.createCssSelectorForTs(sourceFile);
        expect(cssSelector).toBeTruthy();
    });
    it('默认', () => {
        let cssSelctor = css_selector_for_ts_1.createCssSelectorForTs(createSourceFile('let a=6'));
        let result = cssSelctor.query('VariableDeclaration Identifier');
        expect(result.length).toBe(1);
    });
    it('~', () => {
        let cssSelctor = css_selector_for_ts_1.createCssSelectorForTs(createSourceFile('let a=6'));
        let result = cssSelctor.query('Identifier~NumericLiteral');
        expect(result.length).toBe(1);
        expect(result[0].kind === ts.SyntaxKind.NumericLiteral).toBeTrue();
    });
    it('>', () => {
        let cssSelctor = css_selector_for_ts_1.createCssSelectorForTs(createSourceFile('let a=6'));
        let result = cssSelctor.query('VariableDeclaration>Identifier');
        expect(result.length).toBe(1);
        expect(result[0].kind === ts.SyntaxKind.Identifier).toBeTrue();
    });
    it(',', () => {
        let cssSelctor = css_selector_for_ts_1.createCssSelectorForTs(createSourceFile('let a=6'));
        let result = cssSelctor.query('VariableDeclaration,Identifier');
        expect(result.length).toBe(2);
    });
    it('attribute equal', () => {
        let cssSelctor = css_selector_for_ts_1.createCssSelectorForTs(createSourceFile('let a=6'));
        let result = cssSelctor.query('VariableDeclaration[name=a]');
        expect(result.length).toBe(1);
        expect(result[0].kind).toBe(ts.SyntaxKind.VariableDeclaration);
    });
    it('attribute exist', () => {
        let cssSelctor = css_selector_for_ts_1.createCssSelectorForTs(createSourceFile('let a=6'));
        let result = cssSelctor.query('VariableDeclaration[name]');
        expect(result.length).toBe(1);
        expect(result[0].kind).toBe(ts.SyntaxKind.VariableDeclaration);
    });
    it('attribute any', () => {
        let cssSelctor = css_selector_for_ts_1.createCssSelectorForTs(createSourceFile('let a=689'));
        let result = cssSelctor.query('VariableDeclaration[initializer*=8]');
        expect(result.length).toBe(1);
        expect(result[0].kind).toBe(ts.SyntaxKind.VariableDeclaration);
    });
});
