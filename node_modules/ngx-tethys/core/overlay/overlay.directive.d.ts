import { ElementRef, NgZone } from '@angular/core';
import { OverlayRef } from '@angular/cdk/overlay';
import { Subject } from 'rxjs';
import { Platform } from '@angular/cdk/platform';
import { FocusMonitor } from '@angular/cdk/a11y';
export declare type ThyOverlayTrigger = 'hover' | 'focus' | 'click';
export declare abstract class ThyOverlayDirectiveBase {
    protected elementRef: ElementRef;
    private initialized;
    /** Trigger Overlay */
    protected _trigger: ThyOverlayTrigger;
    get trigger(): ThyOverlayTrigger;
    set trigger(value: ThyOverlayTrigger);
    protected overlayRef: OverlayRef;
    protected manualListeners: Map<string, EventListenerOrEventListenerObject>;
    protected ngUnsubscribe$: Subject<unknown>;
    protected focusMonitor: FocusMonitor;
    protected platform: Platform;
    protected ngZone: NgZone;
    protected showDelay?: number;
    protected hideDelay?: number;
    protected touchendHideDelay?: number;
    protected disabled: boolean;
    protected showTimeoutId: number | null | any;
    protected hideTimeoutId: number | null | any;
    protected tooltipPin: boolean;
    /** create overlay, you can use popover service or overlay*/
    abstract createOverlay(): OverlayRef;
    abstract show(delay?: number): void;
    abstract hide(delay?: number): void;
    private clearEventListeners;
    private clearTimer;
    constructor(elementRef: ElementRef, platform: Platform, focusMonitor: FocusMonitor, ngZone: NgZone);
    initialize(): void;
    dispose(): void;
}
