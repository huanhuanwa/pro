import { DateRangeItemInfo } from 'ngx-tethys/date-range';
import { TinyDate } from 'ngx-tethys/util';
import { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
export declare type CalendarMode = 'month' | 'year';
declare type CalendarDateTemplate = TemplateRef<{
    $implicit: Date;
}>;
export declare class ThyCalendarComponent implements OnInit, OnChanges {
    private cdr;
    className: boolean;
    className1: boolean;
    thyMode: CalendarMode;
    thyValue?: Date;
    thyDisabledDate?: (date: Date) => boolean;
    thyModeChange: EventEmitter<CalendarMode>;
    thyPanelChange: EventEmitter<{
        date: Date;
        mode: CalendarMode;
    }>;
    thySelectChange: EventEmitter<Date>;
    thyValueChange: EventEmitter<Date>;
    thyDateRangeChange: EventEmitter<DateRangeItemInfo>;
    thyDateCell?: CalendarDateTemplate;
    thyDateCellChild?: CalendarDateTemplate;
    get dateCell(): CalendarDateTemplate;
    thyCalendarHeaderOperation?: CalendarDateTemplate;
    thyCalendarHeaderOperationChild?: CalendarDateTemplate;
    get headerOperation(): CalendarDateTemplate;
    thyFullscreen: boolean;
    currentDate: TinyDate;
    prefixCls: string;
    private onChangeFn;
    private onTouchFn;
    constructor(cdr: ChangeDetectorRef);
    ngOnInit(): void;
    onYearSelect(year: number): void;
    onMonthSelect(month: number): void;
    onDateSelect(date: TinyDate): void;
    onDateRangeSelect(date: DateRangeItemInfo): void;
    writeValue(value: Date | null): void;
    registerOnChange(fn: (date: Date) => void): void;
    registerOnTouched(fn: () => void): void;
    private updateDate;
    ngOnChanges(changes: SimpleChanges): void;
}
export {};
