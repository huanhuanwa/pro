{"version":3,"file":"ngx-tethys-popover.js","sources":["../../src/popover/body/popover-body.component.ts","../../src/popover/popover.config.ts","../../src/popover/popover-animations.ts","../../src/popover/popover.options.ts","../../src/popover/popover-container.component.ts","../../src/popover/popover-ref.ts","../../src/popover/popover.service.ts","../../src/popover/header/popover-header.component.ts","../../src/popover/popover.directive.ts","../../src/popover/module.ts","../../src/popover/ngx-tethys-popover.ts"],"sourcesContent":["import { Component, HostBinding } from '@angular/core';\n\n@Component({\n    selector: 'thy-popover-body',\n    template: '<ng-content></ng-content>',\n    exportAs: 'thyPopoverBody'\n})\nexport class ThyPopoverBodyComponent {\n    @HostBinding('class.thy-popover-body') isPopoverBody = true;\n}\n","import { ThyPlacement, ThyAbstractOverlayConfig } from 'ngx-tethys/core';\n\nimport { Overlay, ScrollStrategy } from '@angular/cdk/overlay';\nimport { ElementRef, InjectionToken } from '@angular/core';\n\nexport class ThyPopoverConfig<TData = any> extends ThyAbstractOverlayConfig<TData> {\n    /** Origin Element, for overlay flexible connected to */\n    origin: ElementRef<any> | HTMLElement;\n\n    /** Origin point, default use origin's boundingClientRect*/\n    originPosition?: {\n        x: number;\n        y: number;\n    } & { width?: number; height?: number };\n\n    /** Placement be relative to origin, topCenter, topLeft, topRight, bottomCenter, bottomLeft, bottomRight ...*/\n    placement?: ThyPlacement;\n\n    /** Click inside can been close */\n    insideClosable?: boolean;\n\n    /** Offset be relative to origin, default is 4*/\n    offset?: number;\n\n    /** Manually close it, default rules is which auto close last popover when open a new unless set manualClosure as true */\n    manualClosure?: boolean;\n\n    /** Origin active class when popover is opened */\n    originActiveClass?: string | string[];\n\n    /**\n     * 滚动策略\n     */\n    scrollStrategy?: ScrollStrategy;\n\n    /** Click outside can been close */\n    outsideClosable?: boolean;\n}\n\nexport const THY_POPOVER_DEFAULT_CONFIG = new InjectionToken<ThyPopoverConfig>('thy-popover-default-config');\n\nexport const THY_POPOVER_DEFAULT_CONFIG_VALUE = {\n    hasBackdrop: true,\n    backdropClass: 'thy-popover-backdrop',\n    panelClass: '',\n    offset: 4,\n    backdropClosable: true,\n    closeOnNavigation: true,\n    placement: 'bottom' as ThyPlacement,\n    insideClosable: false,\n    manualClosure: false,\n    originActiveClass: 'thy-popover-origin-active'\n};\n\nexport const THY_POPOVER_DEFAULT_CONFIG_PROVIDER = {\n    provide: THY_POPOVER_DEFAULT_CONFIG,\n    useValue: THY_POPOVER_DEFAULT_CONFIG_VALUE\n};\n\nexport const THY_POPOVER_SCROLL_STRATEGY = new InjectionToken<() => ScrollStrategy>('thy-popover-scroll-strategy');\n\nexport const THY_POPOVER_SCROLL_STRATEGY_FACTORY = (overlay: Overlay) => {\n    return () => overlay.scrollStrategies.block();\n};\n\nexport const THY_POPOVER_SCROLL_STRATEGY_PROVIDER = {\n    provide: THY_POPOVER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: THY_POPOVER_SCROLL_STRATEGY_FACTORY\n};\n","import { animate, state, style, transition, trigger, AnimationTriggerMetadata } from '@angular/animations';\n\nconst animationBody = [\n    // Note: The `enter` animation transitions to `transform: none`, because for some reason\n    // specifying the transform explicitly, causes IE both to blur the dialog content and\n    // decimate the animation performance. Leaving it as `none` solves both issues. translate(-300px,-100px)\n    state('void, exit', style({ opacity: 0, transform: 'scale(0.1)' })),\n    state('enter', style({ transform: 'none' }))\n    // transition('* => enter', animate('100ms cubic-bezier(0, 0, 0.57, 1)', style({ transform: 'none', opacity: 1 }))),\n    // transition(\n    //     '* => exit',\n    //     animate('150ms cubic-bezier(0.24, 0.18, 0.96, 0.52)', style({ transform: 'scale(0.3)', opacity: 0 }))\n    // )\n];\n\n/**\n * Animations used by ThyPopover.\n * @docs-private\n */\nexport const thyPopoverAnimations: {\n    readonly popoverContainer: AnimationTriggerMetadata;\n} = {\n    popoverContainer: trigger('popoverContainer', animationBody)\n};\n\n// export const setAnimationStart\n","import { ThyUpperOverlayOptions } from 'ngx-tethys/core';\n\nexport const popoverUpperOverlayOptions: ThyUpperOverlayOptions = {\n    name: 'popover',\n    animationEnabled: true,\n    disposeWhenClose: true\n};\n","import {\n    Component,\n    ComponentRef,\n    ViewChild,\n    EmbeddedViewRef,\n    Inject,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    ChangeDetectorRef,\n    OnInit,\n    AfterViewInit,\n    NgZone,\n    OnDestroy\n} from '@angular/core';\nimport { ComponentPortal, TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport { AnimationEvent } from '@angular/animations';\n\nimport { ThyPopoverConfig } from './popover.config';\nimport { thyPopoverAnimations } from './popover-animations';\nimport { ThyAbstractOverlayContainer } from 'ngx-tethys/core';\nimport { popoverUpperOverlayOptions } from './popover.options';\nimport { Observable, fromEvent, timer } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { ThyClickDispatcher } from 'ngx-tethys/core';\n\n@Component({\n    selector: 'thy-popover-container',\n    templateUrl: './popover-container.component.html',\n    animations: [thyPopoverAnimations.popoverContainer],\n    host: {\n        class: 'thy-popover-container',\n        tabindex: '-1',\n        '[attr.role]': `'popover'`,\n        '[@popoverContainer]': 'animationState',\n        '(@popoverContainer.start)': 'onAnimationStart($event)',\n        '(@popoverContainer.done)': 'onAnimationDone($event)'\n    }\n})\nexport class ThyPopoverContainerComponent extends ThyAbstractOverlayContainer implements AfterViewInit, OnDestroy {\n    @ViewChild(CdkPortalOutlet, { static: true })\n    portalOutlet: CdkPortalOutlet;\n\n    /** State of the popover animation. */\n    animationState: 'void' | 'enter' | 'exit' = 'enter';\n\n    /** Emits when an animation state changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    animationOpeningDone: Observable<AnimationEvent>;\n    animationClosingDone: Observable<AnimationEvent>;\n\n    insideClicked = new EventEmitter();\n\n    outsideClicked = new EventEmitter();\n\n    beforeAttachPortal(): void {}\n\n    constructor(\n        private elementRef: ElementRef,\n        @Inject(DOCUMENT) private document: any,\n        public config: ThyPopoverConfig,\n        changeDetectorRef: ChangeDetectorRef,\n        private thyClickDispatcher: ThyClickDispatcher,\n        private ngZone: NgZone\n    ) {\n        super(popoverUpperOverlayOptions, changeDetectorRef);\n\n        this.animationOpeningDone = this.animationStateChanged.pipe(\n            filter((event: AnimationEvent) => {\n                return event.phaseName === 'done' && event.toState === 'enter';\n            })\n        );\n        this.animationClosingDone = this.animationStateChanged.pipe(\n            filter((event: AnimationEvent) => {\n                return event.phaseName === 'done' && event.toState === 'exit';\n            })\n        );\n    }\n\n    ngAfterViewInit() {\n        if (this.config.outsideClosable && !this.config.hasBackdrop) {\n            timer().subscribe(() => {\n                this.thyClickDispatcher\n                    .clicked()\n                    .pipe(takeUntil(this.animationClosingDone))\n                    .subscribe((event: MouseEvent) => {\n                        if (!this.elementRef.nativeElement.contains(event.target as HTMLElement)) {\n                            this.ngZone.run(() => {\n                                this.outsideClicked.emit();\n                            });\n                        }\n                    });\n            });\n        }\n    }\n\n    /** Callback, invoked whenever an animation on the host completes. */\n    onAnimationDone(event: AnimationEvent) {\n        // if (event.toState === 'void') {\n        //     this.trapFocus();\n        // } else if (event.toState === 'exit') {\n        //     this.restoreFocus();\n        // }\n        this.animationStateChanged.emit(event);\n    }\n\n    /** Callback, invoked when an animation on the host starts. */\n    onAnimationStart(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    startExitAnimation(): void {\n        this.animationState = 'exit';\n\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this.changeDetectorRef.markForCheck();\n    }\n\n    @HostListener('click', [])\n    onInsideClick() {\n        if (this.config.insideClosable) {\n            this.insideClicked.emit();\n        }\n    }\n\n    ngOnDestroy() {\n        super.destroy();\n    }\n}\n","import { OverlayRef } from '@angular/cdk/overlay';\nimport { ThyPopoverContainerComponent } from './popover-container.component';\nimport { ThyAbstractOverlayRef, ThyAbstractInternalOverlayRef } from 'ngx-tethys/core';\nimport { popoverUpperOverlayOptions } from './popover.options';\nimport { ThyPopoverConfig } from './popover.config';\n\nexport abstract class ThyPopoverRef<T, TResult = any> extends ThyAbstractOverlayRef<T, ThyPopoverContainerComponent, TResult> {}\n\nexport class ThyInternalPopoverRef<T, TResult = any> extends ThyAbstractInternalOverlayRef<T, ThyPopoverContainerComponent, TResult>\n    implements ThyPopoverRef<T, TResult> {\n    constructor(overlayRef: OverlayRef, containerInstance: ThyPopoverContainerComponent, config: ThyPopoverConfig) {\n        super(popoverUpperOverlayOptions, overlayRef, containerInstance, config);\n        containerInstance.insideClicked.subscribe(() => {\n            this.close();\n        });\n        containerInstance.outsideClicked.subscribe(() => {\n            this.close();\n        });\n    }\n\n    /**\n     * Updates the popover's position.\n     * @param position New popover position.\n     */\n    updatePosition(): this {\n        this.overlayRef.updatePosition();\n        return this;\n    }\n}\n","import { getFlexiblePositions, ThyAbstractOverlayService } from 'ngx-tethys/core';\nimport { FunctionProp, helpers, isFunction } from 'ngx-tethys/util';\nimport { of, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceArray, coerceElement } from '@angular/cdk/coercion';\nimport {\n    ComponentType,\n    FlexibleConnectedPositionStrategy,\n    FlexibleConnectedPositionStrategyOrigin,\n    Overlay,\n    OverlayConfig,\n    OverlayContainer,\n    OverlayRef,\n    PositionStrategy,\n    ScrollStrategy,\n    ViewportRuler\n} from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport { ElementRef, Inject, Injectable, Injector, NgZone, OnDestroy, Optional, StaticProvider, TemplateRef } from '@angular/core';\n\nimport { ThyPopoverContainerComponent } from './popover-container.component';\nimport { ThyInternalPopoverRef, ThyPopoverRef } from './popover-ref';\nimport {\n    THY_POPOVER_DEFAULT_CONFIG,\n    THY_POPOVER_DEFAULT_CONFIG_VALUE,\n    THY_POPOVER_SCROLL_STRATEGY,\n    ThyPopoverConfig\n} from './popover.config';\nimport { popoverUpperOverlayOptions } from './popover.options';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyPopover extends ThyAbstractOverlayService<ThyPopoverConfig, ThyPopoverContainerComponent> implements OnDestroy {\n    private readonly ngUnsubscribe$ = new Subject();\n\n    private originInstancesMap = new Map<\n        ElementRef | HTMLElement,\n        {\n            config: ThyPopoverConfig;\n            popoverRef: ThyPopoverRef<any, any>;\n        }\n    >();\n\n    private buildPositionStrategy<TData>(config: ThyPopoverConfig<TData>): PositionStrategy {\n        const origin: FlexibleConnectedPositionStrategyOrigin = config.originPosition ? config.originPosition : config.origin;\n        // const positionStrategy = this.overlay.position().flexibleConnectedTo(origin);\n        const positionStrategy = new FlexibleConnectedPositionStrategy(\n            origin,\n            this._viewportRuler,\n            this._document,\n            this._platform,\n            this._overlayContainer\n        );\n        const positions = getFlexiblePositions(config.placement, config.offset, 'thy-popover');\n        positionStrategy.withPositions(positions);\n        positionStrategy.withGrowAfterOpen(true);\n        positionStrategy.positionChanges.pipe(takeUntil(this.ngUnsubscribe$)).subscribe(change => {\n            if (change.scrollableViewProperties.isOverlayClipped) {\n                // After position changes occur and the overlay is clipped by\n                // a parent scrollable then close the tooltip.\n                this.ngZone.run(() => this.close());\n            }\n        });\n        return positionStrategy;\n    }\n\n    private buildScrollStrategy(config: ThyPopoverConfig): ScrollStrategy {\n        if (config.scrollStrategy) {\n            return config.scrollStrategy;\n        } else if (this.scrollStrategy && isFunction(this.scrollStrategy)) {\n            return this.scrollStrategy();\n        } else {\n            this.overlay.scrollStrategies.block();\n        }\n    }\n\n    protected buildOverlayConfig<TData>(config: ThyPopoverConfig<TData>): OverlayConfig {\n        const positionStrategy = this.buildPositionStrategy(config);\n        const overlayConfig = this.buildBaseOverlayConfig(config);\n        overlayConfig.positionStrategy = positionStrategy;\n        overlayConfig.scrollStrategy = this.buildScrollStrategy(config);\n        return overlayConfig;\n    }\n\n    protected attachUpperOverlayContainer(overlay: OverlayRef, config: ThyPopoverConfig<any>): ThyPopoverContainerComponent {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this.injector,\n            providers: [{ provide: ThyPopoverConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(ThyPopoverContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlay.attach<ThyPopoverContainerComponent>(containerPortal);\n        return containerRef.instance;\n    }\n\n    protected createUpperOverlayRef<T>(\n        overlayRef: OverlayRef,\n        containerInstance: ThyPopoverContainerComponent,\n        config: ThyPopoverConfig<any>\n    ): ThyInternalPopoverRef<T> {\n        return new ThyInternalPopoverRef<T>(overlayRef, containerInstance, config);\n    }\n\n    protected createInjector<T>(\n        config: ThyPopoverConfig,\n        popoverRef: ThyPopoverRef<T>,\n        popoverContainer: ThyPopoverContainerComponent\n    ): Injector {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n        const injectionTokens: StaticProvider[] = [\n            { provide: ThyPopoverContainerComponent, useValue: popoverContainer },\n            {\n                provide: ThyPopoverRef,\n                useValue: popoverRef\n            }\n        ];\n\n        if (config.direction && (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\n            injectionTokens.push({\n                provide: Directionality,\n                useValue: {\n                    value: config.direction,\n                    change: of()\n                }\n            });\n        }\n\n        return Injector.create({ parent: userInjector || this.injector, providers: injectionTokens });\n    }\n\n    private originElementAddActiveClass(config: ThyPopoverConfig) {\n        if (config.originActiveClass) {\n            coerceElement<HTMLElement>(config.origin).classList.add(...coerceArray(config.originActiveClass));\n        }\n    }\n\n    private originElementRemoveActiveClass(config: ThyPopoverConfig) {\n        if (config.originActiveClass) {\n            coerceElement<HTMLElement>(config.origin).classList.remove(...coerceArray(config.originActiveClass));\n        }\n    }\n\n    constructor(\n        overlay: Overlay,\n        injector: Injector,\n        @Optional()\n        @Inject(THY_POPOVER_DEFAULT_CONFIG)\n        defaultConfig: ThyPopoverConfig,\n        @Inject(THY_POPOVER_SCROLL_STRATEGY)\n        scrollStrategy: FunctionProp<ScrollStrategy>,\n        private ngZone: NgZone,\n        private _viewportRuler: ViewportRuler,\n        @Optional() @Inject(DOCUMENT) private _document: any,\n        private _platform: Platform,\n        private _overlayContainer: OverlayContainer\n    ) {\n        super(\n            popoverUpperOverlayOptions,\n            overlay,\n            injector,\n            {\n                ...THY_POPOVER_DEFAULT_CONFIG_VALUE,\n                ...defaultConfig\n            },\n            scrollStrategy\n        );\n    }\n\n    private ensureCloseClosest(origin: HTMLElement) {\n        let closeAndEnd = false;\n        this.originInstancesMap.forEach((value, key) => {\n            if (value.config.manualClosure) {\n                if (key === origin) {\n                    value.popoverRef.close();\n                    closeAndEnd = true;\n                }\n            } else {\n                if (key === origin) {\n                    closeAndEnd = true;\n                }\n                value.popoverRef.close();\n            }\n        });\n        return closeAndEnd;\n    }\n\n    open<T, TData = any, TResult = any>(\n        componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n        config?: ThyPopoverConfig<TData>\n    ): ThyPopoverRef<T, TResult> {\n        const originElement = coerceElement(config.origin);\n        // 默认关闭之前的弹出框\n        // 1. 当之前的 Popover 设置 manualClosure 为 true 时, 弹出其他 Popover 时不自动关闭 manualClosure 为 true 的 Popover\n        // 2. 当前的 Origin 对应的 Popover 已经弹出，不管 manualClosure 设置为何，直接关闭并返回\n        if (this.ensureCloseClosest(originElement)) {\n            return;\n        }\n\n        const popoverRef = this.openUpperOverlay(componentOrTemplateRef, config) as ThyPopoverRef<T>;\n        config = popoverRef.containerInstance.config;\n        popoverRef.afterClosed().subscribe(() => {\n            this.originElementRemoveActiveClass(config);\n            this.originInstancesMap.delete(originElement);\n        });\n\n        this.originElementAddActiveClass(config);\n        this.originInstancesMap.set(originElement, {\n            config,\n            popoverRef\n        });\n\n        return popoverRef;\n    }\n\n    ngOnDestroy() {\n        this.dispose();\n    }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { ThyTranslate } from 'ngx-tethys/core';\nimport { ThyPopover } from '../popover.service';\n\n@Component({\n    selector: 'thy-popover-header',\n    templateUrl: './popover-header.component.html',\n    exportAs: 'thyPopoverHeader'\n})\nexport class ThyPopoverHeaderComponent {\n    @Input() thyTitle: string;\n\n    @Input()\n    set thyTitleTranslationKey(key: string) {\n        if (key && !this.thyTitle) {\n            this.thyTitle = this.translate.instant(key);\n        }\n    }\n\n    @Output() thyClosed: EventEmitter<Event> = new EventEmitter<Event>();\n\n    constructor(private translate: ThyTranslate, private thyPopover: ThyPopover) {}\n\n    close(event: Event) {\n        this.thyClosed.emit(event);\n        this.thyPopover.close();\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Injectable,\n    NgZone,\n    OnDestroy,\n    Input,\n    TemplateRef,\n    OnInit,\n    ViewContainerRef,\n    HostBinding\n} from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ThyOverlayDirectiveBase, ThyOverlayTrigger, ThyPlacement } from 'ngx-tethys/core';\nimport { ThyPopover } from './popover.service';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { ThyPopoverRef } from './popover-ref';\nimport { ThyPopoverConfig } from './popover.config';\n\n@Directive({\n    selector: '[thyPopover]'\n})\nexport class ThyPopoverDirective extends ThyOverlayDirectiveBase implements OnInit, OnDestroy {\n    @HostBinding(`class.thy-popover-opened`) popoverOpened = false;\n\n    @Input('thyPopover') content: ComponentType<any> | TemplateRef<any>;\n\n    @Input() set thyTrigger(trigger: ThyOverlayTrigger) {\n        this.trigger = trigger;\n    }\n\n    @Input() thyPlacement: ThyPlacement;\n\n    @Input() thyOffset: number;\n\n    @Input() thyConfig: ThyPopoverConfig;\n\n    @Input('thyShowDelay') showDelay = 0;\n\n    @Input('thyHideDelay') hideDelay = 0;\n\n    private popoverRef: ThyPopoverRef<any>;\n\n    tooltipPin = true;\n\n    constructor(\n        elementRef: ElementRef,\n        platform: Platform,\n        focusMonitor: FocusMonitor,\n        ngZone: NgZone,\n        private popover: ThyPopover,\n        private viewContainerRef: ViewContainerRef\n    ) {\n        super(elementRef, platform, focusMonitor, ngZone);\n    }\n\n    ngOnInit(): void {\n        this.initialize();\n    }\n\n    createOverlay(): OverlayRef {\n        const config = Object.assign(\n            {\n                origin: this.elementRef.nativeElement,\n                hasBackdrop: this.trigger === 'click' || this.trigger === 'focus',\n                viewContainerRef: this.viewContainerRef,\n                placement: this.thyPlacement,\n                offset: this.thyOffset\n            },\n            this.thyConfig\n        );\n        this.popoverRef = this.popover.open(this.content, config);\n\n        this.popoverRef.afterClosed().subscribe(() => {\n            this.popoverOpened = false;\n        });\n\n        return this.popoverRef.getOverlayRef();\n    }\n\n    show(delay: number = this.showDelay) {\n        if (this.hideTimeoutId) {\n            clearTimeout(this.hideTimeoutId);\n            this.hideTimeoutId = null;\n        }\n\n        if (this.disabled || (this.overlayRef && this.overlayRef.hasAttached())) {\n            return;\n        }\n        if (this.trigger !== 'hover') {\n            delay = 0;\n        }\n\n        this.showTimeoutId = setTimeout(() => {\n            const overlayRef = this.createOverlay();\n            this.overlayRef = overlayRef;\n            this.popoverOpened = true;\n            this.showTimeoutId = null;\n        }, delay);\n    }\n\n    hide(delay: number = this.hideDelay) {\n        if (this.showTimeoutId) {\n            clearTimeout(this.showTimeoutId);\n            this.showTimeoutId = null;\n        }\n\n        this.hideTimeoutId = setTimeout(() => {\n            if (this.popoverRef) {\n                this.popoverRef.close();\n            }\n            this.hideTimeoutId = null;\n        }, delay);\n    }\n\n    ngOnDestroy() {\n        this.dispose();\n    }\n}\n","import { ThyIconModule } from 'ngx-tethys/icon';\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThyPopoverBodyComponent } from './body/popover-body.component';\nimport { ThyPopoverHeaderComponent } from './header/popover-header.component';\nimport { ThyPopoverContainerComponent } from './popover-container.component';\nimport { THY_POPOVER_DEFAULT_CONFIG_PROVIDER, THY_POPOVER_SCROLL_STRATEGY_PROVIDER } from './popover.config';\nimport { ThyPopoverDirective } from './popover.directive';\n\n@NgModule({\n    declarations: [ThyPopoverContainerComponent, ThyPopoverDirective, ThyPopoverHeaderComponent, ThyPopoverBodyComponent],\n    entryComponents: [ThyPopoverContainerComponent],\n    imports: [CommonModule, OverlayModule, PortalModule, ThyIconModule],\n    exports: [ThyPopoverDirective, ThyPopoverHeaderComponent, ThyPopoverBodyComponent],\n    providers: [THY_POPOVER_DEFAULT_CONFIG_PROVIDER, THY_POPOVER_SCROLL_STRATEGY_PROVIDER]\n})\nexport class ThyPopoverModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}