{"version":3,"file":"ngx-tethys-button.js","sources":["../../src/button/button-group.component.ts","../../src/button/button-icon.component.ts","../../src/button/button.component.ts","../../src/button/button.module.ts","../../src/button/ngx-tethys-button.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, HostBinding, Input, ContentChild, TemplateRef, ElementRef, ViewEncapsulation, OnInit } from '@angular/core';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { ThyButtonType } from '.';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\nexport type buttonGroupSize = 'sm' | 'lg' | 'xs' | 'md';\n\nexport type buttonGroupType = 'outline-primary' | 'outline-default';\n\nconst buttonGroupSizeMap = {\n    sm: ['btn-group-sm'],\n    md: ['btn-group-md'],\n    lg: ['btn-group-lg'],\n    xs: ['btn-group-xs']\n};\n\nconst buttonGroupTypeMap = {\n    'outline-primary': ['btn-group-outline-primary'],\n    'outline-default': ['btn-group-outline-default']\n};\n\n@Component({\n    selector: 'thy-button-group',\n    template: '<ng-content></ng-content>',\n    providers: [UpdateHostClassService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyButtonGroupComponent implements OnInit {\n    private initialized = false;\n\n    private type: string;\n\n    private size: string;\n\n    @Input()\n    set thySize(size: buttonGroupSize) {\n        this.size = size;\n        if (this.initialized) {\n            this.setClasses();\n        }\n    }\n\n    @Input()\n    set thyType(type: ThyButtonType) {\n        this.type = type;\n        if (this.initialized) {\n            this.setClasses();\n        }\n    }\n\n    @Input()\n    set thyClearMinWidth(value: string) {\n        this.thyClearMinWidthClassName = coerceBooleanProperty(value);\n    }\n\n    @HostBinding('class.btn-group') _isButtonGroup = true;\n    @HostBinding(`class.btn-group-clear-min-width`)\n    thyClearMinWidthClassName = false;\n\n    constructor(private updateHostClassService: UpdateHostClassService, private elementRef: ElementRef) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n\n    ngOnInit() {\n        this.setClasses();\n        this.initialized = true;\n    }\n\n    private setClasses() {\n        let classNames: string[] = [];\n        if (buttonGroupTypeMap[this.type]) {\n            classNames = [...buttonGroupTypeMap[this.type]];\n        }\n        if (buttonGroupSizeMap[this.size]) {\n            classNames.push(buttonGroupSizeMap[this.size]);\n        }\n        this.updateHostClassService.updateClass(classNames);\n    }\n}\n","import { Component, Directive, HostBinding, Input, ElementRef, Renderer2, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { AfterContentInit, OnChanges, OnInit } from '@angular/core';\nimport { coerceBooleanProperty, isUndefined } from 'ngx-tethys/util';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\n\nexport type IconShape = '' | 'dashed' | 'solid';\n\nconst sizeClassesMap: any = {\n    lg: ['btn-icon-lg'],\n    sm: ['btn-icon-sm'],\n    xs: ['btn-icon-xs']\n};\n\nconst shapeClassesMap: any = {\n    'circle-dashed': ['btn-icon-circle', 'circle-dashed'],\n    'circle-solid': ['btn-icon-circle', 'circle-solid'],\n    'circle-thick-dashed': ['btn-icon-circle', 'circle-dashed', 'border-thick'],\n    'circle-thick-solid': ['btn-icon-circle', 'circle-solid', 'border-thick'],\n    'self-icon': ['btn-icon-self-circle']\n};\n\nconst themeClassesMap: any = {\n    'danger-weak': ['btn-icon-danger-weak']\n};\n\n@Component({\n    selector: '[thy-button-icon],[thyButtonIcon]',\n    templateUrl: './button-icon.component.html',\n    providers: [UpdateHostClassService],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyButtonIconComponent implements OnInit {\n    @Input()\n    set thySize(size: string) {\n        this.size = size;\n        this.setClasses();\n    }\n\n    // 字体前缀，默认 wtf\n    @Input()\n    set thyIcon(icon: string) {\n        this.setIconClass(icon);\n    }\n\n    @Input()\n    set thyButtonIcon(icon: string) {\n        this.setIconClass(icon);\n    }\n\n    @Input()\n    set thyShape(value: IconShape) {\n        this.shape = value;\n        this.setClasses();\n    }\n\n    @Input()\n    set thyLight(value: boolean) {\n        this._isLighted = coerceBooleanProperty(value);\n    }\n\n    @Input()\n    set thyActive(value: boolean) {\n        this._isActive = coerceBooleanProperty(value);\n    }\n\n    @Input()\n    set thyTheme(value: string) {\n        this.theme = value;\n        this.setClasses();\n    }\n\n    constructor(elementRef: ElementRef, private updateHostClassService: UpdateHostClassService) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n    private initialized = false;\n\n    private shape: IconShape;\n\n    private size: string;\n\n    iconPrefix = 'wtf';\n\n    iconClasses: string[];\n\n    icon: string;\n\n    theme: string;\n\n    svgIconName: string;\n\n    @HostBinding('class.btn') _isBtn = true;\n    @HostBinding('class.btn-icon') _isBtnIcon = true;\n    @HostBinding('class.btn-icon-light') _isLighted = false;\n    @HostBinding('class.btn-icon-active') _isActive = false;\n\n    @Input() thyColor: string;\n\n    private setIconClass(icon: string) {\n        if (icon) {\n            if (icon.includes('wtf')) {\n                const classes = icon.split(' ');\n                if (classes.length === 1) {\n                    classes.unshift('wtf');\n                }\n                this.iconClasses = classes;\n                this.svgIconName = null;\n            } else {\n                this.svgIconName = icon;\n            }\n        } else {\n            this.iconClasses = null;\n            this.svgIconName = null;\n        }\n    }\n\n    private setClasses(first = false) {\n        // 设置样式判断是否已经初始化，未初始化直接返回，除非是初次调用\n        // 只有 ngOnInit 调用会传入 first = true\n        if (!first && !this.initialized) {\n            return;\n        }\n        const classes = sizeClassesMap[this.size] ? [...sizeClassesMap[this.size]] : [];\n        if (this.shape && shapeClassesMap[this.shape]) {\n            shapeClassesMap[this.shape].forEach((className: string) => {\n                classes.push(className);\n            });\n        }\n        if (this.theme && themeClassesMap[this.theme]) {\n            themeClassesMap[this.theme].forEach((className: string) => {\n                classes.push(className);\n            });\n        }\n        this.updateHostClassService.updateClass(classes);\n    }\n\n    ngOnInit() {\n        this.setClasses(true);\n        this.initialized = true;\n    }\n}\n","import { Component, Directive, Input, ElementRef, Renderer2, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { AfterContentInit, OnChanges, OnInit } from '@angular/core';\nimport { coerceBooleanProperty, isUndefined } from 'ngx-tethys/util';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\n\nexport type ThyButtonType = 'primary' | 'secondary' | 'info' | 'outline-primary' | 'outline-default' | 'danger' | 'link' | 'link-secondary';\n\nconst btnTypeClassesMap: any = {\n    primary: ['btn', 'btn-primary'],\n    secondary: ['btn', 'btn-primary', 'btn-md'],\n    info: ['btn', 'btn-info'],\n    warning: ['btn', 'btn-warning'],\n    danger: ['btn', 'btn-danger'],\n    'outline-primary': ['btn', 'btn-outline-primary'],\n    'outline-default': ['btn', 'btn-outline-default'],\n    link: ['btn', 'btn-link'], // 链接按钮\n    'link-info': ['btn', 'btn-link', 'btn-link-info'], // 幽灵链接按钮\n    'link-secondary': ['btn', 'btn-link', 'btn-link-primary-weak'], // 幽灵链接按钮\n    'link-danger-weak': ['btn', 'btn-link', 'btn-link-danger-weak'], // 幽灵危险按钮\n    'link-danger': ['btn', 'btn-link', 'btn-link-danger'], // 危险按钮\n    'link-success': ['btn', 'btn-link', 'btn-link-success'] // 成功按钮\n};\n\n@Component({\n    selector: '[thy-button],[thyButton]',\n    templateUrl: './button.component.html',\n    providers: [UpdateHostClassService],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyButtonComponent implements OnInit {\n    private _nativeElement: any;\n\n    private _initialized = false;\n\n    private _originalText: string;\n\n    private _type: string;\n\n    private _size: string;\n\n    private _icon: string;\n\n    private _loading: boolean;\n\n    private _loadingText: string;\n\n    // 圆角方形\n    _isRadiusSquare = false;\n\n    _iconClass: string[];\n\n    svgIconName: string;\n\n    _setBtnType(value: ThyButtonType) {\n        if (value) {\n            if (value.includes('-square')) {\n                this._type = value.replace('-square', '');\n                this._isRadiusSquare = true;\n            } else {\n                this._type = value;\n            }\n\n            if (this._initialized) {\n                this._setClasses();\n            }\n        }\n    }\n\n    @Input()\n    set thyButton(value: ThyButtonType) {\n        this._setBtnType(value);\n    }\n\n    @Input()\n    set thyType(value: ThyButtonType) {\n        this._setBtnType(value);\n    }\n\n    @Input()\n    set thyLoading(value: boolean) {\n        const newLoading = coerceBooleanProperty(value);\n        // from false to true\n        if (!this._loading && newLoading) {\n            this._loading = newLoading;\n            this._originalText = this._nativeElement.innerText;\n            this._setLoadingStatus();\n        } else {\n            this._loading = newLoading;\n            this._setLoadingStatus();\n        }\n    }\n\n    @Input()\n    set thyLoadingText(value: string) {\n        if (this._loadingText !== value) {\n            this._loadingText = value;\n            if (this._loading) {\n                this.renderer.setProperty(this._nativeElement, 'innerText', this._loadingText);\n            }\n        }\n    }\n\n    @Input()\n    set thySize(size: string) {\n        this._size = size;\n        if (this._initialized) {\n            this._setClasses();\n        }\n    }\n\n    @Input()\n    set thyIcon(icon: string) {\n        this._icon = icon;\n        if (this._icon) {\n            if (icon.includes('wtf')) {\n                const classes = this._icon.split(' ');\n                if (classes.length === 1) {\n                    classes.unshift('wtf');\n                }\n                this._iconClass = classes;\n            } else {\n                this.svgIconName = icon;\n            }\n        } else {\n            this._iconClass = null;\n            this.svgIconName = null;\n        }\n    }\n\n    @Input()\n    set thySquare(value: boolean) {\n        this._isRadiusSquare = coerceBooleanProperty(value);\n    }\n\n    private _setLoadingStatus() {\n        // let disabled = false;\n        let innerText: string;\n        if (this._loading) {\n            // disabled = true;\n            innerText = this._loadingText ? this._loadingText : null;\n        } else {\n            // disabled = false;\n            innerText = this._originalText ? this._originalText : null;\n        }\n        // this.renderer.setProperty(this._nativeElement, 'disabled', disabled);\n        this._setClasses();\n        if (innerText) {\n            this.renderer.setProperty(this._nativeElement, 'innerText', innerText);\n        }\n    }\n\n    private _setClasses() {\n        let classNames: string[] = null;\n        if (btnTypeClassesMap[this._type]) {\n            classNames = [...btnTypeClassesMap[this._type]];\n        } else {\n            classNames = ['btn'];\n            if (this._type) {\n                classNames.push(`btn-${this._type}`);\n            }\n            // console.error(`button type (${this._type}) is not support`);\n        }\n        if (this._size) {\n            classNames.push(`btn-${this._size}`);\n        }\n        if (this._icon) {\n            classNames.push('btn-has-icon');\n        }\n        if (this._isRadiusSquare) {\n            classNames.push('btn-square');\n        }\n        if (this._loading) {\n            classNames.push('loading');\n        }\n        this.updateHostClassService.updateClass(classNames);\n    }\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2, private updateHostClassService: UpdateHostClassService) {\n        this._nativeElement = this.elementRef.nativeElement;\n        this.updateHostClassService.initializeElement(this._nativeElement);\n    }\n\n    ngOnInit() {\n        this._setClasses();\n        this._initialized = true;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyButtonGroupComponent } from './button-group.component';\nimport { ThyButtonIconComponent } from './button-icon.component';\nimport { ThyButtonComponent } from './button.component';\n\n@NgModule({\n    declarations: [ThyButtonComponent, ThyButtonIconComponent, ThyButtonGroupComponent],\n    imports: [CommonModule, ThyIconModule],\n    exports: [ThyButtonComponent, ThyButtonIconComponent, ThyButtonGroupComponent]\n})\nexport class ThyButtonModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}