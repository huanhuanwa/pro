{"version":3,"file":"ngx-tethys-skeleton.js","sources":["../../src/skeleton/skeleton.component.ts","../../src/skeleton/stylized/list.component.ts","../../src/skeleton/stylized/bullet-list.component.ts","../../src/skeleton/stylized/title.component.ts","../../src/skeleton/stylized/avatar.component.ts","../../src/skeleton/stylized/paragraph.component.ts","../../src/skeleton/module.ts","../../src/skeleton/ngx-tethys-skeleton.ts"],"sourcesContent":["import {\n    Component,\n    OnInit,\n    Input,\n    Inject,\n    PLATFORM_ID,\n    SimpleChanges,\n    OnChanges,\n    HostBinding,\n    TemplateRef,\n    ContentChild\n} from '@angular/core';\nimport { generateRandomStr } from 'ngx-tethys/util';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n    selector: 'thy-skeleton',\n    templateUrl: './skeleton.component.html'\n})\nexport class ThySkeletonComponent implements OnInit, OnChanges {\n    @HostBinding('class.thy-skeleton') addSkeletonClass = true;\n\n    @Input() thyAnimate = true;\n\n    @Input() thyBaseUrl = '';\n\n    @Input() thyWidth: string | number = '100%';\n\n    @Input() thyHeight: string | number = '100%';\n\n    @Input() thyViewBoxWidth: string | number = 400;\n\n    @Input() thyViewBoxHeight: string | number = 130;\n\n    @Input() thySpeed = 2;\n\n    @Input() thyPreserveAspectRatio = 'none'; // xMidYMid meet\n\n    @Input() thyPrimaryColor = '#f0f0f0';\n\n    @Input() thySecondaryColor = '#e0e0e0';\n\n    @Input() thyPrimaryOpacity = 1;\n\n    @Input() thySecondaryOpacity = 1;\n\n    @Input() thyUniqueKey: string;\n\n    @Input() thyRtl: string;\n\n    @Input() thyStyle: { [key: string]: string };\n\n    @Input() thyIgnoreBaseUrl = false;\n\n    @Input() thyLoadingDone = false;\n\n    @ContentChild('content')\n    customTemplate: TemplateRef<any>;\n\n    contentTemplates: TemplateRef<any>[] = [];\n\n    idClip = generateRandomStr();\n\n    idGradient = generateRandomStr();\n\n    defaultAnimation = ['-3; 1', '-2; 2', '-1; 3'];\n\n    rtlAnimation = ['1; -3', '2; -2', '3; -1'];\n\n    animationValues: string[];\n\n    fillStyle: { fill: string };\n\n    clipPath: string;\n\n    constructor(@Inject(PLATFORM_ID) private platformId: string) {}\n\n    ngOnInit() {\n        this.animationValues = this.thyRtl ? this.rtlAnimation : this.defaultAnimation;\n\n        if (this.thyBaseUrl === '' && !this.thyIgnoreBaseUrl && isPlatformBrowser(this.platformId)) {\n            this.thyBaseUrl = window.location.pathname;\n        }\n\n        this.setFillStyle();\n        this.setClipPath();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['thyBaseUrl']) {\n            if (changes['thyBaseUrl'].previousValue !== changes['thyBaseUrl'].currentValue) {\n                this.setFillStyle();\n                this.setClipPath();\n            }\n        }\n    }\n\n    setFillStyle() {\n        this.fillStyle = {\n            fill: `url(${this.thyBaseUrl}#${this.idGradient})`\n        };\n    }\n\n    setClipPath() {\n        this.clipPath = `url(${this.thyBaseUrl}#${this.idClip})`;\n    }\n\n    assignInputProperties(input: ThySkeletonComponent) {\n        this.thyAnimate = input.thyAnimate;\n        this.thyBaseUrl = input.thyBaseUrl;\n        this.thyHeight = input.thyHeight;\n        this.thyWidth = input.thyWidth;\n        this.thyViewBoxHeight = input.thyViewBoxHeight;\n        this.thyViewBoxWidth = input.thyViewBoxWidth;\n        this.thyPreserveAspectRatio = input.thyPreserveAspectRatio;\n        this.thyPrimaryColor = input.thyPrimaryColor;\n        this.thyPrimaryOpacity = input.thyPrimaryOpacity;\n        this.thySecondaryColor = input.thySecondaryColor;\n        this.thySecondaryOpacity = input.thySecondaryOpacity;\n        this.thyRtl = this.thyRtl;\n        this.thySpeed = this.thySpeed;\n        this.thyUniqueKey = this.thyUniqueKey;\n    }\n\n    addTemplate(template: TemplateRef<any>) {\n        if (template) {\n            this.contentTemplates.push(template);\n        }\n    }\n}\n","import { Component, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-list-template',\n    template: `\n        <ng-template #content>\n            <svg:rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"20\" rx=\"3\" ry=\"3\" width=\"220\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"40\" rx=\"3\" ry=\"3\" width=\"170\" height=\"10\" />\n            <svg:rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"80\" rx=\"3\" ry=\"3\" width=\"200\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"100\" rx=\"3\" ry=\"3\" width=\"80\" height=\"10\" />\n        </ng-template>\n    `\n})\nexport class ThySkeletonListComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, Input, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\ninterface BulletListItem {\n    circle: { cx: number; cy: number; r: number };\n    rect: { x: number; y: number; rx: number; ry: number; width: number | string; height: number | string };\n}\n\n@Component({\n    selector: 'thy-skeleton-bullet-list-template',\n    template: `\n        <ng-template #content>\n            <ng-container *ngFor=\"let item of items\">\n                <svg:circle [attr.cx]=\"item.circle.cx\" [attr.cy]=\"item.circle.cy\" r=\"8\" />\n                <svg:rect [attr.x]=\"item.rect.x\" [attr.y]=\"item.rect.y\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\n            </ng-container>\n        </ng-template>\n    `\n})\nexport class ThySkeletonBulletListComponent implements OnInit {\n    @Input() thyCount = 5;\n\n    items: BulletListItem[] = [];\n\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit() {\n        for (let i = 0; i <= this.thyCount; i++) {\n            this.items.push({\n                circle: {\n                    cx: 10,\n                    cy: i * 30 + 20,\n                    r: 8\n                },\n                rect: {\n                    x: 25,\n                    y: i * 2 * 15 + 15,\n                    rx: 5,\n                    ry: 5,\n                    width: '90%',\n                    height: 10\n                }\n            });\n        }\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, OnInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-title-template,[thySkeletonTitleTemplate]',\n    template: `\n        <ng-template #content>\n            <svg:rect x=\"15\" y=\"13\" rx=\"4\" ry=\"4\" [attr.width]=\"width\" [attr.height]=\"height\" />\n        </ng-template>\n    `,\n    exportAs: 'thySkeletonTitleTemplate'\n})\nexport class ThySkeletonTitleComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    width = 100;\n\n    height = 10;\n\n    @Input() set thyWidth(value: number) {\n        if (value) {\n            this.width = value;\n        }\n    }\n\n    @Input() set thyHeight(value: number) {\n        if (value) {\n            this.height = value;\n        }\n    }\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-avatar-template,[thySkeletonAvatarTemplate]',\n    template: `\n        <ng-template #content>\n            <svg:circle cx=\"30\" cy=\"30\" r=\"30\" />\n        </ng-template>\n    `\n})\nexport class ThySkeletonAvatarComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-paragraph-template,[thySkeletonParagraphTemplate]',\n    template: `\n        <ng-template #content>\n            <svg:rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"38%\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"20\" rx=\"2\" ry=\"2\" width=\"92%\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"40\" rx=\"2\" ry=\"2\" width=\"92%\" height=\"10\" />\n            <svg:rect x=\"0\" y=\"60\" rx=\"2\" ry=\"2\" width=\"61%\" height=\"10\" />\n        </ng-template>\n    `,\n    exportAs: 'thySkeletonParagraphTemplate'\n})\nexport class ThySkeletonParagraphComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { ThySkeletonComponent } from './skeleton.component';\nimport { ThySkeletonListComponent } from './stylized/list.component';\nimport { ThySkeletonBulletListComponent } from './stylized/bullet-list.component';\nimport { ThySkeletonTitleComponent } from './stylized/title.component';\nimport { ThySkeletonAvatarComponent } from './stylized/avatar.component';\nimport { ThySkeletonParagraphComponent } from './stylized/paragraph.component';\n\n@NgModule({\n    declarations: [\n        ThySkeletonComponent,\n        ThySkeletonListComponent,\n        ThySkeletonBulletListComponent,\n        ThySkeletonAvatarComponent,\n        ThySkeletonTitleComponent,\n        ThySkeletonParagraphComponent\n    ],\n    imports: [CommonModule, PortalModule],\n    entryComponents: [ThySkeletonComponent],\n    exports: [\n        ThySkeletonComponent,\n        ThySkeletonListComponent,\n        ThySkeletonBulletListComponent,\n        ThySkeletonTitleComponent,\n        ThySkeletonAvatarComponent,\n        ThySkeletonParagraphComponent\n    ],\n    providers: []\n})\nexport class ThySkeletonModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}