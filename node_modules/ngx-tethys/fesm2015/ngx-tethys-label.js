import { EventEmitter, Component, ElementRef, Renderer2, HostBinding, Input, Output, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { coerceBooleanProperty, helpers } from 'ngx-tethys/util';
import { ThyIconModule } from 'ngx-tethys/icon';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ngx-tethys/icon';

const _c0 = ["thyLabel", ""];
const _c1 = function (a0) { return { color: a0 }; };
function ThyLabelComponent_thy_icon_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 4);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r0.beforeIconName)("ngStyle", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r0._color));
} }
function ThyLabelComponent_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 5);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.beforeIconClass)("ngStyle", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r1._color));
} }
function ThyLabelComponent_thy_icon_4_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "thy-icon", 6);
    ɵngcc0.ɵɵlistener("click", function ThyLabelComponent_thy_icon_4_Template_thy_icon_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.remove(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r2.afterIconName)("ngStyle", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r2._color));
} }
function ThyLabelComponent_i_5_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 7);
    ɵngcc0.ɵɵlistener("click", function ThyLabelComponent_i_5_Template_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.remove(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r3.afterIconClass);
} }
const _c2 = ["*", "*"];
const labelTypeClassesMap = {
    default: ['thy-label', 'thy-label-default'],
    primary: ['thy-label', 'thy-label-primary'],
    success: ['thy-label', 'thy-label-success'],
    info: ['thy-label', 'thy-label-info'],
    warning: ['thy-label', 'thy-label-warning'],
    danger: ['thy-label', 'thy-label-danger']
};
class ThyLabelComponent {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this._thyHasHover = false;
        this._classNameSM = false;
        this._classNameDM = false;
        this._classNameLG = false;
        this._typeClassNames = [];
        this._backgroundOpacity = 0.1;
        this.thyOnRemove = new EventEmitter();
        this.nativeElement = this.el.nativeElement;
    }
    set thySize(value) {
        this._classNameSM = value === 'sm';
        this._classNameDM = value === 'md';
        this._classNameLG = value === 'lg';
    }
    set thyHasHover(value) {
        this._thyHasHover = coerceBooleanProperty(value);
    }
    set thyLabel(value) {
        this._type = value;
        this._setClassesByType();
    }
    set thyLabelColor(color) {
        this._color = color;
        this._setLabelCustomColor();
    }
    set thyBackgroundOpacity(opacity) {
        if (opacity && opacity > 0 && this._backgroundOpacity !== opacity) {
            this._backgroundOpacity = opacity;
            this._setLabelCustomColor();
        }
    }
    set thyLabelType(labelType) {
        this._labelType = labelType;
        this._setClassesByType();
    }
    set thyBeforeIcon(icon) {
        this._icon = icon;
        if (this._icon) {
            if (this._icon.includes('wtf')) {
                const iconPrefix = this.thyIconPrefix || 'wtf';
                this.beforeIconClass = [iconPrefix, `${this._icon}`];
            }
            else {
                this.beforeIconName = `${this._icon}`;
            }
        }
        else {
            this.beforeIconClass = null;
            this.beforeIconName = null;
        }
    }
    set thyAfterIcon(icon) {
        this._icon = icon;
        if (this._icon) {
            if (this._icon.includes('wtf')) {
                const iconPrefix = this.thyIconPrefix || 'wtf';
                this.afterIconClass = [iconPrefix, `${this._icon}`];
            }
            else {
                this.afterIconName = `${this._icon}`;
            }
        }
        else {
            this.afterIconClass = null;
            this.afterIconName = null;
        }
    }
    _setClassesByType() {
        let classNames = null;
        if (labelTypeClassesMap[this._type]) {
            classNames = labelTypeClassesMap[this._type];
        }
        else {
            classNames = ['thy-label'];
            classNames.push(`thy-label-${this._type}`);
        }
        if (this._labelType) {
            classNames = [...classNames, `thy-label-${this._labelType}`];
        }
        // remove old classes
        this._typeClassNames.forEach(className => {
            this._removeClass(className);
        });
        // add new classes
        this._typeClassNames = classNames;
        this._typeClassNames.forEach(className => {
            this._addClass(className);
        });
    }
    _setLabelCustomColor() {
        if (this._color) {
            if (this._type.indexOf('emboss') > -1) {
                if (this._type === 'emboss-status') {
                    this.el.nativeElement.style.color = '#333';
                }
                else {
                    this.el.nativeElement.style.color = this._color;
                }
                this.el.nativeElement.style.backgroundColor = helpers.hexToRgb(this._color, this._backgroundOpacity);
            }
            else if (this._type.indexOf('outline') > -1) {
                this.el.nativeElement.style.color = this._color;
                this.el.nativeElement.style.borderColor = this._color;
            }
            else {
                this.el.nativeElement.style.backgroundColor = this._color;
            }
        }
    }
    _addClass(className) {
        this.renderer.addClass(this.nativeElement, className);
    }
    _removeClass(className) {
        this.renderer.removeClass(this.nativeElement, className);
    }
    remove() {
        this.thyOnRemove.emit();
    }
}
ThyLabelComponent.ɵfac = function ThyLabelComponent_Factory(t) { return new (t || ThyLabelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ThyLabelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyLabelComponent, selectors: [["", "thyLabel", ""]], hostVars: 8, hostBindings: function ThyLabelComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("label-has-hover", ctx._thyHasHover)("thy-label--sm", ctx._classNameSM)("thy-label--md", ctx._classNameDM)("thy-label--lg", ctx._classNameLG);
    } }, inputs: { thySize: "thySize", thyHasHover: "thyHasHover", thyLabel: "thyLabel", thyLabelColor: "thyLabelColor", thyBackgroundOpacity: "thyBackgroundOpacity", thyLabelType: "thyLabelType", thyBeforeIcon: "thyBeforeIcon", thyAfterIcon: "thyAfterIcon", thyIconPrefix: "thyIconPrefix" }, outputs: { thyOnRemove: "thyOnRemove" }, attrs: _c0, ngContentSelectors: _c2, decls: 6, vars: 4, consts: [["class", "mr-1", 3, "thyIconName", "ngStyle", 4, "ngIf"], ["class", "mr-1", 3, "ngClass", "ngStyle", 4, "ngIf"], ["class", "ml-1", 3, "thyIconName", "ngStyle", "click", 4, "ngIf"], ["class", "ml-1", 3, "ngClass", "click", 4, "ngIf"], [1, "mr-1", 3, "thyIconName", "ngStyle"], [1, "mr-1", 3, "ngClass", "ngStyle"], [1, "ml-1", 3, "thyIconName", "ngStyle", "click"], [1, "ml-1", 3, "ngClass", "click"]], template: function ThyLabelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c2);
        ɵngcc0.ɵɵtemplate(0, ThyLabelComponent_thy_icon_0_Template, 1, 4, "thy-icon", 0);
        ɵngcc0.ɵɵtemplate(1, ThyLabelComponent_i_1_Template, 1, 4, "i", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵprojection(3, 1);
        ɵngcc0.ɵɵtemplate(4, ThyLabelComponent_thy_icon_4_Template, 1, 4, "thy-icon", 2);
        ɵngcc0.ɵɵtemplate(5, ThyLabelComponent_i_5_Template, 1, 1, "i", 3);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.beforeIconName);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.beforeIconClass);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.afterIconName);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.afterIconClass);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ThyIconComponent, ɵngcc1.NgStyle, ɵngcc1.NgClass], encapsulation: 2 });
ThyLabelComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
ThyLabelComponent.propDecorators = {
    _thyHasHover: [{ type: HostBinding, args: ['class.label-has-hover',] }],
    _classNameSM: [{ type: HostBinding, args: ['class.thy-label--sm',] }],
    _classNameDM: [{ type: HostBinding, args: ['class.thy-label--md',] }],
    _classNameLG: [{ type: HostBinding, args: ['class.thy-label--lg',] }],
    thyIconPrefix: [{ type: Input }],
    thySize: [{ type: Input, args: ['thySize',] }],
    thyOnRemove: [{ type: Output }],
    thyHasHover: [{ type: Input, args: ['thyHasHover',] }],
    thyLabel: [{ type: Input }],
    thyLabelColor: [{ type: Input }],
    thyBackgroundOpacity: [{ type: Input }],
    thyLabelType: [{ type: Input }],
    thyBeforeIcon: [{ type: Input }],
    thyAfterIcon: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyLabelComponent, [{
        type: Component,
        args: [{
                selector: '[thyLabel]',
                template: "<thy-icon class=\"mr-1\" [thyIconName]=\"beforeIconName\" [ngStyle]=\"{ color: _color }\" *ngIf=\"beforeIconName\"></thy-icon>\n<i class=\"mr-1\" [ngClass]=\"beforeIconClass\" [ngStyle]=\"{ color: _color }\" *ngIf=\"beforeIconClass\"></i>\n<ng-content></ng-content>\n<ng-content></ng-content>\n<thy-icon\n  class=\"ml-1\"\n  [thyIconName]=\"afterIconName\"\n  (click)=\"remove()\"\n  [ngStyle]=\"{ color: _color }\"\n  *ngIf=\"afterIconName\"\n></thy-icon>\n<i class=\"ml-1\" [ngClass]=\"afterIconClass\" *ngIf=\"afterIconClass\" (click)=\"remove()\"></i>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { _thyHasHover: [{
            type: HostBinding,
            args: ['class.label-has-hover']
        }], _classNameSM: [{
            type: HostBinding,
            args: ['class.thy-label--sm']
        }], _classNameDM: [{
            type: HostBinding,
            args: ['class.thy-label--md']
        }], _classNameLG: [{
            type: HostBinding,
            args: ['class.thy-label--lg']
        }], thyOnRemove: [{
            type: Output
        }], thySize: [{
            type: Input,
            args: ['thySize']
        }], thyHasHover: [{
            type: Input,
            args: ['thyHasHover']
        }], thyLabel: [{
            type: Input
        }], thyLabelColor: [{
            type: Input
        }], thyBackgroundOpacity: [{
            type: Input
        }], thyLabelType: [{
            type: Input
        }], thyBeforeIcon: [{
            type: Input
        }], thyAfterIcon: [{
            type: Input
        }], thyIconPrefix: [{
            type: Input
        }] }); })();

class ThyLabelModule {
}
ThyLabelModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyLabelModule });
ThyLabelModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyLabelModule_Factory(t) { return new (t || ThyLabelModule)(); }, imports: [[CommonModule, ThyIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyLabelModule, { declarations: function () { return [ThyLabelComponent]; }, imports: function () { return [CommonModule, ThyIconModule]; }, exports: function () { return [ThyLabelComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyLabelModule, [{
        type: NgModule,
        args: [{
                declarations: [ThyLabelComponent],
                imports: [CommonModule, ThyIconModule],
                exports: [ThyLabelComponent]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ThyLabelComponent, ThyLabelModule };

//# sourceMappingURL=ngx-tethys-label.js.map