import { EventEmitter, Component, ChangeDetectionStrategy, forwardRef, ChangeDetectorRef, HostBinding, Output, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ThyButtonModule } from 'ngx-tethys/button';
import { NG_VALUE_ACCESSOR } from '@angular/forms';

class ThyArrowSwitcherComponent {
    constructor(cd) {
        this.cd = cd;
        this._isArrowSwitcher = true;
        this._isSmallSize = false;
        this.thyPrevious = new EventEmitter();
        this.thyNext = new EventEmitter();
        this.index = 0;
        this.disabled = false;
        this.previousDisabled = false;
        this.nextDisabled = false;
    }
    set thyTotal(value) {
        if (value) {
            this.total = value;
            this.getDisabled();
        }
    }
    set thySize(size) {
        if (size === 'sm') {
            this._isSmallSize = true;
        }
    }
    ngOnInit() { }
    writeValue(value) {
        if (value >= 0) {
            this.index = value;
            this.getDisabled();
        }
        this.cd.markForCheck();
    }
    registerOnChange(fn) {
        this.onModelChange = fn;
    }
    registerOnTouched(fn) {
        this.onModelTouched = fn;
    }
    setDisabledState(isDisable) {
        this.disabled = isDisable;
    }
    getDisabled() {
        this.previousDisabled = this.index <= 0 || this.disabled;
        this.nextDisabled = this.index >= this.total - 1 || this.disabled;
    }
    onPreviousClick(event) {
        this.index--;
        this.onModelChange(this.index);
        this.getDisabled();
        this.thyPrevious.emit({ index: this.index, event });
    }
    onNextClick(event) {
        this.index++;
        this.onModelChange(this.index);
        this.getDisabled();
        this.thyNext.emit({ index: this.index, event });
    }
}
ThyArrowSwitcherComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-arrow-switcher',
                template: "<div class=\"switcher-wrapper\">\n  <button thyButtonIcon=\"angle-left\" [disabled]=\"previousDisabled\" (click)=\"onPreviousClick($event)\"></button>\n  <span>{{ index + 1 }} / {{ total }}</span>\n  <button thyButtonIcon=\"angle-right\" [disabled]=\"nextDisabled\" (click)=\"onNextClick($event)\"></button>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => ThyArrowSwitcherComponent),
                        multi: true
                    }
                ]
            },] }
];
ThyArrowSwitcherComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
ThyArrowSwitcherComponent.propDecorators = {
    _isArrowSwitcher: [{ type: HostBinding, args: ['class.thy-arrow-switcher',] }],
    _isSmallSize: [{ type: HostBinding, args: ['class.thy-arrow-switcher-small',] }],
    thyPrevious: [{ type: Output }],
    thyNext: [{ type: Output }],
    thyTotal: [{ type: Input }],
    thySize: [{ type: Input }]
};

class ThyArrowSwitcherModule {
}
ThyArrowSwitcherModule.decorators = [
    { type: NgModule, args: [{
                declarations: [ThyArrowSwitcherComponent],
                imports: [CommonModule, ThyButtonModule],
                exports: [ThyArrowSwitcherComponent]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { ThyArrowSwitcherComponent, ThyArrowSwitcherModule };
//# sourceMappingURL=ngx-tethys-arrow-switcher.js.map
