{"version":3,"file":"ngx-tethys-dialog.js","sources":["../../src/dialog/dialog.config.ts","../../src/dialog/dialog-animations.ts","../../src/dialog/dialog.options.ts","../../src/dialog/dialog-container.component.ts","../../src/dialog/dialog-ref.ts","../../src/dialog/confirm.config.ts","../../src/dialog/confirm/confirm.component.ts","../../src/dialog/dialog.service.ts","../../src/dialog/body/dialog-body.component.ts","../../src/dialog/footer/dialog-footer.component.ts","../../src/dialog/header/dialog-header.component.ts","../../src/dialog/dialog.module.ts","../../src/dialog/ngx-tethys-dialog.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { ScrollStrategy } from '@angular/cdk/overlay';\nimport { ThyAbstractOverlayConfig, ThyUpperOverlayPosition } from 'ngx-tethys/core';\n\n/** Valid ARIA roles for a dialog element. */\nexport type ThyDialogRole = 'dialog' | 'alertdialog';\n\nexport enum ThyDialogSizes {\n    lg = 'lg',\n    supperLg = 'supper-lg',\n    maxLg = 'max-lg',\n    md = 'md',\n    sm = 'sm',\n    full = 'full'\n}\n\n/**\n * Configuration for opening a modal dialog with the ThyDialog service.\n */\nexport class ThyDialogConfig<TData = any> extends ThyAbstractOverlayConfig<TData> {\n    /** The ARIA role of the dialog element. */\n    role?: ThyDialogRole = 'dialog';\n\n    /** Position overrides. */\n    position?: ThyUpperOverlayPosition;\n\n    /** Dialog size md, lg, sm*/\n    size?: ThyDialogSizes;\n\n    /** Scroll strategy to be used for the dialog. */\n    scrollStrategy?: ScrollStrategy;\n}\n\n/** Injection token that can be used to specify default dialog options. */\nexport const THY_DIALOG_DEFAULT_OPTIONS = new InjectionToken<ThyDialogConfig>('thy-dialog-default-options');\n\nexport const THY_DIALOG_DEFAULT_OPTIONS_PROVIDER = {\n    provide: THY_DIALOG_DEFAULT_OPTIONS,\n    useValue: {\n        role: 'dialog',\n        hasBackdrop: true,\n        backdropClass: '',\n        panelClass: '',\n        backdropClosable: true,\n        closeOnNavigation: true,\n        autoFocus: true,\n        restoreFocus: true\n    }\n};\n\nexport type ThyDialogFooterAlign = 'left' | 'right' | 'center';\n\nexport class ThyDialogLayoutConfig {\n    footerAlign?: ThyDialogFooterAlign;\n    footerDivided?: boolean;\n}\n\nexport const THY_DIALOG_LAYOUT_CONFIG = new InjectionToken<ThyDialogLayoutConfig>('thy-dialog-layout-config');\n\nexport const THY_DIALOG_LAYOUT_CONFIG_PROVIDER = {\n    provide: THY_DIALOG_LAYOUT_CONFIG,\n    useValue: {\n        footerAlign: 'left',\n        footerDivided: false\n    }\n};\n","import { animate, state, style, transition, trigger, AnimationTriggerMetadata } from '@angular/animations';\n\nconst animationBody = [\n    // Note: The `enter` animation transitions to `transform: none`, because for some reason\n    // specifying the transform explicitly, causes IE both to blur the dialog content and\n    // decimate the animation performance. Leaving it as `none` solves both issues. translate(-300px,-100px)\n    state('void, exit', style({ opacity: 0, transform: 'scale(0.1)' })),\n    state('enter', style({ transform: 'none' })),\n    transition('* => enter', animate('200ms cubic-bezier(0, 0, 0.57, 1)', style({ transform: 'none', opacity: 1 }))),\n    transition(\n        '* => exit',\n        animate('150ms cubic-bezier(0.24, 0.18, 0.96, 0.52)', style({ transform: 'scale(0.3)', opacity: 0 }))\n    )\n];\n\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nexport const thyDialogAnimations: {\n    readonly dialogContainer: AnimationTriggerMetadata;\n} = {\n    dialogContainer: trigger('dialogContainer', animationBody)\n};\n\n// export const setAnimationStart\n","import { ThyUpperOverlayOptions } from 'ngx-tethys/core';\n\nexport const dialogUpperOverlayOptions: ThyUpperOverlayOptions = {\n    name: 'dialog',\n    animationEnabled: true,\n    disposeWhenClose: true\n};\n","import {\n    Component,\n    ChangeDetectionStrategy,\n    ComponentRef,\n    ViewChild,\n    EmbeddedViewRef,\n    ElementRef,\n    Inject,\n    EventEmitter,\n    ChangeDetectorRef,\n    HostBinding,\n    OnDestroy\n} from '@angular/core';\nimport { ComponentPortal, CdkPortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport { AnimationEvent } from '@angular/animations';\nimport { ThyDialogConfig } from './dialog.config';\nimport { thyDialogAnimations } from './dialog-animations';\nimport { ThyClickPositioner } from 'ngx-tethys/core';\nimport { FocusTrapFactory, FocusTrap } from '@angular/cdk/a11y';\nimport { ThyAbstractOverlayContainer } from 'ngx-tethys/core';\nimport { dialogUpperOverlayOptions } from './dialog.options';\nimport { Observable } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\n\n@Component({\n    selector: 'thy-dialog-container',\n    template: `\n        <ng-template cdkPortalOutlet></ng-template>\n    `,\n    // Using OnPush for dialogs caused some sync issues, e.g. custom ngModel can't to detect changes\n    // Disabled until we can track them down.\n    changeDetection: ChangeDetectionStrategy.Default,\n    animations: [thyDialogAnimations.dialogContainer],\n    host: {\n        class: 'thy-dialog-container',\n        tabindex: '-1',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[attr.role]': 'config.role',\n        '[attr.aria-labelledby]': 'config.ariaLabel ? null : ariaLabelledBy',\n        '[attr.aria-label]': 'config.ariaLabel',\n        '[attr.aria-describedby]': 'config.ariaDescribedBy || null',\n        '[@dialogContainer]': 'animationState',\n        '(@dialogContainer.start)': 'onAnimationStart($event)',\n        '(@dialogContainer.done)': 'onAnimationDone($event)'\n    }\n})\nexport class ThyDialogContainerComponent extends ThyAbstractOverlayContainer implements OnDestroy {\n    animationOpeningDone: Observable<AnimationEvent>;\n    animationClosingDone: Observable<AnimationEvent>;\n\n    @ViewChild(CdkPortalOutlet, { static: true })\n    portalOutlet: CdkPortalOutlet;\n\n    @HostBinding(`attr.id`)\n    id: string;\n\n    /** State of the dialog animation. */\n    animationState: 'void' | 'enter' | 'exit' = 'void';\n\n    /** Emits when an animation state changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** ID of the element that should be considered as the dialog's label. */\n    ariaLabelledBy: string | null = null;\n\n    /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n    private elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n\n    /** The class that traps and manages focus within the dialog. */\n    private focusTrap: FocusTrap;\n\n    private savePreviouslyFocusedElement() {\n        if (this.document) {\n            this.elementFocusedBeforeDialogWasOpened = this.document.activeElement as HTMLElement;\n\n            // Note that there is no focus method when rendering on the server.\n            if (this.elementRef.nativeElement.focus) {\n                // Move focus onto the dialog immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then(() => this.elementRef.nativeElement.focus());\n            }\n        }\n    }\n\n    /** Moves the focus inside the focus trap. */\n    private trapFocus() {\n        const element = this.elementRef.nativeElement;\n\n        if (!this.focusTrap) {\n            this.focusTrap = this.focusTrapFactory.create(element);\n        }\n\n        // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        if (this.config.autoFocus) {\n            this.focusTrap.focusInitialElementWhenReady();\n        } else {\n            const activeElement = this.document.activeElement;\n\n            // Otherwise ensure that focus is on the dialog container. It's possible that a different\n            // component tried to move focus while the open animation was running. See:\n            // https://github.com/angular/components/issues/16215. Note that we only want to do this\n            // if the focus isn't inside the dialog already, because it's possible that the consumer\n            // turned off `autoFocus` in order to move focus themselves.\n            if (activeElement !== element && !element.contains(activeElement)) {\n                element.focus();\n            }\n        }\n    }\n\n    private restoreFocus() {\n        const toFocus = this.elementFocusedBeforeDialogWasOpened;\n\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this.config.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            toFocus.focus();\n        }\n\n        if (this.focusTrap) {\n            this.focusTrap.destroy();\n        }\n    }\n\n    private setTransformOrigin() {\n        this.clickPositioner.runTaskUseLastPosition(lastPosition => {\n            if (lastPosition) {\n                const containerElement: HTMLElement = this.elementRef.nativeElement;\n                const transformOrigin = `${lastPosition.x - containerElement.offsetLeft}px ${lastPosition.y -\n                    containerElement.offsetTop}px 0px`;\n                containerElement.style['transform-origin'] = transformOrigin;\n                // 手动修改动画状态为从 void 到 enter, 开启动画\n            }\n            this.animationState = 'enter';\n        });\n    }\n\n    constructor(\n        private elementRef: ElementRef,\n        @Inject(DOCUMENT) private document: any,\n        public config: ThyDialogConfig,\n        changeDetectorRef: ChangeDetectorRef,\n        private clickPositioner: ThyClickPositioner,\n        private focusTrapFactory: FocusTrapFactory\n    ) {\n        super(dialogUpperOverlayOptions, changeDetectorRef);\n        this.animationOpeningDone = this.animationStateChanged.pipe(\n            filter((event: AnimationEvent) => {\n                return event.phaseName === 'done' && event.toState === 'void';\n            })\n        );\n        this.animationClosingDone = this.animationStateChanged.pipe(\n            filter((event: AnimationEvent) => {\n                return event.phaseName === 'done' && event.toState === 'exit';\n            })\n        );\n    }\n\n    beforeAttachPortal(): void {\n        this.setTransformOrigin();\n        this.savePreviouslyFocusedElement();\n    }\n\n    /** Callback, invoked whenever an animation on the host completes. */\n    onAnimationDone(event: AnimationEvent) {\n        if (event.toState === 'void') {\n            this.trapFocus();\n        } else if (event.toState === 'exit') {\n            this.restoreFocus();\n        }\n        this.animationStateChanged.emit(event);\n    }\n\n    /** Callback, invoked when an animation on the host starts. */\n    onAnimationStart(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    ngOnDestroy() {\n        super.destroy();\n    }\n}\n","import { ESCAPE } from '@angular/cdk/keycodes';\nimport { GlobalPositionStrategy, OverlayRef } from '@angular/cdk/overlay';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { ThyDialogConfig } from './dialog.config';\nimport { ThyDialogContainerComponent } from './dialog-container.component';\nimport { ThyAbstractOverlayRef, ThyAbstractInternalOverlayRef, ThyUpperOverlayPosition } from 'ngx-tethys/core';\nimport { dialogUpperOverlayOptions } from './dialog.options';\n\nexport abstract class ThyDialogRef<T, TResult = any> extends ThyAbstractOverlayRef<T, ThyDialogContainerComponent, TResult> {}\n\nexport class ThyInternalDialogRef<T, TResult = any> extends ThyAbstractInternalOverlayRef<T, ThyDialogContainerComponent, TResult> {\n    constructor(overlayRef: OverlayRef, containerInstance: ThyDialogContainerComponent, config: ThyDialogConfig<T>) {\n        super(dialogUpperOverlayOptions, overlayRef, containerInstance, config);\n    }\n\n    /**\n     * Updates the dialog's position.\n     * @param position New dialog position.\n     */\n    updatePosition(position?: ThyUpperOverlayPosition): this {\n        this.updateGlobalPosition(position);\n        return this;\n    }\n\n    /**\n     * Updates the dialog's width and height.\n     * @param width New width of the dialog.\n     * @param height New height of the dialog.\n     */\n    updateSizeAndPosition(width: string = '', height: string = '', position?: ThyUpperOverlayPosition): this {\n        (this.getPositionStrategy() as GlobalPositionStrategy).width(width).height(height);\n        this.updatePosition(position);\n        return this;\n    }\n}\n","import { Observable } from 'rxjs';\nimport { InjectionToken } from '@angular/core';\nimport { ThyFormGroupFooterAlign } from 'ngx-tethys/form';\n\nexport interface ThyConfirmConfig {\n    title?: string;\n    content: string;\n    okText?: string;\n    okType?: 'primary' | 'danger';\n    okLoadingText?: string;\n    footerAlign?: ThyFormGroupFooterAlign;\n    onOk?: () => Observable<boolean> | void;\n    cancelText?: string;\n    onCancel?: void;\n}\n\nexport const THY_CONFIRM_DEFAULT_OPTIONS = new InjectionToken<ThyConfirmConfig>('thy-confirm-default-options');\n\nexport const THY_CONFIRM_DEFAULT_OPTIONS_VALUE = {\n    title: '确认删除',\n    okText: '确认',\n    okType: 'danger',\n    cancelText: '取消',\n    footerAlign: 'left'\n};\n\nexport const THY_CONFIRM_DEFAULT_OPTIONS_PROVIDER = {\n    provide: THY_CONFIRM_DEFAULT_OPTIONS,\n    useValue: THY_CONFIRM_DEFAULT_OPTIONS_VALUE\n};\n","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, Inject, Input } from '@angular/core';\nimport { ThyDialogRef } from '../dialog-ref';\nimport { ThyConfirmConfig, THY_CONFIRM_DEFAULT_OPTIONS, THY_CONFIRM_DEFAULT_OPTIONS_VALUE } from '../confirm.config';\nimport { finalize } from 'rxjs/operators';\nimport { ThyFormGroupFooterAlign } from 'ngx-tethys/form';\n\n@Component({\n    selector: 'thy-confirm-default',\n    templateUrl: './confirm.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyConfirmComponent implements OnInit, OnDestroy {\n    loading: boolean;\n\n    @Input() options: ThyConfirmConfig;\n\n    public title: string;\n\n    public content: string;\n\n    public okText: string;\n\n    public okType: string;\n\n    public cancelText: string;\n\n    public okLoadingText: string;\n\n    public footerAlign: ThyFormGroupFooterAlign;\n\n    constructor(\n        private dialogRef: ThyDialogRef<ThyConfirmComponent>,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Inject(THY_CONFIRM_DEFAULT_OPTIONS) private defaultConfig: ThyConfirmConfig\n    ) {\n        this.defaultConfig = { ...(THY_CONFIRM_DEFAULT_OPTIONS_VALUE as ThyConfirmConfig), ...this.defaultConfig };\n    }\n\n    ngOnInit() {\n        this.defaultConfig = { ...this.defaultConfig, ...this.options };\n        this.title = this.defaultConfig.title;\n        this.content = this.defaultConfig.content;\n        this.okText = this.defaultConfig.okText;\n        this.okType = this.defaultConfig.okType;\n        this.cancelText = this.defaultConfig.cancelText;\n        this.okLoadingText = this.defaultConfig.okLoadingText || this.okText;\n        this.footerAlign = this.defaultConfig.footerAlign;\n    }\n\n    confirm() {\n        this.loading = true;\n        const result = this.options.onOk();\n        if (result && result.subscribe) {\n            result\n                .pipe(\n                    finalize(() => {\n                        this.loading = false;\n                        this.changeDetectorRef.markForCheck();\n                    })\n                )\n                .subscribe(success => {\n                    if (success) {\n                        this.close();\n                    }\n                });\n        } else {\n            this.close();\n        }\n    }\n\n    close() {\n        this.dialogRef.close();\n    }\n\n    ngOnDestroy() {}\n}\n","import { Injectable, TemplateRef, Injector, Optional, OnDestroy, Inject } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { of, Subject } from 'rxjs';\nimport { ComponentType, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { ThyDialogConfig, ThyDialogSizes, THY_DIALOG_DEFAULT_OPTIONS } from './dialog.config';\nimport { Overlay, OverlayConfig, OverlayRef, ScrollStrategy } from '@angular/cdk/overlay';\nimport { ThyDialogContainerComponent } from './dialog-container.component';\nimport { ThyDialogRef, ThyInternalDialogRef } from './dialog-ref';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { helpers } from 'ngx-tethys/util';\nimport { ThyClickPositioner } from 'ngx-tethys/core';\nimport { ThyConfirmComponent } from './confirm/confirm.component';\nimport { ThyConfirmConfig } from './confirm.config';\nimport { ThyAbstractOverlayService, ThyAbstractOverlayRef } from 'ngx-tethys/core';\nimport { dialogUpperOverlayOptions } from './dialog.options';\nimport { StaticProvider } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyDialog extends ThyAbstractOverlayService<ThyDialogConfig, ThyDialogContainerComponent> implements OnDestroy {\n    protected buildOverlayConfig(config: ThyDialogConfig<any>): OverlayConfig {\n        const size = config.size || ThyDialogSizes.md;\n        const overlayConfig = this.buildBaseOverlayConfig(config, [`dialog-${size}`]);\n        overlayConfig.positionStrategy = this.overlay.position().global();\n        overlayConfig.scrollStrategy = config.scrollStrategy || this.overlay.scrollStrategies.block();\n        return overlayConfig;\n    }\n\n    protected attachUpperOverlayContainer(overlay: OverlayRef, config: ThyDialogConfig<any>): ThyDialogContainerComponent {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this.injector,\n            providers: [{ provide: ThyDialogConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(ThyDialogContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlay.attach<ThyDialogContainerComponent>(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    protected createUpperOverlayRef<T>(\n        overlayRef: OverlayRef,\n        containerInstance: ThyDialogContainerComponent,\n        config: ThyDialogConfig<any>\n    ): ThyAbstractOverlayRef<T, any> {\n        return new ThyInternalDialogRef(overlayRef, containerInstance, config);\n    }\n\n    protected createInjector<T>(\n        config: ThyDialogConfig,\n        dialogRef: ThyDialogRef<T>,\n        dialogContainer: ThyDialogContainerComponent\n    ): Injector {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n        const injectionTokens: StaticProvider[] = [\n            { provide: ThyDialogContainerComponent, useValue: dialogContainer },\n            {\n                provide: ThyDialogRef,\n                useValue: dialogRef\n            }\n        ];\n\n        if (config.direction && (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\n            injectionTokens.push({\n                provide: Directionality,\n                useValue: {\n                    value: config.direction,\n                    change: of()\n                }\n            });\n        }\n\n        return Injector.create({ parent: userInjector || this.injector, providers: injectionTokens });\n    }\n\n    constructor(\n        overlay: Overlay,\n        injector: Injector,\n        @Optional()\n        @Inject(THY_DIALOG_DEFAULT_OPTIONS)\n        defaultConfig: ThyDialogConfig,\n        clickPositioner: ThyClickPositioner\n    ) {\n        super(dialogUpperOverlayOptions, overlay, injector, defaultConfig);\n        clickPositioner.initialize();\n    }\n\n    open<T, TData = any, TResult = any>(\n        componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n        config?: ThyDialogConfig<TData>\n    ): ThyDialogRef<T, TResult> {\n        const dialogRef = this.openUpperOverlay(componentOrTemplateRef, config);\n        const dialogRefInternal = dialogRef as ThyInternalDialogRef<T, TResult>;\n        dialogRefInternal.updateSizeAndPosition(\n            dialogRef.containerInstance.config.width,\n            dialogRef.containerInstance.config.height,\n            dialogRef.containerInstance.config.position\n        );\n        return dialogRef as ThyDialogRef<T, TResult>;\n    }\n\n    confirm(options: ThyConfirmConfig) {\n        return this.open(ThyConfirmComponent, {\n            initialState: {\n                options: options\n            }\n        });\n    }\n\n    getDialogById(id: string): ThyDialogRef<any> | undefined {\n        return this.getUpperOverlayById(id) as ThyDialogRef<any> | undefined;\n    }\n\n    /**\n     * Finds the closest ThyDialogRef to an element by looking at the DOM.\n     */\n    getClosestDialog(element: HTMLElement): ThyDialogRef<any> | undefined {\n        let parent: HTMLElement | null = element.parentElement;\n\n        while (parent && !parent.classList.contains('thy-dialog-container')) {\n            parent = parent.parentElement;\n        }\n        if (parent && parent.id) {\n            return this.getDialogById(parent.id);\n        }\n        return null;\n    }\n\n    ngOnDestroy() {\n        this.dispose();\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    ContentChild,\n    TemplateRef,\n    OnInit,\n    HostBinding,\n    ChangeDetectionStrategy\n} from '@angular/core';\nimport { ThyDialog } from '../dialog.service';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\n@Component({\n    selector: 'thy-dialog-body',\n    template: '<ng-content></ng-content>',\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'thyDialogBody'\n})\nexport class DialogBodyComponent implements OnInit {\n    @HostBinding(`class.dialog-body`) _isDialogBody = true;\n\n    @HostBinding(`class.dialog-body-clear-padding`)\n    thyClearPaddingClassName = false;\n\n    @Input()\n    set thyClearPadding(value: string) {\n        this.thyClearPaddingClassName = coerceBooleanProperty(value);\n    }\n\n    constructor(private dialog: ThyDialog) {}\n\n    ngOnInit() {}\n}\n","import { UpdateHostClassService } from 'ngx-tethys/core';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\nimport { Component, ContentChild, ElementRef, Inject, Input, OnInit, TemplateRef } from '@angular/core';\n\nimport { THY_DIALOG_LAYOUT_CONFIG, ThyDialogFooterAlign, ThyDialogLayoutConfig } from '../dialog.config';\n\n@Component({\n    selector: 'thy-dialog-footer',\n    templateUrl: './dialog-footer.component.html',\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'thyDialogFooter',\n    providers: [UpdateHostClassService]\n})\nexport class DialogFooterComponent implements OnInit {\n    @ContentChild('description') description: TemplateRef<any>;\n\n    @Input() set thyDivided(value: boolean) {\n        this.divided = coerceBooleanProperty(value);\n    }\n\n    @Input() thyAlign: ThyDialogFooterAlign;\n\n    private divided: boolean;\n\n    private get align() {\n        return !!this.thyAlign ? this.thyAlign : this.dialogLayoutConfig.footerAlign;\n    }\n\n    constructor(\n        @Inject(THY_DIALOG_LAYOUT_CONFIG) private dialogLayoutConfig: ThyDialogLayoutConfig,\n        private updateHostClassService: UpdateHostClassService,\n        private elementRef: ElementRef\n    ) {\n        this.updateHostClassService.initializeElement(this.elementRef.nativeElement);\n        this.divided = this.dialogLayoutConfig.footerDivided;\n    }\n\n    ngOnInit() {\n        this.updateHostClassService.updateClassByMap({\n            'dialog-footer': true,\n            [`dialog-footer-actions-align-${this.align}`]: true,\n            'dialog-footer-border-top': this.divided\n        });\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    ContentChild,\n    TemplateRef,\n    OnInit,\n    HostBinding,\n    ChangeDetectionStrategy,\n    Optional,\n    ElementRef\n} from '@angular/core';\nimport { ThyDialog } from '../dialog.service';\nimport { ThyDialogContainerComponent } from '../dialog-container.component';\nimport { ThyTranslate } from 'ngx-tethys/core';\nimport { ThyInternalDialogRef } from '../dialog-ref';\n\n@Component({\n    selector: 'thy-dialog-header',\n    templateUrl: './dialog-header.component.html',\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'thyDialogHeader'\n})\nexport class DialogHeaderComponent implements OnInit {\n    @HostBinding(`class.dialog-header`) isDialogHeader = true;\n\n    @HostBinding(`class.dialog-header-lg`) isDialogHeaderLg = false;\n\n    @ContentChild('dialogHeader')\n    public headerTemplate: TemplateRef<any>;\n\n    @Input() thyTitle: string;\n\n    @Input() set thySize(value: 'lg' | 'md') {\n        this.isDialogHeaderLg = value === 'lg';\n    }\n\n    @Input()\n    set thyTitleTranslationKey(key: string) {\n        if (key && !this.thyTitle) {\n            this.thyTitle = this.translate.instant(key);\n        }\n    }\n\n    @Input() thyIcon: string;\n\n    @Output() thyOnClose: EventEmitter<Event> = new EventEmitter<Event>();\n\n    constructor(\n        private elementRef: ElementRef,\n        private dialog: ThyDialog,\n        private translate: ThyTranslate,\n        @Optional() private dialogContainer: ThyDialogContainerComponent\n    ) {}\n\n    ngOnInit() {\n        if (!this.dialogContainer) {\n            // When this directive is included in a dialog via TemplateRef (rather than being\n            // in a Component), the ThyDialogContainerComponent isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the ThyDialogContainerComponent by\n            // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n            // be resolved at constructor time.\n            const dialogRef = this.dialog.getClosestDialog(this.elementRef.nativeElement) as ThyInternalDialogRef<any>;\n            this.dialogContainer = dialogRef ? dialogRef.containerInstance : null;\n        }\n\n        // change in next microtask avoid throw ExpressionChangedAfterItHasBeenCheckedError\n        // because sub component change parent's HostBinding property (ariaLabelledBy)\n        Promise.resolve().then(() => {\n            if (this.dialogContainer) {\n                this.dialogContainer.ariaLabelledBy = this.thyTitle;\n            }\n        });\n    }\n\n    close(event?: Event) {\n        if (this.thyOnClose.observers.length > 0) {\n            this.thyOnClose.emit(event);\n        } else {\n            this.dialog.close();\n        }\n    }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ThyButtonModule } from 'ngx-tethys/button';\nimport { ThyFormModule } from 'ngx-tethys/form';\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThySharedModule } from 'ngx-tethys/shared';\nimport { DialogBodyComponent } from './body/dialog-body.component';\nimport { THY_CONFIRM_DEFAULT_OPTIONS_PROVIDER } from './confirm.config';\nimport { ThyConfirmComponent } from './confirm/confirm.component';\nimport { ThyDialogContainerComponent } from './dialog-container.component';\nimport { THY_DIALOG_DEFAULT_OPTIONS_PROVIDER, THY_DIALOG_LAYOUT_CONFIG_PROVIDER } from './dialog.config';\nimport { ThyDialog } from './dialog.service';\nimport { DialogFooterComponent } from './footer/dialog-footer.component';\nimport { DialogHeaderComponent } from './header/dialog-header.component';\n\n@NgModule({\n    declarations: [ThyDialogContainerComponent, DialogHeaderComponent, DialogBodyComponent, DialogFooterComponent, ThyConfirmComponent],\n    imports: [CommonModule, ThySharedModule, PortalModule, OverlayModule, ThyButtonModule, ThyIconModule, ThyFormModule, FormsModule],\n    providers: [ThyDialog, THY_DIALOG_DEFAULT_OPTIONS_PROVIDER, THY_CONFIRM_DEFAULT_OPTIONS_PROVIDER, THY_DIALOG_LAYOUT_CONFIG_PROVIDER],\n    entryComponents: [ThyDialogContainerComponent, ThyConfirmComponent],\n    exports: [ThyDialogContainerComponent, DialogHeaderComponent, DialogBodyComponent, DialogFooterComponent]\n})\nexport class ThyDialogModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}