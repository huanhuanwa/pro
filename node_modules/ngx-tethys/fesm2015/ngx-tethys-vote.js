import { CommonModule } from '@angular/common';
import { Component, ElementRef, HostBinding, Input, ContentChild, NgModule } from '@angular/core';
import { ThySharedModule } from 'ngx-tethys/shared';
import { coerceBooleanProperty } from 'ngx-tethys/util';
import { UpdateHostClassService } from 'ngx-tethys/core';
import { ThyIconModule } from 'ngx-tethys/icon';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/core';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'ngx-tethys/icon';

const _c0 = ["voteIcon"];
function ThyVoteComponent_thy_icon_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 2);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r0.thyIcon)("thyIconType", ctx_r0._hasVoted ? "fill" : "");
} }
function ThyVoteComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 3);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.voteIcon);
} }
class ThyVoteComponent {
    constructor(elementRef, updateHostClassService) {
        this.elementRef = elementRef;
        this.updateHostClassService = updateHostClassService;
        this._initialized = false;
        this._isRound = false;
        this.class = true;
        this._hasVoted = true;
        this.thyIcon = 'thumb-up';
        this.updateHostClassService.initializeElement(elementRef.nativeElement);
    }
    set thySize(value) {
        this._size = value;
        if (this._initialized) {
            this._setClassesByType();
        }
    }
    set thyVote(value) {
        this._type = value;
        if (this._initialized) {
            this._setClassesByType();
        }
    }
    set thyRound(value) {
        this._isRound = coerceBooleanProperty(value);
    }
    set thyLayout(value) {
        this._layout = value;
        if (this._initialized) {
            this._setClassesByType();
        }
    }
    set thyHasVoted(value) {
        this._hasVoted = coerceBooleanProperty(value);
        if (this._initialized) {
            this._setClassesByType();
        }
    }
    ngOnInit() {
        this._setClassesByType();
        this._initialized = true;
    }
    _setClassesByType() {
        const classNames = [];
        if (!this._type) {
            this._type = 'primary';
        }
        if (!this._layout) {
            this._layout = 'horizontal';
        }
        if (!this._size) {
            this._size = 'default';
        }
        if (this._isRound) {
            classNames.push('thy-vote-round');
        }
        classNames.push(`thy-vote-${this._type}`);
        classNames.push(`thy-vote-${this._layout}`);
        classNames.push(`thy-vote-${this._layout}-size-${this._size}`);
        this.updateHostClassService.updateClass(classNames);
    }
}
ThyVoteComponent.ɵfac = function ThyVoteComponent_Factory(t) { return new (t || ThyVoteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UpdateHostClassService)); };
ThyVoteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyVoteComponent, selectors: [["thy-vote"], ["", "thyVote", ""]], contentQueries: function ThyVoteComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.voteIcon = _t.first);
    } }, hostVars: 4, hostBindings: function ThyVoteComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-vote", ctx.class)("has-voted", ctx._hasVoted);
    } }, inputs: { thyIcon: "thyIcon", thySize: "thySize", thyVote: "thyVote", thyRound: "thyRound", thyLayout: "thyLayout", thyHasVoted: "thyHasVoted", thyVoteCount: "thyVoteCount" }, features: [ɵngcc0.ɵɵProvidersFeature([UpdateHostClassService])], decls: 4, vars: 3, consts: [[3, "thyIconName", "thyIconType", 4, "ngIf"], [3, "ngTemplateOutlet", 4, "ngIf"], [3, "thyIconName", "thyIconType"], [3, "ngTemplateOutlet"]], template: function ThyVoteComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ThyVoteComponent_thy_icon_0_Template, 1, 2, "thy-icon", 0);
        ɵngcc0.ɵɵtemplate(1, ThyVoteComponent_ng_container_1_Template, 1, 1, "ng-container", 1);
        ɵngcc0.ɵɵelementStart(2, "div");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.voteIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.voteIcon);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.thyVoteCount);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.ThyIconComponent, ɵngcc2.NgTemplateOutlet], encapsulation: 2 });
ThyVoteComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: UpdateHostClassService }
];
ThyVoteComponent.propDecorators = {
    class: [{ type: HostBinding, args: [`class.thy-vote`,] }],
    _hasVoted: [{ type: HostBinding, args: [`class.has-voted`,] }],
    thySize: [{ type: Input }],
    thyVote: [{ type: Input }],
    thyRound: [{ type: Input }],
    thyLayout: [{ type: Input }],
    thyVoteCount: [{ type: Input }],
    thyIcon: [{ type: Input }],
    thyHasVoted: [{ type: Input }],
    voteIcon: [{ type: ContentChild, args: ['voteIcon',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyVoteComponent, [{
        type: Component,
        args: [{
                selector: 'thy-vote,[thyVote]',
                template: "<thy-icon *ngIf=\"!voteIcon\" [thyIconName]=\"thyIcon\" [thyIconType]=\"_hasVoted ? 'fill' : ''\"></thy-icon>\n<ng-container *ngIf=\"voteIcon\" [ngTemplateOutlet]=\"voteIcon\"></ng-container>\n<div>{{ thyVoteCount }}</div>\n",
                providers: [UpdateHostClassService]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.UpdateHostClassService }]; }, { class: [{
            type: HostBinding,
            args: [`class.thy-vote`]
        }], _hasVoted: [{
            type: HostBinding,
            args: [`class.has-voted`]
        }], thyIcon: [{
            type: Input
        }], thySize: [{
            type: Input
        }], thyVote: [{
            type: Input
        }], thyRound: [{
            type: Input
        }], thyLayout: [{
            type: Input
        }], thyHasVoted: [{
            type: Input
        }], thyVoteCount: [{
            type: Input
        }], voteIcon: [{
            type: ContentChild,
            args: ['voteIcon']
        }] }); })();

class ThyVoteModule {
}
ThyVoteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyVoteModule });
ThyVoteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyVoteModule_Factory(t) { return new (t || ThyVoteModule)(); }, providers: [], imports: [[CommonModule, ThySharedModule, ThyIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyVoteModule, { declarations: function () { return [ThyVoteComponent]; }, imports: function () { return [CommonModule, ThySharedModule, ThyIconModule]; }, exports: function () { return [ThyVoteComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyVoteModule, [{
        type: NgModule,
        args: [{
                declarations: [ThyVoteComponent],
                imports: [CommonModule, ThySharedModule, ThyIconModule],
                exports: [ThyVoteComponent],
                providers: []
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ThyVoteComponent, ThyVoteModule };

//# sourceMappingURL=ngx-tethys-vote.js.map