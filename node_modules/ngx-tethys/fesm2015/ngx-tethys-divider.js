import { TemplateRef, Component, ViewEncapsulation, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ThySharedModule } from 'ngx-tethys/shared';
import { ThyIconModule } from 'ngx-tethys/icon';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function ThyDividerComponent_div_0_1_ng_template_0_Template(rf, ctx) { }
function ThyDividerComponent_div_0_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThyDividerComponent_div_0_1_ng_template_0_Template, 0, 0, "ng-template");
} }
function ThyDividerComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtemplate(1, ThyDividerComponent_div_0_1_Template, 1, 0, undefined, 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.templateContent);
} }
function ThyDividerComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r1.textContent);
} }
class ThyDividerComponent {
    constructor() {
        this.thyStyle = 'solid';
        this.thyTextDirection = 'center';
    }
    set thyText(value) {
        if (value instanceof TemplateRef) {
            this.templateContent = value;
        }
        else {
            this.textContent = value;
        }
    }
}
ThyDividerComponent.ɵfac = function ThyDividerComponent_Factory(t) { return new (t || ThyDividerComponent)(); };
ThyDividerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyDividerComponent, selectors: [["thy-divider"]], hostVars: 18, hostBindings: function ThyDividerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-divider", true)("thy-divider-horizontal", !ctx.thyVertical)("thy-divider-vertical", ctx.thyVertical)("thy-divider-with-content", ctx.textContent || ctx.templateContent)("thy-divider-with-content-left", (ctx.textContent || ctx.templateContent) && ctx.thyTextDirection === "left")("thy-divider-with-content-right", (ctx.textContent || ctx.templateContent) && ctx.thyTextDirection === "right")("thy-divider-with-content-center", (ctx.textContent || ctx.templateContent) && ctx.thyTextDirection === "center")("thy-divider-solid", ctx.thyStyle === "solid")("thy-divider-dashed", ctx.thyStyle === "dashed");
    } }, inputs: { thyStyle: "thyStyle", thyTextDirection: "thyTextDirection", thyText: "thyText", thyVertical: "thyVertical" }, decls: 2, vars: 2, consts: [["class", "thy-divider-inner-template", 4, "ngIf"], ["class", "thy-divider-inner-text", 4, "ngIf"], [1, "thy-divider-inner-template"], [4, "ngTemplateOutlet"], [1, "thy-divider-inner-text"]], template: function ThyDividerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ThyDividerComponent_div_0_Template, 2, 1, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ThyDividerComponent_span_1_Template, 2, 1, "span", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.templateContent);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.textContent);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });
ThyDividerComponent.ctorParameters = () => [];
ThyDividerComponent.propDecorators = {
    thyText: [{ type: Input }],
    thyVertical: [{ type: Input }],
    thyStyle: [{ type: Input }],
    thyTextDirection: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDividerComponent, [{
        type: Component,
        args: [{
                preserveWhitespaces: false,
                encapsulation: ViewEncapsulation.None,
                selector: 'thy-divider',
                template: `
        <div *ngIf="templateContent" class="thy-divider-inner-template">
            <ng-template *ngTemplateOutlet="templateContent"></ng-template>
        </div>

        <span *ngIf="textContent" class="thy-divider-inner-text">{{ textContent }}</span>
    `,
                host: {
                    '[class.thy-divider]': `true`,
                    '[class.thy-divider-horizontal]': `!thyVertical`,
                    '[class.thy-divider-vertical]': `thyVertical`,
                    '[class.thy-divider-with-content]': `textContent || templateContent`,
                    '[class.thy-divider-with-content-left]': `(textContent || templateContent) && thyTextDirection === 'left'`,
                    '[class.thy-divider-with-content-right]': `(textContent || templateContent) && thyTextDirection === 'right'`,
                    '[class.thy-divider-with-content-center]': `(textContent || templateContent) && thyTextDirection === 'center'`,
                    '[class.thy-divider-solid]': `thyStyle === 'solid'`,
                    '[class.thy-divider-dashed]': `thyStyle === 'dashed'`
                }
            }]
    }], function () { return []; }, { thyStyle: [{
            type: Input
        }], thyTextDirection: [{
            type: Input
        }], thyText: [{
            type: Input
        }], thyVertical: [{
            type: Input
        }] }); })();

class ThyDividerModule {
}
ThyDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyDividerModule });
ThyDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyDividerModule_Factory(t) { return new (t || ThyDividerModule)(); }, providers: [], imports: [[CommonModule, ThySharedModule, ThyIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyDividerModule, { declarations: function () { return [ThyDividerComponent]; }, imports: function () { return [CommonModule, ThySharedModule, ThyIconModule]; }, exports: function () { return [ThyDividerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDividerModule, [{
        type: NgModule,
        args: [{
                declarations: [ThyDividerComponent],
                entryComponents: [],
                imports: [CommonModule, ThySharedModule, ThyIconModule],
                exports: [ThyDividerComponent],
                providers: []
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ThyDividerComponent, ThyDividerModule };

//# sourceMappingURL=ngx-tethys-divider.js.map