import { TemplateRef, Component, HostBinding, Input, ContentChild, Directive, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { isString } from 'ngx-tethys/util';
import { ThyIconModule } from 'ngx-tethys/icon';

class ThyAlertComponent {
    constructor() {
        // @ViewChild(TemplateRef) content: TemplateRef<any>;
        this._typeIcon = {
            success: 'check-circle-fill',
            warning: 'waring-fill',
            danger: 'close-circle-fill',
            info: 'minus-circle-fill',
            'primary-week': 'question-circle-fill',
            'success-week': 'check-circle-fill',
            'warning-week': 'waring-fill',
            'danger-week': 'close-circle-fill',
            'primary-weak': 'question-circle-fill',
            'success-weak': 'check-circle-fill',
            'warning-weak': 'waring-fill',
            'danger-weak': 'close-circle-fill'
        };
        this._showIcon = true;
        this._type = 'info';
    }
    set thyType(value) {
        if (value && value.indexOf('-week') !== -1) {
            console.warn('The type "xxx-week" will be removed, please use "xxx-weak" instead.');
        }
        this._type = value;
    }
    set thyMessage(value) {
        if (value instanceof TemplateRef) {
            this.messageTemplate = value;
        }
        else {
            this.messageText = value;
        }
    }
    set thyIcon(value) {
        if (value) {
            this._showIcon = true;
            this._icon = isString(value) ? value.toString() : null;
        }
        else {
            this._showIcon = false;
        }
    }
    get thyIcon() {
        if (this._showIcon) {
            return this._icon || this._typeIcon[this._type];
        }
        else {
            return null;
        }
    }
    ngOnInit() {
        this.class = `thy-alert thy-alert-${this._type}`;
    }
    closeAlert() {
        this.class = `${this.class} thy-alert-hidden`;
    }
}
ThyAlertComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-alert',
                template: "<div class=\"thy-alert-content\">\n  <thy-icon *ngIf=\"thyIcon\" class=\"thy-alert-icon\" [thyIconName]=\"thyIcon\"></thy-icon>\n  <ng-container *ngIf=\"messageTemplate\">\n    <ng-template *ngTemplateOutlet=\"messageTemplate\"></ng-template>\n  </ng-container>\n  <span *ngIf=\"messageText\">{{ messageText }}</span>\n  <div class=\"thy-alert-operation\" *ngIf=\"alertOperation\">\n    <ng-container [ngTemplateOutlet]=\"alertOperation\"></ng-container>\n  </div>\n</div>\n<a href=\"javascript:;\" class=\"thy-alert-close\" *ngIf=\"thyCloseable\" (click)=\"closeAlert()\">\n  <thy-icon thyIconName=\"close\"></thy-icon>\n</a>\n"
            },] }
];
ThyAlertComponent.ctorParameters = () => [];
ThyAlertComponent.propDecorators = {
    class: [{ type: HostBinding, args: ['class',] }],
    thyType: [{ type: Input }],
    thyMessage: [{ type: Input }],
    thyIcon: [{ type: Input }],
    thyCloseable: [{ type: Input }],
    alertOperation: [{ type: ContentChild, args: ['operation',] }]
};

class ThyAlertActionItemDirective {
    constructor() {
        this.class = true;
    }
}
ThyAlertActionItemDirective.decorators = [
    { type: Directive, args: [{ selector: '[thyAlertActionItem]' },] }
];
ThyAlertActionItemDirective.ctorParameters = () => [];
ThyAlertActionItemDirective.propDecorators = {
    class: [{ type: HostBinding, args: ['class.thy-alert-action',] }]
};

class ThyAlertModule {
}
ThyAlertModule.decorators = [
    { type: NgModule, args: [{
                declarations: [ThyAlertComponent, ThyAlertActionItemDirective],
                imports: [CommonModule, ThyIconModule],
                exports: [ThyAlertComponent, ThyAlertActionItemDirective]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { ThyAlertActionItemDirective, ThyAlertComponent, ThyAlertModule };
//# sourceMappingURL=ngx-tethys-alert.js.map
