{"version":3,"file":"ngx-tethys-date-range.js","sources":["../../src/date-range/optional-dates/optional-dates.component.ts","../../src/date-range/date-range.component.ts","../../src/date-range/module.ts","../../src/date-range/date-range.class.ts","../../src/date-range/ngx-tethys-date-range.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DateRangeItemInfo } from '../date-range.class';\nimport { ThyPopover } from 'ngx-tethys/popover';\n\n@Component({\n    selector: 'date-range-optional',\n    templateUrl: './optional-dates.component.html'\n})\nexport class OptionalDateRangesComponent implements OnInit {\n    hiddenMenu = false;\n\n    optionalDateRanges: DateRangeItemInfo[];\n\n    customValue = '自定义';\n\n    customKey: string;\n\n    minDate: number | Date;\n\n    maxDate: number | Date;\n\n    selectedDateRange: (date: DateRangeItemInfo) => void;\n\n    selectedDate: DateRangeItemInfo;\n\n    constructor(private thyPopover: ThyPopover) {}\n\n    ngOnInit() {}\n\n    _selectDateRange(dateRange: DateRangeItemInfo) {\n        this.selectedDate = dateRange;\n        this.selectedDateRange(dateRange);\n        this.thyPopover.close();\n    }\n\n    _selectedCustomDate(date: DateRangeItemInfo) {\n        this.selectedDate = {\n            begin: date.begin,\n            end: date.end,\n            key: this.customKey,\n            text: this.customValue\n        };\n        this.selectedDateRange(this.selectedDate);\n    }\n}\n","import { Component, forwardRef, OnInit, Input, SimpleChanges, ChangeDetectorRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { DateRangeItemInfo } from './date-range.class';\nimport { helpers } from 'ngx-tethys/util';\nimport { ThyPopover } from 'ngx-tethys/popover';\nimport { OptionalDateRangesComponent } from './optional-dates/optional-dates.component';\n\nimport { getUnixTime, startOfISOWeek, endOfISOWeek, endOfMonth, startOfMonth, addDays, addMonths, addYears } from 'date-fns';\nconst allDayTimestamp = 24 * 60 * 60;\n\nconst INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThyDateRangeComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'thy-date-range',\n    templateUrl: './date-range.component.html',\n    providers: [INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class ThyDateRangeComponent implements OnInit, ControlValueAccessor {\n    @Input()\n    set thyOptionalDateRanges(value: DateRangeItemInfo[]) {\n        this.optionalDateRanges = value.length > 0 ? value : this.optionalDateRanges;\n    }\n\n    @Input() thyHiddenMenu = false;\n\n    @Input() thyDisabledSwitch = false;\n\n    @Input() thyCustomTextValue = '自定义';\n\n    @Input() thyMinDate: Date | number;\n\n    @Input() thyMaxDate: Date | number;\n\n    @Input() thyCustomKey: 'custom' | 'exception' = 'custom';\n\n    @Input() thyPickerFormat: string;\n\n    public selectedDate?: DateRangeItemInfo;\n\n    public optionalDateRanges: DateRangeItemInfo[] = [\n        {\n            key: 'week',\n            text: '本周',\n            begin: getUnixTime(startOfISOWeek(new Date())),\n            end: getUnixTime(endOfISOWeek(new Date())),\n            timestamp: {\n                interval: 7,\n                unit: 'day'\n            }\n        },\n        {\n            key: 'month',\n            text: '本月',\n            begin: getUnixTime(startOfMonth(new Date())),\n            end: getUnixTime(endOfMonth(new Date())),\n            timestamp: {\n                interval: 1,\n                unit: 'month'\n            }\n        }\n    ];\n\n    public selectedDateRange: {\n        begin: number;\n        end: number;\n    };\n\n    public onModelChange: Function = () => {};\n\n    public onModelTouched: Function = () => {};\n\n    constructor(private thyPopover: ThyPopover, private cdr: ChangeDetectorRef) {}\n\n    writeValue(value: any): void {\n        if (value) {\n            this.selectedDate = value;\n        } else if (this.optionalDateRanges.length > 0) {\n            this.selectedDate = this.optionalDateRanges[0];\n            this.onModelChange(this.selectedDate);\n        }\n        this._setSelectedDateRange();\n        this.cdr.detectChanges();\n    }\n\n    registerOnChange(fn: any): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onModelTouched = fn;\n    }\n\n    ngOnInit() {}\n\n    private _setSelectedDateRange() {\n        this.selectedDateRange = {\n            begin: this.selectedDate.begin,\n            end: this.selectedDate.end\n        };\n    }\n\n    private _calculateNewTime(type: string) {\n        if (this.selectedDate.timestamp) {\n            const beginDate = new Date(this.selectedDate.begin * 1000);\n            const endDate = new Date(this.selectedDate.end * 1000);\n            const interval = this.selectedDate.timestamp.interval;\n\n            if (this.selectedDate.timestamp.unit === 'day') {\n                if (type === 'previous') {\n                    return {\n                        begin: getUnixTime(addDays(beginDate, -1 * interval)),\n                        end: getUnixTime(addDays(endDate, -1 * interval)),\n                        key: this.thyCustomKey\n                    };\n                } else {\n                    return {\n                        begin: getUnixTime(addDays(beginDate, 1 * interval)),\n                        end: getUnixTime(addDays(endDate, 1 * interval)),\n                        key: this.thyCustomKey\n                    };\n                }\n            } else if (this.selectedDate.timestamp.unit === 'month') {\n                if (type === 'previous') {\n                    return {\n                        begin: getUnixTime(addMonths(beginDate, -1 * interval)),\n                        end: getUnixTime(addMonths(endDate, -1 * interval)),\n                        key: this.thyCustomKey\n                    };\n                } else {\n                    return {\n                        begin: getUnixTime(addMonths(beginDate, 1 * interval)),\n                        end: getUnixTime(addMonths(endDate, 1 * interval)),\n                        key: this.thyCustomKey\n                    };\n                }\n            } else if (this.selectedDate.timestamp.unit === 'year') {\n                if (type === 'previous') {\n                    return {\n                        begin: getUnixTime(addYears(beginDate, -1 * interval)),\n                        end: getUnixTime(addYears(endDate, -1 * interval)),\n                        key: this.thyCustomKey\n                    };\n                } else {\n                    return {\n                        begin: getUnixTime(addYears(beginDate, 1 * interval)),\n                        end: getUnixTime(addYears(endDate, 1 * interval)),\n                        key: this.thyCustomKey\n                    };\n                }\n            }\n        } else {\n            const interval: number = this.selectedDate.end - this.selectedDate.begin + allDayTimestamp;\n            if (type === 'previous') {\n                return {\n                    begin: this.selectedDate.begin - interval,\n                    end: this.selectedDate.end - interval,\n                    key: this.thyCustomKey\n                };\n            } else {\n                return {\n                    begin: this.selectedDate.begin + interval,\n                    end: this.selectedDate.end + interval,\n                    key: this.thyCustomKey\n                };\n            }\n        }\n    }\n\n    private _setPreviousOrNextDate(type: string) {\n        this.selectedDate = Object.assign({}, this.selectedDate, this._calculateNewTime(type));\n        this._setSelectedDateRange();\n        this.onModelChange(this.selectedDate);\n    }\n\n    public previous() {\n        this._setPreviousOrNextDate('previous');\n    }\n\n    public next() {\n        this._setPreviousOrNextDate('next');\n    }\n\n    public openOptionalDateRangesMenu(event: Event) {\n        if (this.thyHiddenMenu) {\n            return;\n        }\n        this.thyPopover.open(OptionalDateRangesComponent, {\n            origin: event.currentTarget as HTMLElement,\n            hasBackdrop: true,\n            backdropClass: 'thy-overlay-transparent-backdrop',\n            offset: 0,\n            manualClosure: true,\n            originActiveClass: 'thy-date-range-text-active',\n            initialState: {\n                hiddenMenu: this.thyHiddenMenu,\n                optionalDateRanges: this.optionalDateRanges,\n                selectedDate: this.selectedDate,\n                minDate: this.thyMinDate,\n                maxDate: this.thyMaxDate,\n                customValue: this.thyCustomTextValue,\n                customKey: this.thyCustomKey,\n                selectedDateRange: (dateRange: DateRangeItemInfo) => {\n                    this.onModelChange(dateRange);\n                    this.selectedDate = dateRange;\n                }\n            }\n        });\n    }\n}\n","import { ThyIconModule } from 'ngx-tethys/icon';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ThyDateRangeComponent } from './date-range.component';\nimport { ThyActionMenuModule } from 'ngx-tethys/action-menu';\nimport { ThySharedModule } from 'ngx-tethys/shared';\nimport { ThyDatePickerModule } from 'ngx-tethys/date-picker';\nimport { OptionalDateRangesComponent } from './optional-dates/optional-dates.component';\nimport { ThyNavModule } from 'ngx-tethys/nav';\n@NgModule({\n    imports: [CommonModule, FormsModule, ThyActionMenuModule, ThySharedModule, ThyIconModule, ThyDatePickerModule, ThyNavModule],\n    declarations: [ThyDateRangeComponent, OptionalDateRangesComponent],\n    exports: [ThyDateRangeComponent],\n    entryComponents: [OptionalDateRangesComponent]\n})\nexport class ThyDateRangeModule {}\n","export type AttachTypes = 'day' | 'month' | 'year';\n\nexport class DateRangeItemInfo {\n    begin?: number;\n    end?: number;\n    key?: string;\n    text?: string;\n    timestamp?: { interval?: number, unit?: AttachTypes };\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}