{"version":3,"file":"ngx-tethys-stepper.js","sources":["../../src/stepper/step-header.component.ts","../../src/stepper/step.component.ts","../../src/stepper/stepper.component.ts","../../src/stepper/stepper-button.directive.ts","../../src/stepper/stepper.module.ts","../../src/stepper/ngx-tethys-stepper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n    selector: 'thy-step-header',\n    templateUrl: './step-header.component.html'\n})\nexport class ThyStepHeaderComponent {\n\n    @Input() label: string;\n\n    @Input() index: number;\n\n    @HostBinding('class.thy-stepper-header-selected')\n    @Input() selected: boolean;\n\n    @Input() active: boolean;\n\n    @HostBinding('class.thy-stepper-header') thyStepHeader = true;\n\n}\n","import { Component, Input, ViewChild, TemplateRef, forwardRef, Inject, InjectionToken, Optional } from '@angular/core';\n\nexport interface IThyStepperComponent {\n    selected: ThyStepComponent;\n}\n\nexport const THY_STEPPER_COMPONENT = new InjectionToken<IThyStepperComponent>('THY_STEPPER_COMPONENT');\n\n@Component({\n    selector: 'thy-step',\n    templateUrl: './step.component.html'\n})\nexport class ThyStepComponent {\n    @ViewChild(TemplateRef, { static: true }) content: TemplateRef<any>;\n\n    @Input() label: string;\n\n    @Input() thyLabel: string;\n\n    constructor(@Optional() @Inject(THY_STEPPER_COMPONENT) public stepper: IThyStepperComponent) {}\n\n    select() {\n        this.stepper.selected = this;\n    }\n}\n","import {\n    Component,\n    ViewChildren,\n    ContentChildren,\n    QueryList,\n    AfterViewInit,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter\n} from '@angular/core';\nimport { ThyStepComponent, IThyStepperComponent, THY_STEPPER_COMPONENT } from './step.component';\nimport { ThyStepHeaderComponent } from './step-header.component';\n\n@Component({\n    selector: 'thy-stepper',\n    templateUrl: 'stepper.component.html',\n    providers: [\n        {\n            provide: THY_STEPPER_COMPONENT,\n            useExisting: ThyStepperComponent\n        }\n    ]\n})\nexport class ThyStepperComponent implements IThyStepperComponent {\n    @Input()\n    set thySelectedIndex(value: number) {\n        this.selectedIndex = value;\n    }\n\n    @Input()\n    set thySelected(value: ThyStepComponent) {\n        this.selected = value;\n    }\n\n    @Input() thyShowStepHeader = true;\n\n    private _selectedIndex = 0;\n\n    public set selected(step: ThyStepComponent) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n\n    public get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : null;\n    }\n\n    set selectedIndex(index: number) {\n        if (this.steps) {\n            this._updateSelectedItemIndex(index);\n        } else {\n            this._selectedIndex = index;\n        }\n    }\n\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(ThyStepHeaderComponent) stepHeaders: QueryList<ThyStepHeaderComponent>;\n\n    @ContentChildren(ThyStepComponent) steps: QueryList<ThyStepComponent>;\n\n    @HostBinding('class.thy-stepper') thyStepper = true;\n\n    private _updateSelectedItemIndex(newIndex: number): void {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex]\n        });\n        this._selectedIndex = newIndex;\n    }\n\n    to(index: number): void {\n        this.selectedIndex = Math.min(index, this.steps.length - 1);\n    }\n\n    next(): void {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n\n    /** Selects and focuses the previous step in list. */\n    previous(): void {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n}\n","import { Directive, Input, HostListener } from '@angular/core';\nimport { ThyStepperComponent } from './stepper.component';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n    selector: '[thyStepperNext]'\n})\nexport class ThyStepperNextDirective {\n    constructor(private stepper: ThyStepperComponent) {}\n\n    @HostListener('click', ['$event'])\n    click($event: any) {\n        this.stepper.next();\n    }\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n    selector: '[thyStepperPrevious]'\n})\nexport class ThyStepperPreviousDirective {\n    constructor(private stepper: ThyStepperComponent) {}\n\n    @HostListener('click', ['$event'])\n    click($event: any) {\n        this.stepper.previous();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyStepHeaderComponent } from './step-header.component';\nimport { ThyStepComponent } from './step.component';\nimport { ThyStepperComponent } from './stepper.component';\nimport { ThyStepperNextDirective, ThyStepperPreviousDirective } from './stepper-button.directive';\n\n@NgModule({\n    declarations: [ThyStepHeaderComponent, ThyStepperComponent, ThyStepComponent, ThyStepperNextDirective, ThyStepperPreviousDirective],\n    entryComponents: [],\n    imports: [CommonModule],\n    exports: [ThyStepperComponent, ThyStepComponent, ThyStepHeaderComponent, ThyStepperNextDirective, ThyStepperPreviousDirective],\n    providers: []\n})\nexport class ThyStepperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}