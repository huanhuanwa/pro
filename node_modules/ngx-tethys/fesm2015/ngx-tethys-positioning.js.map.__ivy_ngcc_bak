{"version":3,"file":"ngx-tethys-positioning.js","sources":["../../src/positioning/positioning.service.ts","../../src/positioning/ngx-tethys-positioning.ts"],"sourcesContent":["import { Injectable, ElementRef, NgZone } from '@angular/core';\nimport { isNumber } from 'ngx-tethys/util';\nimport { NewClientRect } from './client-rect';\n\nexport enum PlacementTypes {\n    left = 'left',\n    right = 'right',\n    center = 'center',\n    top = 'top',\n    bottom = 'bottom'\n}\n\nexport interface PositioningOptions {\n    /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n    attach?: HTMLElement | ElementRef | string;\n\n    /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n    target?: HTMLElement | ElementRef | string;\n\n    /**\n     * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n     * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n     * not yet supported:\n     * - vert-attachment can be any of 'top', 'middle', 'bottom'\n     * - horiz-attachment can be any of 'left', 'center', 'right'\n     */\n    placement?: string;\n\n    // 直接传入位置，不用根据 attachment target 计算，右击菜单使用\n    position?: {\n        top: number;\n        left: number;\n    };\n\n    /** A string of the form 'vert-offset horiz-offset'\n     * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n     */\n    offset?: number;\n\n    /** If true component will be attached to body */\n    appendToBody?: boolean;\n\n    /** If true component auto adapt top or bottom */\n    autoAdapt?: boolean;\n}\n\nexport const defaultPositioningOptions: PositioningOptions = {\n    offset: 10,\n    appendToBody: true,\n    placement: 'bottom center'\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyPositioningService {\n    constructor(private ngZone: NgZone) {}\n\n    static getHTMLElement(element: HTMLElement | ElementRef | string): HTMLElement {\n        // it means that we got a selector\n        if (typeof element === 'string') {\n            return document.querySelector(element) as HTMLElement;\n        }\n\n        if (element instanceof ElementRef) {\n            return element.nativeElement;\n        }\n\n        return element as HTMLElement;\n    }\n\n    private autoPosition(targetElPosition: ClientRect, hostElPosition: ClientRect, targetElement: HTMLElement, preferredPosition?: string) {\n        if (\n            (!preferredPosition || preferredPosition === 'right') &&\n            targetElPosition.left + hostElPosition.left - targetElement.offsetWidth < 0\n        ) {\n            return 'right';\n        } else if (\n            (!preferredPosition || preferredPosition === 'top') &&\n            targetElPosition.bottom + hostElPosition.bottom + targetElement.offsetHeight > window.innerHeight\n        ) {\n            return 'top';\n        } else if (\n            (!preferredPosition || preferredPosition === 'bottom') &&\n            targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n        ) {\n            return 'bottom';\n        } else if (\n            (!preferredPosition || preferredPosition === 'left') &&\n            targetElPosition.right + hostElPosition.right + targetElement.offsetWidth > window.innerWidth\n        ) {\n            return 'left';\n        }\n        return null;\n    }\n\n    private getAllStyles(element: HTMLElement) {\n        return window.getComputedStyle(element);\n    }\n\n    private getStyle(element: HTMLElement, prop: string): string {\n        return (this.getAllStyles(element) as any)[prop];\n    }\n\n    private isStaticPositioned(element: HTMLElement): boolean {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    }\n\n    private offsetParent(element: HTMLElement): HTMLElement {\n        let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n        }\n\n        return offsetParentEl || document.documentElement;\n    }\n\n    private calculateTopBottomPosition(\n        placementSecondary: string,\n        attachElPosition: ClientRect,\n        targetElPosition: ClientRect,\n        offset: number\n    ): ClientRect {\n        const documentClientHeight = document.documentElement.clientHeight;\n        if (placementSecondary === PlacementTypes.top) {\n            targetElPosition.top = attachElPosition.top;\n            targetElPosition.bottom = null;\n            // Top 对齐时，下面的内容超过了整个屏幕的高度, 为了可以看见全部内容，牺牲 Top 对齐\n            if (targetElPosition.top + targetElPosition.height > documentClientHeight) {\n                targetElPosition.top = documentClientHeight - targetElPosition.height;\n            }\n        } else if (placementSecondary === PlacementTypes.bottom) {\n            targetElPosition.bottom = documentClientHeight - attachElPosition.top - attachElPosition.height;\n            targetElPosition.top = null;\n            // Bottom 对齐时，上面的内容超过了整个屏幕的高度，为了可以看见全部内容，牺牲 Bottom 对齐\n            if (targetElPosition.bottom + targetElPosition.height > documentClientHeight) {\n                targetElPosition.bottom = documentClientHeight - targetElPosition.height;\n            }\n        } else {\n            targetElPosition.top = attachElPosition.top + attachElPosition.height / 2 - targetElPosition.height / 2;\n            // 顶部的内容被遮挡，牺牲居中，让顶部侧内容可见\n            if (targetElPosition.top < 0) {\n                targetElPosition.top = offset;\n            } else if (targetElPosition.top + targetElPosition.height > documentClientHeight) {\n                // 下面的内容被遮挡，牺牲居中，让下方的内容可见\n                targetElPosition.top = documentClientHeight - targetElPosition.height + offset;\n            }\n            targetElPosition.bottom = null;\n        }\n        return targetElPosition;\n    }\n\n    private calculateLeftRightPosition(\n        placementSecondary: string,\n        attachElPosition: ClientRect,\n        targetElPosition: ClientRect,\n        offset: number\n    ): ClientRect {\n        const documentClientWidth = document.documentElement.clientWidth;\n        if (placementSecondary === PlacementTypes.right) {\n            targetElPosition.right = document.documentElement.clientWidth - attachElPosition.left - attachElPosition.width;\n            targetElPosition.left = null;\n            // 右对齐时，左侧的内容超过了整个屏幕的宽度, 为了可以看见全部内容，牺牲右对齐\n            if (targetElPosition.right + targetElPosition.width > documentClientWidth) {\n                targetElPosition.right = documentClientWidth - targetElPosition.width - offset;\n            }\n        } else if (placementSecondary === PlacementTypes.left) {\n            targetElPosition.left = attachElPosition.left;\n            // 左对齐时，右侧的内容超过了整个屏幕的宽度, 为了可以看见全部内容，牺牲左对齐\n            if (targetElPosition.left + targetElPosition.width > documentClientWidth) {\n                targetElPosition.left = documentClientWidth - targetElPosition.width - offset;\n            }\n        } else {\n            targetElPosition.left = attachElPosition.left + attachElPosition.width / 2 - targetElPosition.width / 2;\n            // 左侧的内容被遮挡，牺牲居中，让左侧内容可见\n            if (targetElPosition.left < 0) {\n                targetElPosition.left = offset;\n            } else if (targetElPosition.left + targetElPosition.width > documentClientWidth) {\n                // 右侧的内容被遮挡，牺牲居中，让右侧内容可见\n                targetElPosition.left = documentClientWidth - targetElPosition.width - offset;\n            }\n        }\n        return targetElPosition;\n    }\n\n    private autoAdaptTopBottom(\n        placementPrimary: string,\n        hostElPosition: NewClientRect,\n        targetElPosition: NewClientRect,\n        offset: number,\n        autoAdapt = true\n    ) {\n        if (!autoAdapt) {\n            return;\n        }\n        const documentClientHeight = document.documentElement.clientHeight;\n        if (placementPrimary === 'top') {\n            // 如果 Top 空间不够，则自动适应 Bottom Top 和 Bottom 空间都不够，默认为可视区域Top\n            if (hostElPosition.originBottom - hostElPosition.height - targetElPosition.height < 0) {\n                if (documentClientHeight - hostElPosition.originBottom >= targetElPosition.height) {\n                    targetElPosition.bottom = targetElPosition.bottom - targetElPosition.height - hostElPosition.height - offset;\n                } else {\n                    targetElPosition.bottom = null;\n                    targetElPosition.top = hostElPosition.top - hostElPosition.originTop;\n                }\n            }\n        }\n        if (placementPrimary === 'bottom') {\n            // 如果 Bottom 空间不够，则自动适应 Top，如果 Bottom 和 Top 空间都不够，默认为可视区域Top\n            if (hostElPosition.originBottom + targetElPosition.height > documentClientHeight) {\n                const newTop = hostElPosition.top - targetElPosition.height - offset;\n                if (newTop > hostElPosition.top - hostElPosition.originTop) {\n                    targetElPosition.top = newTop;\n                } else {\n                    targetElPosition.top = hostElPosition.top - hostElPosition.originTop;\n                }\n            }\n        }\n    }\n\n    public position(element: HTMLElement, round = true): NewClientRect {\n        let elPosition: NewClientRect;\n        let parentOffset: NewClientRect = {\n            width: 0,\n            height: 0,\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0\n        };\n\n        if (this.getStyle(element, 'position') === 'fixed') {\n            const bcRect = element.getBoundingClientRect();\n            elPosition = {\n                width: bcRect.width,\n                height: bcRect.height,\n                top: bcRect.top,\n                bottom: bcRect.bottom,\n                left: bcRect.left,\n                right: bcRect.right,\n                originTop: bcRect.top,\n                originBottom: bcRect.bottom,\n                originLeft: bcRect.left,\n                originRight: bcRect.right\n            };\n        } else {\n            const offsetParentEl = this.offsetParent(element);\n\n            elPosition = this.offset(element, false);\n\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n\n        return elPosition;\n    }\n\n    public offset(element: HTMLElement, round = true): NewClientRect {\n        const elBcr = element.getBoundingClientRect();\n        const viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n\n        const elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left,\n            originTop: elBcr.top,\n            originBottom: elBcr.bottom,\n            originLeft: elBcr.left,\n            originRight: elBcr.right\n        };\n\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n\n        return elOffset;\n    }\n\n    /**\n     * 计算弹出层的位置\n     * @param hostElement 被追加的元素\n     * @param targetElement 弹出层内元素\n     * @param options 参数\n     */\n    public calculatePosition(hostElement: HTMLElement, targetElement: HTMLElement, options: PositioningOptions): ClientRect {\n        const { placement, appendToBody, offset, position, autoAdapt } = options;\n        let hostElPosition: NewClientRect = null;\n        // 外部传入已经算好的位置, 需要设置 hostElPosition 宽度和高度为 0，不计算位置，主要使用于右击弹出位置计算\n        if (position) {\n            hostElPosition = {\n                top: position.top || 0,\n                left: position.left || 0,\n                bottom: 0,\n                right: 0,\n                width: 0,\n                height: 0\n            };\n        } else {\n            hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        }\n\n        const targetElStyles = this.getAllStyles(targetElement);\n\n        const documentClientWidth = document.documentElement.clientWidth;\n        const documentClientHeight = document.documentElement.clientHeight;\n\n        let placementPrimary = placement.split(' ')[0] || 'top';\n        const placementSecondary = placement.split(' ')[1] || 'center';\n\n        const targetElBCR = targetElement.getBoundingClientRect();\n        const targetElPosition: NewClientRect = {\n            height: targetElBCR.height || targetElement.offsetHeight,\n            width: targetElBCR.width || targetElement.offsetWidth,\n            top: null,\n            bottom: null,\n            left: null,\n            right: null,\n            originTop: targetElBCR.top,\n            originBottom: targetElBCR.bottom,\n            originLeft: targetElBCR.left,\n            originRight: targetElBCR.right\n        };\n\n        if (placementPrimary === 'auto') {\n            let newPlacementPrimary = this.autoPosition(targetElPosition, hostElPosition, targetElement, placementSecondary);\n            if (!newPlacementPrimary) {\n                newPlacementPrimary = this.autoPosition(targetElPosition, hostElPosition, targetElement);\n            }\n            if (newPlacementPrimary) {\n                placementPrimary = newPlacementPrimary;\n            }\n            targetElement.classList.add(placementPrimary);\n        }\n\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.bottom = documentClientHeight - hostElPosition.top + offset;\n                targetElPosition.top = null;\n                this.autoAdaptTopBottom(placementPrimary, hostElPosition, targetElPosition, offset, autoAdapt);\n                this.calculateLeftRightPosition(placementSecondary, hostElPosition, targetElPosition, offset);\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height + offset;\n                this.autoAdaptTopBottom(placementPrimary, hostElPosition, targetElPosition, offset, autoAdapt);\n                this.calculateLeftRightPosition(placementSecondary, hostElPosition, targetElPosition, offset);\n                break;\n            case 'left':\n                targetElPosition.right = documentClientWidth - hostElPosition.left + offset;\n                targetElPosition.left = null;\n                this.calculateTopBottomPosition(placementSecondary, hostElPosition, targetElPosition, offset);\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width + offset;\n                targetElPosition.right = null;\n                this.calculateTopBottomPosition(placementSecondary, hostElPosition, targetElPosition, offset);\n                break;\n        }\n\n        // targetElPosition.top = Math.round(targetElPosition.top);\n        // targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        // targetElPosition.left = Math.round(targetElPosition.left);\n        // targetElPosition.right = Math.round(targetElPosition.right);\n\n        return targetElPosition;\n    }\n\n    setPosition(options: PositioningOptions): void {\n        const { attach, target } = options;\n        const attachElement = ThyPositioningService.getHTMLElement(attach);\n        const targetElement = ThyPositioningService.getHTMLElement(target);\n        setTimeout(() => {\n            this.ngZone.runOutsideAngular(() => {\n                const pos = this.calculatePosition(attachElement, targetElement, options);\n                if (isNumber(pos.top)) {\n                    targetElement.style.top = `${pos.top}px`;\n                } else if (isNumber(pos.bottom)) {\n                    targetElement.style.bottom = `${pos.bottom}px`;\n                }\n                if (isNumber(pos.left)) {\n                    targetElement.style.left = `${pos.left}px`;\n                } else if (isNumber(pos.right)) {\n                    targetElement.style.right = `${pos.right}px`;\n                }\n            });\n        });\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}