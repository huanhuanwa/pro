{"version":3,"file":"ngx-tethys-radio.js","sources":["../../src/radio/group/radio-group.component.ts","../../src/radio/radio.component.ts","../../src/radio/button/radio-button.component.ts","../../src/radio/module.ts","../../src/radio/ngx-tethys-radio.ts"],"sourcesContent":["import { Component, forwardRef, HostBinding, Input, ElementRef, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { ThyRadioComponent } from '../radio.component';\nimport { ThyRadioButtonComponent } from '../button/radio-button.component';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\n\nconst buttonGroupSizeMap = {\n    sm: ['btn-group-sm'],\n    lg: ['btn-group-lg']\n};\n\nconst radioGroupLayoutMap = {\n    flex: ['radio-group-layout-flex']\n};\n\n@Component({\n    selector: 'thy-radio-group',\n    templateUrl: './radio-group.component.html',\n    providers: [\n        UpdateHostClassService,\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyRadioGroupComponent),\n            multi: true\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyRadioGroupComponent implements ControlValueAccessor, OnInit {\n    @HostBinding('class.thy-radio-group') thyRadioGroup = true;\n\n    @HostBinding('class.btn-group') isButtonGroup = false;\n\n    @HostBinding('class.btn-group-outline-default')\n    isButtonGroupOutline = false;\n    // @HostBinding('class.radio-group-layout-flex')\n    // isFullLayout = false;\n\n    private _size: string;\n\n    private _layout: string;\n\n    @Input()\n    set thySize(size: string) {\n        this._size = size;\n    }\n\n    @Input()\n    set thyLayout(layout: string) {\n        this._layout = layout;\n    }\n\n    _innerValue: string | number;\n\n    radios: Array<ThyRadioComponent | ThyRadioButtonComponent> = [];\n\n    @Input()\n    set thyDisabled(value: boolean) {\n        this.setDisabledState(value);\n    }\n\n    onChange: (_: string) => void = () => null;\n    onTouched: () => void = () => null;\n\n    constructor(\n        private updateHostClassService: UpdateHostClassService,\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n\n    addRadio(radio: ThyRadioComponent | ThyRadioButtonComponent): void {\n        this.radios.push(radio);\n        radio.thyChecked = radio.thyValue === this._innerValue;\n    }\n\n    updateValue(value: string, emit: boolean): void {\n        this._innerValue = value;\n        this.radios.forEach(radio => {\n            radio.thyChecked = radio.thyValue === this._innerValue;\n        });\n        if (emit) {\n            this.onChange(value);\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    writeValue(value: any): void {\n        this.updateValue(value, false);\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.radios.forEach(radio => {\n            radio.setDisabledState(isDisabled);\n        });\n    }\n\n    setGroup() {\n        if (!this.isButtonGroup && !this.isButtonGroupOutline) {\n            this.isButtonGroup = true;\n            this.isButtonGroupOutline = true;\n        }\n    }\n\n    ngOnInit() {\n        this._setClasses();\n    }\n\n    private _setClasses() {\n        const classNames: string[] = [];\n        if (buttonGroupSizeMap[this._size]) {\n            classNames.push(buttonGroupSizeMap[this._size]);\n        }\n        if (radioGroupLayoutMap[this._layout]) {\n            classNames.push(radioGroupLayoutMap[this._layout]);\n        }\n        this.updateHostClassService.updateClass(classNames);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    OnInit,\n    HostBinding,\n    HostListener,\n    Input,\n    ElementRef,\n    Optional,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { ThyTranslate } from 'ngx-tethys/core';\nimport { ThyFormCheckBaseComponent } from 'ngx-tethys/shared';\nimport { ThyRadioGroupComponent } from './group/radio-group.component';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\n@Component({\n    selector: '[thy-radio],[thyRadio]',\n    templateUrl: './radio.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyRadioComponent),\n            multi: true\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyRadioComponent extends ThyFormCheckBaseComponent implements OnInit {\n    name: string;\n\n    @Input() thyValue: string;\n\n    set thyChecked(value: boolean) {\n        this.writeValue(coerceBooleanProperty(value));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    constructor(\n        public thyTranslate: ThyTranslate,\n        @Optional() public thyRadioGroupComponent: ThyRadioGroupComponent,\n        changeDetectorRef: ChangeDetectorRef\n    ) {\n        super(thyTranslate, changeDetectorRef);\n    }\n\n    ngOnInit() {\n        if (this.thyRadioGroupComponent) {\n            this.thyRadioGroupComponent.addRadio(this);\n        }\n    }\n\n    change() {\n        if (this.thyRadioGroupComponent) {\n            this.thyRadioGroupComponent.updateValue(this.thyValue, true);\n        } else {\n            this.updateValue(!this._innerValue);\n        }\n    }\n}\n","import { Component, forwardRef, OnInit, HostBinding, HostListener, Input, Optional, ChangeDetectorRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThyTranslate } from 'ngx-tethys/core';\nimport { ThyRadioGroupComponent } from './../group/radio-group.component';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\nimport { ThyRadioComponent } from '../radio.component';\n\n@Component({\n    selector: '[thy-radio-button],[thyRadioButton]',\n    templateUrl: './radio-button.component.html'\n})\nexport class ThyRadioButtonComponent extends ThyRadioComponent implements OnInit {\n    @HostBinding('class.btn') isButton = true;\n    @HostBinding('class.active') isActive = false;\n\n    name: string;\n\n    @Input() thyValue: string;\n\n    set thyChecked(value: boolean) {\n        this.isActive = !!value;\n        this.writeValue(coerceBooleanProperty(value));\n    }\n\n    constructor(\n        thyTranslate: ThyTranslate,\n        @Optional() thyRadioGroupComponent: ThyRadioGroupComponent,\n        changeDetectorRef: ChangeDetectorRef\n    ) {\n        super(thyTranslate, thyRadioGroupComponent, changeDetectorRef);\n    }\n\n    ngOnInit() {\n        this._isFormCheck = false;\n        if (this.thyRadioGroupComponent) {\n            this.thyRadioGroupComponent.addRadio(this);\n            this.thyRadioGroupComponent.setGroup();\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    click($event: MouseEvent) {\n        this.change();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ThyRadioComponent } from './radio.component';\nimport { ThyRadioButtonComponent } from './button/radio-button.component';\nimport { ThyRadioGroupComponent } from './group/radio-group.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [\n        ThyRadioComponent,\n        ThyRadioGroupComponent,\n        ThyRadioButtonComponent\n    ],\n    exports: [\n        ThyRadioComponent,\n        ThyRadioGroupComponent,\n        ThyRadioButtonComponent\n    ]\n})\nexport class ThyRadioModule {\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}