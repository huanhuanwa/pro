import { ThyIconModule } from 'ngx-tethys/icon';
import { ThySharedModule } from 'ngx-tethys/shared';
import { CommonModule } from '@angular/common';
import { Injectable, Component, ElementRef, Renderer2, NgZone, HostBinding, Input, ContentChild, NgModule } from '@angular/core';
import { ThyTranslate } from 'ngx-tethys/core';
import { coerceBooleanProperty } from 'ngx-tethys/util';

class ThyEmptyConfig {
    constructor() {
        this.noResultTranslateKey = 'common.tips.NO_RESULT';
        this.noResultWithTargetTranslateKey = 'common.tips.NO_RESULT_TARGET';
    }
}
ThyEmptyConfig.decorators = [
    { type: Injectable }
];

const sizeClassMap = {
    lg: ['thy-empty-state', 'thy-empty-state--lg'],
    md: ['thy-empty-state'],
    sm: ['thy-empty-state', 'thy-empty-state--sm']
};
const sizeMap = {
    lg: {
        height: 168,
        offsetTop: 30,
        defaultMarginTop: 120 // 不自动计算默认的 top 距离
    },
    md: {
        height: 118,
        offsetTop: 20,
        defaultMarginTop: 10
    },
    sm: {
        height: 78,
        offsetTop: 10,
        defaultMarginTop: 10
    }
};
class ThyEmptyComponent {
    constructor(thyTranslate, thyEmptyConfig, elementRef, renderer, ngZone) {
        this.thyTranslate = thyTranslate;
        this.thyEmptyConfig = thyEmptyConfig;
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.ngZone = ngZone;
        this.sizeClass = sizeClassMap['md'].join(' ');
    }
    set thySize(value) {
        const classList = sizeClassMap[value || 'md'];
        if (classList) {
            this.sizeClass = classList.join(' ');
        }
    }
    get displayText() {
        if (this.thyMessage) {
            return this.thyMessage;
        }
        else if (this.thyTranslationKey) {
            return this.thyTranslate.instant(this.thyTranslationKey, this.thyTranslationValues);
        }
        else if (this.thyEntityName) {
            return this.thyTranslate.instant(this.thyEmptyConfig.noResultWithTargetTranslateKey, {
                target: this.thyEntityName
            });
        }
        else if (this.thyEntityNameTranslateKey) {
            return this.thyTranslate.instant(this.thyEmptyConfig.noResultWithTargetTranslateKey, {
                target: this.thyTranslate.instant(this.thyEntityNameTranslateKey)
            });
        }
        else {
            return this.thyTranslate.instant(this.thyEmptyConfig.noResultTranslateKey);
        }
    }
    _calculatePosition() {
        const sizeOptions = sizeMap[this.thySize || 'md'];
        const topAuto = coerceBooleanProperty(this.thyTopAuto);
        let marginTop = null;
        if (topAuto) {
            // 选择参考父容器居中
            const containerElement = this.thyContainer ? this.thyContainer.nativeElement : this.elementRef.nativeElement.parentElement;
            // containerElement.height;
            let emptyStateHeight = this.elementRef.nativeElement.offsetHeight;
            // 高度没有自动计算出来使用默认值
            if (emptyStateHeight <= 10) {
                emptyStateHeight = sizeOptions.height;
            }
            marginTop = (containerElement.offsetHeight - emptyStateHeight) / 2 - sizeOptions.offsetTop;
            // marginTop = (containerElement.offsetHeight - emptyStateHeight) / 2;
            if (marginTop < 0) {
                marginTop = 0; // sizeOptions.defaultMarginTop;
            }
        }
        else {
            if (this.thyMarginTop) {
                marginTop = this.thyMarginTop;
            }
            else {
                marginTop = 0; // sizeOptions.defaultMarginTop;
            }
        }
        if (marginTop) {
            this.renderer.setStyle(this.elementRef.nativeElement, 'marginTop', marginTop + 'px');
        }
    }
    ngOnInit() { }
    ngAfterViewInit() {
        this.ngZone.runOutsideAngular(() => {
            setTimeout(() => {
                this._calculatePosition();
            }, 50);
        });
    }
}
ThyEmptyComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-empty',
                template: "<div class=\"thy-empty-icon\">\n  <img *ngIf=\"thyImageUrl; else icon\" [src]=\"thyImageUrl\" class=\"empty-img\" />\n  <ng-template #icon>\n    <thy-icon class=\"empty-icon\" [thyIconName]=\"thyIconName\" *ngIf=\"thyIconName; else svg\"></thy-icon>\n    <ng-template #svg>\n      <ng-container>\n        <svg\n          width=\"148px\"\n          height=\"134px\"\n          viewBox=\"0 0 148 134\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <defs>\n            <filter x=\"0.0%\" y=\"0.0%\" width=\"100.0%\" height=\"100.0%\" filterUnits=\"objectBoundingBox\" id=\"filter-1\">\n              <feGaussianBlur stdDeviation=\"0\" in=\"SourceGraphic\"></feGaussianBlur>\n            </filter>\n          </defs>\n          <g id=\"148x134\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <g id=\"\u7F16\u7EC4-6\" transform=\"translate(1.000000, 1.000000)\">\n              <ellipse\n                id=\"\u692D\u5706\u5F62\"\n                fill=\"#EDEEF2\"\n                opacity=\"0.3\"\n                filter=\"url(#filter-1)\"\n                cx=\"73.0800017\"\n                cy=\"115.920003\"\n                rx=\"73.0800017\"\n                ry=\"16.8000004\"\n              ></ellipse>\n              <g id=\"\u7F16\u7EC4-5\" transform=\"translate(15.120000, 0.000000)\">\n                <polygon\n                  id=\"\u77E9\u5F62\"\n                  fill=\"#E2E4E9\"\n                  points=\"19.2789848 49.5600011 99.1200023 48.7200011 117.600003 75.9297673 117.600003 92.313049 0 92.313049 0 75.0356267\"\n                ></polygon>\n                <path\n                  d=\"M23.5200005,0 L94.0800002,0 C97.7913538,2.06413823e-16 100.8,3.00864655 100.8,6.72000015 L100.8,99.1200023 L100.8,99.1200023 L16.8000004,99.1200023 L16.8000004,6.72000015 C16.8000004,3.00864655 19.8086469,1.56994302e-15 23.5200005,0 Z\"\n                  id=\"\u77E9\u5F62\"\n                  fill=\"#F9FAFB\"\n                ></path>\n                <path\n                  d=\"M30.9200007,12.4400003 L86.6800019,12.4400003 C88.5356787,12.4400003 90.040002,13.9443236 90.040002,15.8000004 L90.040002,42.000001 C90.040002,43.8556778 88.5356787,45.360001 86.6800019,45.360001 L30.9200007,45.360001 C29.0643239,45.360001 27.5600006,43.8556778 27.5600006,42.000001 L27.5600006,15.8000004 C27.5600006,13.9443236 29.0643239,12.4400003 30.9200007,12.4400003 Z\"\n                  id=\"\u77E9\u5F62\"\n                  fill=\"#E8EAEE\"\n                ></path>\n                <text\n                  id=\"&lt;/null&gt;\"\n                  font-family=\"PingFangSC-Medium, PingFang SC\"\n                  font-size=\"15.1200003\"\n                  font-weight=\"400\"\n                  fill=\"#BCBECD\"\n                >\n                  <tspan x=\"33.6000008\" y=\"32.8000004\">&lt;/null&gt;</tspan>\n                </text>\n                <rect id=\"\u77E9\u5F62\" fill=\"#E8EAEE\" x=\"27.5600006\" y=\"52.0800012\" width=\"61.4800014\" height=\"5.04000011\" rx=\"2.52000006\"></rect>\n                <rect\n                  id=\"\u77E9\u5F62\u5907\u4EFD\"\n                  fill=\"#E8EAEE\"\n                  x=\"27.5600006\"\n                  y=\"63.8400014\"\n                  width=\"61.4800014\"\n                  height=\"5.04000011\"\n                  rx=\"2.52000006\"\n                ></rect>\n                <path\n                  d=\"M0,75.6000017 L29.280235,75.6000017 C32.0637502,75.6000017 34.3202352,77.8564866 34.3202352,80.6400018 L34.3202352,86.2591426 C34.3202352,89.0426578 36.5767201,91.2991427 39.3602353,91.2991427 L78.4136737,91.2991427 C81.1971889,91.2991427 83.4536738,89.0426578 83.4536738,86.2591426 L83.4536738,80.6400018 C83.4536738,77.8564866 85.7101587,75.6000017 88.4936739,75.6000017 L117.600003,75.6000017 L117.600003,75.6000017 L117.600003,110.880003 C117.600003,115.519195 113.839194,119.280003 109.200002,119.280003 L8.40000019,119.280003 C3.76080819,119.280003 -6.53729019e-15,115.519195 0,110.880003 L0,75.6000017 L0,75.6000017 Z\"\n                  id=\"\u77E9\u5F62\"\n                  fill=\"#EDEFF2\"\n                ></path>\n              </g>\n            </g>\n          </g>\n        </svg>\n      </ng-container>\n    </ng-template>\n  </ng-template>\n</div>\n\n<div [ngClass]=\"{ 'thy-empty-text': !thyDescription, 'thy-empty-text-with-extra': thyDescription }\">\n  {{ displayText }}\n</div>\n\n<div class=\"thy-empty-description\" *ngIf=\"thyDescription\">\n  {{ thyDescription }}\n</div>\n\n<div class=\"thy-empty-extra\" *ngIf=\"extraTemplateRef\">\n  <ng-template [ngTemplateOutlet]=\"extraTemplateRef\"></ng-template>\n</div>\n"
            },] }
];
ThyEmptyComponent.ctorParameters = () => [
    { type: ThyTranslate },
    { type: ThyEmptyConfig },
    { type: ElementRef },
    { type: Renderer2 },
    { type: NgZone }
];
ThyEmptyComponent.propDecorators = {
    sizeClass: [{ type: HostBinding, args: ['class',] }],
    thyMessage: [{ type: Input }],
    thyTranslationKey: [{ type: Input }],
    thyTranslationValues: [{ type: Input }],
    thyEntityName: [{ type: Input }],
    thyEntityNameTranslateKey: [{ type: Input }],
    thyIconName: [{ type: Input }],
    thySize: [{ type: Input }],
    thyMarginTop: [{ type: Input }],
    thyTopAuto: [{ type: Input }],
    thyContainer: [{ type: Input }],
    thyImageUrl: [{ type: Input }],
    thyDescription: [{ type: Input }],
    extraTemplateRef: [{ type: ContentChild, args: ['extra',] }]
};

class ThyEmptyModule {
}
ThyEmptyModule.decorators = [
    { type: NgModule, args: [{
                declarations: [ThyEmptyComponent],
                imports: [CommonModule, ThySharedModule, ThyIconModule],
                exports: [ThyEmptyComponent],
                providers: [ThyEmptyConfig]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { ThyEmptyComponent, ThyEmptyConfig, ThyEmptyModule };
//# sourceMappingURL=ngx-tethys-empty.js.map
