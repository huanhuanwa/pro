{"version":3,"file":"ngx-tethys-uploader.js","sources":["../../src/uploader/constant.ts","../../src/uploader/util.ts","../../src/uploader/uploader.config.ts","../../src/uploader/file-select-base.ts","../../src/uploader/file-select.component.ts","../../src/uploader/file-drop.component.ts","../../src/uploader/uploader.service.ts","../../src/uploader/module.ts","../../src/uploader/ngx-tethys-uploader.ts"],"sourcesContent":["// Multipurpose Internet Mail Extensions\nexport const MIME_Map = {\n    '.3gp': 'video/3gpp',\n    '.apk': 'application/vnd.android.package-archive',\n    '.asf': 'video/x-ms-asf',\n    '.avi': 'video/x-msvideo',\n    '.bin': 'application/octet-stream',\n    '.bmp': 'image/bmp',\n    '.c': 'text/plain',\n    '.class': 'application/octet-stream',\n    '.conf': 'text/plain',\n    '.cpp': 'text/plain',\n    '.doc': 'application/msword',\n    '.docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    '.xls': 'application/vnd.ms-excel,.xls',\n    '.xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,.xlsx',\n    '.xlsb': 'application/vnd.ms-excel.sheet.binary.macroenabled.12',\n    '.xlsm': 'application/vnd.ms-excel.sheet.macroenabled.12',\n    '.xltx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    '.exe': 'application/octet-stream',\n    '.gif': 'image/gif',\n    '.gtar': 'application/x-gtar',\n    '.gz': 'application/x-gzip',\n    '.h': 'text/plain',\n    '.htm': 'text/html',\n    '.html': 'text/html',\n    '.jar': 'application/java-archive',\n    '.java': 'text/plain',\n    '.jpeg': 'image/jpeg',\n    '.jpg': 'image/jpeg',\n    '.js': 'application/x-javascript',\n    '.json': 'application/json',\n    '.log': 'text/plain',\n    '.m3u': 'audio/x-mpegurl',\n    '.m4a': 'audio/mp4a-latm',\n    '.m4b': 'audio/mp4a-latm',\n    '.m4p': 'audio/mp4a-latm',\n    '.m4u': 'video/vnd.mpegurl',\n    '.m4v': 'video/x-m4v',\n    '.mov': 'video/quicktime',\n    '.mp2': 'audio/x-mpeg',\n    '.mp3': 'audio/x-mpeg',\n    '.mp4': 'video/mp4',\n    '.mpc': 'application/vnd.mpohun.certificate',\n    '.mpe': 'video/mpeg',\n    '.mpeg': 'video/mpeg',\n    '.mpg': 'video/mpeg',\n    '.mpg4': 'video/mp4',\n    '.mpga': 'audio/mpeg',\n    '.msg': 'application/vnd.ms-outlook',\n    '.ogg': 'audio/ogg',\n    '.pdf': 'application/pdf',\n    '.png': 'image/png',\n    '.pps': 'application/vnd.ms-powerpoint',\n    '.ppt': 'application/vnd.ms-powerpoint',\n    '.pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    '.prop': 'text/plain',\n    '.rc': 'text/plain',\n    '.rmvb': 'audio/x-pn-realaudio',\n    '.rtf': 'application/rtf',\n    '.sh': 'text/plain',\n    '.tar': 'application/x-tar',\n    '.tgz': 'application/x-compressed',\n    '.txt': 'text/plain',\n    '.wav': 'audio/x-wav',\n    '.wma': 'audio/x-ms-wma',\n    '.wmv': 'audio/x-ms-wmv',\n    '.wps': 'application/vnd.ms-works',\n    '.xml': 'text/plain',\n    '.z': 'application/x-compress',\n    '.zip': 'application/x-zip-compressed',\n    '': '*/*'\n};\n","import { isString, isArray } from 'ngx-tethys/util';\nimport { MIME_Map } from './constant';\n\nexport function mimeTypeConvert(value: Array<string> | string): string {\n    let inputTypes: Array<string>;\n    const acceptTypes: Array<string> = [];\n    if (isArray(value)) {\n        inputTypes = value as Array<string>;\n    } else if (isString(value)) {\n        inputTypes = value.split(',');\n    } else {\n        inputTypes = [];\n    }\n\n    if (inputTypes.length > 0) {\n        inputTypes.forEach(n => {\n            if (MIME_Map[n]) {\n                acceptTypes.push(MIME_Map[n]);\n            } else {\n                acceptTypes.push(n);\n            }\n        });\n    }\n    return acceptTypes.join(',');\n}\n","import { InjectionToken } from '@angular/core';\nimport { ThyFileSizeExceedsContext, ThySizeExceedsHandler } from './types';\n\nexport interface ThyUploaderConfig {\n    sizeThreshold?: number;\n    sizeExceedsHandler?: ThySizeExceedsHandler;\n}\n\nexport const THY_UPLOADER_DEFAULT_OPTIONS = new InjectionToken<ThyUploaderConfig>('thy-uploader-default-options');\n\nexport const THY_UPLOADER_DEFAULT_OPTIONS_PROVIDER = {\n    provide: THY_UPLOADER_DEFAULT_OPTIONS,\n    useValue: {\n        sizeThreshold: 0,\n        sizeExceedsHandler: sizeExceedsHandler\n    }\n};\n\nexport function sizeExceedsHandler(event: ThyFileSizeExceedsContext) {\n    const exceedsFilesMessage = event.exceedsFiles\n        .map(item => {\n            return `file: ${item.name}, size: ${item.size}`;\n        })\n        .join(',');\n    console.error(`some files(${exceedsFilesMessage}) size exceeds threshold ${event.sizeThreshold}`);\n}\n","import { isNumber, coerceNumberValue, isUndefinedOrNull } from 'ngx-tethys/util';\nimport { Inject, ElementRef, Renderer2, NgZone, Input, EventEmitter, Component, Injectable } from '@angular/core';\nimport { THY_UPLOADER_DEFAULT_OPTIONS, ThyUploaderConfig } from './uploader.config';\nimport { ThyFileSelectEvent, ThySizeExceedsHandler } from './types';\n\n@Component({\n    template: ``\n})\nexport class FileSelectBaseComponent {\n    acceptType: string;\n    sizeThreshold: number;\n    sizeExceedsHandler: ThySizeExceedsHandler;\n\n    @Input() set thySizeThreshold(value: number) {\n        const sizeThreshold = coerceNumberValue(value);\n        if (isNumber(sizeThreshold)) {\n            this.sizeThreshold = sizeThreshold;\n        }\n    }\n\n    @Input() set thySizeExceedsHandler(value: ThySizeExceedsHandler) {\n        if (value) {\n            this.sizeExceedsHandler = value;\n        }\n    }\n\n    constructor(\n        public elementRef: ElementRef,\n        @Inject(THY_UPLOADER_DEFAULT_OPTIONS) public defaultConfig: ThyUploaderConfig,\n        public renderer?: Renderer2,\n        public ngZone?: NgZone\n    ) {\n        this.sizeThreshold = defaultConfig.sizeThreshold;\n        this.sizeExceedsHandler = defaultConfig.sizeExceedsHandler;\n    }\n\n    handleSizeExceeds(event: Event, files: File[]) {\n        let sizeExceedsFiles = files.filter(item => item.size / 1024 > this.sizeThreshold);\n        if (sizeExceedsFiles.length > 0) {\n            const sizeExceedContext = {\n                files: files,\n                exceedsFiles: sizeExceedsFiles,\n                nativeEvent: event,\n                sizeThreshold: this.sizeThreshold\n            };\n            return this.sizeExceedsHandler(sizeExceedContext);\n        }\n        return files;\n    }\n\n    selectFiles(event: Event, files: File[], eventEmitter: EventEmitter<ThyFileSelectEvent>) {\n        let successFiles: File[] | void = files;\n        if (this.sizeThreshold && this.sizeThreshold > 0) {\n            successFiles = this.handleSizeExceeds(event, files);\n        }\n        if (successFiles) {\n            eventEmitter.emit({\n                files: successFiles,\n                nativeEvent: event\n            });\n        }\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    Renderer2,\n    Inject,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnDestroy,\n    HostListener,\n    EventEmitter\n} from '@angular/core';\nimport { coerceBooleanProperty, isArray, isString } from 'ngx-tethys/util';\nimport { mimeTypeConvert } from './util';\nimport { ThySizeExceedsHandler } from './types';\nimport { THY_UPLOADER_DEFAULT_OPTIONS, ThyUploaderConfig } from './uploader.config';\nimport { FileSelectBaseComponent } from './file-select-base';\n\n@Component({\n    selector: '[thyFileSelect],thy-file-select',\n    templateUrl: './file-select.component.html'\n})\nexport class ThyFileSelectComponent extends FileSelectBaseComponent implements OnInit, OnDestroy {\n    private multiple: boolean;\n\n    private acceptFolder: boolean;\n\n    @Output() thyOnFileSelect = new EventEmitter();\n\n    @ViewChild('fileInput', { static: true }) fileInput: ElementRef<HTMLInputElement>;\n\n    @Input()\n    set thyMultiple(value: boolean) {\n        this.multiple = coerceBooleanProperty(value);\n        if (this.multiple) {\n            this.fileInput.nativeElement.setAttribute('multiple', '');\n        } else {\n            this.fileInput.nativeElement.removeAttribute('multiple');\n        }\n    }\n\n    @Input()\n    set thyAcceptFolder(value: boolean) {\n        this.acceptFolder = coerceBooleanProperty(value);\n        if (this.acceptFolder) {\n            this.fileInput.nativeElement.setAttribute('webkitdirectory', '');\n        } else {\n            this.fileInput.nativeElement.removeAttribute('webkitdirectory');\n        }\n    }\n\n    @Input()\n    set thyAcceptType(value: Array<string> | string) {\n        this.acceptType = mimeTypeConvert(value);\n    }\n\n    @Input() set thySizeThreshold(value: number) {\n        this.sizeThreshold = value;\n    }\n\n    @HostListener('click', ['$event'])\n    click($event: Event) {\n        this.fileInput.nativeElement.click();\n    }\n\n    constructor(public elementRef: ElementRef, @Inject(THY_UPLOADER_DEFAULT_OPTIONS) public defaultConfig: ThyUploaderConfig) {\n        super(elementRef, defaultConfig);\n    }\n\n    selectFile($event: Event) {\n        const files = this.fileInput.nativeElement.files;\n        if (files && files.length > 0) {\n            this.selectFiles($event, Array.from(files), this.thyOnFileSelect);\n            this.fileInput.nativeElement.value = '';\n        }\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {}\n}\n","import { isEmpty } from 'ngx-tethys/util';\nimport {\n    Component,\n    OnInit,\n    ElementRef,\n    Renderer2,\n    Output,\n    EventEmitter,\n    HostBinding,\n    Input,\n    NgZone,\n    OnDestroy,\n    Inject\n} from '@angular/core';\nimport { mimeTypeConvert } from './util';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil, filter, tap } from 'rxjs/operators';\nimport { THY_UPLOADER_DEFAULT_OPTIONS, ThyUploaderConfig } from './uploader.config';\nimport { FileSelectBaseComponent } from './file-select-base';\n\n@Component({\n    selector: '[thyFileDrop]',\n    template: `\n        <ng-content></ng-content>\n    `\n})\nexport class ThyFileDropComponent extends FileSelectBaseComponent implements OnInit, OnDestroy {\n    @HostBinding('class.drop-over')\n    @HostBinding('class.thy-drop-over')\n    isDragOver = false;\n    private dragOverCustomClass: string;\n\n    @Input() set thyFileDropClassName(value: string) {\n        this.dragOverCustomClass = value;\n    }\n\n    @Input()\n    set thyAcceptType(value: Array<string> | string) {\n        this.acceptType = mimeTypeConvert(value);\n    }\n\n    @Output() thyOnDrop = new EventEmitter();\n\n    private ngUnsubscribe$ = new Subject();\n\n    constructor(\n        public elementRef: ElementRef,\n        public renderer: Renderer2,\n        public ngZone: NgZone,\n        @Inject(THY_UPLOADER_DEFAULT_OPTIONS) public defaultConfig: ThyUploaderConfig\n    ) {\n        super(elementRef, defaultConfig);\n    }\n\n    public ngOnInit(): void {\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.elementRef.nativeElement, 'dragenter')\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    tap((event: DragEvent) => {\n                        event.preventDefault();\n                    }),\n                    filter(event => event.dataTransfer.items && event.dataTransfer.items.length > 0)\n                )\n                .subscribe((event: DragEvent) => {\n                    if (this.checkRejectFolderAndHtmlElement(event)) {\n                        const files = this.filterFilesOrItems(Array.from(event.dataTransfer.items));\n                        if (!isEmpty(files)) {\n                            this.ngZone.run(() => {\n                                this.isDragOver = true;\n                                this.toggleDropOverClassName();\n                            });\n                        }\n                    }\n                });\n\n            fromEvent(this.elementRef.nativeElement, 'dragover')\n                .pipe(takeUntil(this.ngUnsubscribe$))\n                .subscribe((event: any) => {\n                    event.preventDefault();\n                });\n\n            fromEvent(this.elementRef.nativeElement, 'dragleave')\n                .pipe(takeUntil(this.ngUnsubscribe$))\n                .subscribe((event: any) => {\n                    this.ngZone.run(() => {\n                        if (!this.elementRef.nativeElement.contains(event.fromElement)) {\n                            this.resetDragOver();\n                            this.toggleDropOverClassName();\n                        }\n                    });\n                });\n\n            fromEvent(this.elementRef.nativeElement, 'drop')\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    tap((event: DragEvent) => {\n                        event.preventDefault();\n                    })\n                )\n                .subscribe((event: DragEvent) => {\n                    this.ngZone.run(() => {\n                        if (this.checkRejectFolderAndHtmlElement(event)) {\n                            const files = this.filterFilesOrItems(event.dataTransfer ? Array.from(event.dataTransfer.files) : []);\n                            if (!isEmpty(files)) {\n                                this.selectFiles(event, Array.from(event.dataTransfer.files), this.thyOnDrop);\n                            }\n                        }\n                        this.resetDragOver();\n                        this.toggleDropOverClassName();\n                    });\n                });\n        });\n    }\n\n    private checkRejectFolderAndHtmlElement(event: DragEvent) {\n        // 排除文件夹和HTML元素拖拽\n        const items: DataTransferItemList | DataTransferItem[] = event.dataTransfer ? event.dataTransfer.items : [];\n        let res = true;\n        for (let index = 0; index < items.length; index++) {\n            const item = items[index];\n            const entry = this.getAsEntry(item);\n            if (item.kind !== 'file' || (entry && !entry.isFile)) {\n                res = false;\n                // console.error(`file extensions not support drag upload, kind: ${item.kind}, type: ${item.type}`);\n            }\n        }\n        return res;\n    }\n\n    private getAsEntry(item: DataTransferItem) {\n        let entry;\n        if (item['getAsEntry']) {\n            entry = item['getAsEntry']();\n        } else if (item.webkitGetAsEntry) {\n            entry = item.webkitGetAsEntry();\n        }\n        return entry;\n    }\n\n    private filterFilesOrItems(items: Array<DataTransferItem | File>): Array<DataTransferItem | File> {\n        if (this.acceptType && this.acceptType != '*/*') {\n            return items.filter(item => {\n                return this.acceptType.includes(item.type);\n            });\n        } else {\n            return Array.from(items);\n        }\n    }\n\n    private toggleDropOverClassName() {\n        if (this.dragOverCustomClass) {\n            if (this.isDragOver) {\n                this.renderer.addClass(this.elementRef.nativeElement, this.dragOverCustomClass);\n            } else {\n                this.renderer.removeClass(this.elementRef.nativeElement, this.dragOverCustomClass);\n            }\n        }\n    }\n\n    private setDragOverState(isDragOver: boolean) {\n        this.isDragOver = isDragOver;\n    }\n\n    private resetDragOver() {\n        this.setDragOverState(false);\n    }\n\n    public ngOnDestroy(): void {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscriber, from } from 'rxjs';\nimport { coerceArray } from 'ngx-tethys/util';\nimport { map, tap, mergeMap } from 'rxjs/operators';\nimport { HttpClient, HttpEvent, HttpEventType, XhrFactory } from '@angular/common/http';\n\nexport enum ThyUploadStatus {\n    pending = 'pending',\n    started = 'started',\n    uploading = 'uploading',\n    done = 'done'\n}\n\nexport interface ThyUploadResponse {\n    status: ThyUploadStatus;\n    uploadFile?: ThyUploadFile;\n}\n\nexport interface ThyUploadFile {\n    identifier?: string;\n    method: string;\n    url: string;\n    withCredentials?: boolean;\n    nativeFile: File;\n    fileField?: string;\n    fileName?: string;\n    headers?: {\n        [key: string]: string;\n    };\n    data?: {\n        [key: string]: string;\n    };\n\n    responseStatus?: any;\n    response?: any;\n    responseHeaders?: any;\n\n    progress?: {\n        status: ThyUploadStatus;\n        percentage: number;\n        speed?: number;\n        speedHuman?: string;\n        startTime: number | null;\n        endTime?: number | null;\n        estimatedTime?: number | null;\n        estimatedTimeHuman?: string | null;\n    };\n}\n\nexport interface ThyUploadFilesOptions {\n    onStarted?: (item: ThyUploadFile) => void;\n    onDone?: (item: ThyUploadFile) => void;\n}\n\n@Injectable()\nexport class ThyUploaderService {\n    constructor(private http: HttpClient, private xhrFactory: XhrFactory) {}\n\n    private secondsToHuman(sec: number): string {\n        return new Date(sec * 1000).toISOString().substr(11, 8);\n    }\n\n    private humanizeBytes(bytes: number): string {\n        if (bytes === 0) {\n            return '0 Byte';\n        }\n\n        const k = 1024;\n        const sizes: string[] = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n        const i: number = Math.floor(Math.log(bytes) / Math.log(k));\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n\n    private normalizeUploadFiles(uploadFiles: ThyUploadFile | ThyUploadFile[]) {\n        coerceArray(uploadFiles).forEach(uploadFile => {\n            if (!uploadFile.progress) {\n                uploadFile.progress = {\n                    status: ThyUploadStatus.pending,\n                    percentage: 0,\n                    startTime: 0\n                };\n            }\n        });\n    }\n\n    // private uploadByHttp(observer: Subscriber<ThyUploadResponse>, uploadFile: ThyUploadFile) {\n    //     const time: number = new Date().getTime();\n    //     let speed = 0;\n    //     let estimatedTime: number | null = null;\n\n    //     uploadFile.progress = {\n    //         status: ThyUploadStatus.started,\n    //         percentage: 0,\n    //         startTime: time\n    //     };\n\n    //     const formData = new FormData();\n    //     Object.keys(uploadFile.data || {}).forEach(key => formData.append(key, uploadFile.data[key]));\n    //     formData.append(uploadFile.fileField || 'file', uploadFile.nativeFile, uploadFile.fileName);\n    //     const headers = {\n    //         'Content-Type': 'multipart/form-data'\n    //     };\n    //     Object.keys(uploadFile.headers || {}).forEach(key => (headers[key] = uploadFile.headers[key]));\n\n    //     const subscription = this.http\n    //         .post(uploadFile.url, formData, {\n    //             headers: headers,\n    //             reportProgress: true,\n    //             observe: 'events',\n    //             withCredentials: uploadFile.withCredentials ? true : false\n    //         })\n    //         .subscribe(\n    //             (event: HttpEvent<any>) => {\n    //                 console.log('Subscribe data', event);\n    //                 switch (event.type) {\n    //                     case HttpEventType.Sent:\n    //                         observer.next({ status: ThyUploadStatus.started, uploadFile: uploadFile });\n    //                         break;\n    //                     case HttpEventType.UploadProgress:\n    //                         let percentage = Math.round((event.loaded * 100) / event.total);\n    //                         if (percentage === 100) {\n    //                             percentage = 99;\n    //                         }\n    //                         const diff = new Date().getTime() - time;\n    //                         speed = Math.round((event.loaded / diff) * 1000);\n    //                         const progressStartTime = (uploadFile.progress && uploadFile.progress.startTime) || new Date().getTime();\n    //                         estimatedTime = Math.ceil((event.total - event.loaded) / speed);\n\n    //                         uploadFile.progress.status = ThyUploadStatus.uploading;\n    //                         uploadFile.progress.percentage = percentage;\n    //                         uploadFile.progress.speed = speed;\n    //                         uploadFile.progress.speedHuman = `${this.humanizeBytes(speed)}/s`;\n    //                         uploadFile.progress.startTime = progressStartTime;\n    //                         uploadFile.progress.estimatedTime = estimatedTime;\n    //                         uploadFile.progress.estimatedTimeHuman = this.secondsToHuman(estimatedTime);\n\n    //                         observer.next({ status: ThyUploadStatus.uploading, uploadFile: uploadFile });\n    //                         break;\n    //                     case HttpEventType.Response:\n    //                         uploadFile.response = event.body;\n    //                         observer.next({ status: ThyUploadStatus.done, uploadFile: uploadFile });\n    //                         break;\n    //                     default:\n    //                         throw new Error(`Unhandled event: ${event.type}`);\n    //                 }\n    //             },\n    //             error => {\n    //                 observer.error(error);\n    //             }\n    //         );\n    //     return subscription;\n    // }\n\n    private uploadByXhr(observer: Subscriber<ThyUploadResponse>, uploadFile: ThyUploadFile) {\n        const xhr = this.xhrFactory.build();\n        const time: number = new Date().getTime();\n        let speed = 0;\n        let estimatedTime: number | null = null;\n\n        uploadFile.progress = {\n            status: ThyUploadStatus.started,\n            percentage: 0,\n            startTime: time\n        };\n\n        xhr.upload.addEventListener(\n            'progress',\n            (event: ProgressEvent) => {\n                if (event.lengthComputable) {\n                    let percentage = Math.round((event.loaded * 100) / event.total);\n                    if (percentage === 100) {\n                        percentage = 99;\n                    }\n                    const diff = new Date().getTime() - time;\n                    speed = Math.round((event.loaded / diff) * 1000);\n                    const progressStartTime = (uploadFile.progress && uploadFile.progress.startTime) || new Date().getTime();\n                    estimatedTime = Math.ceil((event.total - event.loaded) / speed);\n\n                    uploadFile.progress.status = ThyUploadStatus.uploading;\n                    uploadFile.progress.percentage = percentage;\n                    uploadFile.progress.speed = speed;\n                    uploadFile.progress.speedHuman = `${this.humanizeBytes(speed)}/s`;\n                    uploadFile.progress.startTime = progressStartTime;\n                    uploadFile.progress.estimatedTime = estimatedTime;\n                    uploadFile.progress.estimatedTimeHuman = this.secondsToHuman(estimatedTime);\n\n                    observer.next({ status: ThyUploadStatus.uploading, uploadFile: uploadFile });\n                }\n            },\n            false\n        );\n\n        xhr.upload.addEventListener('error', (e: Event) => {\n            observer.error(e);\n            observer.complete();\n        });\n\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === XMLHttpRequest.DONE) {\n                const speedTime = (new Date().getTime() - uploadFile.progress.startTime) * 1000;\n                const speedAverage = Math.round(uploadFile.nativeFile.size / speedTime);\n\n                uploadFile.progress.status = ThyUploadStatus.done;\n                uploadFile.progress.percentage = 100;\n                uploadFile.progress.speed = speedAverage;\n                uploadFile.progress.speedHuman = `${this.humanizeBytes(speed)}/s`;\n                uploadFile.progress.estimatedTime = estimatedTime;\n                uploadFile.progress.estimatedTimeHuman = this.secondsToHuman(estimatedTime || 0);\n\n                uploadFile.responseStatus = xhr.status;\n\n                try {\n                    uploadFile.response = JSON.parse(xhr.response);\n                } catch (e) {\n                    uploadFile.response = xhr.response;\n                }\n\n                // file.responseHeaders = this.parseResponseHeaders(xhr.getAllResponseHeaders());\n\n                observer.next({ status: ThyUploadStatus.done, uploadFile: uploadFile });\n\n                observer.complete();\n            }\n        };\n\n        xhr.open(uploadFile.method, uploadFile.url, true);\n        xhr.withCredentials = uploadFile.withCredentials ? true : false;\n\n        try {\n            const formData = new FormData();\n\n            Object.keys(uploadFile.data || {}).forEach(key => formData.append(key, uploadFile.data[key]));\n            Object.keys(uploadFile.headers || {}).forEach(key => xhr.setRequestHeader(key, uploadFile.headers[key]));\n\n            formData.append(uploadFile.fileField || 'file', uploadFile.nativeFile, uploadFile.fileName);\n\n            observer.next({ status: ThyUploadStatus.started, uploadFile: uploadFile });\n            xhr.send(formData);\n        } catch (error) {\n            observer.error(error);\n            observer.complete();\n        }\n        return xhr;\n    }\n\n    private ensureFileName(uploadFile: ThyUploadFile) {\n        uploadFile.fileName = uploadFile.fileName || uploadFile.nativeFile.name;\n    }\n\n    /**\n     * 上传单个文件\n     * @param uploadFile 上传文件对象\n     */\n    upload(uploadFile: ThyUploadFile): Observable<ThyUploadResponse> {\n        this.ensureFileName(uploadFile);\n\n        return new Observable(observer => {\n            const xhr = this.uploadByXhr(observer, uploadFile);\n            return () => {\n                xhr.abort();\n            };\n        });\n    }\n\n    /**\n     * 并发上传多个文件\n     * @param uploadFiles 上传文件列表\n     * @param concurrent 并发上传数, 默认 5\n     * @param options onStared, onDone 回调\n     */\n    uploadBulk(uploadFiles: ThyUploadFile[], concurrent = 5, options?: ThyUploadFilesOptions) {\n        this.normalizeUploadFiles(uploadFiles);\n        const result = from(uploadFiles).pipe(\n            mergeMap(uploadFile => {\n                return this.upload(uploadFile).pipe(\n                    tap(uploadResponse => {\n                        if (options && options.onStarted && uploadResponse.status === ThyUploadStatus.started) {\n                            options.onStarted(uploadResponse.uploadFile);\n                        }\n                        if (options && options.onDone && uploadResponse.status === ThyUploadStatus.done) {\n                            options.onDone(uploadResponse.uploadFile);\n                        }\n                    })\n                );\n            }, concurrent),\n            map(response => {\n                return response;\n            })\n        );\n\n        return result;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ThyFileSelectComponent } from './file-select.component';\nimport { ThyFileDropComponent } from './file-drop.component';\nimport { ThyUploaderService } from './uploader.service';\nimport { THY_UPLOADER_DEFAULT_OPTIONS_PROVIDER } from './uploader.config';\nimport { FileSelectBaseComponent } from './file-select-base';\n// import { ThyDirectiveModule } from 'ngx-tethys/directive';\n\n@NgModule({\n    declarations: [ThyFileSelectComponent, ThyFileDropComponent, FileSelectBaseComponent],\n    imports: [CommonModule, HttpClientModule],\n    entryComponents: [ThyFileDropComponent],\n    providers: [ThyUploaderService, THY_UPLOADER_DEFAULT_OPTIONS_PROVIDER],\n    exports: [ThyFileSelectComponent, ThyFileDropComponent]\n})\nexport class ThyUploaderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FileSelectBaseComponent as ɵa} from './file-select-base';"],"names":[],"mappings":"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"}