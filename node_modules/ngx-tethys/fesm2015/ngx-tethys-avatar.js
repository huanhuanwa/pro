import { Injectable, EventEmitter, Component, ChangeDetectionStrategy, ElementRef, HostBinding, Output, Input, Pipe, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { coerceBooleanProperty, isString } from 'ngx-tethys/util';
import { UpdateHostClassService } from 'ngx-tethys/core';
import { DomSanitizer } from '@angular/platform-browser';
import { ThyIconModule } from 'ngx-tethys/icon';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/core';
import * as ɵngcc2 from '@angular/platform-browser';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from 'ngx-tethys/icon';

function ThyAvatarComponent_img_0_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "img", 5);
    ɵngcc0.ɵɵlistener("error", function ThyAvatarComponent_img_0_Template_img_error_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.avatarImgError($event); });
    ɵngcc0.ɵɵpipe(1, "thyAvatarSrc");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("alt", ctx_r0.avatarName || "");
    ɵngcc0.ɵɵproperty("src", ɵngcc0.ɵɵpipeBind2(1, 3, ctx_r0._src, ctx_r0._size), ɵngcc0.ɵɵsanitizeUrl)("ngClass", ctx_r0.thyImgClass);
} }
function ThyAvatarComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 6);
    ɵngcc0.ɵɵpipe(1, "avatarBgColor");
    ɵngcc0.ɵɵelementStart(2, "div");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "avatarShortName");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r1.avatarName));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 4, ctx_r1.avatarName));
} }
function ThyAvatarComponent_ng_container_2_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r7.avatarName);
} }
function ThyAvatarComponent_ng_container_2_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 10);
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("innerHtml", ctx_r8.avatarNameSafeHtml, ɵngcc0.ɵɵsanitizeHtml);
} }
function ThyAvatarComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ThyAvatarComponent_ng_container_2_div_1_Template, 2, 1, "div", 7);
    ɵngcc0.ɵɵtemplate(2, ThyAvatarComponent_ng_container_2_div_2_Template, 1, 1, "div", 8);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.avatarNameSafeHtml);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.avatarNameSafeHtml);
} }
function ThyAvatarComponent_a_3_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 11);
    ɵngcc0.ɵɵlistener("click", function ThyAvatarComponent_a_3_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.remove($event); });
    ɵngcc0.ɵɵelement(1, "thy-icon", 12);
    ɵngcc0.ɵɵelementEnd();
} }
function ThyAvatarComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelement(1, "thy-icon", 14);
    ɵngcc0.ɵɵelementEnd();
} }
class ThyAvatarService {
    constructor() {
        this.ignoreAvatarSrcPaths = [`default.png`];
    }
}
class ThyDefaultAvatarService extends ThyAvatarService {
    avatarSrcTransform(src, size) {
        return src;
    }
    nameTransform(name) {
        return name;
    }
}
ThyDefaultAvatarService.ɵfac = function ThyDefaultAvatarService_Factory(t) { return ɵThyDefaultAvatarService_BaseFactory(t || ThyDefaultAvatarService); };
ThyDefaultAvatarService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ThyDefaultAvatarService, factory: ThyDefaultAvatarService.ɵfac });
const ɵThyDefaultAvatarService_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ThyDefaultAvatarService);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDefaultAvatarService, [{
        type: Injectable
    }], null, null); })();

const sizeArray = [22, 24, 28, 32, 36, 48, 68, 110, 160];
const DEFAULT_SIZE = 36;
const thyAvatarSizeMap = {
    xxs: 22,
    xs: 24,
    sm: 32,
    md: 36,
    lg: 48
};
class ThyAvatarComponent {
    constructor(updateHostClassService, elementRef, thyAvatarService, domSanitizer) {
        this.updateHostClassService = updateHostClassService;
        this.elementRef = elementRef;
        this.thyAvatarService = thyAvatarService;
        this.domSanitizer = domSanitizer;
        this._showRemove = false;
        this._isAvatar = true;
        this.thyOnRemove = new EventEmitter();
        this.thyError = new EventEmitter();
        updateHostClassService.initializeElement(elementRef.nativeElement);
    }
    set thySrc(value) {
        this._setAvatarSrc(value);
    }
    set thyName(value) {
        // this._name = value;
        this._setAvatarName(value);
    }
    set thySize(value) {
        if (thyAvatarSizeMap[value]) {
            this._setAvatarSize(thyAvatarSizeMap[value]);
        }
        else {
            this._setAvatarSize(value * 1);
        }
    }
    set thyShowRemove(value) {
        this._showRemove = coerceBooleanProperty(value);
    }
    _setAvatarSize(size) {
        if (sizeArray.indexOf(size) > -1) {
            this._size = size;
        }
        else {
            this._size = this.findClosestSize(sizeArray, size);
        }
    }
    findClosestSize(sizes, value) {
        let left = 0, right = sizes.length - 1, middle, result;
        while (left <= right) {
            middle = Math.floor((left + right) / 2);
            if (right - left <= 1) {
                result = sizes[right];
                break;
            }
            result = sizes[middle];
            if (result === value) {
                return value;
            }
            else if (result > value) {
                right = middle;
            }
            else {
                left = middle;
            }
        }
        return value - sizes[left] < sizes[right] - value ? sizes[left] : sizes[right];
    }
    _setAvatarSrc(src) {
        if (src && this.thyAvatarService.ignoreAvatarSrcPaths.indexOf(src) < 0) {
            this._src = src;
        }
        else {
            this._src = null;
        }
    }
    _setAvatarName(value) {
        const name = this.thyAvatarService.nameTransform(value);
        if (isString(name)) {
            this.avatarName = name;
        }
        else {
            this.avatarName = value;
            this.avatarNameSafeHtml = name;
        }
    }
    ngOnInit() {
        if (!this._size) {
            this._setAvatarSize(DEFAULT_SIZE);
        }
        this.updateHostClassService.updateClass([`thy-avatar-${this._size}`]);
    }
    remove($event) {
        this.thyOnRemove.emit($event);
    }
    avatarImgError($event) {
        this._setAvatarSrc(null);
        this.thyError.emit($event);
    }
}
ThyAvatarComponent.ɵfac = function ThyAvatarComponent_Factory(t) { return new (t || ThyAvatarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UpdateHostClassService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ThyAvatarService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DomSanitizer)); };
ThyAvatarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyAvatarComponent, selectors: [["thy-avatar"]], hostVars: 2, hostBindings: function ThyAvatarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-avatar", ctx._isAvatar);
    } }, inputs: { thySrc: "thySrc", thyName: "thyName", thySize: "thySize", thyShowRemove: "thyShowRemove", thyShowName: "thyShowName", thyImgClass: "thyImgClass", thyDisabled: "thyDisabled" }, outputs: { thyOnRemove: "thyOnRemove", thyError: "thyError" }, features: [ɵngcc0.ɵɵProvidersFeature([UpdateHostClassService])], decls: 5, vars: 5, consts: [["class", "avatar-avatar", 3, "src", "ngClass", "alt", "error", 4, "ngIf"], ["class", "avatar-default", 3, "ngStyle", 4, "ngIf"], [4, "ngIf"], ["href", "javascript:;", "class", "remove-link avatar-remove", 3, "click", 4, "ngIf"], ["class", "thy-avatar-disabled", 4, "ngIf"], [1, "avatar-avatar", 3, "src", "ngClass", "alt", "error"], [1, "avatar-default", 3, "ngStyle"], ["class", "avatar-name", 4, "ngIf"], ["class", "avatar-name", 3, "innerHtml", 4, "ngIf"], [1, "avatar-name"], [1, "avatar-name", 3, "innerHtml"], ["href", "javascript:;", 1, "remove-link", "avatar-remove", 3, "click"], ["thyIconName", "close-circle-bold-fill", 1, "remove-link-icon"], [1, "thy-avatar-disabled"], ["thyIconName", "ban", 1, "thy-avatar-disabled-icon"]], template: function ThyAvatarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ThyAvatarComponent_img_0_Template, 2, 6, "img", 0);
        ɵngcc0.ɵɵtemplate(1, ThyAvatarComponent_span_1_Template, 5, 6, "span", 1);
        ɵngcc0.ɵɵtemplate(2, ThyAvatarComponent_ng_container_2_Template, 3, 2, "ng-container", 2);
        ɵngcc0.ɵɵtemplate(3, ThyAvatarComponent_a_3_Template, 2, 0, "a", 3);
        ɵngcc0.ɵɵtemplate(4, ThyAvatarComponent_div_4_Template, 2, 0, "div", 4);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx._src);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx._src);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.thyShowName);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx._showRemove);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.thyDisabled);
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc3.NgClass, ɵngcc3.NgStyle, ɵngcc4.ThyIconComponent]; }, pipes: function () { return [AvatarSrcPipe, AvatarBgColorPipe, AvatarShortNamePipe]; }, encapsulation: 2, changeDetection: 0 });
ThyAvatarComponent.ctorParameters = () => [
    { type: UpdateHostClassService },
    { type: ElementRef },
    { type: ThyAvatarService },
    { type: DomSanitizer }
];
ThyAvatarComponent.propDecorators = {
    _isAvatar: [{ type: HostBinding, args: ['class.thy-avatar',] }],
    thyOnRemove: [{ type: Output }],
    thyError: [{ type: Output }],
    thyShowName: [{ type: Input }],
    thySrc: [{ type: Input }],
    thyName: [{ type: Input }],
    thySize: [{ type: Input }],
    thyShowRemove: [{ type: Input }],
    thyImgClass: [{ type: Input }],
    thyDisabled: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyAvatarComponent, [{
        type: Component,
        args: [{
                selector: 'thy-avatar',
                template: "<img\n  *ngIf=\"_src\"\n  [src]=\"_src | thyAvatarSrc: _size\"\n  class=\"avatar-avatar\"\n  [ngClass]=\"thyImgClass\"\n  alt=\"{{ avatarName || '' }}\"\n  (error)=\"avatarImgError($event)\"\n/>\n<span *ngIf=\"!_src\" class=\"avatar-default\" [ngStyle]=\"avatarName | avatarBgColor\">\n  <div>{{ avatarName | avatarShortName }}</div>\n</span>\n<ng-container *ngIf=\"thyShowName\">\n  <div *ngIf=\"!avatarNameSafeHtml\" class=\"avatar-name\">{{ avatarName }}</div>\n  <div *ngIf=\"avatarNameSafeHtml\" class=\"avatar-name\" [innerHtml]=\"avatarNameSafeHtml\"></div>\n</ng-container>\n<a *ngIf=\"_showRemove\" (click)=\"remove($event)\" href=\"javascript:;\" class=\"remove-link avatar-remove\"\n  ><thy-icon class=\"remove-link-icon\" thyIconName=\"close-circle-bold-fill\"></thy-icon\n></a>\n<div *ngIf=\"thyDisabled\" class=\"thy-avatar-disabled\">\n  <thy-icon class=\"thy-avatar-disabled-icon\" thyIconName=\"ban\"></thy-icon>\n</div>\n",
                providers: [UpdateHostClassService],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc1.UpdateHostClassService }, { type: ɵngcc0.ElementRef }, { type: ThyAvatarService }, { type: ɵngcc2.DomSanitizer }]; }, { _isAvatar: [{
            type: HostBinding,
            args: ['class.thy-avatar']
        }], thyOnRemove: [{
            type: Output
        }], thyError: [{
            type: Output
        }], thySrc: [{
            type: Input
        }], thyName: [{
            type: Input
        }], thySize: [{
            type: Input
        }], thyShowRemove: [{
            type: Input
        }], thyShowName: [{
            type: Input
        }], thyImgClass: [{
            type: Input
        }], thyDisabled: [{
            type: Input
        }] }); })();

class AvatarShortNamePipe {
    transform(name) {
        if (!name) {
            return;
        }
        name = name.trim();
        if (/^[\u4e00-\u9fa5]+$/.test(name)) {
            if (name.length > 2) {
                return name.substr(name.length - 2, 2);
            }
        }
        if (/^[a-zA-Z\/ ]+$/.test(name)) {
            if (name.indexOf(' ') > 0) {
                const ens = name.split(' ');
                return (ens[0].substr(0, 1) + ens[1].substr(0, 1)).toUpperCase();
            }
        }
        if (name.length > 2) {
            return name.substr(0, 2).toUpperCase();
        }
        return name.toUpperCase();
    }
}
AvatarShortNamePipe.ɵfac = function AvatarShortNamePipe_Factory(t) { return new (t || AvatarShortNamePipe)(); };
AvatarShortNamePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "avatarShortName", type: AvatarShortNamePipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvatarShortNamePipe, [{
        type: Pipe,
        args: [{ name: 'avatarShortName' }]
    }], null, null); })();
class AvatarBgColorPipe {
    transform(name) {
        if (!name) {
            return;
        }
        const colors = [
            '#56abfb',
            '#5dcfff',
            '#84e17e',
            '#73d897',
            '#ff9f73',
            '#fa8888',
            '#fb7fb7',
            '#9a7ef4',
            '#868af6'
        ];
        const nameArray = name.split('');
        const code = name && name.length > 0
            ? nameArray.reduce(function (result, item) {
                result.value += item.charCodeAt(0);
                return result;
            }, { value: 0 }).value
            : 0;
        return {
            'background-color': colors[code % 9]
        };
    }
}
AvatarBgColorPipe.ɵfac = function AvatarBgColorPipe_Factory(t) { return new (t || AvatarBgColorPipe)(); };
AvatarBgColorPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "avatarBgColor", type: AvatarBgColorPipe, pure: true });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvatarBgColorPipe, [{
        type: Pipe,
        args: [{ name: 'avatarBgColor' }]
    }], null, null); })();
class AvatarSrcPipe {
    constructor(thyAvatarService) {
        this.thyAvatarService = thyAvatarService;
    }
    transform(src, size) {
        return this.thyAvatarService.avatarSrcTransform(src, size);
    }
}
AvatarSrcPipe.ɵfac = function AvatarSrcPipe_Factory(t) { return new (t || AvatarSrcPipe)(ɵngcc0.ɵɵdirectiveInject(ThyAvatarService)); };
AvatarSrcPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "thyAvatarSrc", type: AvatarSrcPipe, pure: true });
AvatarSrcPipe.ctorParameters = () => [
    { type: ThyAvatarService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AvatarSrcPipe, [{
        type: Pipe,
        args: [{ name: 'thyAvatarSrc' }]
    }], function () { return [{ type: ThyAvatarService }]; }, null); })();
const AvatarPipes = [AvatarShortNamePipe, AvatarBgColorPipe, AvatarSrcPipe];

class ThyAvatarModule {
}
ThyAvatarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyAvatarModule });
ThyAvatarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyAvatarModule_Factory(t) { return new (t || ThyAvatarModule)(); }, providers: [
        {
            provide: ThyAvatarService,
            useClass: ThyDefaultAvatarService
        }
    ], imports: [[CommonModule, ThyIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyAvatarModule, { declarations: function () { return [ThyAvatarComponent, AvatarShortNamePipe, AvatarBgColorPipe, AvatarSrcPipe]; }, imports: function () { return [CommonModule, ThyIconModule]; }, exports: function () { return [ThyAvatarComponent, AvatarShortNamePipe, AvatarBgColorPipe, AvatarSrcPipe]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyAvatarModule, [{
        type: NgModule,
        args: [{
                declarations: [ThyAvatarComponent, AvatarPipes],
                imports: [CommonModule, ThyIconModule],
                providers: [
                    {
                        provide: ThyAvatarService,
                        useClass: ThyDefaultAvatarService
                    }
                ],
                exports: [ThyAvatarComponent, AvatarPipes]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { AvatarBgColorPipe, AvatarPipes, AvatarShortNamePipe, AvatarSrcPipe, ThyAvatarComponent, ThyAvatarModule, ThyAvatarService, ThyDefaultAvatarService, thyAvatarSizeMap };

//# sourceMappingURL=ngx-tethys-avatar.js.map