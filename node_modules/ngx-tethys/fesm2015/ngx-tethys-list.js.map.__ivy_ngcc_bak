{"version":3,"file":"ngx-tethys-list.js","sources":["../../src/list/list.component.ts","../../src/list/list-item.component.ts","../../src/list/selection/selection-list.ts","../../src/list/list-item-meta.component.ts","../../src/list/list.module.ts","../../src/list/ngx-tethys-list.ts"],"sourcesContent":["import { Component, Input, HostBinding } from '@angular/core';\nimport { InputBoolean } from 'ngx-tethys/core';\n\n@Component({\n    selector: 'thy-list',\n    template: '<ng-content></ng-content>'\n})\nexport class ThyListComponent {\n    @Input()\n    @InputBoolean()\n    set thyDivided(value: boolean) {\n        this._isDivided = value;\n    }\n\n    @HostBinding(`class.thy-list-divided`) _isDivided = false;\n\n    @HostBinding(`class.thy-list`) _isList = true;\n\n    constructor() {}\n}\n","import { Component, Input, HostBinding } from '@angular/core';\n\n@Component({\n    selector: 'thy-list-item,[thy-list-item]',\n    template: '<ng-content></ng-content>'\n})\nexport class ThyListItemComponent {\n    @HostBinding(`class.thy-list-item`) _isListItem = true;\n\n    constructor() {}\n}\n","import { ScrollToService, UpdateHostClassService } from 'ngx-tethys/core';\nimport { IThyListOptionParentComponent, THY_LIST_OPTION_PARENT_COMPONENT, ThyListLayout, ThyListOptionComponent } from 'ngx-tethys/shared';\nimport { coerceBooleanProperty, dom, helpers, keycodes } from 'ngx-tethys/util';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThySelectionListChange } from './selection.interface';\n\nexport type ThyListSize = 'sm' | 'md' | 'lg';\n\nconst listSizesMap = {\n    sm: 'thy-list-sm'\n};\n\n@Component({\n    selector: 'thy-selection-list,[thy-selection-list]',\n    template: '<ng-content></ng-content>',\n    providers: [\n        UpdateHostClassService,\n        {\n            provide: THY_LIST_OPTION_PARENT_COMPONENT,\n            useExisting: ThySelectionListComponent\n        },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThySelectionListComponent),\n            multi: true\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThySelectionListComponent implements OnInit, OnDestroy, AfterContentInit, IThyListOptionParentComponent, ControlValueAccessor {\n    private _keyManager: ActiveDescendantKeyManager<ThyListOptionComponent>;\n\n    private _selectionChangesUnsubscribe$ = Subscription.EMPTY;\n\n    private _bindKeyEventUnsubscribe: () => void;\n\n    private _modelValues: any[];\n\n    /** The currently selected options. */\n    selectionModel: SelectionModel<any>;\n\n    disabled: boolean;\n\n    layout: ThyListLayout = 'list';\n\n    @HostBinding(`class.thy-list`) _isList = true;\n\n    @HostBinding(`class.thy-selection-list`) _isSelectionList = true;\n\n    @HostBinding(`class.thy-multiple-selection-list`) multiple = true;\n\n    @HostBinding(`class.thy-grid-list`) isLayoutGrid = false;\n\n    /** The option components contained within this selection-list. */\n    @ContentChildren(ThyListOptionComponent) options: QueryList<ThyListOptionComponent>;\n\n    @Input()\n    set thyMultiple(value: any) {\n        const previousValue = this.multiple;\n        this.multiple = coerceBooleanProperty(value);\n        if (previousValue !== this.multiple) {\n            this._instanceSelectionModel();\n        }\n    }\n\n    @Input() thyBindKeyEventContainer: HTMLElement | ElementRef | string;\n\n    @Input() thyScrollContainer: HTMLElement | ElementRef | string;\n\n    @Input() thyBeforeKeydown: (event?: KeyboardEvent) => boolean;\n\n    @Input() thyUniqueKey: string;\n\n    @Input() thyCompareWith: (o1: any, o2: any) => boolean;\n\n    @Input() set thyLayout(value: ThyListLayout) {\n        this.layout = value;\n        this.isLayoutGrid = value === 'grid';\n    }\n\n    @Input() set thyAutoActiveFirstItem(value: boolean) {\n        this.autoActiveFirstItem = coerceBooleanProperty(value);\n    }\n\n    @Input() set thySize(value: ThyListSize) {\n        this._setListSize(value);\n    }\n\n    private spaceEnabled = true;\n    /** Whether keydown space toggle focused option */\n    @Input() set thySpaceKeyEnabled(value: boolean) {\n        this.spaceEnabled = coerceBooleanProperty(value);\n    }\n\n    /** Emits a change event whenever the selected state of an option changes. */\n    @Output() readonly thySelectionChange: EventEmitter<ThySelectionListChange> = new EventEmitter<ThySelectionListChange>();\n\n    private autoActiveFirstItem: boolean;\n\n    private _onTouched: () => void = () => {};\n\n    private _onChange: (value: any) => void = (_: any) => {};\n\n    private _emitChangeEvent(option: ThyListOptionComponent, event: Event) {\n        this.thySelectionChange.emit({\n            source: this,\n            value: option.thyValue,\n            option: option,\n            event: event,\n            selected: this.isSelected(option)\n        });\n    }\n\n    private _emitModelValueChange() {\n        if (this.options) {\n            let selectedValues = this.selectionModel.selected;\n            if (this.thyUniqueKey) {\n                selectedValues = selectedValues.map(selectedValue => {\n                    const selectedOption = this.options.find(option => {\n                        return option.thyValue[this.thyUniqueKey] === selectedValue;\n                    });\n                    if (selectedOption) {\n                        return selectedOption.thyValue;\n                    } else {\n                        return this._modelValues.find(value => {\n                            return value[this.thyUniqueKey] === selectedValue;\n                        });\n                    }\n                });\n            }\n            this._modelValues = selectedValues;\n            let changeValue = selectedValues;\n            if (!this.multiple && selectedValues && selectedValues.length > 0) {\n                changeValue = selectedValues[0];\n            }\n            this._onChange(changeValue);\n        }\n    }\n\n    private _toggleFocusedOption(event: KeyboardEvent): void {\n        if (this._keyManager.activeItem) {\n            this.ngZone.run(() => {\n                this.toggleOption(this._keyManager.activeItem, event);\n            });\n        }\n    }\n\n    private _initializeFocusKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<ThyListOptionComponent>(this.options)\n            .withWrap()\n            // .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false);\n    }\n\n    private _instanceSelectionModel() {\n        this.selectionModel = new SelectionModel<any>(this.multiple);\n    }\n\n    private _getElementBySelector(element: HTMLElement | ElementRef | string): HTMLElement {\n        return dom.getHTMLElementBySelector(element, this.elementRef);\n    }\n\n    private _compareValue(value1: any, value2: any) {\n        if (this.thyCompareWith) {\n            const compareFn = this.thyCompareWith as (o1: any, o2: any) => boolean;\n            return compareFn(value1, value2);\n        } else if (this.thyUniqueKey) {\n            return value1 && value1[this.thyUniqueKey] === value2 && value2[this.thyUniqueKey];\n        } else {\n            return value1 === value2;\n        }\n    }\n\n    private _getOptionSelectionValue(option: ThyListOptionComponent) {\n        if (option.thyValue) {\n            return this.thyUniqueKey ? option.thyValue[this.thyUniqueKey] : option.thyValue;\n        } else {\n            return option;\n        }\n    }\n\n    private _setSelectionByValues(values: any[]) {\n        this.selectionModel.clear();\n        values.forEach(value => {\n            if (this.thyUniqueKey) {\n                this.selectionModel.select(value[this.thyUniqueKey]);\n            } else {\n                this.selectionModel.select(value);\n            }\n        });\n    }\n\n    private _setAllOptionsSelected(toIsSelected: boolean) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        let hasChanged = false;\n\n        this.options.forEach(option => {\n            const fromIsSelected = this.selectionModel.isSelected(option.thyValue);\n            if (fromIsSelected !== toIsSelected) {\n                hasChanged = true;\n                this.selectionModel.toggle(option.thyValue);\n            }\n        });\n\n        if (hasChanged) {\n            this._emitModelValueChange();\n        }\n    }\n\n    private _getOptionByValue(value: any) {\n        return this.options.find(option => {\n            return this._compareValue(option.thyValue, value);\n        });\n    }\n\n    private _getActiveOption() {\n        if (this._keyManager.activeItem) {\n            return this._getOptionByValue(this._keyManager.activeItem.thyValue);\n        } else {\n            return null;\n        }\n    }\n\n    private _setListSize(size: ThyListSize) {\n        for (const key in listSizesMap) {\n            if (listSizesMap.hasOwnProperty(key)) {\n                this.updateHostClassService.removeClass(listSizesMap[key]);\n            }\n        }\n        if (size) {\n            this.updateHostClassService.addClass(listSizesMap[size]);\n        }\n    }\n\n    constructor(\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private updateHostClassService: UpdateHostClassService\n    ) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n\n    ngOnInit() {\n        const bindKeyEventElement = this._getElementBySelector(this.thyBindKeyEventContainer);\n        this.ngZone.runOutsideAngular(() => {\n            this._bindKeyEventUnsubscribe = this.renderer.listen(bindKeyEventElement, 'keydown', this.onKeydown.bind(this));\n        });\n        this._instanceSelectionModel();\n    }\n\n    writeValue(value: any[] | any): void {\n        if (value) {\n            if (this.multiple && !helpers.isArray(value)) {\n                throw new Error(`multiple selection ngModel must be array.`);\n            }\n            if (!this.multiple && helpers.isArray(value)) {\n                throw new Error(`single selection ngModel not be array.`);\n            }\n        }\n        const values = helpers.isArray(value) ? value : value ? [value] : [];\n        this._modelValues = values;\n        if (this.options) {\n            this._setSelectionByValues(values);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this._onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (this.thyBeforeKeydown) {\n            // stop key down event\n            const isContinue = this.thyBeforeKeydown(event);\n            if (!isContinue) {\n                return;\n            }\n        }\n        const keyCode = event.keyCode || event.which;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n\n        switch (keyCode) {\n            case keycodes.SPACE:\n            case keycodes.ENTER:\n                if (keyCode === keycodes.SPACE && !this.spaceEnabled) {\n                    return;\n                }\n                this._toggleFocusedOption(event);\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n            default:\n                manager.onKeydown(event);\n        }\n        if (\n            (keyCode === keycodes.UP_ARROW || keyCode === keycodes.DOWN_ARROW) &&\n            event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex\n        ) {\n            this._toggleFocusedOption(event);\n        }\n    }\n\n    toggleOption(option: ThyListOptionComponent, event?: Event) {\n        if (option && !option.disabled) {\n            this.selectionModel.toggle(this._getOptionSelectionValue(option));\n            // Emit a change event because the focused option changed its state through user\n            // interaction.\n            this._emitModelValueChange();\n            this._emitChangeEvent(option, event);\n        }\n    }\n\n    setActiveOption(option: ThyListOptionComponent) {\n        this._keyManager.updateActiveItem(option); // .updateActiveItemIndex(this._getOptionIndex(option));\n    }\n\n    scrollIntoView(option: ThyListOptionComponent) {\n        const scrollContainerElement = dom.getHTMLElementBySelector(this.thyScrollContainer, this.elementRef);\n        ScrollToService.scrollToElement(option.element.nativeElement, scrollContainerElement);\n    }\n\n    isSelected(option: ThyListOptionComponent) {\n        return this.selectionModel.isSelected(this._getOptionSelectionValue(option));\n    }\n\n    clearActiveItem() {\n        if (this._keyManager.activeItem) {\n            this._keyManager.setActiveItem(-1);\n        }\n    }\n\n    determineClearActiveItem() {\n        if (!this._getActiveOption()) {\n            this.clearActiveItem();\n        }\n    }\n\n    /** Selects all of the options. */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n\n    /** Deselects all of the options. */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n\n    ngAfterContentInit(): void {\n        this._initializeFocusKeyManager();\n        this.options.changes.pipe(startWith(true)).subscribe(() => {\n            if (this.autoActiveFirstItem) {\n                if (!this._keyManager.activeItem || this.options.toArray().indexOf(this._keyManager.activeItem) < 0) {\n                    this._keyManager.setFirstItemActive();\n                }\n            }\n        });\n\n        // if (this._tempValues) {\n        //     this._setSelectionByValues(this._tempValues);\n        //     this._tempValues = null;\n        // }\n    }\n\n    ngOnDestroy() {\n        this._selectionChangesUnsubscribe$.unsubscribe();\n        if (this._bindKeyEventUnsubscribe) {\n            this._bindKeyEventUnsubscribe();\n        }\n    }\n}\n","import { Component, Input, HostBinding, ChangeDetectionStrategy, TemplateRef, ContentChild } from '@angular/core';\n\n@Component({\n    selector: 'thy-list-item-meta,[thy-list-item-meta]',\n    templateUrl: './list-item-meta.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyListItemMetaComponent {\n    @Input() thyAvatar: string;\n\n    @Input() thyTitle: string;\n\n    @Input() thyDescription: string;\n\n    @ContentChild('metaAvatar')\n    public avatarTemplateRef: TemplateRef<any>;\n\n    @ContentChild('metaTitle')\n    public titleTemplateRef: TemplateRef<any>;\n\n    @ContentChild('metaDescription')\n    public descriptionTemplateRef: TemplateRef<any>;\n\n    @HostBinding('class') className = `thy-list-item-meta`;\n\n    constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyListComponent } from './list.component';\nimport { ThyListItemComponent } from './list-item.component';\nimport { ThySelectionListComponent } from './selection/selection-list';\n// import { ThyListOptionComponent } from './option/option';\nimport { ThyOptionModule } from 'ngx-tethys/shared';\nimport { ThyListItemMetaComponent } from './list-item-meta.component';\nimport { ThyAvatarModule } from 'ngx-tethys/avatar';\n\n@NgModule({\n    declarations: [ThyListComponent, ThyListItemComponent, ThySelectionListComponent, ThyListItemMetaComponent],\n    imports: [CommonModule, ThyOptionModule, ThyAvatarModule],\n    exports: [ThyListComponent, ThyListItemComponent, ThySelectionListComponent, ThyListItemMetaComponent, ThyOptionModule]\n})\nexport class ThyListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}