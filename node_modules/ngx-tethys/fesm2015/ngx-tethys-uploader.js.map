{"version":3,"file":"ngx-tethys-uploader.js","sources":["../../src/uploader/constant.ts","../../src/uploader/util.ts","../../src/uploader/uploader.config.ts","../../src/uploader/file-select-base.ts","../../src/uploader/file-select.component.ts","../../src/uploader/file-drop.component.ts","../../src/uploader/uploader.service.ts","../../src/uploader/module.ts","../../src/uploader/ngx-tethys-uploader.ts"],"names":[],"mappings":"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","sourcesContent":["// Multipurpose Internet Mail Extensions\nexport const MIME_Map = {\n    '.3gp': 'video/3gpp',\n    '.apk': 'application/vnd.android.package-archive',\n    '.asf': 'video/x-ms-asf',\n    '.avi': 'video/x-msvideo',\n    '.bin': 'application/octet-stream',\n    '.bmp': 'image/bmp',\n    '.c': 'text/plain',\n    '.class': 'application/octet-stream',\n    '.conf': 'text/plain',\n    '.cpp': 'text/plain',\n    '.doc': 'application/msword',\n    '.docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    '.xls': 'application/vnd.ms-excel,.xls',\n    '.xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,.xlsx',\n    '.xlsb': 'application/vnd.ms-excel.sheet.binary.macroenabled.12',\n    '.xlsm': 'application/vnd.ms-excel.sheet.macroenabled.12',\n    '.xltx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    '.exe': 'application/octet-stream',\n    '.gif': 'image/gif',\n    '.gtar': 'application/x-gtar',\n    '.gz': 'application/x-gzip',\n    '.h': 'text/plain',\n    '.htm': 'text/html',\n    '.html': 'text/html',\n    '.jar': 'application/java-archive',\n    '.java': 'text/plain',\n    '.jpeg': 'image/jpeg',\n    '.jpg': 'image/jpeg',\n    '.js': 'application/x-javascript',\n    '.json': 'application/json',\n    '.log': 'text/plain',\n    '.m3u': 'audio/x-mpegurl',\n    '.m4a': 'audio/mp4a-latm',\n    '.m4b': 'audio/mp4a-latm',\n    '.m4p': 'audio/mp4a-latm',\n    '.m4u': 'video/vnd.mpegurl',\n    '.m4v': 'video/x-m4v',\n    '.mov': 'video/quicktime',\n    '.mp2': 'audio/x-mpeg',\n    '.mp3': 'audio/x-mpeg',\n    '.mp4': 'video/mp4',\n    '.mpc': 'application/vnd.mpohun.certificate',\n    '.mpe': 'video/mpeg',\n    '.mpeg': 'video/mpeg',\n    '.mpg': 'video/mpeg',\n    '.mpg4': 'video/mp4',\n    '.mpga': 'audio/mpeg',\n    '.msg': 'application/vnd.ms-outlook',\n    '.ogg': 'audio/ogg',\n    '.pdf': 'application/pdf',\n    '.png': 'image/png',\n    '.pps': 'application/vnd.ms-powerpoint',\n    '.ppt': 'application/vnd.ms-powerpoint',\n    '.pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    '.prop': 'text/plain',\n    '.rc': 'text/plain',\n    '.rmvb': 'audio/x-pn-realaudio',\n    '.rtf': 'application/rtf',\n    '.sh': 'text/plain',\n    '.tar': 'application/x-tar',\n    '.tgz': 'application/x-compressed',\n    '.txt': 'text/plain',\n    '.wav': 'audio/x-wav',\n    '.wma': 'audio/x-ms-wma',\n    '.wmv': 'audio/x-ms-wmv',\n    '.wps': 'application/vnd.ms-works',\n    '.xml': 'text/plain',\n    '.z': 'application/x-compress',\n    '.zip': 'application/x-zip-compressed',\n    '': '*/*'\n};\n","import { isString, isArray } from 'ngx-tethys/util';\nimport { MIME_Map } from './constant';\n\nexport function mimeTypeConvert(value: Array<string> | string): string {\n    let inputTypes: Array<string>;\n    const acceptTypes: Array<string> = [];\n    if (isArray(value)) {\n        inputTypes = value as Array<string>;\n    } else if (isString(value)) {\n        inputTypes = value.split(',');\n    } else {\n        inputTypes = [];\n    }\n\n    if (inputTypes.length > 0) {\n        inputTypes.forEach(n => {\n            if (MIME_Map[n]) {\n                acceptTypes.push(MIME_Map[n]);\n            } else {\n                acceptTypes.push(n);\n            }\n        });\n    }\n    return acceptTypes.join(',');\n}\n","import { InjectionToken } from '@angular/core';\nimport { ThyFileSizeExceedsContext, ThySizeExceedsHandler } from './types';\n\nexport interface ThyUploaderConfig {\n    sizeThreshold?: number;\n    sizeExceedsHandler?: ThySizeExceedsHandler;\n}\n\nexport const THY_UPLOADER_DEFAULT_OPTIONS = new InjectionToken<ThyUploaderConfig>('thy-uploader-default-options');\n\nexport const THY_UPLOADER_DEFAULT_OPTIONS_PROVIDER = {\n    provide: THY_UPLOADER_DEFAULT_OPTIONS,\n    useValue: {\n        sizeThreshold: 0,\n        sizeExceedsHandler: sizeExceedsHandler\n    }\n};\n\nexport function sizeExceedsHandler(event: ThyFileSizeExceedsContext) {\n    const exceedsFilesMessage = event.exceedsFiles\n        .map(item => {\n            return `file: ${item.name}, size: ${item.size}`;\n        })\n        .join(',');\n    console.error(`some files(${exceedsFilesMessage}) size exceeds threshold ${event.sizeThreshold}`);\n}\n","import { isNumber, coerceNumberValue, isUndefinedOrNull } from 'ngx-tethys/util';\nimport { Inject, ElementRef, Renderer2, NgZone, Input, EventEmitter, Component, Injectable } from '@angular/core';\nimport { THY_UPLOADER_DEFAULT_OPTIONS, ThyUploaderConfig } from './uploader.config';\nimport { ThyFileSelectEvent, ThySizeExceedsHandler } from './types';\n\n@Component({\n    template: ``\n})\nexport class FileSelectBaseComponent {\n    acceptType: string;\n    sizeThreshold: number;\n    sizeExceedsHandler: ThySizeExceedsHandler;\n\n    @Input() set thySizeThreshold(value: number) {\n        const sizeThreshold = coerceNumberValue(value);\n        if (isNumber(sizeThreshold)) {\n            this.sizeThreshold = sizeThreshold;\n        }\n    }\n\n    @Input() set thySizeExceedsHandler(value: ThySizeExceedsHandler) {\n        if (value) {\n            this.sizeExceedsHandler = value;\n        }\n    }\n\n    constructor(\n        public elementRef: ElementRef,\n        @Inject(THY_UPLOADER_DEFAULT_OPTIONS) public defaultConfig: ThyUploaderConfig,\n        public renderer?: Renderer2,\n        public ngZone?: NgZone\n    ) {\n        this.sizeThreshold = defaultConfig.sizeThreshold;\n        this.sizeExceedsHandler = defaultConfig.sizeExceedsHandler;\n    }\n\n    handleSizeExceeds(event: Event, files: File[]) {\n        let sizeExceedsFiles = files.filter(item => item.size / 1024 > this.sizeThreshold);\n        if (sizeExceedsFiles.length > 0) {\n            const sizeExceedContext = {\n                files: files,\n                exceedsFiles: sizeExceedsFiles,\n                nativeEvent: event,\n                sizeThreshold: this.sizeThreshold\n            };\n            return this.sizeExceedsHandler(sizeExceedContext);\n        }\n        return files;\n    }\n\n    selectFiles(event: Event, files: File[], eventEmitter: EventEmitter<ThyFileSelectEvent>) {\n        let successFiles: File[] | void = files;\n        if (this.sizeThreshold && this.sizeThreshold > 0) {\n            successFiles = this.handleSizeExceeds(event, files);\n        }\n        if (successFiles) {\n            eventEmitter.emit({\n                files: successFiles,\n                nativeEvent: event\n            });\n        }\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    Renderer2,\n    Inject,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnDestroy,\n    HostListener,\n    EventEmitter\n} from '@angular/core';\nimport { coerceBooleanProperty, isArray, isString } from 'ngx-tethys/util';\nimport { mimeTypeConvert } from './util';\nimport { ThySizeExceedsHandler } from './types';\nimport { THY_UPLOADER_DEFAULT_OPTIONS, ThyUploaderConfig } from './uploader.config';\nimport { FileSelectBaseComponent } from './file-select-base';\n\n@Component({\n    selector: '[thyFileSelect],thy-file-select',\n    templateUrl: './file-select.component.html'\n})\nexport class ThyFileSelectComponent extends FileSelectBaseComponent implements OnInit, OnDestroy {\n    private multiple: boolean;\n\n    private acceptFolder: boolean;\n\n    @Output() thyOnFileSelect = new EventEmitter();\n\n    @ViewChild('fileInput', { static: true }) fileInput: ElementRef<HTMLInputElement>;\n\n    @Input()\n    set thyMultiple(value: boolean) {\n        this.multiple = coerceBooleanProperty(value);\n        if (this.multiple) {\n            this.fileInput.nativeElement.setAttribute('multiple', '');\n        } else {\n            this.fileInput.nativeElement.removeAttribute('multiple');\n        }\n    }\n\n    @Input()\n    set thyAcceptFolder(value: boolean) {\n        this.acceptFolder = coerceBooleanProperty(value);\n        if (this.acceptFolder) {\n            this.fileInput.nativeElement.setAttribute('webkitdirectory', '');\n        } else {\n            this.fileInput.nativeElement.removeAttribute('webkitdirectory');\n        }\n    }\n\n    @Input()\n    set thyAcceptType(value: Array<string> | string) {\n        this.acceptType = mimeTypeConvert(value);\n    }\n\n    @Input() set thySizeThreshold(value: number) {\n        this.sizeThreshold = value;\n    }\n\n    @HostListener('click', ['$event'])\n    click($event: Event) {\n        this.fileInput.nativeElement.click();\n    }\n\n    constructor(public elementRef: ElementRef, @Inject(THY_UPLOADER_DEFAULT_OPTIONS) public defaultConfig: ThyUploaderConfig) {\n        super(elementRef, defaultConfig);\n    }\n\n    selectFile($event: Event) {\n        const files = this.fileInput.nativeElement.files;\n        if (files && files.length > 0) {\n            this.selectFiles($event, Array.from(files), this.thyOnFileSelect);\n            this.fileInput.nativeElement.value = '';\n        }\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {}\n}\n","import { isEmpty } from 'ngx-tethys/util';\nimport {\n    Component,\n    OnInit,\n    ElementRef,\n    Renderer2,\n    Output,\n    EventEmitter,\n    HostBinding,\n    Input,\n    NgZone,\n    OnDestroy,\n    Inject\n} from '@angular/core';\nimport { mimeTypeConvert } from './util';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil, filter, tap } from 'rxjs/operators';\nimport { THY_UPLOADER_DEFAULT_OPTIONS, ThyUploaderConfig } from './uploader.config';\nimport { FileSelectBaseComponent } from './file-select-base';\n\n@Component({\n    selector: '[thyFileDrop]',\n    template: `\n        <ng-content></ng-content>\n    `\n})\nexport class ThyFileDropComponent extends FileSelectBaseComponent implements OnInit, OnDestroy {\n    @HostBinding('class.drop-over')\n    @HostBinding('class.thy-drop-over')\n    isDragOver = false;\n    private dragOverCustomClass: string;\n\n    @Input() set thyFileDropClassName(value: string) {\n        this.dragOverCustomClass = value;\n    }\n\n    @Input()\n    set thyAcceptType(value: Array<string> | string) {\n        this.acceptType = mimeTypeConvert(value);\n    }\n\n    @Output() thyOnDrop = new EventEmitter();\n\n    private ngUnsubscribe$ = new Subject();\n\n    constructor(\n        public elementRef: ElementRef,\n        public renderer: Renderer2,\n        public ngZone: NgZone,\n        @Inject(THY_UPLOADER_DEFAULT_OPTIONS) public defaultConfig: ThyUploaderConfig\n    ) {\n        super(elementRef, defaultConfig);\n    }\n\n    public ngOnInit(): void {\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.elementRef.nativeElement, 'dragenter')\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    tap((event: DragEvent) => {\n                        event.preventDefault();\n                    }),\n                    filter(event => event.dataTransfer.items && event.dataTransfer.items.length > 0)\n                )\n                .subscribe((event: DragEvent) => {\n                    if (this.checkRejectFolderAndHtmlElement(event)) {\n                        const files = this.filterFilesOrItems(Array.from(event.dataTransfer.items));\n                        if (!isEmpty(files)) {\n                            this.ngZone.run(() => {\n                                this.isDragOver = true;\n                                this.toggleDropOverClassName();\n                            });\n                        }\n                    }\n                });\n\n            fromEvent(this.elementRef.nativeElement, 'dragover')\n                .pipe(takeUntil(this.ngUnsubscribe$))\n                .subscribe((event: any) => {\n                    event.preventDefault();\n                });\n\n            fromEvent(this.elementRef.nativeElement, 'dragleave')\n                .pipe(takeUntil(this.ngUnsubscribe$))\n                .subscribe((event: any) => {\n                    this.ngZone.run(() => {\n                        if (!this.elementRef.nativeElement.contains(event.fromElement)) {\n                            this.resetDragOver();\n                            this.toggleDropOverClassName();\n                        }\n                    });\n                });\n\n            fromEvent(this.elementRef.nativeElement, 'drop')\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    tap((event: DragEvent) => {\n                        event.preventDefault();\n                    })\n                )\n                .subscribe((event: DragEvent) => {\n                    this.ngZone.run(() => {\n                        if (this.checkRejectFolderAndHtmlElement(event)) {\n                            const files = this.filterFilesOrItems(event.dataTransfer ? Array.from(event.dataTransfer.files) : []);\n                            if (!isEmpty(files)) {\n                                this.selectFiles(event, Array.from(event.dataTransfer.files), this.thyOnDrop);\n                            }\n                        }\n                        this.resetDragOver();\n                        this.toggleDropOverClassName();\n                    });\n                });\n        });\n    }\n\n    private checkRejectFolderAndHtmlElement(event: DragEvent) {\n        // 排除文件夹和HTML元素拖拽\n        const items: DataTransferItemList | DataTransferItem[] = event.dataTransfer ? event.dataTransfer.items : [];\n        let res = true;\n        for (let index = 0; index < items.length; index++) {\n            const item = items[index];\n            const entry = this.getAsEntry(item);\n            if (item.kind !== 'file' || (entry && !entry.isFile)) {\n                res = false;\n                // console.error(`file extensions not support drag upload, kind: ${item.kind}, type: ${item.type}`);\n            }\n        }\n        return res;\n    }\n\n    private getAsEntry(item: DataTransferItem) {\n        let entry;\n        if (item['getAsEntry']) {\n            entry = item['getAsEntry']();\n        } else if (item.webkitGetAsEntry) {\n            entry = item.webkitGetAsEntry();\n        }\n        return entry;\n    }\n\n    private filterFilesOrItems(items: Array<DataTransferItem | File>): Array<DataTransferItem | File> {\n        if (this.acceptType && this.acceptType != '*/*') {\n            return items.filter(item => {\n                return this.acceptType.includes(item.type);\n            });\n        } else {\n            return Array.from(items);\n        }\n    }\n\n    private toggleDropOverClassName() {\n        if (this.dragOverCustomClass) {\n            if (this.isDragOver) {\n                this.renderer.addClass(this.elementRef.nativeElement, this.dragOverCustomClass);\n            } else {\n                this.renderer.removeClass(this.elementRef.nativeElement, this.dragOverCustomClass);\n            }\n        }\n    }\n\n    private setDragOverState(isDragOver: boolean) {\n        this.isDragOver = isDragOver;\n    }\n\n    private resetDragOver() {\n        this.setDragOverState(false);\n    }\n\n    public ngOnDestroy(): void {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscriber, from } from 'rxjs';\nimport { coerceArray } from 'ngx-tethys/util';\nimport { map, tap, mergeMap } from 'rxjs/operators';\nimport { HttpClient, HttpEvent, HttpEventType, XhrFactory } from '@angular/common/http';\n\nexport enum ThyUploadStatus {\n    pending = 'pending',\n    started = 'started',\n    uploading = 'uploading',\n    done = 'done'\n}\n\nexport interface ThyUploadResponse {\n    status: ThyUploadStatus;\n    uploadFile?: ThyUploadFile;\n}\n\nexport interface ThyUploadFile {\n    identifier?: string;\n    method: string;\n    url: string;\n    withCredentials?: boolean;\n    nativeFile: File;\n    fileField?: string;\n    fileName?: string;\n    headers?: {\n        [key: string]: string;\n    };\n    data?: {\n        [key: string]: string;\n    };\n\n    responseStatus?: any;\n    response?: any;\n    responseHeaders?: any;\n\n    progress?: {\n        status: ThyUploadStatus;\n        percentage: number;\n        speed?: number;\n        speedHuman?: string;\n        startTime: number | null;\n        endTime?: number | null;\n        estimatedTime?: number | null;\n        estimatedTimeHuman?: string | null;\n    };\n}\n\nexport interface ThyUploadFilesOptions {\n    onStarted?: (item: ThyUploadFile) => void;\n    onDone?: (item: ThyUploadFile) => void;\n}\n\n@Injectable()\nexport class ThyUploaderService {\n    constructor(private http: HttpClient, private xhrFactory: XhrFactory) {}\n\n    private secondsToHuman(sec: number): string {\n        return new Date(sec * 1000).toISOString().substr(11, 8);\n    }\n\n    private humanizeBytes(bytes: number): string {\n        if (bytes === 0) {\n            return '0 Byte';\n        }\n\n        const k = 1024;\n        const sizes: string[] = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n        const i: number = Math.floor(Math.log(bytes) / Math.log(k));\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n\n    private normalizeUploadFiles(uploadFiles: ThyUploadFile | ThyUploadFile[]) {\n        coerceArray(uploadFiles).forEach(uploadFile => {\n            if (!uploadFile.progress) {\n                uploadFile.progress = {\n                    status: ThyUploadStatus.pending,\n                    percentage: 0,\n                    startTime: 0\n                };\n            }\n        });\n    }\n\n    // private uploadByHttp(observer: Subscriber<ThyUploadResponse>, uploadFile: ThyUploadFile) {\n    //     const time: number = new Date().getTime();\n    //     let speed = 0;\n    //     let estimatedTime: number | null = null;\n\n    //     uploadFile.progress = {\n    //         status: ThyUploadStatus.started,\n    //         percentage: 0,\n    //         startTime: time\n    //     };\n\n    //     const formData = new FormData();\n    //     Object.keys(uploadFile.data || {}).forEach(key => formData.append(key, uploadFile.data[key]));\n    //     formData.append(uploadFile.fileField || 'file', uploadFile.nativeFile, uploadFile.fileName);\n    //     const headers = {\n    //         'Content-Type': 'multipart/form-data'\n    //     };\n    //     Object.keys(uploadFile.headers || {}).forEach(key => (headers[key] = uploadFile.headers[key]));\n\n    //     const subscription = this.http\n    //         .post(uploadFile.url, formData, {\n    //             headers: headers,\n    //             reportProgress: true,\n    //             observe: 'events',\n    //             withCredentials: uploadFile.withCredentials ? true : false\n    //         })\n    //         .subscribe(\n    //             (event: HttpEvent<any>) => {\n    //                 console.log('Subscribe data', event);\n    //                 switch (event.type) {\n    //                     case HttpEventType.Sent:\n    //                         observer.next({ status: ThyUploadStatus.started, uploadFile: uploadFile });\n    //                         break;\n    //                     case HttpEventType.UploadProgress:\n    //                         let percentage = Math.round((event.loaded * 100) / event.total);\n    //                         if (percentage === 100) {\n    //                             percentage = 99;\n    //                         }\n    //                         const diff = new Date().getTime() - time;\n    //                         speed = Math.round((event.loaded / diff) * 1000);\n    //                         const progressStartTime = (uploadFile.progress && uploadFile.progress.startTime) || new Date().getTime();\n    //                         estimatedTime = Math.ceil((event.total - event.loaded) / speed);\n\n    //                         uploadFile.progress.status = ThyUploadStatus.uploading;\n    //                         uploadFile.progress.percentage = percentage;\n    //                         uploadFile.progress.speed = speed;\n    //                         uploadFile.progress.speedHuman = `${this.humanizeBytes(speed)}/s`;\n    //                         uploadFile.progress.startTime = progressStartTime;\n    //                         uploadFile.progress.estimatedTime = estimatedTime;\n    //                         uploadFile.progress.estimatedTimeHuman = this.secondsToHuman(estimatedTime);\n\n    //                         observer.next({ status: ThyUploadStatus.uploading, uploadFile: uploadFile });\n    //                         break;\n    //                     case HttpEventType.Response:\n    //                         uploadFile.response = event.body;\n    //                         observer.next({ status: ThyUploadStatus.done, uploadFile: uploadFile });\n    //                         break;\n    //                     default:\n    //                         throw new Error(`Unhandled event: ${event.type}`);\n    //                 }\n    //             },\n    //             error => {\n    //                 observer.error(error);\n    //             }\n    //         );\n    //     return subscription;\n    // }\n\n    private uploadByXhr(observer: Subscriber<ThyUploadResponse>, uploadFile: ThyUploadFile) {\n        const xhr = this.xhrFactory.build();\n        const time: number = new Date().getTime();\n        let speed = 0;\n        let estimatedTime: number | null = null;\n\n        uploadFile.progress = {\n            status: ThyUploadStatus.started,\n            percentage: 0,\n            startTime: time\n        };\n\n        xhr.upload.addEventListener(\n            'progress',\n            (event: ProgressEvent) => {\n                if (event.lengthComputable) {\n                    let percentage = Math.round((event.loaded * 100) / event.total);\n                    if (percentage === 100) {\n                        percentage = 99;\n                    }\n                    const diff = new Date().getTime() - time;\n                    speed = Math.round((event.loaded / diff) * 1000);\n                    const progressStartTime = (uploadFile.progress && uploadFile.progress.startTime) || new Date().getTime();\n                    estimatedTime = Math.ceil((event.total - event.loaded) / speed);\n\n                    uploadFile.progress.status = ThyUploadStatus.uploading;\n                    uploadFile.progress.percentage = percentage;\n                    uploadFile.progress.speed = speed;\n                    uploadFile.progress.speedHuman = `${this.humanizeBytes(speed)}/s`;\n                    uploadFile.progress.startTime = progressStartTime;\n                    uploadFile.progress.estimatedTime = estimatedTime;\n                    uploadFile.progress.estimatedTimeHuman = this.secondsToHuman(estimatedTime);\n\n                    observer.next({ status: ThyUploadStatus.uploading, uploadFile: uploadFile });\n                }\n            },\n            false\n        );\n\n        xhr.upload.addEventListener('error', (e: Event) => {\n            observer.error(e);\n            observer.complete();\n        });\n\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === XMLHttpRequest.DONE) {\n                const speedTime = (new Date().getTime() - uploadFile.progress.startTime) * 1000;\n                const speedAverage = Math.round(uploadFile.nativeFile.size / speedTime);\n\n                uploadFile.progress.status = ThyUploadStatus.done;\n                uploadFile.progress.percentage = 100;\n                uploadFile.progress.speed = speedAverage;\n                uploadFile.progress.speedHuman = `${this.humanizeBytes(speed)}/s`;\n                uploadFile.progress.estimatedTime = estimatedTime;\n                uploadFile.progress.estimatedTimeHuman = this.secondsToHuman(estimatedTime || 0);\n\n                uploadFile.responseStatus = xhr.status;\n\n                try {\n                    uploadFile.response = JSON.parse(xhr.response);\n                } catch (e) {\n                    uploadFile.response = xhr.response;\n                }\n\n                // file.responseHeaders = this.parseResponseHeaders(xhr.getAllResponseHeaders());\n\n                observer.next({ status: ThyUploadStatus.done, uploadFile: uploadFile });\n\n                observer.complete();\n            }\n        };\n\n        xhr.open(uploadFile.method, uploadFile.url, true);\n        xhr.withCredentials = uploadFile.withCredentials ? true : false;\n\n        try {\n            const formData = new FormData();\n\n            Object.keys(uploadFile.data || {}).forEach(key => formData.append(key, uploadFile.data[key]));\n            Object.keys(uploadFile.headers || {}).forEach(key => xhr.setRequestHeader(key, uploadFile.headers[key]));\n\n            formData.append(uploadFile.fileField || 'file', uploadFile.nativeFile, uploadFile.fileName);\n\n            observer.next({ status: ThyUploadStatus.started, uploadFile: uploadFile });\n            xhr.send(formData);\n        } catch (error) {\n            observer.error(error);\n            observer.complete();\n        }\n        return xhr;\n    }\n\n    private ensureFileName(uploadFile: ThyUploadFile) {\n        uploadFile.fileName = uploadFile.fileName || uploadFile.nativeFile.name;\n    }\n\n    /**\n     * 上传单个文件\n     * @param uploadFile 上传文件对象\n     */\n    upload(uploadFile: ThyUploadFile): Observable<ThyUploadResponse> {\n        this.ensureFileName(uploadFile);\n\n        return new Observable(observer => {\n            const xhr = this.uploadByXhr(observer, uploadFile);\n            return () => {\n                xhr.abort();\n            };\n        });\n    }\n\n    /**\n     * 并发上传多个文件\n     * @param uploadFiles 上传文件列表\n     * @param concurrent 并发上传数, 默认 5\n     * @param options onStared, onDone 回调\n     */\n    uploadBulk(uploadFiles: ThyUploadFile[], concurrent = 5, options?: ThyUploadFilesOptions) {\n        this.normalizeUploadFiles(uploadFiles);\n        const result = from(uploadFiles).pipe(\n            mergeMap(uploadFile => {\n                return this.upload(uploadFile).pipe(\n                    tap(uploadResponse => {\n                        if (options && options.onStarted && uploadResponse.status === ThyUploadStatus.started) {\n                            options.onStarted(uploadResponse.uploadFile);\n                        }\n                        if (options && options.onDone && uploadResponse.status === ThyUploadStatus.done) {\n                            options.onDone(uploadResponse.uploadFile);\n                        }\n                    })\n                );\n            }, concurrent),\n            map(response => {\n                return response;\n            })\n        );\n\n        return result;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ThyFileSelectComponent } from './file-select.component';\nimport { ThyFileDropComponent } from './file-drop.component';\nimport { ThyUploaderService } from './uploader.service';\nimport { THY_UPLOADER_DEFAULT_OPTIONS_PROVIDER } from './uploader.config';\nimport { FileSelectBaseComponent } from './file-select-base';\n// import { ThyDirectiveModule } from 'ngx-tethys/directive';\n\n@NgModule({\n    declarations: [ThyFileSelectComponent, ThyFileDropComponent, FileSelectBaseComponent],\n    imports: [CommonModule, HttpClientModule],\n    entryComponents: [ThyFileDropComponent],\n    providers: [ThyUploaderService, THY_UPLOADER_DEFAULT_OPTIONS_PROVIDER],\n    exports: [ThyFileSelectComponent, ThyFileDropComponent]\n})\nexport class ThyUploaderModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FileSelectBaseComponent as ɵa} from './file-select-base';"]}