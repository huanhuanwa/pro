{"version":3,"file":"ngx-tethys-time-picker.js","sources":["../../src/time-picker/time-picker.utils.ts","../../src/time-picker/time-picker-controls.util.ts","../../src/time-picker/time-picker.config.ts","../../src/time-picker/time-picker.store.ts","../../src/time-picker/time-picker.component.ts","../../src/time-picker/time-picker.module.ts","../../src/time-picker/ngx-tethys-time-picker.ts"],"names":[],"mappings":"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","sourcesContent":["import { Time, TimePickerComponentState } from './time-picker.models';\nimport { coerceNumberValue } from 'ngx-tethys/util';\n\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nexport function isValidDate(value?: string | Date): boolean {\n    if (!value) {\n        return false;\n    }\n\n    if (value instanceof Date && isNaN(value.getHours())) {\n        return false;\n    }\n\n    if (typeof value === 'string') {\n        return isValidDate(new Date(value));\n    }\n\n    return true;\n}\n\nexport function isValidLimit(controls: TimePickerComponentState, newDate: Date): boolean {\n    if (controls.min && newDate < controls.min) {\n        return false;\n    }\n\n    if (controls.max && newDate > controls.max) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function parseHours(value: string | number, isPM = false): number {\n    const hour = coerceNumberValue(value);\n    if (isNaN(hour) || hour < 0 || hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n        return NaN;\n    }\n\n    return hour;\n}\n\nexport function parseMinutes(value: string | number): number {\n    const minute = coerceNumberValue(value);\n    if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n        return NaN;\n    }\n\n    return minute;\n}\n\nexport function parseSeconds(value: string | number): number {\n    const seconds = coerceNumberValue(value);\n    if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n        return NaN;\n    }\n\n    return seconds;\n}\n\nexport function parseTime(value: string | Date): Date {\n    if (typeof value === 'string') {\n        return new Date(value);\n    }\n\n    return value;\n}\n\nexport function changeTime(value: Date, diff: Time): Date {\n    if (!value) {\n        return changeTime(createDate(new Date(), 0, 0, 0), diff);\n    }\n\n    let hour = value.getHours();\n    let minutes = value.getMinutes();\n    let seconds = value.getSeconds();\n\n    if (diff.hour) {\n        hour = (hour + coerceNumberValue(diff.hour)) % hoursPerDay;\n        if (hour < 0) {\n            hour += hoursPerDay;\n        }\n    }\n\n    if (diff.minute) {\n        minutes = minutes + coerceNumberValue(diff.minute);\n    }\n\n    if (diff.seconds) {\n        seconds = seconds + coerceNumberValue(diff.seconds);\n    }\n\n    return createDate(value, hour, minutes, seconds);\n}\n\nexport function setTime(value: Date, opts: Time): Date {\n    let hour = parseHours(opts.hour);\n    const minute = parseMinutes(opts.minute);\n    const seconds = parseSeconds(opts.seconds) || 0;\n\n    if (opts.isPM && hour !== 12) {\n        hour += hoursPerDayHalf;\n    }\n\n    if (!value) {\n        if (!isNaN(hour) && !isNaN(minute)) {\n            return createDate(new Date(), hour, minute, seconds);\n        }\n\n        return value;\n    }\n\n    if (isNaN(hour) || isNaN(minute)) {\n        return value;\n    }\n\n    return createDate(value, hour, minute, seconds);\n}\n\nexport function createDate(value: Date, hours: number, minutes: number, seconds: number): Date {\n    return new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n}\n\nexport function padNumber(value: number): string {\n    const _value = value.toString();\n    if (_value.length > 1) {\n        return _value;\n    }\n\n    return `0${_value}`;\n}\n\nexport function isHourInputValid(hours: string, isPM: boolean): boolean {\n    return !isNaN(parseHours(hours, isPM));\n}\n\nexport function isMinuteInputValid(minutes: string): boolean {\n    return !isNaN(parseMinutes(minutes));\n}\n\nexport function isSecondInputValid(seconds: string): boolean {\n    return !isNaN(parseSeconds(seconds));\n}\n\nexport function isInputLimitValid(diff: Time, max: Date, min: Date): boolean {\n    const newDate = setTime(new Date(), diff);\n\n    if (max && newDate > max) {\n        return false;\n    }\n\n    if (min && newDate < min) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isInputValid(hours: string, minutes = '0', seconds = '0', isPM: boolean): boolean {\n    return isHourInputValid(hours, isPM) && isMinuteInputValid(minutes) && isSecondInputValid(seconds);\n}\n","import { changeTime } from './time-picker.utils';\nimport { TimeChangeEvent, TimePickerComponentState, TimePickerControls } from './time-picker.models';\n\nexport function canChangeValue(state: TimePickerComponentState, event?: TimeChangeEvent): boolean {\n    if (state.readonlyInput || state.disabled) {\n        return false;\n    }\n\n    if (event) {\n        if (event.source === 'wheel' && !state.mousewheel) {\n            return false;\n        }\n\n        if (event.source === 'key' && !state.arrowKeys) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function canChangeHours(event: TimeChangeEvent, controls: TimePickerControls): boolean {\n    if (!event.step) {\n        return false;\n    }\n\n    if (event.step > 0 && !controls.canIncrementHours) {\n        return false;\n    }\n\n    if (event.step < 0 && !controls.canDecrementHours) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function canChangeMinutes(event: TimeChangeEvent, controls: TimePickerControls): boolean {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementMinutes) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementMinutes) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function canChangeSeconds(event: TimeChangeEvent, controls: TimePickerControls): boolean {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementSeconds) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementSeconds) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getControlsValue(state: TimePickerComponentState): TimePickerComponentState {\n    const {\n        hourStep,\n        minuteStep,\n        secondsStep,\n        readonlyInput,\n        disabled,\n        mousewheel,\n        arrowKeys,\n        showSpinners,\n        showMeridian,\n        showSeconds,\n        meridians,\n        min,\n        max\n    } = state;\n\n    return {\n        hourStep,\n        minuteStep,\n        secondsStep,\n        readonlyInput,\n        disabled,\n        mousewheel,\n        arrowKeys,\n        showSpinners,\n        showMeridian,\n        showSeconds,\n        meridians,\n        min,\n        max\n    };\n}\n\nexport function timePickerControls(value: Date, state: TimePickerComponentState): TimePickerControls {\n    const hoursPerDayHalf = 12;\n    const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n    const res: TimePickerControls = {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n\n        canToggleMeridian: true\n    };\n\n    if (!value) {\n        return res;\n    }\n\n    // compare dates\n    if (max) {\n        const _newHour = changeTime(value, { hour: hourStep });\n        res.canIncrementHours = max > _newHour;\n\n        if (!res.canIncrementHours) {\n            const _newMinutes = changeTime(value, { minute: minuteStep });\n            res.canIncrementMinutes = showSeconds ? max > _newMinutes : max >= _newMinutes;\n        }\n\n        if (!res.canIncrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: secondsStep });\n            res.canIncrementSeconds = max >= _newSeconds;\n        }\n\n        if (value.getHours() < hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n        }\n    }\n\n    if (min) {\n        const _newHour = changeTime(value, { hour: -hourStep });\n        res.canDecrementHours = min < _newHour;\n\n        if (!res.canDecrementHours) {\n            const _newMinutes = changeTime(value, { minute: -minuteStep });\n            res.canDecrementMinutes = showSeconds ? min < _newMinutes : min <= _newMinutes;\n        }\n\n        if (!res.canDecrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: -secondsStep });\n            res.canDecrementSeconds = min <= _newSeconds;\n        }\n\n        if (value.getHours() >= hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n        }\n    }\n\n    return res;\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TimePickerConfig {\n    /** hours change step */\n    hourStep = 1;\n    /** hours change step */\n    minuteStep = 5;\n    /** seconds changes step */\n    secondsStep = 10;\n    /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n    showMeridian = true;\n    /** meridian labels based on locale */\n    meridians = ['AM', 'PM'];\n    /** if true hours and minutes fields will be readonly */\n    readonlyInput = false;\n    /** if true hours and minutes fields will be disabled */\n    disabled = false;\n    /** if true scroll inside hours and minutes inputs will change time */\n    mousewheel = true;\n    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n    arrowKeys = true;\n    /** if true spinner arrows above and below the inputs will be shown */\n    showSpinners = true;\n    /** show seconds in timePicker */\n    showSeconds = false;\n    /** show minutes in timePicker */\n    showMinutes = true;\n    /** minimum time user can select */\n    min: Date;\n    /** maximum time user can select */\n    max: Date;\n    /** placeholder for hours field in timePicker */\n    hoursPlaceholder = 'HH';\n    /** placeholder for minutes field in timePicker */\n    minutesPlaceholder = 'MM';\n    /** placeholder for seconds field in timePicker */\n    secondsPlaceholder = 'SS';\n}\n","import { Store, Action } from 'ngx-tethys/store';\nimport { TimeChangeEvent, TimePickerComponentState, Time, TimePickerControls } from './time-picker.models';\nimport { canChangeHours, canChangeMinutes, canChangeSeconds, canChangeValue, timePickerControls } from './time-picker-controls.util';\nimport { changeTime, setTime, isValidLimit } from './time-picker.utils';\nimport { Injectable } from '@angular/core';\nimport { TimePickerConfig } from './time-picker.config';\n\nexport interface TimePickerState {\n    value: Date;\n    config: TimePickerComponentState;\n    controls: TimePickerControls;\n}\n\nexport const initialState: TimePickerState = {\n    value: null,\n    config: new TimePickerConfig(),\n    controls: {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n\n        canToggleMeridian: true\n    }\n};\n\n@Injectable()\nexport class ThyTimePickerStore extends Store<TimePickerState> {\n    constructor() {\n        super(initialState);\n    }\n\n    @Action()\n    writeValue(value: Date) {\n        this.setState({ value: value });\n    }\n\n    @Action()\n    changeHours(event: TimeChangeEvent) {\n        const state = this.snapshot;\n        if (!canChangeValue(state.config, event) || !canChangeHours(event, state.controls)) {\n            return state;\n        }\n\n        const _newTime = changeTime(state.value, { hour: event.step });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n            return state;\n        }\n\n        this.setState({ value: _newTime });\n    }\n\n    @Action()\n    changeMinutes(event: TimeChangeEvent) {\n        const state = this.snapshot;\n        if (!canChangeValue(state.config, event) || !canChangeMinutes(event, state.controls)) {\n            return state;\n        }\n\n        const _newTime = changeTime(state.value, { minute: event.step });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n            return state;\n        }\n\n        this.setState({ value: _newTime });\n    }\n\n    @Action()\n    changeSeconds(event: TimeChangeEvent) {\n        const state = this.snapshot;\n        if (!canChangeValue(state.config, event) || !canChangeSeconds(event, state.controls)) {\n            return state;\n        }\n\n        const _newTime = changeTime(state.value, {\n            seconds: event.step\n        });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n            return state;\n        }\n\n        this.setState({ value: _newTime });\n    }\n\n    @Action()\n    setTime(value: Time) {\n        const state = this.snapshot;\n        if (!canChangeValue(state.config)) {\n            return state;\n        }\n\n        const _newTime = setTime(state.value, value);\n        this.setState({ value: _newTime });\n    }\n\n    @Action()\n    updateControls(value: TimePickerComponentState) {\n        const state = this.snapshot;\n        const _newControlsState = timePickerControls(state.value, value);\n        const _newState: TimePickerState = {\n            value: state.value,\n            config: value,\n            controls: _newControlsState\n        };\n\n        if (state.config.showMeridian !== _newState.config.showMeridian) {\n            if (state.value) {\n                _newState.value = new Date(state.value);\n            }\n        }\n\n        this.setState(_newState);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChanges,\n    StaticProvider\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { getControlsValue } from './time-picker-controls.util';\nimport { TimePickerConfig } from './time-picker.config';\n\nimport { TimeChangeSource, TimePickerComponentState, TimePickerControls } from './time-picker.models';\n\nimport {\n    isValidDate,\n    padNumber,\n    parseTime,\n    isInputValid,\n    isHourInputValid,\n    isMinuteInputValid,\n    isSecondInputValid,\n    isInputLimitValid\n} from './time-picker.utils';\n\nimport { Subscription } from 'rxjs';\n\nimport { ThyTimePickerStore } from './time-picker.store';\n\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: StaticProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    /* tslint:disable-next-line: no-use-before-declare */\n    useExisting: forwardRef(() => ThyTimePickerComponent),\n    multi: true\n};\n\n@Component({\n    selector: 'thy-time-picker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, ThyTimePickerStore],\n    templateUrl: './time-picker.component.html'\n})\nexport class ThyTimePickerComponent\n    implements ControlValueAccessor, TimePickerComponentState, TimePickerControls, OnChanges, OnDestroy {\n    /** hours change step */\n    @Input() hourStep: number;\n    /** hours change step */\n    @Input() minuteStep: number;\n    /** seconds change step */\n    @Input() secondsStep: number;\n    /** if true hours and minutes fields will be readonly */\n    @Input() readonlyInput: boolean;\n    /** if true hours and minutes fields will be disabled */\n    @Input() disabled: boolean;\n    /** if true scroll inside hours and minutes inputs will change time */\n    @Input() mousewheel: boolean;\n    /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n    @Input() arrowKeys: boolean;\n    /** if true spinner arrows above and below the inputs will be shown */\n    @Input() showSpinners: boolean;\n    /** if true meridian button will be shown */\n    @Input() showMeridian: boolean;\n    /** show minutes in timePicker */\n    @Input() showMinutes: boolean;\n    /** show seconds in timePicker */\n    @Input() showSeconds: boolean;\n    /** meridian labels based on locale */\n    @Input() meridians: string[];\n    /** minimum time user can select */\n    @Input() min: Date;\n    /** maximum time user can select */\n    @Input() max: Date;\n    /** placeholder for hours field in timePicker */\n    @Input() hoursPlaceholder: string;\n    /** placeholder for minutes field in timePicker */\n    @Input() minutesPlaceholder: string;\n    /** placeholder for seconds field in timePicker */\n    @Input() secondsPlaceholder: string;\n\n    /** emits true if value is a valid date */\n    @Output() isValid = new EventEmitter<boolean>();\n\n    // ui variables\n    hours: string;\n    minutes: string;\n    seconds: string;\n    meridian: string;\n\n    get isEditable(): boolean {\n        return !(this.readonlyInput || this.disabled);\n    }\n\n    // min/max validation for input fields\n    invalidHours = false;\n    invalidMinutes = false;\n    invalidSeconds = false;\n\n    // time picker controls state\n    canIncrementHours: boolean;\n    canIncrementMinutes: boolean;\n    canIncrementSeconds: boolean;\n\n    canDecrementHours: boolean;\n    canDecrementMinutes: boolean;\n    canDecrementSeconds: boolean;\n\n    canToggleMeridian: boolean;\n\n    // control value accessor methods\n    onChange = Function.prototype;\n    onTouched = Function.prototype;\n\n    timePickerSub: Subscription;\n\n    constructor(_config: TimePickerConfig, private _cd: ChangeDetectorRef, private _store: ThyTimePickerStore) {\n        Object.assign(this, _config);\n\n        this.timePickerSub = _store\n            .select(state => state.value)\n            .subscribe((value: Date) => {\n                // update UI values if date changed\n                this._renderTime(value);\n                this.onChange(value);\n                this._store.updateControls(getControlsValue(this));\n            });\n\n        _store\n            .select(state => state.controls)\n            .subscribe((controlsState: TimePickerControls) => {\n                this.isValid.emit(isInputValid(this.hours, this.minutes, this.seconds, this.isPM()));\n                Object.assign(this, controlsState);\n                _cd.markForCheck();\n            });\n    }\n\n    resetValidation(): void {\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n    }\n\n    isPM(): boolean {\n        return this.showMeridian && this.meridian === this.meridians[1];\n    }\n\n    prevDef($event: Event) {\n        $event.preventDefault();\n    }\n\n    wheelSign($event: WheelEventInit): number {\n        return Math.sign($event.deltaY) * -1;\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this._store.updateControls(getControlsValue(this));\n    }\n\n    changeHours(step: number, source: TimeChangeSource = ''): void {\n        this.resetValidation();\n        this._store.changeHours({ step, source });\n    }\n\n    changeMinutes(step: number, source: TimeChangeSource = ''): void {\n        this.resetValidation();\n        this._store.changeMinutes({ step, source });\n    }\n\n    changeSeconds(step: number, source: TimeChangeSource = ''): void {\n        this.resetValidation();\n        this._store.changeSeconds({ step, source });\n    }\n\n    updateHours(hours: string): void {\n        this.resetValidation();\n        this.hours = hours;\n\n        const isValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n\n        if (!isValid) {\n            this.invalidHours = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n\n            return;\n        }\n\n        this._updateTime();\n    }\n\n    updateMinutes(minutes: string) {\n        this.resetValidation();\n        this.minutes = minutes;\n\n        const isValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n\n        if (!isValid) {\n            this.invalidMinutes = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n\n            return;\n        }\n\n        this._updateTime();\n    }\n\n    updateSeconds(seconds: string) {\n        this.resetValidation();\n        this.seconds = seconds;\n\n        const isValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n\n        if (!isValid) {\n            this.invalidSeconds = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n\n            return;\n        }\n\n        this._updateTime();\n    }\n\n    isValidLimit(): boolean {\n        return isInputLimitValid(\n            {\n                hour: this.hours,\n                minute: this.minutes,\n                seconds: this.seconds,\n                isPM: this.isPM()\n            },\n            this.max,\n            this.min\n        );\n    }\n\n    _updateTime() {\n        const _seconds = this.showSeconds ? this.seconds : void 0;\n        const _minutes = this.showMinutes ? this.minutes : void 0;\n        if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\n            this.isValid.emit(false);\n            this.onChange(null);\n\n            return;\n        }\n\n        this._store.setTime({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        });\n    }\n\n    toggleMeridian(): void {\n        if (!this.showMeridian || !this.isEditable) {\n            return;\n        }\n\n        const _hoursPerDayHalf = 12;\n        this._store.changeHours({\n            step: _hoursPerDayHalf,\n            source: ''\n        });\n    }\n\n    writeValue(obj: string | null | undefined | Date): void {\n        if (isValidDate(obj)) {\n            this._store.writeValue(parseTime(obj));\n        } else if (obj == null) {\n            this._store.writeValue(null);\n        }\n    }\n\n    registerOnChange(fn: (_: any) => {}): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._cd.markForCheck();\n    }\n\n    ngOnDestroy(): void {\n        this.timePickerSub.unsubscribe();\n    }\n\n    private _renderTime(value: string | Date): void {\n        if (!isValidDate(value)) {\n            this.hours = '';\n            this.minutes = '';\n            this.seconds = '';\n            this.meridian = this.meridians[0];\n\n            return;\n        }\n\n        const _value = parseTime(value);\n        const _hoursPerDayHalf = 12;\n        let _hours = _value.getHours();\n\n        if (this.showMeridian) {\n            this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n            _hours = _hours % _hoursPerDayHalf;\n            // should be 12 PM, not 00 PM\n            if (_hours === 0) {\n                _hours = _hoursPerDayHalf;\n            }\n        }\n\n        this.hours = padNumber(_hours);\n        this.minutes = padNumber(_value.getMinutes());\n        this.seconds = padNumber(_value.getUTCSeconds());\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThyTimePickerComponent } from './time-picker.component';\nimport { TimePickerConfig } from './time-picker.config';\nimport { ThyTimePickerStore } from './time-picker.store';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [ThyTimePickerComponent],\n    exports: [ThyTimePickerComponent],\n    providers: [TimePickerConfig, ThyTimePickerStore]\n})\nexport class ThyTimePickerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}