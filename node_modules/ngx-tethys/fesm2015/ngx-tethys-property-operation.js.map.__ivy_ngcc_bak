{"version":3,"file":"ngx-tethys-property-operation.js","sources":["../../src/property-operation/group/property-operation-group.component.ts","../../src/property-operation/property-operation.component.ts","../../src/property-operation/module.ts","../../src/property-operation/ngx-tethys-property-operation.ts"],"sourcesContent":["import { Component, HostBinding } from '@angular/core';\n\n@Component({\n    selector: 'thy-property-operation-group',\n    templateUrl: './property-operation-group.component.html'\n})\nexport class ThyPropertyOperationGroupComponent {\n    @HostBinding('class.thy-property-operation-group') _isPropertyOperationGroup = true;\n\n    constructor() {}\n}\n","import {\n    AfterContentInit,\n    Component,\n    ContentChild,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Input,\n    OnInit,\n    Output,\n    TemplateRef,\n    ViewChild,\n    HostListener\n} from '@angular/core';\nimport { UpdateHostClassService, ThyTranslate } from 'ngx-tethys/core';\nimport { htmlElementIsEmpty, coerceBooleanProperty } from 'ngx-tethys/util';\n\ntype ThyPropertyOperationTypes = 'primary' | 'success' | 'warning' | 'danger';\n\n@Component({\n    selector: 'thy-property-operation',\n    templateUrl: './property-operation.component.html',\n    providers: [UpdateHostClassService]\n})\nexport class ThyPropertyOperationComponent implements OnInit, AfterContentInit {\n    private initialized = false;\n\n    labelText: string;\n\n    onlyHasTips = false;\n\n    showClose = false;\n\n    type: ThyPropertyOperationTypes;\n\n    icon: string;\n\n    value: string;\n\n    labelHideWhenHasValue = false;\n\n    @Output() thyOnRemove = new EventEmitter();\n\n    @Output() thyClick = new EventEmitter<Event>();\n\n    @HostBinding('class.thy-property-operation') _isPropertyOperation = true;\n\n    @ContentChild('operationIcon') operationIcon: TemplateRef<any>;\n\n    @ViewChild('contentElement', { static: true }) contentElement: ElementRef;\n\n    @Input()\n    set thyLabelText(value: string) {\n        this.labelText = value;\n    }\n\n    @Input()\n    set thyValue(value: string) {\n        this.value = value;\n        this.setOnlyHasTips();\n    }\n\n    @Input()\n    set thyLabelTextTranslateKey(value: string) {\n        this.labelText = this.thyTranslate.instant(value);\n    }\n\n    @Input()\n    set thyIcon(value: string) {\n        this.icon = value;\n    }\n\n    @Input()\n    set thyShowClose(value: boolean) {\n        this.showClose = coerceBooleanProperty(value);\n    }\n\n    // 支持有值时，label不显示\n    @Input() set thyLabelHasValue(value: boolean) {\n        this.labelHideWhenHasValue = !coerceBooleanProperty(value);\n    }\n\n    @Input() set thyLabelHideWhenHasValue(value: boolean) {\n        this.labelHideWhenHasValue = coerceBooleanProperty(value);\n    }\n\n    @Input()\n    set thyType(value: ThyPropertyOperationTypes) {\n        this.type = value;\n        this.setHostClass();\n    }\n\n    @HostBinding('class.active')\n    @Input('thyActive')\n    active: boolean;\n\n    @HostBinding('class.thy-property-operation-disabled')\n    @Input('thyDisabled')\n    disabled: boolean;\n\n    private setHostClass(first = false) {\n        if (!this.initialized && !first) {\n            return;\n        }\n        this.updateHostClassService.updateClass(this.type ? [`thy-property-operation-${this.type}`] : []);\n    }\n\n    private setOnlyHasTips(first = false) {\n        if (!this.initialized && !first) {\n            return;\n        }\n        if (this.value) {\n            this.onlyHasTips = false;\n        } else if (htmlElementIsEmpty(this.contentElement.nativeElement)) {\n            this.onlyHasTips = true;\n        } else {\n            this.onlyHasTips = false;\n        }\n    }\n\n    constructor(\n        private thyTranslate: ThyTranslate,\n        private updateHostClassService: UpdateHostClassService,\n        private elementRef: ElementRef\n    ) {}\n\n    ngOnInit() {\n        this.updateHostClassService.initializeElement(this.elementRef.nativeElement);\n        this.setHostClass(true);\n    }\n\n    @HostListener('click', ['$event'])\n    onclick(event: Event) {\n        if (!this.disabled) {\n            this.thyClick.emit(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        this.setOnlyHasTips(true);\n        this.initialized = true;\n    }\n\n    remove($event: Event) {\n        $event.stopPropagation();\n        this.thyOnRemove.emit($event);\n    }\n}\n","import { ThyButtonModule } from 'ngx-tethys/button';\nimport { ThyFlexibleTextModule } from 'ngx-tethys/flexible-text';\nimport { ThyIconModule } from 'ngx-tethys/icon';\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThyPropertyOperationGroupComponent } from './group/property-operation-group.component';\nimport { ThyPropertyOperationComponent } from './property-operation.component';\n\n@NgModule({\n    declarations: [ThyPropertyOperationComponent, ThyPropertyOperationGroupComponent],\n    imports: [CommonModule, ThyButtonModule, ThyIconModule, ThyFlexibleTextModule],\n    exports: [ThyPropertyOperationComponent, ThyPropertyOperationGroupComponent]\n})\nexport class ThyPropertyOperationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}