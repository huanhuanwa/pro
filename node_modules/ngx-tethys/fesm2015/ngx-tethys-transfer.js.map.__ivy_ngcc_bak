{"version":3,"file":"ngx-tethys-transfer.js","sources":["../../src/transfer/transfer.interface.ts","../../src/transfer/transfer.component.ts","../../src/transfer/transfer-list.component.ts","../../src/transfer/transfer.module.ts","../../src/transfer/ngx-tethys-transfer.ts"],"sourcesContent":["export type Direction = 'left' | 'right';\n\nexport enum TransferDirection {\n    left = 'left',\n    right = 'right'\n}\n\nexport interface ThyTransferData {\n    source: ThyTransferModel;\n    target: ThyTransferModel;\n}\n\nexport interface ThyTransferModel {\n    title?: string;\n    data: Array<any>;\n}\n\nexport interface ThyTransferItem {\n    title: string;\n    direction?: Direction;\n    order?: number;\n    disabled?: boolean;\n    checked?: boolean;\n    isLock?: boolean;\n    groupId?: string;\n    isFixed?: boolean;\n    [key: string]: any;\n}\n\nexport interface ThyTransferSelectEvent {\n    item: ThyTransferItem;\n}\n\nexport interface ThyTransferChangeEvent {\n    from?: string;\n    to?: string;\n    items?: ThyTransferItem[];\n    left?: InnerTransferList;\n    right?: InnerTransferList;\n}\n\nexport interface ThyTransferDragEvent {\n    oldIndex?: number;\n    newIndex?: number;\n    model?: ThyTransferItem;\n    models?: ThyTransferItem[];\n    left?: InnerTransferList;\n    right?: InnerTransferList;\n}\n\nexport interface InnerTransferDragEvent {\n    dragEvent?: ThyTransferDragEvent;\n    listData?: InnerTransferList;\n}\n\nexport interface InnerTransferList {\n    lock?: ThyTransferItem[];\n    unlock?: ThyTransferItem[];\n}\n","import { Observable, isObservable } from 'rxjs';\nimport { Component, Input, Output, ViewEncapsulation, HostBinding, EventEmitter, ContentChild, TemplateRef, OnInit } from '@angular/core';\n\nimport {\n    ThyTransferItem,\n    ThyTransferChangeEvent,\n    ThyTransferSelectEvent,\n    ThyTransferDragEvent,\n    InnerTransferDragEvent,\n    Direction,\n    TransferDirection\n} from './transfer.interface';\n\n@Component({\n    selector: 'thy-transfer',\n    templateUrl: './transfer.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyTransferComponent implements OnInit {\n    @HostBinding('class') hostClass = 'thy-transfer';\n\n    public leftDataSource: ThyTransferItem[] = [];\n\n    public rightDataSource: ThyTransferItem[] = [];\n\n    public allDataSource: ThyTransferItem[] = [];\n\n    public leftTitle: string;\n\n    public rightTitle: string;\n\n    public rightDraggable = false;\n\n    private _autoMove = true;\n\n    @Input()\n    set thyData(value: ThyTransferItem[]) {\n        if (value) {\n            this.initializeTransferData(value);\n        }\n    }\n\n    @Input() thyrenderLeftTemplateRef: TemplateRef<any>;\n\n    @Input() thyrenderRightTemplateRef: TemplateRef<any>;\n\n    // @Input() transferToRight\n\n    @Input()\n    set thyTitles(value: string[]) {\n        this.leftTitle = value[0] || '';\n        this.rightTitle = value[1] || '';\n    }\n\n    @Input() thyRightCanLock: boolean;\n\n    @Input() thyRightLockMax: number;\n\n    // Currently not implemented, in order to support the selections move\n    @Input()\n    set thyAutoMove(value: boolean) {\n        this._autoMove = value;\n    }\n\n    @Input() thyLeftDraggable: boolean;\n\n    @Input() thyRightDraggable: boolean;\n\n    @Output() thyDraggableUpdate: EventEmitter<ThyTransferDragEvent> = new EventEmitter<ThyTransferDragEvent>();\n\n    @Output() thyChange: EventEmitter<ThyTransferChangeEvent> = new EventEmitter<ThyTransferChangeEvent>();\n\n    @ContentChild('renderTemplate') templateRef: TemplateRef<any>;\n\n    @ContentChild('renderLeftTemplate') leftContentRef: TemplateRef<any>;\n\n    @ContentChild('renderRightTemplate') rightContentRef: TemplateRef<any>;\n\n    ngOnInit() {}\n\n    initializeTransferData(data: ThyTransferItem[] = []) {\n        this.allDataSource = [];\n        this.leftDataSource = [];\n        this.rightDataSource = [];\n        data.forEach(item => {\n            this.allDataSource.push(item);\n            if (item.direction === TransferDirection.left) {\n                this.leftDataSource.push(item);\n            }\n            if (item.direction === TransferDirection.right) {\n                this.rightDataSource.push(item);\n            }\n        });\n    }\n\n    onSelect(from: Direction, event: ThyTransferSelectEvent) {\n        if (event.item.isFixed) {\n            return;\n        }\n        const to = from === TransferDirection.left ? TransferDirection.right : TransferDirection.left;\n        event.item.checked = !event.item.checked;\n        if (this._autoMove) {\n            this.onMove(to);\n        }\n    }\n\n    selectItem(event: ThyTransferSelectEvent) {\n        this.onSelect(TransferDirection.left, event);\n    }\n\n    unselectItem(event: ThyTransferSelectEvent) {\n        this.onSelect(TransferDirection.right, event);\n    }\n\n    private groupListByIsLock(list: ThyTransferItem[] = []) {\n        const lock: ThyTransferItem[] = [],\n            unlock: ThyTransferItem[] = [];\n        list.forEach(item => {\n            if (item.isLock) {\n                lock.push(item);\n            } else {\n                unlock.push(item);\n            }\n        });\n        return { lock: lock, unlock: unlock };\n    }\n\n    onMove(to: Direction) {\n        const fromDataSource = to === TransferDirection.right ? this.leftDataSource : this.rightDataSource;\n        const toDataSource = to === TransferDirection.right ? this.rightDataSource : this.leftDataSource;\n        const selections = fromDataSource.filter(item => item.checked);\n        const changeEvent: ThyTransferChangeEvent = {\n            from: to === TransferDirection.right ? TransferDirection.left : TransferDirection.right,\n            to: to,\n            items: [...selections]\n        };\n        selections.forEach(item => {\n            const index = fromDataSource.indexOf(item);\n            const removed = fromDataSource.splice(index, 1)[0];\n            removed.checked = !removed.checked;\n            removed.direction = to;\n            toDataSource.push(removed);\n        });\n        this.thyChange.emit({\n            ...changeEvent,\n            left: this.groupListByIsLock(this.leftDataSource),\n            right: this.groupListByIsLock(this.rightDataSource)\n        });\n    }\n\n    onDragUpdate(direction: Direction, event: InnerTransferDragEvent) {\n        const otherDirectionData = direction === TransferDirection.left ? this.rightDataSource : this.leftDataSource;\n        const otherListData = this.groupListByIsLock(otherDirectionData);\n        this.thyDraggableUpdate.emit({\n            ...event.dragEvent,\n            left: direction === TransferDirection.left ? event.listData : otherListData,\n            right: direction === TransferDirection.right ? event.listData : otherListData\n        });\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    ElementRef,\n    ViewEncapsulation,\n    HostBinding,\n    EventEmitter,\n    TemplateRef,\n    IterableDiffer,\n    IterableDiffers,\n    OnInit,\n    OnDestroy,\n    DoCheck,\n    IterableChanges\n} from '@angular/core';\nimport { ThyTransferSelectEvent, ThyTransferItem, ThyTransferDragEvent, InnerTransferDragEvent, Direction } from './transfer.interface';\nimport { ThyTransferComponent } from './transfer.component';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\n\n@Component({\n    selector: 'thy-transfer-list',\n    templateUrl: './transfer-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyTransferListComponent implements OnInit, DoCheck {\n    public lockItems: ThyTransferItem[] = [];\n\n    public unlockItems: ThyTransferItem[] = [];\n\n    private _diff: IterableDiffer<ThyTransferItem>;\n\n    private _lockDiff: IterableDiffer<ThyTransferItem>;\n\n    private _unlockDiff: IterableDiffer<ThyTransferItem>;\n\n    @Input() title: string;\n\n    @Input() items: ThyTransferItem[];\n\n    @Input() draggable: boolean;\n\n    @Input() canLock: boolean;\n\n    @Input() maxLock: number;\n\n    @Input() template: TemplateRef<any>;\n\n    @Input('renderContentRef') contentRef: TemplateRef<any>;\n\n    @Output() draggableUpdate: EventEmitter<InnerTransferDragEvent> = new EventEmitter<InnerTransferDragEvent>();\n\n    @Output() selectItem: EventEmitter<ThyTransferSelectEvent> = new EventEmitter<ThyTransferSelectEvent>();\n\n    @Output() unselectItem: EventEmitter<ThyTransferSelectEvent> = new EventEmitter<ThyTransferSelectEvent>();\n\n    @HostBinding('class') hostClass = 'thy-transfer-list';\n\n    constructor(private root: ThyTransferComponent, private differs: IterableDiffers) {}\n\n    ngOnInit() {\n        this._combineTransferData();\n        if (this.canLock) {\n            this._lockDiff = this.differs.find(this.lockItems).create();\n            this._unlockDiff = this.differs.find(this.unlockItems).create();\n        } else {\n            this._unlockDiff = this.differs.find(this.unlockItems).create();\n        }\n        this._diff = this.differs.find(this.items).create();\n    }\n\n    private _combineTransferData() {\n        this.lockItems = [];\n        this.unlockItems = [];\n        if (this.canLock) {\n            (this.items || []).forEach(item => {\n                if (item.isLock) {\n                    this.lockItems.push(item);\n                } else {\n                    this.unlockItems.push(item);\n                }\n            });\n        } else {\n            this.unlockItems = this.items;\n        }\n    }\n\n    private _afterChangeItems(changes: IterableChanges<ThyTransferItem>, items: ThyTransferItem[]) {\n        // 数据发生变化时，更改order值\n        changes.forEachAddedItem(record => {\n            record.item.order = record.currentIndex;\n        });\n        changes.forEachRemovedItem(() => {\n            items.forEach((item, index) => {\n                item.order = index;\n            });\n        });\n        changes.forEachMovedItem(() => {\n            items.forEach((item, index) => {\n                item.order = index;\n            });\n        });\n    }\n\n    ngDoCheck() {\n        const changes = this._diff.diff(this.items);\n        if (changes) {\n            this._afterChangeItems(changes, this.items);\n            this._combineTransferData();\n        }\n        if (this._lockDiff) {\n            const lockChanges = this._lockDiff.diff(this.lockItems);\n            if (lockChanges) {\n                this._afterChangeItems(lockChanges, this.lockItems);\n            }\n        }\n        const unlockChanges = this._unlockDiff.diff(this.unlockItems);\n        if (unlockChanges) {\n            this._afterChangeItems(unlockChanges, this.unlockItems);\n        }\n    }\n\n    lockListEnterPredicate = () => {\n        return this.lockItems.length < this.maxLock;\n    };\n\n    onSelectItem = (item: ThyTransferItem) => {\n        this.selectItem.emit({ item });\n    };\n\n    onUnselectItem = (item: ThyTransferItem) => {\n        this.unselectItem.emit({ item });\n    };\n\n    drop(event: CdkDragDrop<ThyTransferItem[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n            (event.previousContainer.data || []).forEach(item => {\n                item.isLock = event.previousContainer.id === 'lock';\n            });\n\n            (event.container.data || []).forEach(item => {\n                item.isLock = event.container.id === 'lock';\n            });\n        }\n        const dragEvent: ThyTransferDragEvent = {\n            model: event.item.data,\n            models: event.container.data,\n            oldIndex: event.previousIndex,\n            newIndex: event.currentIndex\n        };\n        this.draggableUpdate.emit({\n            dragEvent: dragEvent,\n            listData: { lock: this.lockItems, unlock: this.unlockItems }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyTransferComponent } from './transfer.component';\nimport { ThyTransferListComponent } from './transfer-list.component';\nimport { ThyButtonModule } from 'ngx-tethys/button';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyListModule } from 'ngx-tethys/list';\nimport { ThySharedModule } from 'ngx-tethys/shared';\nimport { ThyFlexibleTextModule } from 'ngx-tethys/flexible-text';\n@NgModule({\n    declarations: [ThyTransferComponent, ThyTransferListComponent],\n    imports: [CommonModule, ThyButtonModule, DragDropModule, ThyIconModule, ThyListModule, ThySharedModule, ThyFlexibleTextModule],\n    exports: [ThyTransferComponent]\n})\nexport class ThyTransferModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}