import { Component, ElementRef, Input, HostBinding, Directive, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { UpdateHostClassService } from 'ngx-tethys/core';
import { coerceBooleanProperty } from 'ngx-tethys/util';
import { ThyIconModule } from 'ngx-tethys/icon';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/core';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'ngx-tethys/icon';

const _c0 = ["*"];
const _c1 = ["thyIconNavLink", ""];
function ThyIconNavLinkComponent_thy_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 1);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r0.icon);
} }
const navTypeClassesMap = {
    primary: ['nav-primary'],
    secondary: ['nav-secondary'],
    thirdly: ['nav-thirdly'],
    'secondary-divider': ['nav-secondary-divider']
};
const navSizeClassesMap = {
    sm: 'nav-sm'
};
const navHorizontalClassesMap = {
    left: '',
    center: 'justify-content-center',
    right: 'justify-content-end'
};
class ThyNavComponent {
    constructor(updateHostClass, elementRef) {
        this.updateHostClass = updateHostClass;
        this.elementRef = elementRef;
        this._initialized = false;
        this._isVertical = false;
        this._isFill = false;
        this.updateHostClass.initializeElement(elementRef.nativeElement);
    }
    set thyType(type) {
        this._type = type || 'primary';
        if (this._initialized) {
            this._updateClasses();
        }
    }
    set thySize(size) {
        this._size = size;
        if (this._initialized) {
            this._updateClasses();
        }
    }
    set thyHorizontal(horizontal) {
        this._horizontal = horizontal;
        if (this._initialized) {
            this._updateClasses();
        }
    }
    set thyVertical(value) {
        this._isVertical = value;
    }
    set thyFill(value) {
        this._isFill = value;
    }
    _updateClasses() {
        let classNames = [];
        if (navTypeClassesMap[this._type]) {
            classNames = [...navTypeClassesMap[this._type]];
        }
        if (navSizeClassesMap[this._size]) {
            classNames.push(navSizeClassesMap[this._size]);
        }
        if (navHorizontalClassesMap[this._horizontal]) {
            classNames.push(navHorizontalClassesMap[this._horizontal]);
        }
        this.updateHostClass.updateClass(classNames);
    }
    ngOnInit() {
        this._initialized = true;
        this._updateClasses();
    }
}
ThyNavComponent.ɵfac = function ThyNavComponent_Factory(t) { return new (t || ThyNavComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UpdateHostClassService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyNavComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyNavComponent, selectors: [["thy-nav"]], hostAttrs: [1, "thy-nav"], hostVars: 4, hostBindings: function ThyNavComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-nav--vertical", ctx._isVertical)("thy-nav--fill", ctx._isFill);
    } }, inputs: { thyType: "thyType", thySize: "thySize", thyHorizontal: "thyHorizontal", thyVertical: "thyVertical", thyFill: "thyFill" }, features: [ɵngcc0.ɵɵProvidersFeature([UpdateHostClassService])], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ThyNavComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
ThyNavComponent.ctorParameters = () => [
    { type: UpdateHostClassService },
    { type: ElementRef }
];
ThyNavComponent.propDecorators = {
    thyType: [{ type: Input }],
    thySize: [{ type: Input }],
    thyHorizontal: [{ type: Input }],
    thyVertical: [{ type: Input }],
    thyFill: [{ type: Input }],
    _isVertical: [{ type: HostBinding, args: ['class.thy-nav--vertical',] }],
    _isFill: [{ type: HostBinding, args: ['class.thy-nav--fill',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyNavComponent, [{
        type: Component,
        args: [{
                selector: 'thy-nav',
                template: `
        <ng-content></ng-content>
    `,
                host: {
                    class: 'thy-nav'
                },
                providers: [UpdateHostClassService]
            }]
    }], function () { return [{ type: ɵngcc1.UpdateHostClassService }, { type: ɵngcc0.ElementRef }]; }, { _isVertical: [{
            type: HostBinding,
            args: ['class.thy-nav--vertical']
        }], _isFill: [{
            type: HostBinding,
            args: ['class.thy-nav--fill']
        }], thyType: [{
            type: Input
        }], thySize: [{
            type: Input
        }], thyHorizontal: [{
            type: Input
        }], thyVertical: [{
            type: Input
        }], thyFill: [{
            type: Input
        }] }); })();

class ThyNavLinkDirective {
    constructor() {
        this.navLinkActive = false;
        this.navLinkClass = true;
        // @HostBinding('attr.href') navLinkHref = 'javascript:;';
    }
    set thyNavLinkActive(active) {
        this.navLinkActive = coerceBooleanProperty(active);
    }
}
ThyNavLinkDirective.ɵfac = function ThyNavLinkDirective_Factory(t) { return new (t || ThyNavLinkDirective)(); };
ThyNavLinkDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyNavLinkDirective, selectors: [["", "thyNavLink", ""]], hostVars: 4, hostBindings: function ThyNavLinkDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("active", ctx.navLinkActive)("nav-link", ctx.navLinkClass);
    } }, inputs: { thyNavLinkActive: "thyNavLinkActive" } });
ThyNavLinkDirective.propDecorators = {
    thyNavLinkActive: [{ type: Input }],
    navLinkActive: [{ type: HostBinding, args: ['class.active',] }],
    navLinkClass: [{ type: HostBinding, args: ['class.nav-link',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyNavLinkDirective, [{
        type: Directive,
        args: [{
                selector: '[thyNavLink]'
            }]
    }], function () { return []; }, { navLinkActive: [{
            type: HostBinding,
            args: ['class.active']
        }], navLinkClass: [{
            type: HostBinding,
            args: ['class.nav-link']
        }], thyNavLinkActive: [{
            type: Input
        }] }); })();

class ThyIconNavComponent {
    constructor(updateHostClassService, changeDetectorRef, elementRef) {
        this.updateHostClassService = updateHostClassService;
        this.changeDetectorRef = changeDetectorRef;
        this.initialized = false;
        this.isIconNav = true;
        this.updateHostClassService.initializeElement(elementRef);
    }
    set thyType(type) {
        this.type = type;
        this.updateClasses();
        this.changeDetectorRef.markForCheck();
    }
    updateClasses(bypassInitialized) {
        if (!bypassInitialized && !this.initialized) {
            return;
        }
        this.updateHostClassService.updateClass(this.type ? [`thy-icon-nav-${this.type}`] : []);
    }
    ngOnInit() {
        this.initialized = true;
        this.updateClasses(true);
    }
}
ThyIconNavComponent.ɵfac = function ThyIconNavComponent_Factory(t) { return new (t || ThyIconNavComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UpdateHostClassService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyIconNavComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyIconNavComponent, selectors: [["thy-icon-nav"]], hostVars: 2, hostBindings: function ThyIconNavComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-icon-nav", ctx.isIconNav);
    } }, inputs: { thyType: "thyType" }, features: [ɵngcc0.ɵɵProvidersFeature([UpdateHostClassService])], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ThyIconNavComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
ThyIconNavComponent.ctorParameters = () => [
    { type: UpdateHostClassService },
    { type: ChangeDetectorRef },
    { type: ElementRef }
];
ThyIconNavComponent.propDecorators = {
    isIconNav: [{ type: HostBinding, args: [`class.thy-icon-nav`,] }],
    thyType: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyIconNavComponent, [{
        type: Component,
        args: [{
                selector: 'thy-icon-nav',
                template: "<ng-content></ng-content>\n",
                providers: [UpdateHostClassService],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc1.UpdateHostClassService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }]; }, { isIconNav: [{
            type: HostBinding,
            args: [`class.thy-icon-nav`]
        }], thyType: [{
            type: Input
        }] }); })();

class ThyIconNavLinkComponent {
    constructor() {
        this.navLinkActive = false;
        this.navLinkClass = true;
    }
    set thyIconNavLinkIcon(icon) {
        this.icon = icon;
    }
    set thyIconNavLinkActive(active) {
        this.navLinkActive = coerceBooleanProperty(active);
    }
}
ThyIconNavLinkComponent.ɵfac = function ThyIconNavLinkComponent_Factory(t) { return new (t || ThyIconNavLinkComponent)(); };
ThyIconNavLinkComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyIconNavLinkComponent, selectors: [["", "thyIconNavLink", ""]], hostVars: 4, hostBindings: function ThyIconNavLinkComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("active", ctx.navLinkActive)("thy-icon-nav-link", ctx.navLinkClass);
    } }, inputs: { thyIconNavLinkIcon: "thyIconNavLinkIcon", thyIconNavLinkActive: "thyIconNavLinkActive" }, attrs: _c1, ngContentSelectors: _c0, decls: 2, vars: 1, consts: [[3, "thyIconName", 4, "ngIf"], [3, "thyIconName"]], template: function ThyIconNavLinkComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵtemplate(1, ThyIconNavLinkComponent_thy_icon_1_Template, 1, 1, "thy-icon", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.icon);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.ThyIconComponent], encapsulation: 2 });
ThyIconNavLinkComponent.propDecorators = {
    navLinkActive: [{ type: HostBinding, args: ['class.active',] }],
    navLinkClass: [{ type: HostBinding, args: ['class.thy-icon-nav-link',] }],
    thyIconNavLinkIcon: [{ type: Input }],
    thyIconNavLinkActive: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyIconNavLinkComponent, [{
        type: Component,
        args: [{
                selector: '[thyIconNavLink]',
                template: '<ng-content></ng-content><thy-icon *ngIf="icon" [thyIconName]="icon"></thy-icon>'
            }]
    }], function () { return []; }, { navLinkActive: [{
            type: HostBinding,
            args: ['class.active']
        }], navLinkClass: [{
            type: HostBinding,
            args: ['class.thy-icon-nav-link']
        }], thyIconNavLinkIcon: [{
            type: Input
        }], thyIconNavLinkActive: [{
            type: Input
        }] }); })();

class ThyNavModule {
}
ThyNavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyNavModule });
ThyNavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyNavModule_Factory(t) { return new (t || ThyNavModule)(); }, imports: [[CommonModule, ThyIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyNavModule, { declarations: function () { return [ThyNavComponent, ThyNavLinkDirective, ThyIconNavComponent, ThyIconNavLinkComponent]; }, imports: function () { return [CommonModule, ThyIconModule]; }, exports: function () { return [ThyNavComponent, ThyNavLinkDirective, ThyIconNavComponent, ThyIconNavLinkComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyNavModule, [{
        type: NgModule,
        args: [{
                declarations: [ThyNavComponent, ThyNavLinkDirective, ThyIconNavComponent, ThyIconNavLinkComponent],
                imports: [CommonModule, ThyIconModule],
                exports: [ThyNavComponent, ThyNavLinkDirective, ThyIconNavComponent, ThyIconNavLinkComponent]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ThyIconNavComponent, ThyIconNavLinkComponent, ThyNavComponent, ThyNavLinkDirective, ThyNavModule };

//# sourceMappingURL=ngx-tethys-nav.js.map