{"version":3,"file":"ngx-tethys-core.js","sources":["../../src/core/behaviors/constructor.ts","../../src/core/behaviors/disabled.ts","../../src/core/behaviors/unsubscribe.ts","../../src/core/behaviors/loading-done.ts","../../src/core/behaviors/decorators.ts","../../src/core/scroll-to.service.ts","../../src/core/event-dispatchers/event-dispatcher.ts","../../src/core/event-dispatchers/click-dispatcher.ts","../../src/core/event-dispatchers/keyboard-dispatcher.ts","../../src/core/click-positioner.ts","../../src/core/request-animation.ts","../../src/core/scroll.ts","../../src/core/animation/animation-consts.ts","../../src/core/animation/fade.ts","../../src/core/overlay/overlay-position-map.ts","../../src/core/overlay/utils.ts","../../src/core/overlay/overlay.directive.ts","../../src/core/overlay/abstract-overlay-ref.ts","../../src/core/overlay/abstract-overlay.config.ts","../../src/core/overlay/abstract-overlay-container.ts","../../src/core/overlay/abstract-overlay.service.ts","../../src/core/update-host-class.service.ts","../../src/core/translate.ts","../../src/core/ngx-tethys-core.ts"],"names":[],"mappings":"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","sourcesContent":["export type Constructor<T> = new (...args: any[]) => T;\n\nexport class AnonymousClass {}\n\nexport class MixinBase {}\n","import { Constructor } from './constructor';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\nexport interface ThyCanDisable {\n    thyDisabled: boolean;\n}\n\nexport type ThyCanDisableCtor = Constructor<ThyCanDisable>;\n\n/** Mixin to augment a directive with a `disable` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): ThyCanDisableCtor & T {\n    return class extends base {\n        private _thyDisabled = false;\n\n        get thyDisabled() {\n            return this._thyDisabled;\n        }\n\n        set thyDisabled(value: any) {\n            this._thyDisabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { Subject } from 'rxjs';\nimport { OnDestroy } from '@angular/core';\nimport { Constructor } from './constructor';\n\nexport interface ThyUnsubscribe extends OnDestroy {\n    ngUnsubscribe$: Subject<any>;\n}\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinUnsubscribe<T extends Constructor<{}>>(base: T): Constructor<ThyUnsubscribe> & T {\n    return class Mixin extends base {\n        ngUnsubscribe$ = new Subject();\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        ngUnsubscribeReinitialize() {\n            this.ngUnsubscribe$.next();\n            this.ngUnsubscribe$.complete();\n            this.ngUnsubscribe$ = new Subject();\n        }\n\n        ngOnDestroy() {\n            this.ngUnsubscribe$.next();\n            this.ngUnsubscribe$.complete();\n        }\n    };\n}\n","import { Subject } from 'rxjs';\nimport { OnDestroy } from '@angular/core';\nimport { Constructor } from './constructor';\n\nexport interface ThyLoadingDone {\n    loadingDone: boolean;\n}\n\nexport function mixinLoadingDone<T extends Constructor<{}>>(base: T): Constructor<ThyLoadingDone> & T {\n    return class Mixin extends base {\n        loadingDone = false;\n\n        setLoadingDone(value: boolean) {\n            this.loadingDone = value;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { coerceNumberValue, coerceBooleanProperty, coerceCssPixelValue } from 'ngx-tethys/util';\n\nexport function InputBoolean(): any {\n    return propDecoratorFactory('InputBoolean', coerceBooleanProperty);\n}\n\nexport function InputCssPixel(): any {\n    return propDecoratorFactory('InputCssPixel', coerceCssPixelValue);\n}\n\nexport function InputNumber(): any {\n    return propDecoratorFactory('InputNumber', coerceNumberValue);\n}\n\nfunction propDecoratorFactory<T, D>(name: string, fallback: (v: T) => D): (target: any, propName: string) => void {\n    function propDecorator(target: any, propName: string, originalDescriptor?: TypedPropertyDescriptor<any>): any {\n        const privatePropName = `$$__${propName}`;\n\n        if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\n            console.warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${name} decorator.`);\n        }\n\n        Object.defineProperty(target, privatePropName, {\n            configurable: true,\n            writable: true\n        });\n\n        return {\n            get(): string {\n                return originalDescriptor && originalDescriptor.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n            },\n            set(value: T): void {\n                if (originalDescriptor && originalDescriptor.set) {\n                    originalDescriptor.set.bind(this)(fallback(value));\n                }\n                this[privatePropName] = fallback(value);\n            }\n        };\n    }\n\n    return propDecorator;\n}\n","import { Injectable } from '@angular/core';\nimport { dom } from 'ngx-tethys/util';\n\nexport class ScrollToService {\n    static _customScrollToElement(targetElement: HTMLElement, containerElement: HTMLElement) {\n        const containerOffset = dom.getElementOffset(containerElement);\n        const targetOffset = dom.getElementOffset(targetElement);\n        // 选择项在顶部隐藏的偏移量 > 0 表示被顶部遮住隐藏\n        const topOffset = containerOffset.top - targetOffset.top;\n        // 选择项在底部隐藏的偏移量 > 0 表示被底部遮住隐藏\n        const bottomOffset = targetOffset.top + targetOffset.height - (containerOffset.top + containerOffset.height);\n        // 隐藏后滚动展示 targetElement 的偏移量，避免紧挨着头部或者底部\n        const viewOffset = targetOffset.height;\n        if (topOffset > 0) {\n            containerElement.scrollTop = containerElement.scrollTop - topOffset - viewOffset;\n        } else if (bottomOffset > 0) {\n            containerElement.scrollTop = containerElement.scrollTop + bottomOffset + viewOffset;\n        }\n    }\n    static scrollToElement(targetElement: HTMLElement, containerElement: HTMLElement) {\n        if (targetElement) {\n            this._customScrollToElement(targetElement, containerElement);\n            // if (targetElement.scrollIntoView) {\n            //     targetElement.scrollIntoView({\n            //         behavior: 'smooth',\n            //         block: 'center'\n            //     });\n            // } else {\n            //     this._customScrollToElement(targetElement, containerElement);\n            // }\n        }\n    }\n}\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { fromEvent, Subject, Observable, Observer, Subscription } from 'rxjs';\nimport { auditTime } from 'rxjs/operators';\n\nconst DEFAULT_EVENT_TIME = 100;\n\n@Injectable()\nexport abstract class ThyEventDispatcher implements OnDestroy {\n    private _globalSubscription: Subscription = null;\n\n    private _event$ = new Subject<Event>();\n\n    private _subscriptionCount = 0;\n\n    private _addGlobalListener() {\n        this._globalSubscription = this.ngZone.runOutsideAngular(() => {\n            return fromEvent(this.document, this.eventName).subscribe((event: Event) => {\n                this._event$.next(event);\n            });\n        });\n    }\n\n    private _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n\n    get globalSubscription(): Subscription {\n        return this._globalSubscription;\n    }\n\n    constructor(private document: any, private ngZone: NgZone, private eventName: string) {}\n\n    protected subscribe(auditTimeInMs: number = DEFAULT_EVENT_TIME): Observable<Event> {\n        return new Observable(observer => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription =\n                auditTimeInMs > 0 ? this._event$.pipe(auditTime(auditTimeInMs)).subscribe(observer) : this._event$.subscribe(observer);\n\n            this._subscriptionCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._subscriptionCount--;\n\n                if (!this._subscriptionCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this._event$.complete();\n    }\n}\n","import { Injectable, Inject, NgZone, OnDestroy } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { ThyEventDispatcher } from './event-dispatcher';\n\nconst DEFAULT_CLICKED_TIME = 100;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyClickDispatcher extends ThyEventDispatcher {\n    constructor(@Inject(DOCUMENT) document: any, ngZone: NgZone) {\n        super(document, ngZone, 'click');\n    }\n\n    clicked(auditTimeInMs: number = DEFAULT_CLICKED_TIME): Observable<Event> {\n        return this.subscribe(auditTimeInMs);\n    }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport {\n    Inject,\n    Injectable,\n    NgZone\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ThyEventDispatcher } from './event-dispatcher';\n\nconst DEFAULT_KEYDOWN_TIME = 100;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyKeyboardDispatcher extends ThyEventDispatcher {\n\n    constructor(\n        @Inject(DOCUMENT) document: any,\n        ngZone: NgZone\n    ) {\n        super(document, ngZone, 'keydown');\n    }\n\n    keydown(auditTimeInMs: number = DEFAULT_KEYDOWN_TIME): Observable<Event> {\n        return this.subscribe(auditTimeInMs);\n    }\n}\n\n\n// @Injectable({ providedIn: 'root' })\n// export class ThyKeyboardDispatcher implements OnDestroy {\n//     /** Currently attached keydown refs in the order they were attached. */\n//     _attachedKeydownSubjects: Subject<KeyboardEvent>[] = [];\n\n//     private _document: Document;\n\n//     private _isAttached: boolean;\n\n//     /** Keyboard event listener that will be attached to the body. */\n//     private _keydownListener = (event: KeyboardEvent) => {\n//         const keydownRefs = this._attachedKeydownSubjects;\n\n//         for (let i = keydownRefs.length - 1; i > -1; i--) {\n//             keydownRefs[i].next(event);\n//             break;\n//         }\n//     }\n\n//     /** Detaches the global keyboard event listener. */\n//     private _detach() {\n//         if (this._isAttached) {\n//             this._document.body.removeEventListener(\n//                 'keydown',\n//                 this._keydownListener,\n//                 true\n//             );\n//             this._isAttached = false;\n//         }\n//     }\n\n//     constructor(@Inject(DOCUMENT) document: any) {\n//         this._document = document;\n//     }\n\n//     ngOnDestroy() {\n//         this._detach();\n//     }\n\n//     /** Add a new overlay to the list of attached overlay refs. */\n//     add(keydownSubject: Subject<KeyboardEvent>): void {\n//         // Ensure that we don't get the same overlay multiple times.\n//         this.remove(keydownSubject);\n\n//         // Lazily start dispatcher once first overlay is added\n//         if (!this._isAttached) {\n//             this._document.body.addEventListener(\n//                 'keydown',\n//                 this._keydownListener,\n//                 true\n//             );\n//             this._isAttached = true;\n//         }\n\n//         this._attachedKeydownSubjects.push(keydownSubject);\n//     }\n\n//     /** Remove an keydown ref from the list of attached keydown refs. */\n//     remove(keydownRef: Subject<KeyboardEvent>): void {\n//         const index = this._attachedKeydownSubjects.indexOf(keydownRef);\n\n//         if (index > -1) {\n//             this._attachedKeydownSubjects.splice(index, 1);\n//         }\n\n//         // Remove the global listener once there are no more refs.\n//         if (this._attachedKeydownSubjects.length === 0) {\n//             this._detach();\n//         }\n//     }\n// }\n","import { Injectable, Inject, NgZone } from '@angular/core';\nimport { ThyClickDispatcher } from './event-dispatchers/index';\n\nexport interface ThyClickPosition {\n    x: number;\n    y: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyClickPositioner {\n    private lastPosition: ThyClickPosition = null;\n\n    private initialized = false;\n\n    constructor(private clickDispatcher: ThyClickDispatcher) {}\n\n    get lastClickPosition(): ThyClickPosition | null {\n        return this.lastPosition;\n    }\n\n    runTaskUseLastPosition(task: (position?: ThyClickPosition) => void) {\n        setTimeout(() => {\n            task(this.lastClickPosition);\n        });\n    }\n\n    initialize(): void {\n        if (this.initialized) {\n            return;\n        }\n        this.initialized = true;\n        this.clickDispatcher.clicked(0).subscribe((event: MouseEvent) => {\n            this.lastPosition = { x: event.clientX, y: event.clientY };\n        });\n    }\n}\n","const availablePrefixes = ['moz', 'ms', 'webkit'];\n\nfunction requestAnimationFramePolyfill(): typeof requestAnimationFrame {\n    let lastTime = 0;\n    return function(callback: FrameRequestCallback): number {\n        const currTime = new Date().getTime();\n        const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        const id = setTimeout(() => {\n            callback(currTime + timeToCall);\n        }, timeToCall) as any; // setTimeout type warn\n        lastTime = currTime + timeToCall;\n        return id;\n    };\n}\n\nfunction getRequestAnimationFrame(): typeof requestAnimationFrame {\n    if (typeof window === 'undefined') {\n        return () => 0;\n    }\n    if (window.requestAnimationFrame) {\n        // https://github.com/vuejs/vue/issues/4465\n        return window.requestAnimationFrame.bind(window);\n    }\n\n    const prefix = availablePrefixes.filter(key => `${key}RequestAnimationFrame` in window)[0];\n\n    return prefix ? (window as any)[`${prefix}RequestAnimationFrame`] : requestAnimationFramePolyfill();\n}\nexport function cancelRequestAnimationFrame(id: number): any {\n    if (typeof window === 'undefined') {\n        return null;\n    }\n    if (window.cancelAnimationFrame) {\n        return window.cancelAnimationFrame(id);\n    }\n    const prefix = availablePrefixes.filter(\n        key => `${key}CancelAnimationFrame` in window || `${key}CancelRequestAnimationFrame` in window\n    )[0];\n\n    return prefix\n        ? ((window as any)[`${prefix}CancelAnimationFrame`] || (window as any)[`${prefix}CancelRequestAnimationFrame`])\n              // @ts-ignore\n              .call(this, id)\n        : clearTimeout(id);\n}\n\nexport const reqAnimFrame = getRequestAnimationFrame();\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { reqAnimFrame } from './request-animation';\n\nexport type EasyingFn = (t: number, b: number, c: number, d: number) => number;\n\nfunction easeInOutCubic(t: number, b: number, c: number, d: number): number {\n    const cc = c - b;\n    let tt = t / (d / 2);\n    if (tt < 1) {\n        return (cc / 2) * tt * tt * tt + b;\n    } else {\n        return (cc / 2) * ((tt -= 2) * tt * tt + 2) + b;\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyScrollService {\n    private document: Document;\n\n    constructor(@Inject(DOCUMENT) document: any) {\n        this.document = document;\n    }\n\n    /** Set the position of the scroll bar of `element`. */\n    setScrollTop(element: Element | Window, topValue: number = 0): void {\n        if (element === window) {\n            this.document.body.scrollTop = topValue;\n            this.document.documentElement.scrollTop = topValue;\n        } else {\n            (element as Element).scrollTop = topValue;\n        }\n    }\n\n    /** Get the position of the scoll bar of `element`. */\n    getScroll(element?: Element | Window, top: boolean = true): number {\n        const target = element ? element : window;\n        const prop = top ? 'pageYOffset' : 'pageXOffset';\n        const method = top ? 'scrollTop' : 'scrollLeft';\n        const isWindow = target === window;\n        let ret = isWindow ? target[prop] : target[method];\n        if (isWindow && typeof ret !== 'number') {\n            ret = this.document.documentElement[method];\n        }\n        return ret;\n    }\n\n    /**\n     * Scroll `element` to some position with animation.\n     *\n     * @param container container, `window` by default\n     * @param topValue Scroll to `top`, 0 by default\n     * @param easing Transition curve, `easeInOutCubic` by default\n     * @param callback callback invoked when transition is done\n     */\n    scrollTo(container: Element | Window, topValue: number = 0, easing?: EasyingFn, callback?: () => void): void {\n        const target = container ? container : window;\n        const scrollTop = this.getScroll(target);\n        const startTime = Date.now();\n        const frameFunc = () => {\n            const timestamp = Date.now();\n            const time = timestamp - startTime;\n            this.setScrollTop(target, (easing || easeInOutCubic)(time, scrollTop, topValue, 450));\n            if (time < 450) {\n                reqAnimFrame(frameFunc);\n            } else {\n                if (callback) {\n                    callback();\n                }\n            }\n        };\n        reqAnimFrame(frameFunc);\n    }\n}\n","export class AnimationDuration {\n    static SLOW = '0.3s'; // Modal\n    static BASE = '0.2s';\n    static FAST = '0.1s'; // Tooltip\n}\n\nexport class AnimationCurves {\n    static EASE_BASE_OUT = 'cubic-bezier(0.7, 0.3, 0.1, 1)';\n    static EASE_BASE_IN = 'cubic-bezier(0.9, 0, 0.3, 0.7)';\n    static EASE_OUT = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\n    static EASE_IN = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';\n    static EASE_IN_OUT = 'cubic-bezier(0.645, 0.045, 0.355, 1)';\n    static EASE_OUT_BACK = 'cubic-bezier(0.12, 0.4, 0.29, 1.46)';\n    static EASE_IN_BACK = 'cubic-bezier(0.71, -0.46, 0.88, 0.6)';\n    static EASE_IN_OUT_BACK = 'cubic-bezier(0.71, -0.46, 0.29, 1.46)';\n    static EASE_OUT_CIRC = 'cubic-bezier(0.08, 0.82, 0.17, 1)';\n    static EASE_IN_CIRC = 'cubic-bezier(0.6, 0.04, 0.98, 0.34)';\n    static EASE_IN_OUT_CIRC = 'cubic-bezier(0.78, 0.14, 0.15, 0.86)';\n    static EASE_OUT_QUINT = 'cubic-bezier(0.23, 1, 0.32, 1)';\n    static EASE_IN_QUINT = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\n    static EASE_IN_OUT_QUINT = 'cubic-bezier(0.86, 0, 0.07, 1)';\n}\n","import { animate, AnimationTriggerMetadata, style, transition, trigger } from '@angular/animations';\nimport { AnimationDuration } from './animation-consts';\n\nexport const fadeMotion: AnimationTriggerMetadata = trigger('fadeMotion', [\n    transition(':enter', [style({ opacity: 0 }), animate(`${AnimationDuration.BASE}`, style({ opacity: 1 }))]),\n    transition(':leave', [style({ opacity: 1 }), animate(`${AnimationDuration.BASE}`, style({ opacity: 0 }))])\n]);\n","import { ConnectionPositionPair } from '@angular/cdk/overlay';\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = ({\n    top: {\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter: {\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topLeft: {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    topRight: {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    right: {\n        originX: 'end',\n        originY: 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop: {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    rightBottom: {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    bottom: {\n        originX: 'center',\n        originY: 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX: 'center',\n        originY: 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft: {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight: {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left: {\n        originX: 'start',\n        originY: 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop: {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom: {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n} as {}) as { [key: string]: ConnectionPositionPair };\n\nexport const EXPANDED_DROPDOWN_POSITIONS = [\n    POSITION_MAP.bottomLeft,\n    POSITION_MAP.bottomRight,\n    POSITION_MAP.topLeft,\n    POSITION_MAP.topRight\n];\n","import { ThyPlacement, ConnectedPositionOffset } from './interface';\nimport { POSITION_MAP } from './overlay-position-map';\nimport { ConnectionPositionPair } from '@angular/cdk/overlay';\n\nconst connectionFallbackPositionsMap: { [key: string]: ThyPlacement[] } = {\n    top: ['topLeft', 'topRight', 'bottom', 'bottomLeft', 'bottomRight'],\n    topLeft: ['top', 'topRight', 'bottomLeft', 'bottom', 'bottomRight'],\n    topRight: ['top', 'topLeft', 'bottomRight', 'bottom', 'bottomLeft'],\n    bottom: ['bottomLeft', 'bottomRight', 'top', 'topLeft', 'topRight'],\n    bottomLeft: ['bottom', 'bottomRight', 'topLeft', 'top', 'topRight'],\n    bottomRight: ['bottom', 'bottomLeft', 'topRight', 'top', 'topLeft'],\n    left: ['leftTop', 'leftBottom', 'right', 'rightTop', 'rightBottom'],\n    leftTop: ['left', 'leftBottom', 'rightTop', 'right', 'rightBottom'],\n    leftBottom: ['left', 'leftTop', 'rightBottom', 'right', 'rightTop'],\n    right: ['rightTop', 'rightBottom', 'left', 'leftTop', 'leftBottom'],\n    rightTop: ['right', 'rightBottom', 'leftTop', 'left', 'leftBottom'],\n    rightBottom: ['right', 'rightTop', 'leftBottom', 'left', 'leftTop']\n};\n\nexport function buildConnectedPositionOffset(placement: ThyPlacement, offset: number): ConnectedPositionOffset {\n    const connectedPositionOffset: ConnectedPositionOffset = {};\n    if (placement.startsWith('top')) {\n        connectedPositionOffset.offsetY = -offset;\n    } else if (placement.startsWith('bottom')) {\n        connectedPositionOffset.offsetY = offset;\n    } else if (placement.startsWith('left')) {\n        connectedPositionOffset.offsetX = -offset;\n    } else if (placement.startsWith('right')) {\n        connectedPositionOffset.offsetX = offset;\n    } else {\n        // do nothings\n    }\n    return connectedPositionOffset;\n}\n\nexport function buildConnectedPositionPair(\n    placement: ThyPlacement,\n    offset?: number,\n    panelClassPrefix?: string\n): ConnectionPositionPair {\n    const position: ConnectionPositionPair = {\n        ...POSITION_MAP[placement],\n        ...(offset ? buildConnectedPositionOffset(placement, offset) : null)\n    };\n    if (panelClassPrefix) {\n        position.panelClass = `${panelClassPrefix}-${placement}`;\n    }\n    return position;\n}\n\nexport function getFallbackPlacements(placement: ThyPlacement): ThyPlacement[] {\n    return connectionFallbackPositionsMap[placement] || [];\n}\n\n/**\n * get flexible positions by placement, return placement position and it's fallback connection position\n * @example\n * getFlexiblePositions('top', 10, 'thy-overlay')\n * [{topPosition}, {topLeftPosition}, {topRightPosition}, {bottomPosition}, {bottomLeftPosition}, {bottomRightPosition},]\n * @returns [ConnectionPositionPair]\n */\nexport function getFlexiblePositions(\n    placement: ThyPlacement,\n    offset?: number,\n    panelClassPrefix?: string\n): ConnectionPositionPair[] {\n    const fallbackPlacements = getFallbackPlacements(placement);\n\n    return [placement, ...fallbackPlacements].map(placementName => {\n        return buildConnectedPositionPair(placementName, offset, panelClassPrefix);\n    });\n}\n\nexport function getPlacementByPosition(position: ConnectionPositionPair) {\n    const keyList = ['originX', 'originY', 'overlayX', 'overlayY'];\n    for (const placement in POSITION_MAP) {\n        if (keyList.every(key => position[key] === POSITION_MAP[placement][key])) {\n            return placement;\n        }\n    }\n}\n","import { OnDestroy, ElementRef, NgZone } from '@angular/core';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { Subject, fromEvent } from 'rxjs';\nimport { Platform } from '@angular/cdk/platform';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { takeUntil, take } from 'rxjs/operators';\n\nexport type ThyOverlayTrigger = 'hover' | 'focus' | 'click';\n\nexport abstract class ThyOverlayDirectiveBase {\n    protected elementRef: ElementRef;\n    private initialized = false;\n    /** Trigger Overlay */\n    protected _trigger: ThyOverlayTrigger = 'click';\n    public get trigger() {\n        return this._trigger;\n    }\n    public set trigger(value: ThyOverlayTrigger) {\n        this._trigger = value;\n        // Trigger reinitialize when trigger changed which can't contain first\n        if (this.initialized) {\n            this.clearEventListeners();\n            this.initialize();\n        }\n    }\n\n    protected overlayRef: OverlayRef;\n    protected manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    protected ngUnsubscribe$ = new Subject();\n    protected focusMonitor: FocusMonitor;\n    protected platform: Platform;\n    protected ngZone: NgZone;\n    protected showDelay? = 0;\n    protected hideDelay? = 0;\n    protected touchendHideDelay? = 0;\n    protected disabled = false;\n    protected showTimeoutId: number | null | any;\n    protected hideTimeoutId: number | null | any;\n\n    protected tooltipPin: boolean;\n    /** create overlay, you can use popover service or overlay*/\n    abstract createOverlay(): OverlayRef;\n    abstract show(delay?: number): void;\n    abstract hide(delay?: number): void;\n\n    private clearEventListeners() {\n        this.manualListeners.forEach((listener, event) => {\n            this.elementRef.nativeElement.removeEventListener(event, listener);\n        });\n        this.manualListeners.clear();\n        this.focusMonitor.stopMonitoring(this.elementRef);\n    }\n\n    private clearTimer() {\n        if (this.showTimeoutId) {\n            clearTimeout(this.showTimeoutId);\n        }\n        if (this.hideTimeoutId) {\n            clearTimeout(this.hideTimeoutId);\n        }\n    }\n\n    constructor(elementRef: ElementRef, platform: Platform, focusMonitor: FocusMonitor, ngZone: NgZone) {\n        this.elementRef = elementRef;\n        this.platform = platform;\n        this.focusMonitor = focusMonitor;\n        this.ngZone = ngZone;\n    }\n\n    initialize() {\n        this.initialized = true;\n        const element: HTMLElement = this.elementRef.nativeElement;\n        if (!this.platform.IOS && !this.platform.ANDROID) {\n            if (this.trigger === 'hover') {\n                this.manualListeners\n                    .set('mouseenter', () => {\n                        this.show();\n                    })\n                    .set('mouseleave', (event: MouseEvent) => {\n                        // element which mouse moved to\n                        const overlayElement: HTMLElement = this.overlayRef && this.overlayRef.overlayElement;\n                        const toElement = event['toElement'] || event.relatedTarget;\n                        // if element which moved to is in overlayElement, don't hide tooltip\n                        if (overlayElement && overlayElement.contains && overlayElement.contains(toElement as Element) && this.tooltipPin) {\n                            fromEvent(overlayElement, 'mouseleave')\n                                .pipe(take(1))\n                                .subscribe(() => {\n                                    this.hide();\n                                });\n                        } else {\n                            this.hide();\n                        }\n\n                        // if showDelay is too long and mouseleave immediately, overlayRef is not exist, we should clearTimeout\n                        if (!this.overlayRef) {\n                            this.clearTimer();\n                        }\n                    });\n            } else if (this.trigger === 'focus') {\n                this.focusMonitor\n                    .monitor(this.elementRef)\n                    .pipe(takeUntil(this.ngUnsubscribe$))\n                    .subscribe(origin => {\n                        // Note that the focus monitor runs outside the Angular zone.\n                        if (!origin) {\n                            this.ngZone.run(() => this.hide(0));\n                        } else {\n                            this.ngZone.run(() => this.show());\n                        }\n                    });\n                // this.manualListeners.set('focus', () => this.show());\n                // this.manualListeners.set('blur', () => this.hide());\n            } else if (this.trigger === 'click') {\n                this.manualListeners.set('click', () => this.show());\n            } else {\n                throw new Error(`${this.trigger} is not support, only support hover | focus | click`);\n            }\n        } else {\n            const touchendListener = () => {\n                // this.hide(this.touchendHideDelay);\n                setTimeout(() => {\n                    this.hide();\n                }, this.touchendHideDelay);\n            };\n            // Reserve extensions for mobile in the future\n            this.manualListeners\n                .set('touchend', touchendListener)\n                .set('touchcancel', touchendListener)\n                .set('touchstart', () => {\n                    this.show();\n                });\n        }\n\n        this.manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\n    }\n\n    dispose(): void {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.clearEventListeners();\n        this.clearTimer();\n    }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { ThyUpperOverlayPosition, ThyUpperOverlayOptions, ThyAbstractOverlayConfig } from './abstract-overlay.config';\nimport { filter, take } from 'rxjs/operators';\nimport { OverlayRef, PositionStrategy, GlobalPositionStrategy } from '@angular/cdk/overlay';\nimport { ThyAbstractOverlayContainer } from './abstract-overlay-container';\nimport { ESCAPE } from 'ngx-tethys/util';\n\nexport abstract class ThyAbstractOverlayRef<\n    TComponent = unknown,\n    TContainer extends ThyAbstractOverlayContainer = ThyAbstractOverlayContainer,\n    TResult = any\n> {\n    id: string;\n    componentInstance: TComponent;\n    backdropClosable: boolean;\n    containerInstance: TContainer;\n    abstract getOverlayRef(): OverlayRef;\n    abstract close(dialogResult?: TResult): void;\n    abstract afterOpened(): Observable<void>;\n    abstract afterClosed(): Observable<TResult | undefined>;\n    abstract beforeClosed(): Observable<TResult | undefined>;\n    abstract keydownEvents(): Observable<KeyboardEvent>;\n    abstract backdropClick(): Observable<MouseEvent>;\n    abstract updatePosition(position?: ThyUpperOverlayPosition): this;\n}\n\n// Counter for unique overlay ids.\nconst uniqueIdMap: { [key: string]: number } = {};\n\nfunction getUniqueId(name: string) {\n    if (uniqueIdMap[name] !== undefined) {\n        uniqueIdMap[name] = uniqueIdMap[name] + 1;\n    } else {\n        uniqueIdMap[name] = 0;\n    }\n    return uniqueIdMap[name];\n}\n\nexport abstract class ThyAbstractInternalOverlayRef<\n    T,\n    TContainer extends ThyAbstractOverlayContainer,\n    TResult = undefined\n> extends ThyAbstractOverlayRef<T, TContainer, TResult> {\n    /** The instance of component opened into the dialog. */\n    componentInstance: T;\n\n    /** Whether the user is allowed to close the dialog. */\n    backdropClosable: boolean | undefined = this.config.backdropClosable;\n\n    /** Subject for notifying the user that the dialog has finished opening. */\n    private readonly _afterOpened = new Subject<void>();\n\n    /** Subject for notifying the user that the dialog has finished closing. */\n    private readonly _afterClosed = new Subject<TResult | undefined>();\n\n    /** Subject for notifying the user that the dialog has started closing. */\n    private readonly _beforeClosed = new Subject<TResult | undefined>();\n\n    /** Result to be passed to afterClosed. */\n    private _result: TResult | undefined;\n\n    /** Fetches the position strategy object from the overlay ref. */\n    protected getPositionStrategy(): PositionStrategy {\n        return this.overlayRef.getConfig().positionStrategy;\n    }\n\n    constructor(\n        private options: ThyUpperOverlayOptions,\n        protected overlayRef: OverlayRef,\n        containerInstance: TContainer,\n        protected config: ThyAbstractOverlayConfig\n    ) {\n        super();\n        this.containerInstance = containerInstance;\n        // Pass the id along to the container.\n        this.id = containerInstance.id = config.id ? config.id : `thy-${this.options.name}-${getUniqueId(this.options.name)}`;\n        // Emit when opening animation completes\n        containerInstance.animationOpeningDone.pipe(take(1)).subscribe(() => {\n            this._afterOpened.next();\n            if (this.options.disposeWhenClose) {\n                this._afterOpened.complete();\n            }\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationClosingDone.pipe(take(1)).subscribe(() => {\n            if (this.options.disposeWhenClose) {\n                this.overlayRef.dispose();\n            }\n        });\n\n        // Dispose overlay when container after destroy\n        containerInstance.containerDestroy.pipe(take(1)).subscribe(() => {\n            if (this.options.disposeWhenClose) {\n                // component element has not been deleted when the component destroy, so use promise wait for component element destroyed\n                Promise.resolve().then(() => {\n                    this.overlayRef.dispose();\n                });\n            }\n        });\n\n        overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this.overlayRef.dispose();\n        });\n\n        // ESC close\n        overlayRef\n            .keydownEvents()\n            .pipe(filter(event => event.keyCode === ESCAPE && this.backdropClosable))\n            .subscribe(() => this.close());\n    }\n\n    /**\n     * Close the overlay.\n     * @param overlayResult Optional result to return to the dialog opener.\n     */\n    close(overlayResult?: TResult): void {\n        this._result = overlayResult;\n\n        // Transition the backdrop in parallel to the overlay.\n        this._beforeClosed.next(overlayResult);\n        if (this.options.disposeWhenClose) {\n            this._beforeClosed.complete();\n        }\n        this.overlayRef.detachBackdrop();\n        this.containerInstance.startExitAnimation();\n    }\n\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened(): Observable<void> {\n        return this._afterOpened.asObservable();\n    }\n\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed(): Observable<TResult | undefined> {\n        return this._afterClosed.asObservable();\n    }\n\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed(): Observable<TResult | undefined> {\n        return this._beforeClosed.asObservable();\n    }\n\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick(): Observable<MouseEvent> {\n        return this.overlayRef.backdropClick();\n    }\n\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents(): Observable<KeyboardEvent> {\n        return this.overlayRef.keydownEvents();\n    }\n\n    /** Get overlay ref */\n    getOverlayRef() {\n        return this.overlayRef;\n    }\n\n    /**\n     * Updates the overlay's position when is GlobalPositionStrategy\n     * @param position New overlay position.\n     */\n    updateGlobalPosition(position?: ThyUpperOverlayPosition): this {\n        const strategy = this.getPositionStrategy() as GlobalPositionStrategy;\n\n        if (!(strategy instanceof GlobalPositionStrategy)) {\n            throw new Error(`current strategy is not GlobalPositionStrategy`);\n        }\n\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        } else {\n            strategy.centerHorizontally();\n        }\n\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        } else {\n            strategy.centerVertically();\n        }\n\n        this.overlayRef.updatePosition();\n\n        return this;\n    }\n}\n","import { Direction } from '@angular/cdk/bidi';\nimport { ViewContainerRef } from '@angular/core';\n\nexport interface ThyUpperOverlayPosition {\n    /** Override for the overlay's top position. */\n    top?: string;\n\n    /** Override for the overlay's bottom position. */\n    bottom?: string;\n\n    /** Override for the overlay's left position. */\n    left?: string;\n\n    /** Override for the overlay's right position. */\n    right?: string;\n}\n\nexport class ThyAbstractOverlayConfig<TData = unknown> {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     */\n    viewContainerRef?: ViewContainerRef;\n\n    /** ID for the dialog. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Custom class for the overlay pane. */\n    panelClass?: string | string[] = '';\n\n    /** Whether the dialog has a backdrop. */\n    hasBackdrop? = true;\n\n    /** Custom class for the backdrop, */\n    backdropClass?: string | string[] = '';\n\n    /** Whether the user can use escape or clicking on the backdrop to close the overlay. */\n    backdropClosable? = true;\n\n    /** Width of the dialog. */\n    width? = '';\n\n    /** Height of the dialog. */\n    height? = '';\n\n    /** Min-width of the dialog. If a number is provided, pixel units are assumed. */\n    minWidth?: number | string;\n\n    /** Min-height of the dialog. If a number is provided, pixel units are assumed. */\n    minHeight?: number | string;\n\n    /** Max-width of the dialog. If a number is provided, pixel units are assumed. Defaults to 80vw */\n    maxWidth?: number | string;\n\n    /** Max-height of the dialog. If a number is provided, pixel units are assumed. */\n    maxHeight?: number | string;\n\n    /** Data being injected into the child component. */\n    initialState?: TData | null = null;\n\n    /** Layout direction for the overlay's content. */\n    direction?: Direction;\n\n    /** ID of the element that describes the dialog. */\n    ariaDescribedBy?: string | null = null;\n\n    /** Aria label to assign to the dialog element */\n    ariaLabel?: string | null = null;\n\n    /** Whether the dialog should focus the first focusable element on open. */\n    autoFocus? = true;\n\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     */\n    restoreFocus? = true;\n\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    closeOnNavigation? = true;\n}\n\nexport interface ThyUpperOverlayOptions {\n    /** component name, e.g. dialog | popover | slide */\n    name: string;\n    /** Whether enable animation */\n    animationEnabled: boolean;\n    /** Whether dispose cdk overlay ref when close upper overlay */\n    disposeWhenClose: boolean;\n}\n","import { CdkPortalOutlet, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { EmbeddedViewRef, ComponentRef, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ThyUpperOverlayOptions, ThyAbstractOverlayConfig } from './abstract-overlay.config';\nimport { AnimationEvent } from '@angular/animations';\n\nexport function throwPopoverContentAlreadyAttachedError(name: string) {\n    throw Error(`Attempting to attach ${name} content after content is already attached`);\n}\n\nexport abstract class ThyAbstractOverlayContainer {\n    id?: string;\n\n    animationState: string;\n\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    containerDestroy = new Subject<void>();\n\n    abstract config: ThyAbstractOverlayConfig;\n\n    /**portal outlet */\n    abstract portalOutlet: CdkPortalOutlet;\n\n    /**\n     * Opening overlay animation done\n     */\n    abstract animationOpeningDone: Observable<AnimationEvent>;\n\n    /**\n     * Closing overlay animation done\n     */\n    abstract animationClosingDone: Observable<AnimationEvent>;\n\n    /** Before attach content(TemplatePortal or ComponentPortal) portal to portalOutlet*/\n    abstract beforeAttachPortal(): void;\n\n    /** Before detach content*/\n    beforeDetachPortal() {}\n\n    constructor(private options: ThyUpperOverlayOptions, protected changeDetectorRef: ChangeDetectorRef) {}\n\n    /**\n     * Attach a TemplatePortal as content to this overlay container.\n     * @param portal Portal to be attached as the overlay content.\n     */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        if (this.portalOutlet.hasAttached()) {\n            throwPopoverContentAlreadyAttachedError(this.options.name);\n        }\n\n        this.beforeAttachPortal();\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /**\n     * Attach a ComponentPortal as content to this overlay container.\n     * @param portal Portal to be attached as the overlay content.\n     */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        if (this.portalOutlet.hasAttached()) {\n            throwPopoverContentAlreadyAttachedError(this.options.name);\n        }\n        this.beforeAttachPortal();\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    startExitAnimation() {\n        if (this.options.animationEnabled) {\n            this.animationState = 'exit';\n        } else {\n            // this.animationClosingDone.\n        }\n        this.beforeDetachPortal();\n\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this.changeDetectorRef.markForCheck();\n    }\n\n    destroy() {\n        this.containerDestroy.next();\n    }\n}\n","import { FunctionProp, concatArray } from 'ngx-tethys/util';\nimport { Subject } from 'rxjs';\n\nimport { ComponentType, Overlay, OverlayConfig, OverlayRef, ScrollStrategy } from '@angular/cdk/overlay';\nimport { ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { Injector, TemplateRef } from '@angular/core';\n\nimport { ThyAbstractOverlayContainer } from './abstract-overlay-container';\nimport { ThyAbstractOverlayRef } from './abstract-overlay-ref';\nimport { ThyAbstractOverlayConfig, ThyUpperOverlayOptions } from './abstract-overlay.config';\n\nexport type ComponentTypeOrTemplateRef<T> = ComponentType<T> | TemplateRef<T>;\n\nexport abstract class ThyAbstractOverlayService<TConfig extends ThyAbstractOverlayConfig, TContainer extends ThyAbstractOverlayContainer> {\n    private openedOverlays: ThyAbstractOverlayRef<unknown, TContainer>[] = [];\n\n    private readonly _afterAllClosed = new Subject<void>();\n\n    private readonly _afterOpened = new Subject<ThyAbstractOverlayRef<any, TContainer>>();\n\n    constructor(\n        protected options: ThyUpperOverlayOptions, // component name, e.g: dialog | popover | slide\n        protected overlay: Overlay,\n        protected injector: Injector,\n        protected defaultConfig: TConfig,\n        public scrollStrategy?: FunctionProp<ScrollStrategy>\n    ) {}\n\n    /** Build cdk overlay config by config */\n    protected abstract buildOverlayConfig(config: TConfig): OverlayConfig;\n\n    /** Attach overlay container to overlay*/\n    protected abstract attachUpperOverlayContainer(overlay: OverlayRef, config: TConfig): TContainer;\n\n    /** Create upper overlay ref by cdk overlay, container and config  */\n    protected abstract createUpperOverlayRef<T>(\n        overlayRef: OverlayRef,\n        containerInstance: TContainer,\n        config: TConfig\n    ): ThyAbstractOverlayRef<T, TContainer>;\n\n    /** Create injector for component content */\n    protected abstract createInjector<T>(\n        config: TConfig,\n        overlayRef: ThyAbstractOverlayRef<T, TContainer>,\n        containerInstance: TContainer\n    ): Injector;\n\n    abstract open<T, TData = undefined, TResult = undefined>(\n        componentOrTemplateRef: ComponentTypeOrTemplateRef<T>,\n        config?: ThyAbstractOverlayConfig<TData>\n    ): ThyAbstractOverlayRef<T, TContainer, TResult>;\n\n    /** Attach component or template ref to overlay container */\n    protected attachUpperOverlayContent<T, TResult>(\n        componentOrTemplateRef: ComponentTypeOrTemplateRef<T>,\n        containerInstance: TContainer,\n        overlayRef: OverlayRef,\n        config: TConfig\n    ): ThyAbstractOverlayRef<T, TContainer, TResult> {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const upperOverlayRef = this.createUpperOverlayRef<T>(overlayRef, containerInstance, config);\n\n        // When the backdrop is clicked, we want to close it.\n        if (config.hasBackdrop) {\n            overlayRef.backdropClick().subscribe(() => {\n                if (upperOverlayRef.backdropClosable) {\n                    upperOverlayRef.close();\n                }\n            });\n        }\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            containerInstance.attachTemplatePortal(\n                new TemplatePortal<T>(componentOrTemplateRef, null, <any>{\n                    $implicit: config.initialState,\n                    [`${this.options.name}Ref`]: upperOverlayRef\n                })\n            );\n        } else {\n            const injector = this.createInjector<T>(config, upperOverlayRef, containerInstance);\n            const contentRef = containerInstance.attachComponentPortal<T>(new ComponentPortal(componentOrTemplateRef, undefined, injector));\n            if (config.initialState) {\n                Object.assign(contentRef.instance, config.initialState);\n            }\n            upperOverlayRef.componentInstance = contentRef.instance;\n        }\n\n        return upperOverlayRef;\n    }\n\n    protected removeOpenedOverlay(upperOverlayRef: ThyAbstractOverlayRef<any, TContainer>) {\n        const index = this.openedOverlays.indexOf(upperOverlayRef);\n\n        if (index > -1) {\n            this.openedOverlays.splice(index, 1);\n\n            if (!this.openedOverlays.length) {\n                this._afterAllClosed.next();\n            }\n        }\n    }\n\n    protected getUpperOverlayById(id: string): ThyAbstractOverlayRef<any, TContainer> | undefined {\n        return this.openedOverlays.find(overlay => overlay.id === id);\n    }\n\n    protected buildBaseOverlayConfig(config: TConfig, defaultPanelClass?: string | string[]): OverlayConfig {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.overlay.position().global(),\n            hasBackdrop: config.hasBackdrop,\n            direction: config.direction,\n            width: config.width,\n            height: config.height,\n            minWidth: config.minWidth,\n            minHeight: config.minHeight,\n            maxWidth: config.maxWidth,\n            maxHeight: config.maxHeight,\n            disposeOnNavigation: config.closeOnNavigation\n        });\n\n        if (config.backdropClass) {\n            overlayConfig.backdropClass = config.backdropClass;\n        }\n\n        overlayConfig.panelClass = concatArray(config.panelClass, defaultPanelClass);\n\n        return overlayConfig;\n    }\n\n    protected openUpperOverlay<T, TResult = any>(\n        componentOrTemplateRef: ComponentTypeOrTemplateRef<T>,\n        config?: TConfig\n    ): ThyAbstractOverlayRef<T, TContainer, TResult> {\n        config = { ...this.defaultConfig, ...config };\n        if (config.id && this.getUpperOverlayById(config.id)) {\n            throw Error(`${this.options.name} with id ${config.id} exists already. The ${this.options.name} id must be unique.`);\n        }\n        const overlayConfig: OverlayConfig = this.buildOverlayConfig(config);\n        const overlayRef = this.overlay.create(overlayConfig);\n\n        const overlayContainer = this.attachUpperOverlayContainer(overlayRef, config);\n        const upperOverlayRef = this.attachUpperOverlayContent<T, TResult>(componentOrTemplateRef, overlayContainer, overlayRef, config);\n\n        this.openedOverlays.push(upperOverlayRef);\n        upperOverlayRef.afterClosed().subscribe(() => {\n            this.removeOpenedOverlay(upperOverlayRef);\n        });\n        this._afterOpened.next(upperOverlayRef);\n\n        return upperOverlayRef;\n    }\n\n    afterAllClosed() {\n        return this._afterAllClosed;\n    }\n\n    afterOpened() {\n        return this._afterOpened;\n    }\n\n    close<T>(result?: T) {\n        if (this.openedOverlays.length > 0) {\n            const lastOverlayRef = this.openedOverlays[this.openedOverlays.length - 1];\n            if (lastOverlayRef) {\n                lastOverlayRef.close(result);\n            }\n        }\n    }\n\n    closeAll() {\n        let i = this.openedOverlays.length;\n        while (i--) {\n            // 不需要操作 openedOverlays, 因为 close 会触发 afterClosed 的订阅\n            // 触发订阅后会自动从 openedOverlays 中移除\n            this.openedOverlays[i].close();\n        }\n    }\n\n    dispose(): void {\n        this.closeAll();\n        this._afterAllClosed.complete();\n        this._afterOpened.complete();\n    }\n}\n","import { Injectable, Renderer2, ElementRef } from '@angular/core';\nimport { Dictionary } from 'ngx-tethys/types';\n\n@Injectable()\nexport class UpdateHostClassService {\n    private _classNames: string[] = [];\n\n    private _hostElement: HTMLElement;\n\n    constructor(private renderer: Renderer2) {}\n\n    initializeElement(element: HTMLElement | ElementRef<HTMLElement>) {\n        if (element instanceof ElementRef) {\n            this._hostElement = element.nativeElement;\n        } else {\n            this._hostElement = element;\n        }\n        return this;\n    }\n\n    updateClass(classNames: string[]) {\n        if (this._classNames) {\n            this._classNames.forEach(className => {\n                if (classNames.indexOf(className) < 0) {\n                    this.removeClass(className);\n                }\n            });\n        }\n        const newClasses: string[] = [];\n        classNames.forEach(className => {\n            if (className) {\n                newClasses.push(className);\n                if (this._classNames.indexOf(className) < 0) {\n                    this.addClass(className);\n                }\n            }\n        });\n        this._classNames = newClasses;\n        return this;\n    }\n\n    updateClassByMap(classMap: Dictionary<boolean>) {\n        const newClasses = [];\n        for (const key in classMap) {\n            if (classMap.hasOwnProperty(key) && classMap[key]) {\n                newClasses.push(key);\n            }\n        }\n        this.updateClass(newClasses);\n    }\n\n    addClass(className: string) {\n        this.renderer.addClass(this._hostElement, className);\n        return this;\n    }\n\n    removeClass(className: string) {\n        this.renderer.removeClass(this._hostElement, className);\n        return this;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyTranslate {\n    instant(key: string | Array<string>, interpolateParams?: object): string | any {\n        return key;\n    }\n\n    get(key: string | Array<string>, interpolateParams?: object): Observable<string | any> {\n        return new Observable((observer: Observer<any>) => {\n            observer.next(key);\n        });\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}