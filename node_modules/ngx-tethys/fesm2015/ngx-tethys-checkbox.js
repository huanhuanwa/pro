import { Component, forwardRef, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';
import { ThyTranslate } from 'ngx-tethys/core';
import { coerceBooleanProperty } from 'ngx-tethys/util';
import { ThyFormCheckBaseComponent } from 'ngx-tethys/shared';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/core';
import * as ɵngcc2 from '@angular/common';

function ThyCheckboxComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0._labelText);
} }
const _c0 = function (a0, a1) { return { "form-check-indeterminate": a0, "form-check-no-label-text": a1 }; };
const _c1 = ["*"];
const noop = () => { };
const ɵ0 = noop;
class ThyCheckboxComponent extends ThyFormCheckBaseComponent {
    constructor(thyTranslate) {
        super(thyTranslate);
        this.isIndeterminate = false;
    }
    set thyIndeterminate(value) {
        this.isIndeterminate = coerceBooleanProperty(value);
    }
}
ThyCheckboxComponent.ɵfac = function ThyCheckboxComponent_Factory(t) { return new (t || ThyCheckboxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyTranslate)); };
ThyCheckboxComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyCheckboxComponent, selectors: [["thy-checkbox"], ["", "thy-checkbox", ""], ["", "thyCheckbox", ""]], inputs: { thyIndeterminate: "thyIndeterminate" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => ThyCheckboxComponent),
                multi: true
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 3, vars: 7, consts: [["type", "checkbox", 1, "form-check-input", 3, "ngClass", "checked", "disabled", "change"], ["class", "form-check-label", 4, "ngIf"], [1, "form-check-label"]], template: function ThyCheckboxComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "input", 0);
        ɵngcc0.ɵɵlistener("change", function ThyCheckboxComponent_Template_input_change_0_listener() { return ctx.change(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(1, ThyCheckboxComponent_span_1_Template, 2, 1, "span", 1);
        ɵngcc0.ɵɵprojection(2);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(4, _c0, ctx.isIndeterminate, !ctx._labelText))("checked", ctx._innerValue)("disabled", ctx._disabled);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx._labelText);
    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgIf], encapsulation: 2 });
ThyCheckboxComponent.ctorParameters = () => [
    { type: ThyTranslate }
];
ThyCheckboxComponent.propDecorators = {
    thyIndeterminate: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyCheckboxComponent, [{
        type: Component,
        args: [{
                selector: 'thy-checkbox,[thy-checkbox],[thyCheckbox]',
                template: "<input\n  class=\"form-check-input\"\n  [ngClass]=\"{ 'form-check-indeterminate': isIndeterminate, 'form-check-no-label-text': !_labelText }\"\n  [checked]=\"_innerValue\"\n  (change)=\"change()\"\n  type=\"checkbox\"\n  [disabled]=\"_disabled\"\n/>\n<span class=\"form-check-label\" *ngIf=\"_labelText\">{{ _labelText }}</span>\n<ng-content></ng-content>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => ThyCheckboxComponent),
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.ThyTranslate }]; }, { thyIndeterminate: [{
            type: Input
        }] }); })();

class ThyCheckboxModule {
}
ThyCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyCheckboxModule });
ThyCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyCheckboxModule_Factory(t) { return new (t || ThyCheckboxModule)(); }, imports: [[
            CommonModule,
            FormsModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyCheckboxModule, { declarations: function () { return [ThyCheckboxComponent]; }, imports: function () { return [CommonModule,
        FormsModule]; }, exports: function () { return [ThyCheckboxComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyCheckboxModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    FormsModule
                ],
                declarations: [
                    ThyCheckboxComponent
                ],
                exports: [
                    ThyCheckboxComponent
                ]
            }]
    }], null, null); })();

// export * from './checkbox-group.component';

/**
 * Generated bundle index. Do not edit.
 */

export { ThyCheckboxComponent, ThyCheckboxModule, ɵ0 };

//# sourceMappingURL=ngx-tethys-checkbox.js.map