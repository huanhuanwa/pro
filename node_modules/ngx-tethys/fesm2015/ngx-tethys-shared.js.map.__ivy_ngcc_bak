{"version":3,"file":"ngx-tethys-shared.js","sources":["../../src/shared/ng-transclude.directive.ts","../../src/shared/directives/thy-autofocus.directive.ts","../../src/shared/directives/thy-enter.directive.ts","../../src/shared/directives/thy-ctrl-enter.directive.ts","../../src/shared/directives/thy-show.ts","../../src/shared/directives/thy-stop-propagation.directive.ts","../../src/shared/directives/thy-contextmenu.directive.ts","../../src/shared/directives/thy-scroll.directive.ts","../../src/shared/directives/thy-drag-drop.directive.ts","../../src/shared/shared.module.ts","../../src/shared/base-form-check.component.ts","../../src/shared/select/select-control/select-control.component.ts","../../src/shared/select/module.ts","../../src/shared/option/option.token.ts","../../src/shared/option/list-option/list-option.component.ts","../../src/shared/option/option-group.component.ts","../../src/shared/option/select-option-base.ts","../../src/shared/option/option.component.ts","../../src/shared/option/group/option-group.component.ts","../../src/shared/option/module.ts","../../src/shared/ngx-tethys-shared.ts"],"sourcesContent":["import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[thyTransclude]'\n})\nexport class ThyTranscludeDirective {\n  viewRef: ViewContainerRef;\n\n  protected _viewRef: ViewContainerRef;\n  protected _ngTransclude: TemplateRef<any>;\n\n  @Input()\n  set thyTransclude(templateRef: TemplateRef<any>) {\n    this._ngTransclude = templateRef;\n    if (templateRef) {\n      this.viewRef.createEmbeddedView(templateRef);\n    }\n  }\n\n  get thyTransclude(): TemplateRef<any> {\n    return this._ngTransclude;\n  }\n\n  constructor(viewRef: ViewContainerRef) {\n    this.viewRef = viewRef;\n  }\n}\n","import { Directive, Input, ElementRef } from '@angular/core';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\n@Directive({\n    selector: 'input[thyAutofocus],textarea[thyAutofocus]'\n})\nexport class ThyAutofocusDirective {\n    // 自动选择，用于只读的 input 输入框，方便复制粘贴\n    private _autoSelect = false;\n\n    @Input()\n    set thyAutoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    // auto focus current element\n    @Input()\n    set thyAutofocus(value: boolean | string) {\n        if (coerceBooleanProperty(value) !== false) {\n            setTimeout(() => {\n                this.elementRef.nativeElement.focus();\n                if (this._autoSelect && this.elementRef.nativeElement.select) {\n                    this.elementRef.nativeElement.select();\n                }\n            });\n        }\n    }\n\n    constructor(private elementRef: ElementRef) {}\n}\n","import { Directive, Output, EventEmitter, OnInit, NgZone, ElementRef, Renderer2 } from '@angular/core';\nimport { keycodes } from 'ngx-tethys/util';\n\n/**\n * 与 (keydown.enter) 区别是支持组合键，当按 Ctrl + Enter 或者 Command + Enter 也会触发\n */\n@Directive({\n    selector: '[thyEnter]'\n})\nexport class ThyEnterDirective implements OnInit {\n    @Output() thyEnter = new EventEmitter();\n\n    onKeydown(event: KeyboardEvent) {\n        const keyCode = event.which || event.keyCode;\n        if (keyCode === keycodes.ENTER) {\n            this.ngZone.run(() => {\n                this.thyEnter.emit(event);\n            });\n        }\n    }\n\n    constructor(private ngZone: NgZone, private elementRef: ElementRef, private renderer: Renderer2) {}\n\n    ngOnInit(): void {\n        this.ngZone.runOutsideAngular(() => {\n            this.renderer.listen(this.elementRef.nativeElement, 'keydown', this.onKeydown.bind(this));\n        });\n    }\n}\n","import { Directive, Output, ElementRef, EventEmitter, OnInit, NgZone, Renderer2 } from '@angular/core';\nimport { keycodes } from 'ngx-tethys/util';\n\n@Directive({\n    selector: '[thyCtrlEnter]'\n})\nexport class ThyCtrlEnterDirective implements OnInit {\n    @Output() thyCtrlEnter = new EventEmitter();\n\n    constructor(private ngZone: NgZone, private elementRef: ElementRef, private renderer: Renderer2) {}\n\n    onKeydown(event: KeyboardEvent) {\n        const keyCode = event.which || event.keyCode;\n        if ((event.ctrlKey || event.metaKey) && keyCode === keycodes.ENTER) {\n            event.preventDefault();\n            this.ngZone.run(() => {\n                this.thyCtrlEnter.emit(event);\n            });\n        }\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.renderer.listen(this.elementRef.nativeElement, 'keydown', this.onKeydown.bind(this));\n        });\n    }\n}\n","import { Directive, Renderer2, Input, ElementRef, Output, EventEmitter, OnDestroy } from '@angular/core';\n\n@Directive({ selector: '[thyShow]' })\nexport class ThyShowDirective implements OnDestroy {\n    @Output() thyShowChange = new EventEmitter();\n\n    private unListenEvent: () => void;\n\n    private unListenDocument() {\n        if (this.unListenEvent) {\n            this.unListenEvent();\n            this.unListenEvent = null;\n        }\n    }\n\n    @Input() set thyShow(condition: boolean) {\n        if (condition) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'block');\n            setTimeout(() => {\n                this.unListenDocument = this.renderer.listen('document', 'click', event => {\n                    if (!this.elementRef.nativeElement.contains(event.target)) {\n                        this.thyShowChange.emit(false);\n                        this.unListenDocument();\n                    }\n                });\n            });\n        } else {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');\n            this.unListenDocument();\n        }\n    }\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n    ngOnDestroy() {\n        this.unListenDocument();\n    }\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\n\n/**\n * 将来会移动到 thy 组件库中\n */\n@Directive({\n    selector: '[thyStopPropagation]'\n})\nexport class ThyStopPropagationDirective implements OnInit, OnDestroy {\n    private _listener: () => void;\n\n    private _eventName = 'click';\n\n    private isStopPropagation = true;\n\n    @Input()\n    set thyStopPropagation(value: any) {\n        if (value === false || value === 'false') {\n            this.isStopPropagation = false;\n        } else {\n            this.isStopPropagation = true;\n            this._eventName = value || 'click';\n        }\n    }\n\n    constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {}\n\n    ngOnInit() {\n        if (this.isStopPropagation) {\n            this._listener = this._renderer.listen(this._elementRef.nativeElement, this._eventName, ($event: Event) => {\n                $event.stopPropagation();\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._listener) {\n            this._listener();\n        }\n    }\n}\n","import { Directive, Output, ElementRef, EventEmitter, OnInit, NgZone, Renderer2, HostListener } from '@angular/core';\n\n@Directive({\n    selector: '[thyContextMenu]'\n})\nexport class ThyContextMenuDirective implements OnInit {\n    @Output() thyContextMenu = new EventEmitter();\n\n    constructor(private ngZone: NgZone, private elementRef: ElementRef, private renderer: Renderer2) {}\n\n    rightClick(event: Event) {\n        event.preventDefault();\n        this.ngZone.run(() => {\n            this.thyContextMenu.emit(event);\n        });\n    }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            this.renderer.listen(this.elementRef.nativeElement, 'contextmenu', this.rightClick.bind(this));\n        });\n    }\n}\n","import { Directive, ElementRef, OnInit, NgZone, OnDestroy, Output, EventEmitter, Input } from '@angular/core';\nimport { Subject, Observable, Observer, fromEvent, Subscription } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\n@Directive({\n    selector: '[thyScroll]'\n})\nexport class ThyScrollDirective implements OnInit, OnDestroy {\n    private _destroyed = new Subject();\n    private _enable = true;\n    private _initialled = false;\n    private _subscription: Subscription;\n\n    private _elementScrolled: Observable<Event> = new Observable((observer: Observer<Event>) =>\n        this.ngZone.runOutsideAngular(() =>\n            fromEvent(this.elementRef.nativeElement, 'scroll')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(observer)\n        )\n    );\n\n    @Input()\n    set thyEnable(value: boolean) {\n        this._enable = coerceBooleanProperty(value);\n        if (this._initialled) {\n            if (this._enable && this._subscription === null) {\n                this._subscription = this._elementScrolled.subscribe(() => this.thyOnScrolled.emit(this.elementRef));\n            } else {\n                if (this._subscription) {\n                    this._subscription.unsubscribe();\n                    this._subscription = null;\n                }\n            }\n        }\n    }\n\n    @Output() thyOnScrolled: EventEmitter<ElementRef> = new EventEmitter<ElementRef>();\n\n    constructor(private elementRef: ElementRef<any>, private ngZone: NgZone) {}\n\n    ngOnInit() {\n        if (this._enable) {\n            this._subscription = this._elementScrolled.subscribe(() => this.thyOnScrolled.emit(this.elementRef));\n        }\n        this._initialled = true;\n    }\n\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n\n    getElementRef(): ElementRef<HTMLElement> {\n        return this.elementRef;\n    }\n}\n","import { Directive, AfterContentInit, ContentChildren, QueryList, OnDestroy } from '@angular/core';\nimport { CdkDrag } from '@angular/cdk/drag-drop';\nimport { merge, Subject } from 'rxjs';\nimport { Constructor, MixinBase, mixinUnsubscribe, ThyUnsubscribe } from 'ngx-tethys/core';\nimport { takeUntil, startWith } from 'rxjs/operators';\n\nconst _MixinBase: Constructor<ThyUnsubscribe> & typeof MixinBase = mixinUnsubscribe(MixinBase);\n@Directive({\n    selector: '[thyDragDrop]'\n})\nexport class ThyDragDropDirective extends _MixinBase implements AfterContentInit, OnDestroy {\n    @ContentChildren(CdkDrag, { descendants: true }) draggables: QueryList<CdkDrag>;\n\n    constructor() {\n        super();\n    }\n\n    ngAfterContentInit() {\n        if (this.draggables) {\n            this.draggables.changes.pipe(startWith(this.draggables)).subscribe(() => {\n                super.ngOnDestroy();\n                this.ngUnsubscribe$ = new Subject();\n                merge(\n                    ...this.draggables.toArray().map(dragRef => {\n                        return dragRef.started;\n                    })\n                )\n                    .pipe(takeUntil(this.ngUnsubscribe$))\n                    .subscribe(() => {\n                        document.body.classList.add('thy-dragging-body');\n                    });\n\n                merge(...this.draggables.toArray().map(dragRef => dragRef.released))\n                    .pipe(takeUntil(this.ngUnsubscribe$))\n                    .subscribe(() => {\n                        document.body.classList.remove('thy-dragging-body');\n                    });\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { ThyTranscludeDirective } from './ng-transclude.directive';\nimport { ThyAutofocusDirective } from './directives/thy-autofocus.directive';\nimport { ThyEnterDirective } from './directives/thy-enter.directive';\nimport { ThyCtrlEnterDirective } from './directives/thy-ctrl-enter.directive';\nimport { ThyShowDirective } from './directives/thy-show';\nimport { ThyStopPropagationDirective } from './directives/thy-stop-propagation.directive';\nimport { ThyContextMenuDirective } from './directives/thy-contextmenu.directive';\nimport { ThyScrollDirective } from './directives/thy-scroll.directive';\nimport { ThyDragDropDirective } from './directives/thy-drag-drop.directive';\n\n@NgModule({\n    declarations: [\n        ThyTranscludeDirective,\n        ThyAutofocusDirective,\n        ThyEnterDirective,\n        ThyCtrlEnterDirective,\n        ThyShowDirective,\n        ThyStopPropagationDirective,\n        ThyContextMenuDirective,\n        ThyScrollDirective,\n        ThyDragDropDirective\n    ],\n    exports: [\n        ThyTranscludeDirective,\n        ThyAutofocusDirective,\n        ThyEnterDirective,\n        ThyCtrlEnterDirective,\n        ThyShowDirective,\n        ThyStopPropagationDirective,\n        ThyContextMenuDirective,\n        ThyScrollDirective,\n        ThyDragDropDirective\n    ],\n    providers: []\n})\nexport class ThySharedModule {}\n","import { ControlValueAccessor } from '@angular/forms';\nimport { HostBinding, Input, ChangeDetectorRef, Directive } from '@angular/core';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\nimport { ThyTranslate } from 'ngx-tethys/core';\n\nconst noop = () => {};\n\n@Directive()\nexport class ThyFormCheckBaseComponent implements ControlValueAccessor {\n    // The internal data model\n    _innerValue: boolean = null;\n\n    _disabled = false;\n\n    private onTouchedCallback: () => void = noop;\n\n    private onChangeCallback: (_: any) => void = noop;\n\n    _labelText: string;\n\n    @HostBinding('class.form-check') _isFormCheck = true;\n\n    @HostBinding('class.form-check-inline') _isFormCheckInline = false;\n\n    @HostBinding('class.form-check-checked') _isChecked = false;\n\n    @HostBinding('class.form-check-inline-no-label-text') get _isNoText() {\n        return this._isFormCheckInline && !this._labelText;\n    }\n\n    @Input()\n    set thyInline(value: boolean) {\n        this._isFormCheckInline = coerceBooleanProperty(value);\n    }\n\n    @Input()\n    set thyLabelText(value: string) {\n        this._labelText = value;\n    }\n\n    @Input()\n    set thyLabelTextTranslateKey(value: string) {\n        if (value) {\n            this._labelText = this.thyTranslate.instant(value);\n        } else {\n            this._labelText = '';\n        }\n    }\n\n    @Input()\n    set thyDisabled(value: boolean) {\n        this.setDisabledState(coerceBooleanProperty(value));\n    }\n\n    writeValue(obj: boolean): void {\n        if (obj !== this._innerValue) {\n            this._innerValue = obj;\n            this._isChecked = !!this._innerValue;\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.markForCheck();\n    }\n\n    updateValue(value: boolean): void {\n        this._innerValue = value;\n        this._isChecked = !!this._innerValue;\n        this.onChangeCallback(value);\n        this.markForCheck();\n    }\n\n    constructor(protected thyTranslate: ThyTranslate, protected changeDetectorRef?: ChangeDetectorRef) {}\n\n    change() {\n        this.updateValue(!this._innerValue);\n    }\n\n    markForCheck() {\n        if (this.changeDetectorRef) {\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n}\n","import {\n    Component,\n    Input,\n    TemplateRef,\n    EventEmitter,\n    Output,\n    ViewChild,\n    ElementRef,\n    Renderer2,\n    OnInit,\n    ChangeDetectionStrategy\n} from '@angular/core';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { SelectOptionBase } from '../../option/select-option-base';\nimport { isArray, isUndefinedOrNull } from 'ngx-tethys/util';\n\nexport type SelectControlSize = 'xs' | 'sm' | 'md' | 'lg' | '';\n\n@Component({\n    selector: 'thy-select-control,[thySelectControl]',\n    templateUrl: './select-control.component.html',\n    providers: [UpdateHostClassService],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThySelectControlComponent implements OnInit {\n    inputValue = '';\n\n    isComposing = false;\n\n    panelOpened = false;\n\n    isMultiple = false;\n\n    showSearch = false;\n\n    disabled = false;\n\n    size: SelectControlSize;\n\n    selectedOptions: SelectOptionBase | SelectOptionBase[];\n\n    searchInputControlClass: { [key: string]: boolean };\n\n    choiceContentClass: { [key: string]: boolean };\n\n    @Input()\n    get thyPanelOpened(): boolean {\n        return this.panelOpened;\n    }\n\n    set thyPanelOpened(value: boolean) {\n        this.panelOpened = value;\n        if (this.panelOpened && this.thyShowSearch) {\n            Promise.resolve(null).then(() => {\n                this.inputElement.nativeElement.focus();\n            });\n        }\n        if (!this.panelOpened && this.thyShowSearch) {\n            Promise.resolve(null).then(() => {\n                this.setInputValue('');\n            });\n        }\n        this.setSelectControlClass();\n    }\n\n    @Input()\n    get thyIsMultiple(): boolean {\n        return this.isMultiple;\n    }\n\n    set thyIsMultiple(value: boolean) {\n        this.isMultiple = value;\n        this.setSelectControlClass();\n    }\n\n    @Input()\n    get thyShowSearch(): boolean {\n        return this.showSearch;\n    }\n\n    set thyShowSearch(value: boolean) {\n        this.showSearch = value;\n        this.setSelectControlClass();\n    }\n\n    @Input()\n    get thySelectedOptions(): SelectOptionBase | SelectOptionBase[] {\n        return this.selectedOptions;\n    }\n\n    set thySelectedOptions(value: SelectOptionBase | SelectOptionBase[]) {\n        let sameValue = false;\n        const oldValue = this.selectedOptions;\n        if (this.isMultiple) {\n            if (oldValue instanceof Array && value instanceof Array && oldValue.length === value.length) {\n                sameValue = value.every((option, index) => option.thyValue === oldValue[index].thyValue);\n            }\n        } else {\n            if (oldValue && value) {\n                sameValue = (oldValue as SelectOptionBase).thyValue === (value as SelectOptionBase).thyValue;\n            }\n        }\n        this.selectedOptions = value;\n        if (this.panelOpened && this.thyShowSearch) {\n            if (!sameValue) {\n                Promise.resolve(null).then(() => {\n                    this.setInputValue('');\n                });\n            }\n            this.inputElement.nativeElement.focus();\n        }\n    }\n\n    @Input()\n    get thyDisabled(): boolean {\n        return this.disabled;\n    }\n\n    set thyDisabled(value: boolean) {\n        this.disabled = value;\n        this.setSelectControlClass();\n    }\n\n    @Input()\n    customDisplayTemplate: TemplateRef<any>;\n\n    @Input()\n    thyAllowClear = false;\n\n    @Input()\n    thyPlaceholder = '';\n\n    @Input()\n    get thySize(): SelectControlSize {\n        return this.size;\n    }\n\n    set thySize(value: SelectControlSize) {\n        this.size = value;\n        this.setSelectControlClass();\n    }\n\n    @Output()\n    thyOnSearch = new EventEmitter<string>();\n\n    @Output()\n    public thyOnRemove = new EventEmitter<{ item: SelectOptionBase; $eventOrigin: Event }>();\n\n    @Output()\n    public thyOnClear = new EventEmitter<Event>();\n\n    @ViewChild('inputElement')\n    inputElement: ElementRef;\n\n    get selectedValueStyle(): { [key: string]: string } {\n        let showSelectedValue = false;\n        if (this.showSearch) {\n            if (this.panelOpened) {\n                showSelectedValue = !(this.isComposing || this.inputValue);\n            } else {\n                showSelectedValue = true;\n            }\n        } else {\n            showSelectedValue = true;\n        }\n        return { display: showSelectedValue ? 'block' : 'none' };\n    }\n\n    get placeholderStyle(): { [key: string]: string } {\n        let placeholder = true;\n        if (this.isSelectedValue) {\n            placeholder = false;\n        }\n        if (!this.thyPlaceholder) {\n            placeholder = false;\n        }\n        if (this.isComposing || this.inputValue) {\n            placeholder = false;\n        }\n        return { display: placeholder ? 'block' : 'none' };\n    }\n\n    get selectedValue(): any {\n        return this.thySelectedOptions;\n    }\n\n    get multipleSelectedValue(): any {\n        return this.thySelectedOptions;\n    }\n\n    get showClearIcon(): boolean {\n        return this.thyAllowClear && this.isSelectedValue;\n    }\n\n    get isSelectedValue(): boolean {\n        return (\n            (!this.isMultiple && !isUndefinedOrNull(this.thySelectedOptions)) ||\n            (this.isMultiple && (<SelectOptionBase[]>this.thySelectedOptions).length > 0)\n        );\n    }\n\n    constructor(private renderer: Renderer2, private element: ElementRef<any>, private updateHostClassService: UpdateHostClassService) {\n        this.updateHostClassService.initializeElement(this.element.nativeElement);\n    }\n\n    ngOnInit() {\n        this.setSelectControlClass();\n    }\n\n    setSelectControlClass() {\n        const modeType = this.isMultiple ? 'multiple' : 'single';\n        const selectControlClass = {\n            [`form-control`]: true,\n            [`form-control-${this.thySize}`]: !!this.thySize,\n            [`form-control-custom`]: true,\n            [`select-control`]: true,\n            [`select-control-${modeType}`]: true,\n            [`select-control-show-search`]: this.showSearch,\n            [`panel-is-opened`]: this.panelOpened,\n            [`disabled`]: this.disabled\n        };\n        this.updateHostClassService.updateClassByMap(selectControlClass);\n        this.searchInputControlClass = {\n            [`form-control`]: true,\n            [`form-control-${this.thySize}`]: !!this.thySize,\n            [`search-input-field`]: true,\n            [`hidden`]: !this.thyShowSearch\n        };\n\n        this.choiceContentClass = {\n            [`choice-content`]: true,\n            [`text-truncate`]: true,\n            [`font-size-${this.thySize}`]: !!this.thySize\n        };\n    }\n\n    setInputValue(value: string) {\n        if (value !== this.inputValue) {\n            this.inputValue = value;\n            this.updateWidth();\n            this.thyOnSearch.emit(this.inputValue);\n        }\n    }\n\n    handleBackspace(event: KeyboardEvent & { isComposing: boolean }) {\n        if (event.isComposing) {\n            return;\n        }\n        if (this.inputValue.length === 0 && this.selectedOptions instanceof Array) {\n            if (this.selectedOptions.length > 0) {\n                this.removeHandle(this.selectedOptions[this.selectedOptions.length - 1], event);\n            }\n        }\n    }\n\n    updateWidth() {\n        if (this.isMultiple && this.thyShowSearch) {\n            if (this.inputValue || this.isComposing) {\n                this.renderer.setStyle(this.inputElement.nativeElement, 'width', `${this.inputElement.nativeElement.scrollWidth}px`);\n            } else {\n                this.renderer.removeStyle(this.inputElement.nativeElement, 'width');\n            }\n        }\n    }\n\n    removeHandle(item: SelectOptionBase, $event: Event) {\n        this.thyOnRemove.emit({ item: item, $eventOrigin: $event });\n    }\n\n    clearHandle($event: Event) {\n        this.thyOnClear.emit($event);\n    }\n\n    trackValue(_index: number, option: SelectOptionBase): any {\n        return option.thyValue;\n    }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThySelectControlComponent } from './select-control/select-control.component';\nimport { FormsModule } from '@angular/forms';\nimport { ThyIconModule } from 'ngx-tethys/icon';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ThyIconModule],\n    exports: [ThySelectControlComponent],\n    declarations: [ThySelectControlComponent]\n})\nexport class ThySelectCommonModule {}\n","import { InjectionToken } from '@angular/core';\nimport { ThySelectOptionGroupComponent } from './group/option-group.component';\nimport { ThyListLayout, ThyListOptionComponent } from './list-option/list-option.component';\n\nexport interface IThyOptionParentComponent {\n    isMultiple: boolean;\n}\n\nexport interface IThyOptionGroupComponent {\n    hidden: boolean;\n}\n\nexport interface IThyListOptionParentComponent {\n    multiple?: boolean;\n    layout?: ThyListLayout;\n    // 选择，取消选择 option\n    toggleOption(option: ThyListOptionComponent, event?: Event): void;\n    // 设置当前选项为激活状态，即 hover 状态\n    setActiveOption(option: ThyListOptionComponent, event?: Event): void;\n    // 滚动到当前的选项\n    scrollIntoView(option: ThyListOptionComponent): void;\n    isSelected(option: ThyListOptionComponent): boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const THY_OPTION_PARENT_COMPONENT = new InjectionToken<IThyOptionParentComponent>('THY_OPTION_PARENT_COMPONENT');\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const THY_OPTION_GROUP_COMPONENT = new InjectionToken<ThySelectOptionGroupComponent>('THY_OPTION_GROUP_COMPONENT');\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const THY_LIST_OPTION_PARENT_COMPONENT = new InjectionToken<IThyListOptionParentComponent>('THY_LIST_OPTION_PARENT_COMPONENT');\n","import {\n    Component,\n    Input,\n    HostBinding,\n    ElementRef,\n    ChangeDetectorRef,\n    Inject,\n    forwardRef,\n    InjectionToken,\n    HostListener,\n    Optional,\n    OnInit\n} from '@angular/core';\nimport { FocusableOption, FocusOrigin, Highlightable } from '@angular/cdk/a11y';\n// import { SelectionModel } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\nimport { IThyListOptionParentComponent, THY_LIST_OPTION_PARENT_COMPONENT } from '../option.token';\n\nlet _uniqueIdCounter = 0;\n\nexport type ThyListLayout = 'list' | 'grid';\n\n@Component({\n    selector: 'thy-list-option,[thy-list-option]',\n\n    templateUrl: './list-option.component.html'\n})\nexport class ThyListOptionComponent implements Highlightable {\n    @HostBinding(`class.thy-list-option`)\n    get _isListOption() {\n        return this.parentSelectionList.layout === 'list';\n    }\n\n    @HostBinding(`class.thy-grid-option`)\n    get _parentLayout() {\n        return this.parentSelectionList.layout === 'grid';\n    }\n\n    @HostBinding(`attr.role`) _role = 'option';\n\n    @HostBinding(`attr.tabindex`) _tabIndex = -1;\n\n    @Input() id = `thy-list-option-${_uniqueIdCounter++}`;\n\n    @Input() thyValue: any;\n\n    @Input()\n    set thyDisabled(value: boolean) {\n        this.disabled = coerceBooleanProperty(value);\n    }\n\n    @HostBinding(`class.disabled`) disabled?: boolean;\n\n    /** Whether the option is selected. */\n    @HostBinding(`class.active`)\n    get selected() {\n        return this.parentSelectionList.isSelected(this);\n    }\n\n    constructor(\n        public element: ElementRef<HTMLElement>,\n        private changeDetector: ChangeDetectorRef,\n        /** @docs-private */\n        @Optional() @Inject(THY_LIST_OPTION_PARENT_COMPONENT) public parentSelectionList: IThyListOptionParentComponent\n    ) {}\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.parentSelectionList.multiple || !this.parentSelectionList.isSelected(this)) {\n            this.parentSelectionList.toggleOption(this, event);\n            this.parentSelectionList.setActiveOption(this);\n        }\n    }\n\n    // @HostListener('focus', ['$event'])\n    // onFocus(event: Event) {\n    //     this.parentSelectionList.setFocusedOption(this, event);\n    // }\n\n    /** Allows for programmatic focusing of the option. */\n    // focus(origin?: FocusOrigin): void {\n    //     this.element.nativeElement.focus();\n    // }\n\n    setActiveStyles(): void {\n        this.element.nativeElement.classList.add('hover');\n        this.parentSelectionList.scrollIntoView(this);\n    }\n\n    setInactiveStyles(): void {\n        this.element.nativeElement.classList.remove('hover');\n    }\n\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return '';\n    }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { ThyCanDisable, mixinDisabled, ThyCanDisableCtor, MixinBase } from 'ngx-tethys/core';\n\nconst _MixinBase: ThyCanDisableCtor & typeof MixinBase = mixinDisabled(MixinBase);\n@Component({\n    selector: 'thy-list-option-group,[thy-list-option-group]',\n    template: '<ng-content></ng-content>',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyOptionGroupComponent extends _MixinBase implements ThyCanDisable {\n    set thyDisabled(value: any) {\n        this.thyDisabled = value;\n    }\n}\n","export abstract class SelectOptionBase {\n    thyLabelText: string;\n    thyRawValue: any;\n    thyValue: any;\n}\n","import {\n    Component,\n    Input,\n    TemplateRef,\n    ViewChild,\n    ChangeDetectionStrategy,\n    HostBinding,\n    HostListener,\n    ElementRef,\n    ChangeDetectorRef,\n    EventEmitter,\n    OnDestroy,\n    Output,\n    Inject,\n    Optional,\n    QueryList\n} from '@angular/core';\nimport { Highlightable } from '@angular/cdk/a11y';\nimport { SelectOptionBase } from './select-option-base';\nimport { ENTER, SPACE, hasModifierKey } from 'ngx-tethys/util';\nimport {\n    IThyOptionGroupComponent,\n    IThyOptionParentComponent,\n    THY_OPTION_GROUP_COMPONENT,\n    THY_OPTION_PARENT_COMPONENT\n} from './option.token';\n\nexport class ThyOptionSelectionChangeEvent {\n    constructor(public option: ThyOptionComponent, public isUserInput = false) {}\n}\n\nexport class ThyOptionVisibleChangeEvent {\n    option: ThyOptionComponent;\n}\n\n@Component({\n    selector: 'thy-option',\n    templateUrl: './option.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyOptionComponent extends SelectOptionBase implements OnDestroy, Highlightable {\n    private _selected = false;\n    private _hidden = false;\n    private _disabled = false;\n\n    @Input() thyValue: any;\n\n    @Input() thyRawValue: any;\n\n    @Input() thyLabelText: string;\n\n    @Input() thyShowOptionCustom: boolean;\n\n    @Input() thySearchKey: string;\n\n    @HostBinding('class.thy-option-item') _isOptionItem = true;\n\n    @ViewChild(TemplateRef, { static: true }) template: TemplateRef<any>;\n\n    @Input()\n    @HostBinding(`class.disabled`)\n    set thyDisabled(value: boolean) {\n        this._disabled = value;\n    }\n\n    get thyDisabled(): boolean {\n        return this._disabled;\n    }\n\n    get disabled(): boolean {\n        return this.hidden || this._disabled;\n    }\n\n    @HostBinding('class.hidden')\n    get hidden(): boolean {\n        return this._hidden;\n    }\n\n    @HostBinding('attr.tabindex')\n    get tabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    @HostBinding(`class.active`)\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    @Output() readonly selectionChange: EventEmitter<ThyOptionSelectionChangeEvent> = new EventEmitter();\n    @Output() readonly visibleChange: EventEmitter<ThyOptionVisibleChangeEvent> = new EventEmitter();\n\n    constructor(\n        public element: ElementRef<HTMLElement>,\n        @Optional() @Inject(THY_OPTION_PARENT_COMPONENT) public parent: IThyOptionParentComponent,\n        @Optional() @Inject(THY_OPTION_GROUP_COMPONENT) public group: IThyOptionGroupComponent,\n        private cdr: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    getHostElement(): HTMLElement {\n        return this.element.nativeElement;\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        this.selectViaInteraction();\n    }\n\n    @HostListener('keydown', ['$event'])\n    handleKeydown(event: KeyboardEvent): void {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this.selectViaInteraction();\n            event.preventDefault();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.parent.isMultiple ? !this._selected : true;\n            this.cdr.markForCheck();\n            this.emitSelectionChangeEvent(true);\n        }\n    }\n\n    select(event?: Event): void {\n        if (!this.disabled) {\n            if (!this._selected) {\n                this._selected = true;\n                this.emitSelectionChangeEvent();\n                this.cdr.markForCheck();\n            }\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this.emitSelectionChangeEvent();\n            this.cdr.markForCheck();\n        }\n    }\n\n    hideOption() {\n        if (!this._hidden) {\n            this._hidden = true;\n            this.visibleChange.emit({ option: this });\n            this.cdr.markForCheck();\n        }\n    }\n\n    showOption() {\n        if (this._hidden) {\n            this._hidden = false;\n            this.visibleChange.emit({ option: this });\n            this.cdr.markForCheck();\n        }\n    }\n\n    matchSearchText(searchText: string): boolean {\n        if (this.thySearchKey) {\n            if (this.thySearchKey.indexOf(searchText) >= 0) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            if (this.thyLabelText.indexOf(searchText) >= 0) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setActiveStyles(): void {\n        this.getHostElement().classList.add('hover');\n        this.cdr.markForCheck();\n    }\n\n    setInactiveStyles(): void {\n        this.getHostElement().classList.remove('hover');\n        this.cdr.markForCheck();\n    }\n\n    getLabel(): string {\n        return '';\n    }\n\n    private emitSelectionChangeEvent(isUserInput = false): void {\n        this.selectionChange.emit(new ThyOptionSelectionChangeEvent(this, isUserInput));\n    }\n\n    ngOnDestroy() {}\n}\n","import { Component, HostBinding, Input, OnInit, ContentChildren, QueryList, NgZone, OnDestroy, AfterContentInit } from '@angular/core';\nimport { Observable, defer, Subject, merge, combineLatest } from 'rxjs';\nimport { ThyOptionVisibleChangeEvent, ThyOptionComponent } from '../option.component';\nimport { take, switchMap, startWith, takeUntil, reduce, debounceTime, map } from 'rxjs/operators';\nimport { THY_OPTION_GROUP_COMPONENT } from '../option.token';\n\n@Component({\n    selector: 'thy-option-group',\n    templateUrl: './option-group.component.html',\n    providers: [\n        {\n            provide: THY_OPTION_GROUP_COMPONENT,\n            useExisting: ThySelectOptionGroupComponent\n        }\n    ]\n})\nexport class ThySelectOptionGroupComponent implements OnDestroy, AfterContentInit {\n    _hidden = false;\n    @Input()\n    @HostBinding(`class.disabled`)\n    thyDisabled: boolean;\n\n    @HostBinding('class.thy-option-item-group') _isOptionGroup = true;\n\n    @HostBinding('class.thy-select-option-group-hidden')\n    get hidden(): boolean {\n        return this._hidden;\n    }\n\n    @Input() thyGroupLabel: string;\n\n    @ContentChildren(ThyOptionComponent) options: QueryList<ThyOptionComponent>;\n\n    _destroy$: Subject<any> = new Subject<any>();\n\n    optionVisibleChanges: Observable<ThyOptionVisibleChangeEvent> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map(option => option.visibleChange));\n        }\n        return this._ngZone.onStable.asObservable().pipe(\n            take(1),\n            switchMap(() => this.optionVisibleChanges)\n        );\n    }) as Observable<ThyOptionVisibleChangeEvent>;\n\n    constructor(private _ngZone: NgZone) {}\n\n    ngAfterContentInit() {\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy$)).subscribe(() => {\n            this._resetOptions();\n        });\n    }\n\n    _resetOptions() {\n        const changedOrDestroyed$ = merge(this.options.changes, this._destroy$);\n        merge(...this.options.map(option => option.visibleChange))\n            .pipe(\n                takeUntil(changedOrDestroyed$),\n                debounceTime(10),\n                map((event: ThyOptionVisibleChangeEvent) => {\n                    const hasOption = this.options.find(option => {\n                        if (!option.hidden) {\n                            return true;\n                        }\n                    });\n                    if (hasOption) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                })\n            )\n            .subscribe((data: boolean) => {\n                this._hidden = data;\n            });\n    }\n\n    ngOnDestroy() {\n        this._destroy$.next();\n        this._destroy$.complete();\n    }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ThyListOptionComponent } from './list-option/list-option.component';\nimport { ThyOptionGroupComponent } from './option-group.component';\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyOptionComponent } from './option.component';\nimport { ThySelectOptionGroupComponent } from './group/option-group.component';\n\n@NgModule({\n    imports: [CommonModule, ThyIconModule],\n    exports: [ThyListOptionComponent, ThyOptionGroupComponent, ThyOptionComponent, ThySelectOptionGroupComponent],\n    declarations: [ThyListOptionComponent, ThyOptionGroupComponent, ThyOptionComponent, ThySelectOptionGroupComponent]\n})\nexport class ThyOptionModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["_MixinBase"],"mappings":";;;;;;;;;;MAKa,sBAAsB;IAkBjC,YAAY,OAAyB;QACnC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;IAdD,IACI,aAAa,CAAC,WAA6B;QAC7C,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;QACjC,IAAI,WAAW,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;SAC9C;KACF;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;;YAnBF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;aAC5B;;;YAJuC,gBAAgB;;;4BAWrD,KAAK;;;MCLK,qBAAqB;IAsB9B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;;QApBlC,gBAAW,GAAG,KAAK,CAAC;KAoBkB;IAlB9C,IACI,aAAa,CAAC,KAAc;QAC5B,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KACnD;;IAGD,IACI,YAAY,CAAC,KAAuB;QACpC,IAAI,qBAAqB,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;YACxC,UAAU,CAAC;gBACP,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,EAAE;oBAC1D,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;iBAC1C;aACJ,CAAC,CAAC;SACN;KACJ;;;YAvBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,4CAA4C;aACzD;;;YAL0B,UAAU;;;4BAUhC,KAAK;2BAML,KAAK;;;ACbV;;;MAMa,iBAAiB;IAY1B,YAAoB,MAAc,EAAU,UAAsB,EAAU,QAAmB;QAA3E,WAAM,GAAN,MAAM,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAXrF,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;KAW2D;IATnG,SAAS,CAAC,KAAoB;QAC1B,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC;QAC7C,IAAI,OAAO,KAAK,QAAQ,CAAC,KAAK,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC7B,CAAC,CAAC;SACN;KACJ;IAID,QAAQ;QACJ,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC7F,CAAC,CAAC;KACN;;;YArBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;aACzB;;;YARiD,MAAM;YAAE,UAAU;YAAE,SAAS;;;uBAU1E,MAAM;;;MCJE,qBAAqB;IAG9B,YAAoB,MAAc,EAAU,UAAsB,EAAU,QAAmB;QAA3E,WAAM,GAAN,MAAM,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAFrF,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAEuD;IAEnG,SAAS,CAAC,KAAoB;QAC1B,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,KAAK,QAAQ,CAAC,KAAK,EAAE;YAChE,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACZ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACjC,CAAC,CAAC;SACN;KACJ;IAED,QAAQ;QACJ,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC7F,CAAC,CAAC;KACN;;;YAtBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,gBAAgB;aAC7B;;;YAL6D,MAAM;YAAxC,UAAU;YAAgC,SAAS;;;2BAO1E,MAAM;;;MCJE,gBAAgB;IA6BzB,YAAoB,UAAsB,EAAU,QAAmB;QAAnD,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QA5B7D,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;KA4B8B;IAxBnE,gBAAgB;QACpB,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC7B;KACJ;IAED,IAAa,OAAO,CAAC,SAAkB;QACnC,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;YAC1E,UAAU,CAAC;gBACP,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK;oBACnE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;wBACvD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;wBAC/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;qBAC3B;iBACJ,CAAC,CAAC;aACN,CAAC,CAAC;SACN;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YACzE,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;KACJ;IAID,WAAW;QACP,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;;;YAlCJ,SAAS,SAAC,EAAE,QAAQ,EAAE,WAAW,EAAE;;;YAFE,UAAU;YAA5B,SAAS;;;4BAIxB,MAAM;sBAWN,KAAK;;;ACbV;;;MAMa,2BAA2B;IAiBpC,YAAoB,WAAuB,EAAU,SAAoB;QAArD,gBAAW,GAAX,WAAW,CAAY;QAAU,cAAS,GAAT,SAAS,CAAW;QAdjE,eAAU,GAAG,OAAO,CAAC;QAErB,sBAAiB,GAAG,IAAI,CAAC;KAY4C;IAV7E,IACI,kBAAkB,CAAC,KAAU;QAC7B,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,OAAO,EAAE;YACtC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;SAClC;aAAM;YACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,IAAI,OAAO,CAAC;SACtC;KACJ;IAID,QAAQ;QACJ,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,MAAa;gBAClG,MAAM,CAAC,eAAe,EAAE,CAAC;aAC5B,CAAC,CAAC;SACN;KACJ;IAED,WAAW;QACP,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,EAAE,CAAC;SACpB;KACJ;;;YAlCJ,SAAS,SAAC;gBACP,QAAQ,EAAE,sBAAsB;aACnC;;;YAPmB,UAAU;YAA4B,SAAS;;;iCAe9D,KAAK;;;MCVG,uBAAuB;IAGhC,YAAoB,MAAc,EAAU,UAAsB,EAAU,QAAmB;QAA3E,WAAM,GAAN,MAAM,CAAQ;QAAU,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAFrF,mBAAc,GAAG,IAAI,YAAY,EAAE,CAAC;KAEqD;IAEnG,UAAU,CAAC,KAAY;QACnB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;YACZ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnC,CAAC,CAAC;KACN;IAED,QAAQ;QACJ,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAClG,CAAC,CAAC;KACN;;;YAnBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;aAC/B;;;YAJ6D,MAAM;YAAxC,UAAU;YAAgC,SAAS;;;6BAM1E,MAAM;;;MCEE,kBAAkB;IA+B3B,YAAoB,UAA2B,EAAU,MAAc;QAAnD,eAAU,GAAV,UAAU,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QA9B/D,eAAU,GAAG,IAAI,OAAO,EAAE,CAAC;QAC3B,YAAO,GAAG,IAAI,CAAC;QACf,gBAAW,GAAG,KAAK,CAAC;QAGpB,qBAAgB,GAAsB,IAAI,UAAU,CAAC,CAAC,QAAyB,KACnF,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAC1B,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,QAAQ,CAAC;aAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,QAAQ,CAAC,CAC3B,CACJ,CAAC;QAiBQ,kBAAa,GAA6B,IAAI,YAAY,EAAc,CAAC;KAER;IAjB3E,IACI,SAAS,CAAC,KAAc;QACxB,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAC5C,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,EAAE;gBAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;aACxG;iBAAM;gBACH,IAAI,IAAI,CAAC,aAAa,EAAE;oBACpB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;iBAC7B;aACJ;SACJ;KACJ;IAMD,QAAQ;QACJ,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;SACxG;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KAC3B;IAED,WAAW;QACP,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KAC9B;IAED,aAAa;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;YAlDJ,SAAS,SAAC;gBACP,QAAQ,EAAE,aAAa;aAC1B;;;YAPmB,UAAU;YAAU,MAAM;;;wBAsBzC,KAAK;4BAeL,MAAM;;;AC/BX,MAAMA,YAAU,GAAmD,gBAAgB,CAAC,SAAS,CAAC,CAAC;MAIlF,oBAAqB,SAAQA,YAAU;IAGhD;QACI,KAAK,EAAE,CAAC;KACX;IAED,kBAAkB;QACd,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;gBAC/D,KAAK,CAAC,WAAW,EAAE,CAAC;gBACpB,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,EAAE,CAAC;gBACpC,KAAK,CACD,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,OAAO;oBACpC,OAAO,OAAO,CAAC,OAAO,CAAC;iBAC1B,CAAC,CACL;qBACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;qBACpC,SAAS,CAAC;oBACP,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;iBACpD,CAAC,CAAC;gBAEP,KAAK,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC;qBAC/D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;qBACpC,SAAS,CAAC;oBACP,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;iBACvD,CAAC,CAAC;aACV,CAAC,CAAC;SACN;KACJ;IAED,WAAW;QACP,KAAK,CAAC,WAAW,EAAE,CAAC;KACvB;;;YApCJ,SAAS,SAAC;gBACP,QAAQ,EAAE,eAAe;aAC5B;;;;yBAEI,eAAe,SAAC,OAAO,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;;;MCyBtC,eAAe;;;YAzB3B,QAAQ,SAAC;gBACN,YAAY,EAAE;oBACV,sBAAsB;oBACtB,qBAAqB;oBACrB,iBAAiB;oBACjB,qBAAqB;oBACrB,gBAAgB;oBAChB,2BAA2B;oBAC3B,uBAAuB;oBACvB,kBAAkB;oBAClB,oBAAoB;iBACvB;gBACD,OAAO,EAAE;oBACL,sBAAsB;oBACtB,qBAAqB;oBACrB,iBAAiB;oBACjB,qBAAqB;oBACrB,gBAAgB;oBAChB,2BAA2B;oBAC3B,uBAAuB;oBACvB,kBAAkB;oBAClB,oBAAoB;iBACvB;gBACD,SAAS,EAAE,EAAE;aAChB;;;AC9BD,MAAM,IAAI,GAAG,SAAQ,CAAC;;MAGT,yBAAyB;IAyElC,YAAsB,YAA0B,EAAY,iBAAqC;QAA3E,iBAAY,GAAZ,YAAY,CAAc;QAAY,sBAAiB,GAAjB,iBAAiB,CAAoB;;QAvEjG,gBAAW,GAAY,IAAI,CAAC;QAE5B,cAAS,GAAG,KAAK,CAAC;QAEV,sBAAiB,GAAe,IAAI,CAAC;QAErC,qBAAgB,GAAqB,IAAI,CAAC;QAIjB,iBAAY,GAAG,IAAI,CAAC;QAEb,uBAAkB,GAAG,KAAK,CAAC;QAE1B,eAAU,GAAG,KAAK,CAAC;KAyDyC;IAvDrG,IAA0D,SAAS;QAC/D,OAAO,IAAI,CAAC,kBAAkB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;KACtD;IAED,IACI,SAAS,CAAC,KAAc;QACxB,IAAI,CAAC,kBAAkB,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC1D;IAED,IACI,YAAY,CAAC,KAAa;QAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;KAC3B;IAED,IACI,wBAAwB,CAAC,KAAa;QACtC,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;SACtD;aAAM;YACH,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACxB;KACJ;IAED,IACI,WAAW,CAAC,KAAc;QAC1B,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC;KACvD;IAED,UAAU,CAAC,GAAY;QACnB,IAAI,GAAG,KAAK,IAAI,CAAC,WAAW,EAAE;YAC1B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;SACxC;KACJ;IAED,gBAAgB,CAAC,EAAO;QACpB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAC9B;IAED,iBAAiB,CAAC,EAAO;QACrB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;KAC/B;IAED,gBAAgB,CAAE,UAAmB;QACjC,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB;IAED,WAAW,CAAC,KAAc;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB;IAID,MAAM;QACF,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACvC;IAED,YAAY;QACR,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;SACzC;KACJ;;;YApFJ,SAAS;;;YAJD,YAAY;YAFQ,iBAAiB;;;2BAmBzC,WAAW,SAAC,kBAAkB;iCAE9B,WAAW,SAAC,yBAAyB;yBAErC,WAAW,SAAC,0BAA0B;wBAEtC,WAAW,SAAC,uCAAuC;wBAInD,KAAK;2BAKL,KAAK;uCAKL,KAAK;0BASL,KAAK;;;MCzBG,yBAAyB;IAiLlC,YAAoB,QAAmB,EAAU,OAAwB,EAAU,sBAA8C;QAA7G,aAAQ,GAAR,QAAQ,CAAW;QAAU,YAAO,GAAP,OAAO,CAAiB;QAAU,2BAAsB,GAAtB,sBAAsB,CAAwB;QAhLjI,eAAU,GAAG,EAAE,CAAC;QAEhB,gBAAW,GAAG,KAAK,CAAC;QAEpB,gBAAW,GAAG,KAAK,CAAC;QAEpB,eAAU,GAAG,KAAK,CAAC;QAEnB,eAAU,GAAG,KAAK,CAAC;QAEnB,aAAQ,GAAG,KAAK,CAAC;QA4FjB,kBAAa,GAAG,KAAK,CAAC;QAGtB,mBAAc,GAAG,EAAE,CAAC;QAapB,gBAAW,GAAG,IAAI,YAAY,EAAU,CAAC;QAGlC,gBAAW,GAAG,IAAI,YAAY,EAAmD,CAAC;QAGlF,eAAU,GAAG,IAAI,YAAY,EAAS,CAAC;QAqD1C,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;KAC7E;IA9JD,IACI,cAAc;QACd,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;IAED,IAAI,cAAc,CAAC,KAAc;QAC7B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,EAAE;YACxC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;gBACvB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aAC3C,CAAC,CAAC;SACN;QACD,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,EAAE;YACzC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;gBACvB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;aAC1B,CAAC,CAAC;SACN;QACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAChC;IAED,IACI,aAAa;QACb,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;IAED,IAAI,aAAa,CAAC,KAAc;QAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAChC;IAED,IACI,aAAa;QACb,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;IAED,IAAI,aAAa,CAAC,KAAc;QAC5B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAChC;IAED,IACI,kBAAkB;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC/B;IAED,IAAI,kBAAkB,CAAC,KAA4C;QAC/D,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC;QACtC,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,QAAQ,YAAY,KAAK,IAAI,KAAK,YAAY,KAAK,IAAI,QAAQ,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,EAAE;gBACzF,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,KAAK,KAAK,MAAM,CAAC,QAAQ,KAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC;aAC5F;SACJ;aAAM;YACH,IAAI,QAAQ,IAAI,KAAK,EAAE;gBACnB,SAAS,GAAI,QAA6B,CAAC,QAAQ,KAAM,KAA0B,CAAC,QAAQ,CAAC;aAChG;SACJ;QACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,aAAa,EAAE;YACxC,IAAI,CAAC,SAAS,EAAE;gBACZ,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;oBACvB,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;iBAC1B,CAAC,CAAC;aACN;YACD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC3C;KACJ;IAED,IACI,WAAW;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;IAED,IAAI,WAAW,CAAC,KAAc;QAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAChC;IAWD,IACI,OAAO;QACP,OAAO,IAAI,CAAC,IAAI,CAAC;KACpB;IAED,IAAI,OAAO,CAAC,KAAwB;QAChC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAChC;IAcD,IAAI,kBAAkB;QAClB,IAAI,iBAAiB,GAAG,KAAK,CAAC;QAC9B,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,iBAAiB,GAAG,EAAE,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC;aAC9D;iBAAM;gBACH,iBAAiB,GAAG,IAAI,CAAC;aAC5B;SACJ;aAAM;YACH,iBAAiB,GAAG,IAAI,CAAC;SAC5B;QACD,OAAO,EAAE,OAAO,EAAE,iBAAiB,GAAG,OAAO,GAAG,MAAM,EAAE,CAAC;KAC5D;IAED,IAAI,gBAAgB;QAChB,IAAI,WAAW,GAAG,IAAI,CAAC;QACvB,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,WAAW,GAAG,KAAK,CAAC;SACvB;QACD,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACtB,WAAW,GAAG,KAAK,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,UAAU,EAAE;YACrC,WAAW,GAAG,KAAK,CAAC;SACvB;QACD,OAAO,EAAE,OAAO,EAAE,WAAW,GAAG,OAAO,GAAG,MAAM,EAAE,CAAC;KACtD;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAClC;IAED,IAAI,qBAAqB;QACrB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAClC;IAED,IAAI,aAAa;QACb,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe,CAAC;KACrD;IAED,IAAI,eAAe;QACf,QACI,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAC/D,IAAI,CAAC,UAAU,IAAyB,IAAI,CAAC,kBAAmB,CAAC,MAAM,GAAG,CAAC,CAAC,EAC/E;KACL;IAMD,QAAQ;QACJ,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAChC;IAED,qBAAqB;QACjB,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,QAAQ,CAAC;QACzD,MAAM,kBAAkB,GAAG;YACvB,CAAC,cAAc,GAAG,IAAI;YACtB,CAAC,gBAAgB,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO;YAChD,CAAC,qBAAqB,GAAG,IAAI;YAC7B,CAAC,gBAAgB,GAAG,IAAI;YACxB,CAAC,kBAAkB,QAAQ,EAAE,GAAG,IAAI;YACpC,CAAC,4BAA4B,GAAG,IAAI,CAAC,UAAU;YAC/C,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW;YACrC,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ;SAC9B,CAAC;QACF,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;QACjE,IAAI,CAAC,uBAAuB,GAAG;YAC3B,CAAC,cAAc,GAAG,IAAI;YACtB,CAAC,gBAAgB,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO;YAChD,CAAC,oBAAoB,GAAG,IAAI;YAC5B,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,aAAa;SAClC,CAAC;QAEF,IAAI,CAAC,kBAAkB,GAAG;YACtB,CAAC,gBAAgB,GAAG,IAAI;YACxB,CAAC,eAAe,GAAG,IAAI;YACvB,CAAC,aAAa,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO;SAChD,CAAC;KACL;IAED,aAAa,CAAC,KAAa;QACvB,IAAI,KAAK,KAAK,IAAI,CAAC,UAAU,EAAE;YAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1C;KACJ;IAED,eAAe,CAAC,KAA+C;QAC3D,IAAI,KAAK,CAAC,WAAW,EAAE;YACnB,OAAO;SACV;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,eAAe,YAAY,KAAK,EAAE;YACvE,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;aACnF;SACJ;KACJ;IAED,WAAW;QACP,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,EAAE;YACvC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,EAAE;gBACrC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC,CAAC;aACxH;iBAAM;gBACH,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;aACvE;SACJ;KACJ;IAED,YAAY,CAAC,IAAsB,EAAE,MAAa;QAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;KAC/D;IAED,WAAW,CAAC,MAAa;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAChC;IAED,UAAU,CAAC,MAAc,EAAE,MAAwB;QAC/C,OAAO,MAAM,CAAC,QAAQ,CAAC;KAC1B;;;YAjQJ,SAAS,SAAC;gBACP,QAAQ,EAAE,uCAAuC;gBACjD,qqFAA8C;gBAC9C,SAAS,EAAE,CAAC,sBAAsB,CAAC;gBACnC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAClD;;;YAfG,SAAS;YADT,UAAU;YAKL,sBAAsB;;;6BAiC1B,KAAK;4BAoBL,KAAK;4BAUL,KAAK;iCAUL,KAAK;0BA4BL,KAAK;oCAUL,KAAK;4BAGL,KAAK;6BAGL,KAAK;sBAGL,KAAK;0BAUL,MAAM;0BAGN,MAAM;yBAGN,MAAM;2BAGN,SAAS,SAAC,cAAc;;;ACvJ7B;;;;;;;MAoBa,qBAAqB;;;YALjC,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,aAAa,CAAC;gBACnD,OAAO,EAAE,CAAC,yBAAyB,CAAC;gBACpC,YAAY,EAAE,CAAC,yBAAyB,CAAC;aAC5C;;;ACKD;;;MAGa,2BAA2B,GAAG,IAAI,cAAc,CAA4B,6BAA6B,EAAE;AAExH;;;MAGa,0BAA0B,GAAG,IAAI,cAAc,CAAgC,4BAA4B,EAAE;AAE1H;;;MAGa,gCAAgC,GAAG,IAAI,cAAc,CAAgC,kCAAkC;;ACnBpI,IAAI,gBAAgB,GAAG,CAAC,CAAC;MASZ,sBAAsB;IAgC/B,YACW,OAAgC,EAC/B,cAAiC;;IAEoB,mBAAkD;QAHxG,YAAO,GAAP,OAAO,CAAyB;QAC/B,mBAAc,GAAd,cAAc,CAAmB;QAEoB,wBAAmB,GAAnB,mBAAmB,CAA+B;QAzBzF,UAAK,GAAG,QAAQ,CAAC;QAEb,cAAS,GAAG,CAAC,CAAC,CAAC;QAEpC,OAAE,GAAG,mBAAmB,gBAAgB,EAAE,EAAE,CAAC;KAsBlD;IApCJ,IACI,aAAa;QACb,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,KAAK,MAAM,CAAC;KACrD;IAED,IACI,aAAa;QACb,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,KAAK,MAAM,CAAC;KACrD;IAUD,IACI,WAAW,CAAC,KAAc;QAC1B,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAChD;;IAKD,IACI,QAAQ;QACR,OAAO,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;KACpD;IAUD,OAAO,CAAC,KAAY;QAChB,IAAI,IAAI,CAAC,mBAAmB,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACjF,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACnD,IAAI,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;SAClD;KACJ;;;;;;;;;IAYD,eAAe;QACX,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;KACjD;IAED,iBAAiB;QACb,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;KACxD;;;;;IAMD,QAAQ;QACJ,OAAO,EAAE,CAAC;KACb;;;YA7EJ,SAAS,SAAC;gBACP,QAAQ,EAAE,mCAAmC;gBAE7C,iWAA2C;aAC9C;;;YAtBG,UAAU;YACV,iBAAiB;4CA0DZ,QAAQ,YAAI,MAAM,SAAC,gCAAgC;;;4BAnCvD,WAAW,SAAC,uBAAuB;4BAKnC,WAAW,SAAC,uBAAuB;oBAKnC,WAAW,SAAC,WAAW;wBAEvB,WAAW,SAAC,eAAe;iBAE3B,KAAK;uBAEL,KAAK;0BAEL,KAAK;uBAKL,WAAW,SAAC,gBAAgB;uBAG5B,WAAW,SAAC,cAAc;sBAY1B,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;;AC/DrC,MAAM,UAAU,GAAyC,aAAa,CAAC,SAAS,CAAC,CAAC;MAOrE,uBAAwB,SAAQ,UAAU;IACnD,IAAI,WAAW,CAAC,KAAU;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC5B;;;YATJ,SAAS,SAAC;gBACP,QAAQ,EAAE,+CAA+C;gBACzD,QAAQ,EAAE,2BAA2B;gBACrC,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAClD;;;MCTqB,gBAAgB;;;MC2BzB,6BAA6B;IACtC,YAAmB,MAA0B,EAAS,cAAc,KAAK;QAAtD,WAAM,GAAN,MAAM,CAAoB;QAAS,gBAAW,GAAX,WAAW,CAAQ;KAAI;CAChF;MAEY,2BAA2B;CAEvC;MAOY,kBAAmB,SAAQ,gBAAgB;IAmDpD,YACW,OAAgC,EACiB,MAAiC,EAClC,KAA+B,EAC9E,GAAsB;QAE9B,KAAK,EAAE,CAAC;QALD,YAAO,GAAP,OAAO,CAAyB;QACiB,WAAM,GAAN,MAAM,CAA2B;QAClC,UAAK,GAAL,KAAK,CAA0B;QAC9E,QAAG,GAAH,GAAG,CAAmB;QAtD1B,cAAS,GAAG,KAAK,CAAC;QAClB,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAYY,kBAAa,GAAG,IAAI,CAAC;QAiCxC,oBAAe,GAAgD,IAAI,YAAY,EAAE,CAAC;QAClF,kBAAa,GAA8C,IAAI,YAAY,EAAE,CAAC;KAShG;IAvCD,IAEI,WAAW,CAAC,KAAc;QAC1B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KAC1B;IAED,IAAI,WAAW;QACX,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;IAED,IAAI,QAAQ;QACR,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC;KACxC;IAED,IACI,MAAM;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;IAED,IACI,QAAQ;QACR,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC;KACrC;IAED,IACI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;IAcD,cAAc;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;KACrC;IAGD,OAAO,CAAC,KAAY;QAChB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC/B;IAGD,aAAa,CAAC,KAAoB;QAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAChF,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;KACJ;IAED,oBAAoB;QAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACjE,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;YACxB,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;SACvC;KACJ;IAED,MAAM,CAAC,KAAa;QAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;aAC3B;SACJ;KACJ;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,wBAAwB,EAAE,CAAC;YAChC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SAC3B;KACJ;IAED,UAAU;QACN,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YAC1C,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SAC3B;KACJ;IAED,UAAU;QACN,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;YAC1C,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SAC3B;KACJ;IAED,eAAe,CAAC,UAAkB;QAC9B,IAAI,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;gBAC5C,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,OAAO,KAAK,CAAC;aAChB;SACJ;aAAM;YACH,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;gBAC5C,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,OAAO,KAAK,CAAC;aAChB;SACJ;KACJ;IAED,eAAe;QACX,IAAI,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;KAC3B;IAED,iBAAiB;QACb,IAAI,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAChD,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;KAC3B;IAED,QAAQ;QACJ,OAAO,EAAE,CAAC;KACb;IAEO,wBAAwB,CAAC,WAAW,GAAG,KAAK;QAChD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,6BAA6B,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;KACnF;IAED,WAAW,MAAK;;;YA9JnB,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,2YAAsC;gBACtC,eAAe,EAAE,uBAAuB,CAAC,MAAM;aAClD;;;YA/BG,UAAU;4CAqFL,QAAQ,YAAI,MAAM,SAAC,2BAA2B;4CAC9C,QAAQ,YAAI,MAAM,SAAC,0BAA0B;YArFlD,iBAAiB;;;uBAoChB,KAAK;0BAEL,KAAK;2BAEL,KAAK;kCAEL,KAAK;2BAEL,KAAK;4BAEL,WAAW,SAAC,uBAAuB;uBAEnC,SAAS,SAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;0BAEvC,KAAK,YACL,WAAW,SAAC,gBAAgB;qBAa5B,WAAW,SAAC,cAAc;uBAK1B,WAAW,SAAC,eAAe;uBAK3B,WAAW,SAAC,cAAc;8BAK1B,MAAM;4BACN,MAAM;sBAeN,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;4BAKhC,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;;MC7F1B,6BAA6B;IA6BtC,YAAoB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QA5BnC,YAAO,GAAG,KAAK,CAAC;QAK4B,mBAAc,GAAG,IAAI,CAAC;QAWlE,cAAS,GAAiB,IAAI,OAAO,EAAO,CAAC;QAE7C,yBAAoB,GAA4C,KAAK,CAAC;YAClE,IAAI,IAAI,CAAC,OAAO,EAAE;gBACd,OAAO,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACrE;YACD,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CAC5C,IAAI,CAAC,CAAC,CAAC,EACP,SAAS,CAAC,MAAM,IAAI,CAAC,oBAAoB,CAAC,CAC7C,CAAC;SACL,CAA4C,CAAC;KAEP;IArBvC,IACI,MAAM;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;IAoBD,kBAAkB;QACd,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;YAC5E,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB,CAAC,CAAC;KACN;IAED,aAAa;QACT,MAAM,mBAAmB,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACxE,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,aAAa,CAAC,CAAC;aACrD,IAAI,CACD,SAAS,CAAC,mBAAmB,CAAC,EAC9B,YAAY,CAAC,EAAE,CAAC,EAChB,GAAG,CAAC,CAAC,KAAkC;YACnC,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM;gBACtC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;oBAChB,OAAO,IAAI,CAAC;iBACf;aACJ,CAAC,CAAC;YACH,IAAI,SAAS,EAAE;gBACX,OAAO,KAAK,CAAC;aAChB;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ,CAAC,CACL;aACA,SAAS,CAAC,CAAC,IAAa;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACvB,CAAC,CAAC;KACV;IAED,WAAW;QACP,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAC7B;;;YA1EJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,wGAA4C;gBAC5C,SAAS,EAAE;oBACP;wBACI,OAAO,EAAE,0BAA0B;wBACnC,WAAW,EAAE,6BAA6B;qBAC7C;iBACJ;aACJ;;;YAf2E,MAAM;;;0BAkB7E,KAAK,YACL,WAAW,SAAC,gBAAgB;6BAG5B,WAAW,SAAC,6BAA6B;qBAEzC,WAAW,SAAC,sCAAsC;4BAKlD,KAAK;sBAEL,eAAe,SAAC,kBAAkB;;;AC/BvC;;;;;;;MAsBa,eAAe;;;YAL3B,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,EAAE,aAAa,CAAC;gBACtC,OAAO,EAAE,CAAC,sBAAsB,EAAE,uBAAuB,EAAE,kBAAkB,EAAE,6BAA6B,CAAC;gBAC7G,YAAY,EAAE,CAAC,sBAAsB,EAAE,uBAAuB,EAAE,kBAAkB,EAAE,6BAA6B,CAAC;aACrH;;;ACrBD;;;;;;"}