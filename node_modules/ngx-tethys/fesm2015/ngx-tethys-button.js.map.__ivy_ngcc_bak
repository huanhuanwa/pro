{"version":3,"file":"ngx-tethys-button.js","sources":["../../src/button/button-group.component.ts","../../src/button/button-icon.component.ts","../../src/button/button.component.ts","../../src/button/button.module.ts","../../src/button/ngx-tethys-button.ts"],"sourcesContent":["import { Component, HostBinding, Input, ContentChild, TemplateRef, ElementRef, ViewEncapsulation, OnInit } from '@angular/core';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { ThyButtonType } from '.';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\nexport type buttonGroupSize = 'sm' | 'lg' | 'xs' | 'md';\n\nexport type buttonGroupType = 'outline-primary' | 'outline-default';\n\nconst buttonGroupSizeMap = {\n    sm: ['btn-group-sm'],\n    md: ['btn-group-md'],\n    lg: ['btn-group-lg'],\n    xs: ['btn-group-xs']\n};\n\nconst buttonGroupTypeMap = {\n    'outline-primary': ['btn-group-outline-primary'],\n    'outline-default': ['btn-group-outline-default']\n};\n\n@Component({\n    selector: 'thy-button-group',\n    template: '<ng-content></ng-content>',\n    providers: [UpdateHostClassService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyButtonGroupComponent implements OnInit {\n    private initialized = false;\n\n    private type: string;\n\n    private size: string;\n\n    @Input()\n    set thySize(size: buttonGroupSize) {\n        this.size = size;\n        if (this.initialized) {\n            this.setClasses();\n        }\n    }\n\n    @Input()\n    set thyType(type: ThyButtonType) {\n        this.type = type;\n        if (this.initialized) {\n            this.setClasses();\n        }\n    }\n\n    @Input()\n    set thyClearMinWidth(value: string) {\n        this.thyClearMinWidthClassName = coerceBooleanProperty(value);\n    }\n\n    @HostBinding('class.btn-group') _isButtonGroup = true;\n    @HostBinding(`class.btn-group-clear-min-width`)\n    thyClearMinWidthClassName = false;\n\n    constructor(private updateHostClassService: UpdateHostClassService, private elementRef: ElementRef) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n\n    ngOnInit() {\n        this.setClasses();\n        this.initialized = true;\n    }\n\n    private setClasses() {\n        let classNames: string[] = [];\n        if (buttonGroupTypeMap[this.type]) {\n            classNames = [...buttonGroupTypeMap[this.type]];\n        }\n        if (buttonGroupSizeMap[this.size]) {\n            classNames.push(buttonGroupSizeMap[this.size]);\n        }\n        this.updateHostClassService.updateClass(classNames);\n    }\n}\n","import { Component, Directive, HostBinding, Input, ElementRef, Renderer2, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { AfterContentInit, OnChanges, OnInit } from '@angular/core';\nimport { coerceBooleanProperty, isUndefined } from 'ngx-tethys/util';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\n\nexport type IconShape = '' | 'dashed' | 'solid';\n\nconst sizeClassesMap: any = {\n    lg: ['btn-icon-lg'],\n    sm: ['btn-icon-sm'],\n    xs: ['btn-icon-xs']\n};\n\nconst shapeClassesMap: any = {\n    'circle-dashed': ['btn-icon-circle', 'circle-dashed'],\n    'circle-solid': ['btn-icon-circle', 'circle-solid'],\n    'circle-thick-dashed': ['btn-icon-circle', 'circle-dashed', 'border-thick'],\n    'circle-thick-solid': ['btn-icon-circle', 'circle-solid', 'border-thick'],\n    'self-icon': ['btn-icon-self-circle']\n};\n\nconst themeClassesMap: any = {\n    'danger-weak': ['btn-icon-danger-weak']\n};\n\n@Component({\n    selector: '[thy-button-icon],[thyButtonIcon]',\n    templateUrl: './button-icon.component.html',\n    providers: [UpdateHostClassService],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyButtonIconComponent implements OnInit {\n    @Input()\n    set thySize(size: string) {\n        this.size = size;\n        this.setClasses();\n    }\n\n    // 字体前缀，默认 wtf\n    @Input()\n    set thyIcon(icon: string) {\n        this.setIconClass(icon);\n    }\n\n    @Input()\n    set thyButtonIcon(icon: string) {\n        this.setIconClass(icon);\n    }\n\n    @Input()\n    set thyShape(value: IconShape) {\n        this.shape = value;\n        this.setClasses();\n    }\n\n    @Input()\n    set thyLight(value: boolean) {\n        this._isLighted = coerceBooleanProperty(value);\n    }\n\n    @Input()\n    set thyActive(value: boolean) {\n        this._isActive = coerceBooleanProperty(value);\n    }\n\n    @Input()\n    set thyTheme(value: string) {\n        this.theme = value;\n        this.setClasses();\n    }\n\n    constructor(elementRef: ElementRef, private updateHostClassService: UpdateHostClassService) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n    private initialized = false;\n\n    private shape: IconShape;\n\n    private size: string;\n\n    iconPrefix = 'wtf';\n\n    iconClasses: string[];\n\n    icon: string;\n\n    theme: string;\n\n    svgIconName: string;\n\n    @HostBinding('class.btn') _isBtn = true;\n    @HostBinding('class.btn-icon') _isBtnIcon = true;\n    @HostBinding('class.btn-icon-light') _isLighted = false;\n    @HostBinding('class.btn-icon-active') _isActive = false;\n\n    @Input() thyColor: string;\n\n    private setIconClass(icon: string) {\n        if (icon) {\n            if (icon.includes('wtf')) {\n                const classes = icon.split(' ');\n                if (classes.length === 1) {\n                    classes.unshift('wtf');\n                }\n                this.iconClasses = classes;\n                this.svgIconName = null;\n            } else {\n                this.svgIconName = icon;\n            }\n        } else {\n            this.iconClasses = null;\n            this.svgIconName = null;\n        }\n    }\n\n    private setClasses(first = false) {\n        // 设置样式判断是否已经初始化，未初始化直接返回，除非是初次调用\n        // 只有 ngOnInit 调用会传入 first = true\n        if (!first && !this.initialized) {\n            return;\n        }\n        const classes = sizeClassesMap[this.size] ? [...sizeClassesMap[this.size]] : [];\n        if (this.shape && shapeClassesMap[this.shape]) {\n            shapeClassesMap[this.shape].forEach((className: string) => {\n                classes.push(className);\n            });\n        }\n        if (this.theme && themeClassesMap[this.theme]) {\n            themeClassesMap[this.theme].forEach((className: string) => {\n                classes.push(className);\n            });\n        }\n        this.updateHostClassService.updateClass(classes);\n    }\n\n    ngOnInit() {\n        this.setClasses(true);\n        this.initialized = true;\n    }\n}\n","import { Component, Directive, Input, ElementRef, Renderer2, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { AfterContentInit, OnChanges, OnInit } from '@angular/core';\nimport { coerceBooleanProperty, isUndefined } from 'ngx-tethys/util';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\n\nexport type ThyButtonType = 'primary' | 'secondary' | 'info' | 'outline-primary' | 'outline-default' | 'danger' | 'link' | 'link-secondary';\n\nconst btnTypeClassesMap: any = {\n    primary: ['btn', 'btn-primary'],\n    secondary: ['btn', 'btn-primary', 'btn-md'],\n    info: ['btn', 'btn-info'],\n    warning: ['btn', 'btn-warning'],\n    danger: ['btn', 'btn-danger'],\n    'outline-primary': ['btn', 'btn-outline-primary'],\n    'outline-default': ['btn', 'btn-outline-default'],\n    link: ['btn', 'btn-link'], // 链接按钮\n    'link-info': ['btn', 'btn-link', 'btn-link-info'], // 幽灵链接按钮\n    'link-secondary': ['btn', 'btn-link', 'btn-link-primary-weak'], // 幽灵链接按钮\n    'link-danger-weak': ['btn', 'btn-link', 'btn-link-danger-weak'], // 幽灵危险按钮\n    'link-danger': ['btn', 'btn-link', 'btn-link-danger'], // 危险按钮\n    'link-success': ['btn', 'btn-link', 'btn-link-success'] // 成功按钮\n};\n\n@Component({\n    selector: '[thy-button],[thyButton]',\n    templateUrl: './button.component.html',\n    providers: [UpdateHostClassService],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyButtonComponent implements OnInit {\n    private _nativeElement: any;\n\n    private _initialized = false;\n\n    private _originalText: string;\n\n    private _type: string;\n\n    private _size: string;\n\n    private _icon: string;\n\n    private _loading: boolean;\n\n    private _loadingText: string;\n\n    // 圆角方形\n    _isRadiusSquare = false;\n\n    _iconClass: string[];\n\n    svgIconName: string;\n\n    _setBtnType(value: ThyButtonType) {\n        if (value) {\n            if (value.includes('-square')) {\n                this._type = value.replace('-square', '');\n                this._isRadiusSquare = true;\n            } else {\n                this._type = value;\n            }\n\n            if (this._initialized) {\n                this._setClasses();\n            }\n        }\n    }\n\n    @Input()\n    set thyButton(value: ThyButtonType) {\n        this._setBtnType(value);\n    }\n\n    @Input()\n    set thyType(value: ThyButtonType) {\n        this._setBtnType(value);\n    }\n\n    @Input()\n    set thyLoading(value: boolean) {\n        const newLoading = coerceBooleanProperty(value);\n        // from false to true\n        if (!this._loading && newLoading) {\n            this._loading = newLoading;\n            this._originalText = this._nativeElement.innerText;\n            this._setLoadingStatus();\n        } else {\n            this._loading = newLoading;\n            this._setLoadingStatus();\n        }\n    }\n\n    @Input()\n    set thyLoadingText(value: string) {\n        if (this._loadingText !== value) {\n            this._loadingText = value;\n            if (this._loading) {\n                this.renderer.setProperty(this._nativeElement, 'innerText', this._loadingText);\n            }\n        }\n    }\n\n    @Input()\n    set thySize(size: string) {\n        this._size = size;\n        if (this._initialized) {\n            this._setClasses();\n        }\n    }\n\n    @Input()\n    set thyIcon(icon: string) {\n        this._icon = icon;\n        if (this._icon) {\n            if (icon.includes('wtf')) {\n                const classes = this._icon.split(' ');\n                if (classes.length === 1) {\n                    classes.unshift('wtf');\n                }\n                this._iconClass = classes;\n            } else {\n                this.svgIconName = icon;\n            }\n        } else {\n            this._iconClass = null;\n            this.svgIconName = null;\n        }\n    }\n\n    @Input()\n    set thySquare(value: boolean) {\n        this._isRadiusSquare = coerceBooleanProperty(value);\n    }\n\n    private _setLoadingStatus() {\n        // let disabled = false;\n        let innerText: string;\n        if (this._loading) {\n            // disabled = true;\n            innerText = this._loadingText ? this._loadingText : null;\n        } else {\n            // disabled = false;\n            innerText = this._originalText ? this._originalText : null;\n        }\n        // this.renderer.setProperty(this._nativeElement, 'disabled', disabled);\n        this._setClasses();\n        if (innerText) {\n            this.renderer.setProperty(this._nativeElement, 'innerText', innerText);\n        }\n    }\n\n    private _setClasses() {\n        let classNames: string[] = null;\n        if (btnTypeClassesMap[this._type]) {\n            classNames = [...btnTypeClassesMap[this._type]];\n        } else {\n            classNames = ['btn'];\n            if (this._type) {\n                classNames.push(`btn-${this._type}`);\n            }\n            // console.error(`button type (${this._type}) is not support`);\n        }\n        if (this._size) {\n            classNames.push(`btn-${this._size}`);\n        }\n        if (this._icon) {\n            classNames.push('btn-has-icon');\n        }\n        if (this._isRadiusSquare) {\n            classNames.push('btn-square');\n        }\n        if (this._loading) {\n            classNames.push('loading');\n        }\n        this.updateHostClassService.updateClass(classNames);\n    }\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2, private updateHostClassService: UpdateHostClassService) {\n        this._nativeElement = this.elementRef.nativeElement;\n        this.updateHostClassService.initializeElement(this._nativeElement);\n    }\n\n    ngOnInit() {\n        this._setClasses();\n        this._initialized = true;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyButtonGroupComponent } from './button-group.component';\nimport { ThyButtonIconComponent } from './button-icon.component';\nimport { ThyButtonComponent } from './button.component';\n\n@NgModule({\n    declarations: [ThyButtonComponent, ThyButtonIconComponent, ThyButtonGroupComponent],\n    imports: [CommonModule, ThyIconModule],\n    exports: [ThyButtonComponent, ThyButtonIconComponent, ThyButtonGroupComponent]\n})\nexport class ThyButtonModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}