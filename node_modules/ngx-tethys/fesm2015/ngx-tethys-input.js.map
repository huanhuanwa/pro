{"version":3,"file":"ngx-tethys-input.js","sources":["../../src/input/input.directive.ts","../../src/input/input.component.ts","../../src/input/input-group.component.ts","../../src/input/input-search.component.ts","../../src/input/module.ts","../../src/input/ngx-tethys-input.ts"],"names":["inputGroupSizeMap","noop"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,MAAMA,mBAAiB,GAAG;AAC1B,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC;AAC3B,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC;AAC3B,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC;AAC3B,IAAI,EAAE,EAAE,CAAC,iBAAiB,CAAC;AAC3B,CAAC,CAAC;AACF,MAKa,iBAAiB;AAAG,IAwB7B,YAAoB,sBAA8C,EAAU,UAAsB,EAAU,MAAiB;AACjI,QADwB,2BAAsB,GAAtB,sBAAsB,CAAwB;AAAC,QAAS,eAAU,GAAV,UAAU,CAAY;AAAC,QAAS,WAAM,GAAN,MAAM,CAAW;AAAC,QAvB3F,mBAAc,GAAG,IAAI,CAAC;AAC7D,QAGY,gBAAW,GAAG,KAAK,CAAC;AAChC,QAmBQ,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAChF,KAAK;AACL,IApBI,IACI,OAAO,CAAC,IAAe;AAC/B,QAAQ,IAAI,IAAI,IAAIA,mBAAiB,CAAC,IAAI,CAAC,EAAE;AAC7C,YAAY,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAACA,mBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7E,SAAS;AAAC,aAAK;AACf,YAAY,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AACxD,SAAS;AACT,KAAK;AACL,IACI,IACI,eAAe,CAAC,KAAc;AACtC,QAAQ,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;AACzD,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AAC9B,YAAY,IAAI,CAAC,eAAe,EAAE,CAAC;AACnC,SAAS;AACT,KAAK;AACL,IAKI,QAAQ;AACZ,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC,QAAQ,IAAI,CAAC,eAAe,EAAE,CAAC;AAC/B,KAAK;AACL,IACY,eAAe;AAC3B,QAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,cAAc,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;AAClH,KAAK;AACL;6CAxCC,SAAS,SAAC,kBACP,QAAQ,EAAE,YAAY,kBACtB,SAAS,EAAE,CAAC,sBAAsB,CAAC,cACtC;;;gJACI;AAAC;AAA2C,YAhBxC,sBAAsB;AAAI,YADf,UAAU;AAAI,YAA0B,SAAS;AAAG;AAAG;AACzD,6BAiBb,WAAW,SAAC,oBAAoB;AAAO,sBAMvC,KAAK;AACR,8BAQG,KAAK;AACT;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCdQ,mCAAmC,GAAQ;AACxD,IAAI,OAAO,EAAE,iBAAiB;AAC9B,IAAI,WAAW,EAAE,UAAU,CAAC,MAAM,iBAAiB,CAAC;AACpD,IAAI,KAAK,EAAE,IAAI;AACf,EAAE;AAEF,MAAMC,MAAI,GAAG,SAAQ,CAAC;AACtB;AACA,MAAM,QAAQ,GAAG,UAAU,CAAC;AAC5B,MAOa,iBAAiB;AAAG,IAqD7B,YAAoB,MAAc;AAAI,QAAlB,WAAM,GAAN,MAAM,CAAQ;AAAC,QApD1B,gBAAW,GAAG,EAAE,CAAC;AAC9B,QAGa,iBAAY,GAAG,KAAK,CAAC;AAClC,QAUa,aAAQ,GAAG,KAAK,CAAC;AAC9B,QAMc,UAAK,GAAwB,IAAI,YAAY,EAAS,CAAC;AACrE,QACc,SAAI,GAAwB,IAAI,YAAY,EAAS,CAAC;AACpE,QAOW,UAAK,GAAG,MAAM,CAAC;AAC1B,QAOY,sBAAiB,GAAeA,MAAI,CAAC;AACjD,QACY,qBAAgB,GAAqBA,MAAI,CAAC;AACtD,QACoC,uBAAkB,GAAG,IAAI,CAAC;AAC9D,QACuC,mBAAc,GAAG,IAAI,CAAC;AAC7D,QAC8C,aAAQ,GAAG,KAAK,CAAC;AAC/D,QACmC,aAAQ,GAAG,KAAK,CAAC;AACpD,KAC0C;AAC1C,IA7CI,IACI,OAAO,CAAC,KAAa;AAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1B,KAAK;AACL,IAKI,IACI,eAAe,CAAC,KAAc;AACtC,QAAQ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAClC,KAAK;AACL,IAiCI,QAAQ;AACZ,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AACrD,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC5C,gBAAgB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC;AACvD,aAAa;AACb,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACI,UAAU,CAAC,KAAU;AAAI,QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,KAAK;AACL,IACI,gBAAgB,CAAC,EAAO;AAAI,QACxB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AACnC,KAAK;AACL,IACI,iBAAiB,CAAC,EAAO;AAAI,QACzB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;AACpC,KAAK;AACL,IACI,gBAAgB,CAAE,UAAmB;AAAI,QACrC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;AACnC,KAAK;AACL,IACI,aAAa;AACjB,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1C,KAAK;AACL,IACI,YAAY,CAAC,KAAY;AAC7B,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC7B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAK;AACL,IACI,WAAW,CAAC,KAAY;AAC5B,QAAQ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC9B,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC9B,KAAK;AACL,IACI,UAAU,CAAC,KAAa;AAC5B,QAAQ,OAAO,KAAK,KAAK,QAAQ,CAAC;AAClC,KAAK;AACL,IACI,kBAAkB;AACtB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,UAAU,CAAC;AACrE,KAAK;AACL;6CA5GC,SAAS,SAAC,kBACP,QAAQ,EAAE,WAAW,kBACrB;;;;;;;;;;;;;;;uBAAqC,kBACrC,SAAS,EAAE,CAAC,sBAAsB,EAAE,mCAAmC,CAAC,kBACxE,aAAa,EAAE,iBAAiB,CAAC,IAAI,cACxC;;;;;;;;;;;;;;;;;;;;;gOACI;AAAC;AAA2C,YAvB7C,MAAM;AACT;AAAG;AAEE,0BAqBD,KAAK;AAAK,sBAEV,KAAK;AAAK,2BAEV,KAAK;AAAK,mBAEV,KAAK;AAAK,sBAEV,KAAK;AACR,2BAIG,KAAK;AAAK,uBAEV,KAAK;AAAK,8BAEV,KAAK;AACR,oBAIG,MAAM;AAAK,mBAEX,MAAM;AAAK,6BAEX,YAAY,SAAC,QAAQ;AAAO,8BAE5B,YAAY,SAAC,SAAS;AAAO,0BAE7B,SAAS,SAAC,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;AAAO,iCAcxC,WAAW,SAAC,iBAAiB;AAAO,6BAEpC,WAAW,SAAC,oBAAoB;AAAO,uBAEvC,WAAW,SAAC,2BAA2B;AAAO,uBAE9C,WAAW,SAAC,gBAAgB;AAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AClF1C,MAAM,iBAAiB,GAAG;AAC1B,IAAI,EAAE,EAAE,CAAC,gBAAgB,CAAC;AAC1B,IAAI,EAAE,EAAE,CAAC,gBAAgB,CAAC;AAC1B,CAAC,CAAC;AACF,MAOa,sBAAsB;AACnC,IA2CI,YACY,YAA0B,EAC1B,sBAA8C,EAC9C,UAAsB;AACnC,QAHa,iBAAY,GAAZ,YAAY,CAAc;AAAC,QAC3B,2BAAsB,GAAtB,sBAAsB,CAAwB;AAAC,QAC/C,eAAU,GAAV,UAAU,CAAY;AACtC,QA3C0C,kBAAa,GAAG,IAAI,CAAC;AAC/D,QA2CQ,IAAI,CAAC,sBAAsB,CAAC,iBAAiB,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAChF,KAAK;AACL,IA5CI,IACI,aAAa,CAAC,KAAa;AACnC,QAAQ,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAChC,KAAK;AACL,IACI,IACI,yBAAyB,CAAC,KAAa;AAC/C,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC/D,SAAS;AACT,KAAK;AACL,IACI,IACI,cAAc,CAAC,KAAa;AACpC,QAAQ,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACjC,KAAK;AACL,IACI,IACI,0BAA0B,CAAC,KAAa;AAChD,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChE,SAAS;AACT,KAAK;AACL,IACI,IACI,OAAO,CAAC,IAAoB;AACpC,QAAQ,IAAI,IAAI,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE;AAC7C,YAAY,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7E,SAAS;AAAC,aAAK;AACf,YAAY,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AACxD,SAAS;AACT,KAAK;AACL;kDA7CC,SAAS,SAAC,kBACP,QAAQ,EAAE,iBAAiB,kBAC3B;;;;;;0EAA2C,kBAC3C;QAAS,EAAE,CAAC,sBAAsB,CAAC,kBACnC,aAAa,EAAE,iBAAiB,CAAC,IAAI;SACxC;;;;;;;;;;;;;;;;;iFACI;AAAC;AACU,YAhBP,YAAY;AAAI,YAAF,sBAAsB;AAAI,YADkB,UAAU;AAAG;AAAG;AAC/E,4BAoBC,WAAW,SAAC,uBAAuB;AAAO,4BAE1C,KAAK;AACR,wCAIG,KAAK;AACR,6BAMG,KAAK;AACR,yCAIG,KAAK;AACR,sBAMG,KAAK;AACR,6BAQG,YAAY,SAAC,QAAQ;AAAO,8BAE5B,YAAY,SAAC,SAAS;AAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCnDxB,0CAA0C,GAAQ;AAC/D,IAAI,OAAO,EAAE,iBAAiB;AAC9B,IAAI,WAAW,EAAE,UAAU,CAAC,MAAM,uBAAuB,CAAC;AAC1D,IAAI,KAAK,EAAE,IAAI;AACf,EAAE;AAEF,MAAM,IAAI,GAAG,SAAQ,CAAC;AACtB;AAEG,MAKU,uBAAuB;AAAG,IAmCnC,YAAoB,GAAsB;AAAI,QAA1B,QAAG,GAAH,GAAG,CAAmB;AAAC,QAlCpC,sBAAiB,GAAe,IAAI,CAAC;AAChD,QACY,qBAAgB,GAAqB,IAAI,CAAC;AACtD,QACW,aAAQ,GAAG,KAAK,CAAC;AAC5B,QACW,cAAS,GAAG,KAAK,CAAC;AAC7B,QACiD,uBAAkB,GAAG,IAAI,CAAC;AAC3E,QAC+C,qBAAgB,GAAG,KAAK,CAAC;AACxE,QAGa,SAAI,GAAG,EAAE,CAAC;AACvB,QACa,gBAAW,GAAG,EAAE,CAAC;AAC9B,QAec,UAAK,GAAwB,IAAI,YAAY,EAAS,CAAC;AACrE,KACkD;AAClD,IAjBI,IACI,QAAQ,CAAC,KAAuB;AACxC,QAAQ,IAAI,KAAK,KAAK,SAAS,EAAE;AACjC,YAAY,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACzC,SAAS;AACT,KAAK;AACL,IACI,IACI,cAAc,CAAC,KAAc;AACrC,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC/B,KAAK;AACL,IAOI,UAAU,CAAC,KAAU;AAAI,QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAChC,QAAQ,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;AAChC,KAAK;AACL,IACI,gBAAgB,CAAC,EAAO;AAAI,QACxB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;AACnC,KAAK;AACL,IACI,iBAAiB,CAAC,EAAO;AAAI,QACzB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;AACpC,KAAK;AACL,IACI,gBAAgB,CAAE,UAAmB;AAAI,QACrC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;AACnC,KAAK;AACL,IACI,iBAAiB;AACrB,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/C,KAAK;AACL,IACI,eAAe,CAAC,KAAY;AAChC,QAAQ,KAAK,CAAC,eAAe,EAAE,CAAC;AAChC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAC3B,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AAC7B,QAAQ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/C,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAK;AACL;mDAzEC,SAAS,SAAC,kBACP,QAAQ,EAAE,kBAAkB,kBAC5B;;;0KAA4C,kBAC5C,SAAS,EAAE,CAAC,sBAAsB,EAAE,0CAA0C,CAAC,kBAC/E,aAAa,EAAE,iBAAiB,CAAC,IAAI,cACxC;;;;;;;;;;;uMACI;AAAC;AAAiD,YArB9C,iBAAiB;AAAG;AAAG;AAA2C,iCA8BtE,WAAW,SAAC,8BAA8B;AAAO,+BAEjD,WAAW,SAAC,4BAA4B;AAAO,mBAI/C,KAAK;AAAK,0BAEV,KAAK;AAAK,uBAEV,KAAK;AACR,6BAMG,KAAK;AACR,sBAIG,KAAK;AAAK,oBAEV,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AAAC;AAAC,MCvCN,cAAc;AAAG;0CAL7B,QAAQ,SAAC;IACN,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,eAAe,EAAE,aAAa,CAAC,kBACpE,YAAY,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,uBAAuB,CAAC;CACrG,OAAO,EAAE,CAAC,iBAAiB,EAAE,iBAAiB,EAAE,sBAAsB,EAAE,uBAAuB,CAAC,cACnG;;;;;;;;0BACI;AAAC;ACfN;AACA;AACA;AACA;AACA;AAC8K","sourcesContent":["import { Directive, ElementRef, HostBinding, Input, OnInit, Renderer2 } from '@angular/core';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\nexport type InputSize = 'xs' | 'sm' | 'md' | 'lg' | '';\n\nconst inputGroupSizeMap = {\n    xs: ['form-control-xs'],\n    sm: ['form-control-sm'],\n    md: ['form-control-md'],\n    lg: ['form-control-lg']\n};\n\n@Directive({\n    selector: '[thyInput]',\n    providers: [UpdateHostClassService]\n})\nexport class ThyInputDirective implements OnInit {\n    @HostBinding('class.form-control') _isFormControl = true;\n\n    private autocomplete: boolean;\n\n    private initialized = false;\n\n    @Input()\n    set thySize(size: InputSize) {\n        if (size && inputGroupSizeMap[size]) {\n            this.updateHostClassService.updateClass(inputGroupSizeMap[size]);\n        } else {\n            this.updateHostClassService.updateClass([]);\n        }\n    }\n\n    @Input()\n    set thyAutocomplete(value: boolean) {\n        this.autocomplete = coerceBooleanProperty(value);\n        if (this.initialized) {\n            this.setAutocomplete();\n        }\n    }\n\n    constructor(private updateHostClassService: UpdateHostClassService, private elementRef: ElementRef, private render: Renderer2) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n\n    ngOnInit() {\n        this.initialized = true;\n        this.setAutocomplete();\n    }\n\n    private setAutocomplete() {\n        this.render.setAttribute(this.elementRef.nativeElement, 'autocomplete', this.autocomplete ? 'on' : 'off');\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ContentChild,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    Renderer2,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation,\n    NgZone,\n    OnInit\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { take } from 'rxjs/operators';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThyInputComponent),\n    multi: true\n};\n\nconst noop = () => {};\n\nconst password = 'password';\n\n@Component({\n    selector: 'thy-input',\n    templateUrl: './input.component.html',\n    providers: [UpdateHostClassService, CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyInputComponent implements ControlValueAccessor, OnInit {\n    @Input() placeholder = '';\n\n    @Input() thySize: string;\n\n    @Input() thyAutofocus = false;\n\n    @Input() type: string;\n\n    @Input()\n    set thyType(value: string) {\n        this.type = value;\n    }\n\n    @Input() thyLabelText: string;\n\n    @Input() readonly = false;\n\n    @Input()\n    set thyAutocomplete(value: boolean) {\n        this.autocomplete = value;\n    }\n\n    @Output() focus: EventEmitter<Event> = new EventEmitter<Event>();\n\n    @Output() blur: EventEmitter<Event> = new EventEmitter<Event>();\n\n    @ContentChild('append') appendTemplate: TemplateRef<any>;\n\n    @ContentChild('prepend') prependTemplate: TemplateRef<any>;\n\n    @ViewChild('eye', { static: true }) eyeTemplate: TemplateRef<any>;\n\n    public _type = 'text';\n\n    public value: string;\n\n    public autocomplete: boolean;\n\n    public showLabel: boolean;\n\n    private onTouchedCallback: () => void = noop;\n\n    private onChangeCallback: (_: any) => void = noop;\n\n    @HostBinding('class.thy-input') _isSearchContainer = true;\n\n    @HostBinding('class.form-control') _isFormControl = true;\n\n    @HostBinding('class.form-control-active') _isFocus = false;\n\n    @HostBinding('class.disabled') disabled = false;\n\n    constructor(private ngZone: NgZone) {}\n\n    ngOnInit() {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n            if (this.isPassword(this.type)) {\n                this.appendTemplate = this.eyeTemplate;\n            }\n        });\n    }\n\n    writeValue(value: any): void {\n        this.value = value;\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onModelChange() {\n        this.onChangeCallback(this.value);\n    }\n\n    onInputFocus(event: Event) {\n        this._isFocus = true;\n        this.showLabel = true;\n        this.focus.emit(event);\n    }\n\n    onInputBlur(event: Event) {\n        this._isFocus = false;\n        this.showLabel = false;\n        this.blur.emit(event);\n    }\n\n    isPassword(value: string) {\n        return value === password;\n    }\n\n    togglePasswordType() {\n        this.type = this.isPassword(this.type) ? 'text' : 'password';\n    }\n}\n","import { Component, HostBinding, Input, ContentChild, TemplateRef, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { ThyTranslate, UpdateHostClassService } from 'ngx-tethys/core';\n\nexport type InputGroupSize = 'sm' | 'lg' | '';\n\nconst inputGroupSizeMap = {\n    sm: ['input-group-sm'],\n    lg: ['input-group-lg']\n};\n\n@Component({\n    selector: 'thy-input-group',\n    templateUrl: './input-group.component.html',\n    providers: [UpdateHostClassService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyInputGroupComponent {\n    public appendText: string;\n\n    public prependText: string;\n\n    @HostBinding('class.thy-input-group') _isInputGroup = true;\n\n    @Input()\n    set thyAppendText(value: string) {\n        this.appendText = value;\n    }\n\n    @Input()\n    set thyAppendTextTranslateKey(value: string) {\n        if (value) {\n            this.appendText = this.thyTranslate.instant(value);\n        }\n    }\n\n    @Input()\n    set thyPrependText(value: string) {\n        this.prependText = value;\n    }\n\n    @Input()\n    set thyPrependTextTranslateKey(value: string) {\n        if (value) {\n            this.prependText = this.thyTranslate.instant(value);\n        }\n    }\n\n    @Input()\n    set thySize(size: InputGroupSize) {\n        if (size && inputGroupSizeMap[size]) {\n            this.updateHostClassService.updateClass(inputGroupSizeMap[size]);\n        } else {\n            this.updateHostClassService.updateClass([]);\n        }\n    }\n\n    @ContentChild('append') appendTemplate: TemplateRef<any>;\n\n    @ContentChild('prepend') prependTemplate: TemplateRef<any>;\n\n    constructor(\n        private thyTranslate: ThyTranslate,\n        private updateHostClassService: UpdateHostClassService,\n        private elementRef: ElementRef\n    ) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n}\n","import { ChangeDetectorRef, Component, EventEmitter, forwardRef, HostBinding, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { InputSize } from './input.directive';\n\nexport type InputSearchTheme = 'ellipse' | '';\n\nexport const CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThyInputSearchComponent),\n    multi: true\n};\n\nconst noop = () => {};\n\n@Component({\n    selector: 'thy-input-search',\n    templateUrl: './input-search.component.html',\n    providers: [UpdateHostClassService, CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyInputSearchComponent implements ControlValueAccessor {\n    public onTouchedCallback: () => void = noop;\n\n    private onChangeCallback: (_: any) => void = noop;\n\n    public disabled = false;\n\n    public autoFocus = false;\n\n    @HostBinding('class.input-search-container') _isSearchContainer = true;\n\n    @HostBinding('class.input-search-ellipse') _isSearchEllipse = false;\n\n    searchText: string;\n\n    @Input() name = '';\n\n    @Input() placeholder = '';\n\n    @Input()\n    set thyTheme(value: InputSearchTheme) {\n        if (value === 'ellipse') {\n            this._isSearchEllipse = true;\n        }\n    }\n\n    @Input()\n    set thySearchFocus(value: boolean) {\n        this.autoFocus = value;\n    }\n\n    @Input() thySize: InputSize;\n\n    @Output() clear: EventEmitter<Event> = new EventEmitter<Event>();\n\n    constructor(private cdr: ChangeDetectorRef) {}\n\n    writeValue(value: any): void {\n        this.searchText = value;\n        this.cdr.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    searchModelChange() {\n        this.onChangeCallback(this.searchText);\n    }\n\n    clearSearchText(event: Event) {\n        event.stopPropagation();\n        if (this.disabled) {\n            return;\n        }\n        this.searchText = '';\n        this.onChangeCallback(this.searchText);\n        this.clear.emit(event);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyInputDirective } from './input.directive';\nimport { ThyInputComponent } from './input.component';\nimport { ThyInputGroupComponent } from './input-group.component';\nimport { ThyInputSearchComponent } from './input-search.component';\nimport { FormsModule } from '@angular/forms';\nimport { ThySharedModule } from 'ngx-tethys/shared';\nimport { ThyIconModule } from 'ngx-tethys/icon';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ThySharedModule, ThyIconModule],\n    declarations: [ThyInputDirective, ThyInputComponent, ThyInputGroupComponent, ThyInputSearchComponent],\n    exports: [ThyInputDirective, ThyInputComponent, ThyInputGroupComponent, ThyInputSearchComponent]\n})\nexport class ThyInputModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}