import { EventEmitter, Component, ChangeDetectionStrategy, forwardRef, ChangeDetectorRef, HostBinding, Output, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ThyButtonModule } from 'ngx-tethys/button';
import { NG_VALUE_ACCESSOR } from '@angular/forms';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/button';
class ThyArrowSwitcherComponent {
    constructor(cd) {
        this.cd = cd;
        this._isArrowSwitcher = true;
        this._isSmallSize = false;
        this.thyPrevious = new EventEmitter();
        this.thyNext = new EventEmitter();
        this.index = 0;
        this.disabled = false;
        this.previousDisabled = false;
        this.nextDisabled = false;
    }
    set thyTotal(value) {
        if (value) {
            this.total = value;
            this.getDisabled();
        }
    }
    set thySize(size) {
        if (size === 'sm') {
            this._isSmallSize = true;
        }
    }
    ngOnInit() { }
    writeValue(value) {
        if (value >= 0) {
            this.index = value;
            this.getDisabled();
        }
        this.cd.markForCheck();
    }
    registerOnChange(fn) {
        this.onModelChange = fn;
    }
    registerOnTouched(fn) {
        this.onModelTouched = fn;
    }
    setDisabledState(isDisable) {
        this.disabled = isDisable;
    }
    getDisabled() {
        this.previousDisabled = this.index <= 0 || this.disabled;
        this.nextDisabled = this.index >= this.total - 1 || this.disabled;
    }
    onPreviousClick(event) {
        this.index--;
        this.onModelChange(this.index);
        this.getDisabled();
        this.thyPrevious.emit({ index: this.index, event });
    }
    onNextClick(event) {
        this.index++;
        this.onModelChange(this.index);
        this.getDisabled();
        this.thyNext.emit({ index: this.index, event });
    }
}
ThyArrowSwitcherComponent.ɵfac = function ThyArrowSwitcherComponent_Factory(t) { return new (t || ThyArrowSwitcherComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ThyArrowSwitcherComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyArrowSwitcherComponent, selectors: [["thy-arrow-switcher"]], hostVars: 4, hostBindings: function ThyArrowSwitcherComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-arrow-switcher", ctx._isArrowSwitcher)("thy-arrow-switcher-small", ctx._isSmallSize);
    } }, inputs: { thyTotal: "thyTotal", thySize: "thySize" }, outputs: { thyPrevious: "thyPrevious", thyNext: "thyNext" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => ThyArrowSwitcherComponent),
                multi: true
            }
        ])], decls: 5, vars: 4, consts: [[1, "switcher-wrapper"], ["thyButtonIcon", "angle-left", 3, "disabled", "click"], ["thyButtonIcon", "angle-right", 3, "disabled", "click"]], template: function ThyArrowSwitcherComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "button", 1);
        ɵngcc0.ɵɵlistener("click", function ThyArrowSwitcherComponent_Template_button_click_1_listener($event) { return ctx.onPreviousClick($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "span");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "button", 2);
        ɵngcc0.ɵɵlistener("click", function ThyArrowSwitcherComponent_Template_button_click_4_listener($event) { return ctx.onNextClick($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("disabled", ctx.previousDisabled);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate2("", ctx.index + 1, " / ", ctx.total, "");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("disabled", ctx.nextDisabled);
    } }, directives: [ɵngcc1.ThyButtonIconComponent], encapsulation: 2, changeDetection: 0 });
ThyArrowSwitcherComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
ThyArrowSwitcherComponent.propDecorators = {
    _isArrowSwitcher: [{ type: HostBinding, args: ['class.thy-arrow-switcher',] }],
    _isSmallSize: [{ type: HostBinding, args: ['class.thy-arrow-switcher-small',] }],
    thyPrevious: [{ type: Output }],
    thyNext: [{ type: Output }],
    thyTotal: [{ type: Input }],
    thySize: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyArrowSwitcherComponent, [{
        type: Component,
        args: [{
                selector: 'thy-arrow-switcher',
                template: "<div class=\"switcher-wrapper\">\n  <button thyButtonIcon=\"angle-left\" [disabled]=\"previousDisabled\" (click)=\"onPreviousClick($event)\"></button>\n  <span>{{ index + 1 }} / {{ total }}</span>\n  <button thyButtonIcon=\"angle-right\" [disabled]=\"nextDisabled\" (click)=\"onNextClick($event)\"></button>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => ThyArrowSwitcherComponent),
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { _isArrowSwitcher: [{
            type: HostBinding,
            args: ['class.thy-arrow-switcher']
        }], _isSmallSize: [{
            type: HostBinding,
            args: ['class.thy-arrow-switcher-small']
        }], thyPrevious: [{
            type: Output
        }], thyNext: [{
            type: Output
        }], thyTotal: [{
            type: Input
        }], thySize: [{
            type: Input
        }] }); })();

class ThyArrowSwitcherModule {
}
ThyArrowSwitcherModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyArrowSwitcherModule });
ThyArrowSwitcherModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyArrowSwitcherModule_Factory(t) { return new (t || ThyArrowSwitcherModule)(); }, imports: [[CommonModule, ThyButtonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyArrowSwitcherModule, { declarations: function () { return [ThyArrowSwitcherComponent]; }, imports: function () { return [CommonModule, ThyButtonModule]; }, exports: function () { return [ThyArrowSwitcherComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyArrowSwitcherModule, [{
        type: NgModule,
        args: [{
                declarations: [ThyArrowSwitcherComponent],
                imports: [CommonModule, ThyButtonModule],
                exports: [ThyArrowSwitcherComponent]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ThyArrowSwitcherComponent, ThyArrowSwitcherModule };

//# sourceMappingURL=ngx-tethys-arrow-switcher.js.map