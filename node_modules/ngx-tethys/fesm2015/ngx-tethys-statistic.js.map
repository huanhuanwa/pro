{"version":3,"file":"ngx-tethys-statistic.js","sources":["../../src/statistic/statistic.component.ts","../../src/statistic/statistic.module.ts","../../src/statistic/ngx-tethys-statistic.ts"],"names":[],"mappings":"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","sourcesContent":["import { OnInit, Component, Input, HostBinding, ElementRef, TemplateRef, ContentChild, Renderer2 } from '@angular/core';\nimport { coerceBooleanProperty, hexToRgb } from 'ngx-tethys/util';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\n\nexport type ThyStatisticColorType = 'primary' | 'success' | 'warning' | 'danger' | 'info';\n\nexport type ThyStatisticShape = 'card';\n\nexport type ThyStatisticSizes = 'default';\n\nexport type ThyStatisticTitlePosition = 'top' | 'bottom';\n\n@Component({\n    selector: 'thy-statistic',\n    templateUrl: './statistic.component.html',\n    providers: [UpdateHostClassService]\n})\nexport class ThyStatisticComponent implements OnInit {\n    _shape: ThyStatisticShape;\n\n    _initialized = false;\n\n    _size: ThyStatisticSizes;\n\n    prefixTemplate: TemplateRef<void>;\n\n    suffixTemplate: TemplateRef<void>;\n\n    valueTemplate: TemplateRef<void>;\n\n    titleTemplate: TemplateRef<void>;\n\n    @HostBinding(`class.thy-statistic`) class = true;\n\n    @Input() thyValueStyle = {};\n\n    @Input() thyPrefix: string;\n\n    @ContentChild('prefix', { static: true }) set prefix(value: TemplateRef<void>) {\n        this.prefixTemplate = value;\n    }\n\n    @Input() set thyPrefixTemplate(value: TemplateRef<void>) {\n        this.prefixTemplate = value;\n    }\n\n    @Input() thyValue: number | string;\n\n    @ContentChild('value', { static: true }) set value(value: TemplateRef<void>) {\n        this.valueTemplate = value;\n    }\n\n    @Input() set thyValueTemplate(value: TemplateRef<void>) {\n        this.valueTemplate = value;\n    }\n\n    @Input() thyTitle: string;\n\n    @ContentChild('title', { static: true }) set title(value: TemplateRef<void>) {\n        this.titleTemplate = value;\n    }\n\n    @Input() set thyTitleTemplate(value: TemplateRef<void>) {\n        this.titleTemplate = value;\n    }\n\n    @Input() thySuffix: string;\n\n    @ContentChild('suffix', { static: true }) set suffix(value: TemplateRef<void>) {\n        this.suffixTemplate = value;\n    }\n\n    @Input() set thySuffixTemplate(value: TemplateRef<void>) {\n        this.suffixTemplate = value;\n    }\n\n    @Input() thyTitlePosition: ThyStatisticTitlePosition = 'bottom';\n\n    @Input()\n    set thyShape(value: ThyStatisticShape) {\n        this._shape = value;\n        if (this._initialized) {\n            this._setClassesByType();\n        }\n    }\n\n    @Input() thyColor: string | ThyStatisticColorType;\n\n    @Input()\n    set thySize(value: ThyStatisticSizes) {\n        this._size = value;\n        if (this._initialized) {\n            this._setClassesByType();\n        }\n    }\n\n    constructor(private elementRef: ElementRef, private updateHostClassService: UpdateHostClassService, private renderer: Renderer2) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n\n    ngOnInit() {\n        this._setClassesByType();\n        this._initialized = true;\n    }\n\n    setColor(color: string) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'color', color);\n        if (this._shape === 'card') {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'border-color', color);\n            this.renderer.setStyle(this.elementRef.nativeElement, 'background-color', hexToRgb(color, 0.05));\n        }\n    }\n\n    _setClassesByType() {\n        const classNames = [];\n        if (this.thyColor) {\n            if (RegExp(/^#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})$/).test(this.thyColor)) {\n                this.setColor(this.thyColor);\n            } else {\n                classNames.push(`thy-statistic-${this.thyColor}`);\n            }\n        }\n        if (this._shape) {\n            classNames.push(`thy-statistic-${this._shape}`);\n        }\n        if (!this._size) {\n            this._size = 'default';\n        }\n        classNames.push(`thy-statistic-${this._size}`);\n\n        this.renderer.setStyle(this.elementRef.nativeElement, 'font-size', this.thySize);\n        this.updateHostClassService.updateClass(classNames);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ThySharedModule } from 'ngx-tethys/shared';\nimport { ThyStatisticComponent } from './statistic.component';\nimport { ThyIconModule } from 'ngx-tethys/icon';\n\n@NgModule({\n    declarations: [ThyStatisticComponent],\n    imports: [CommonModule, ThySharedModule, ThyIconModule],\n    exports: [ThyStatisticComponent],\n    providers: []\n})\nexport class ThyStatisticModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}