{"version":3,"file":"ngx-tethys-date-picker.js","sources":["../../src/date-picker/standard-types.ts","../../src/date-picker/lib/calendar/calendar-footer.component.ts","../../src/date-picker/date-helper.service.ts","../../src/date-picker/lib/calendar/calendar-header.component.ts","../../src/date-picker/lib/decade/decade-panel.component.ts","../../src/date-picker/lib/month/month-panel.component.ts","../../src/date-picker/picker.util.ts","../../src/date-picker/lib/popups/date-popup.component.ts","../../src/date-picker/lib/popups/inner-popup.component.ts","../../src/date-picker/lib/year/year-panel.component.ts","../../src/date-picker/lib/month/month-table.component.ts","../../src/date-picker/lib/date/date-table.component.ts","../../src/date-picker/lib/date/date-table-cell.component.ts","../../src/date-picker/lib/lib-packer.module.ts","../../src/date-picker/picker.component.ts","../../src/date-picker/abstract-picker.component.ts","../../src/date-picker/base-picker.component.ts","../../src/date-picker/header-picker.component.ts","../../src/date-picker/date-picker.component.ts","../../src/date-picker/month-picker.component.ts","../../src/date-picker/range-picker.component.ts","../../src/date-picker/week-picker.component.ts","../../src/date-picker/year-picker.component.ts","../../src/date-picker/picker.validators.ts","../../src/date-picker/picker.pipes.ts","../../src/date-picker/abstract-picker.directive.ts","../../src/date-picker/date-picker.directive.ts","../../src/date-picker/range-picker.directive.ts","../../src/date-picker/date-picker.module.ts","../../src/date-picker/ngx-tethys-date-picker.ts"],"sourcesContent":["import { TemplateRef } from '@angular/core';\nimport { TinyDate } from 'ngx-tethys/util';\n\nexport type DisabledDateFn = (d: Date) => boolean;\n\nexport type DisabledTimePartial = 'start' | 'end';\n\nexport type PanelMode = 'decade' | 'year' | 'month' | 'date';\n\nexport type CompatibleValue = TinyDate[] | TinyDate;\n\nexport type CompatibleDate = Date | Date[];\n\nexport type DisabledTimeFn = (current: Date | Date[], partial?: DisabledTimePartial) => DisabledTimeConfig;\n\nexport interface DateEntry {\n    date: number | null | Date;\n    with_time: 0 | 1;\n}\n\nexport interface RangeEntry {\n    begin: number | null | Date;\n    end: number | null | Date;\n}\n\nexport type DateType = number | DateEntry;\n\nexport function instanceOfDateEntry(object: DateEntry): object is DateEntry {\n    return isSupportDateType(object, 'date') && typeof object.with_time === 'number';\n}\n\nexport function instanceOfRangeEntry(object: RangeEntry): object is RangeEntry {\n    return isSupportDateType(object, 'begin') && isSupportDateType(object, 'end');\n}\n\nfunction isSupportDateType(object: DateEntry | RangeEntry, key: string) {\n    return typeof object[key] === 'number' || object[key] === null || object[key] instanceof Date;\n}\n\nexport interface DisabledTimeConfig {\n    thyDisabledHours(): number[];\n    thyDisabledMinutes(hour: number): number[];\n    thyDisabledSeconds(hour: number, minute: number): number[];\n}\n\nexport interface SupportTimeOptions {\n    thyFormat?: string;\n    thyHourStep?: number;\n    thyMinuteStep?: number;\n    thySecondStep?: number;\n    thyUse12Hours?: boolean;\n    thyHideDisabledOptions?: boolean;\n    thyDefaultOpenValue?: Date;\n    thyAddOn?: TemplateRef<void>;\n    thyDisabledHours?(): number[];\n    thyDisabledMinutes?(hour: number): number[];\n    thyDisabledSeconds?(hour: number, minute: number): number[];\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Renderer2,\n    ViewContainerRef,\n    OnInit\n} from '@angular/core';\n\nimport { TinyDate } from 'ngx-tethys/util';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'calendar-footer',\n    exportAs: 'calendarFooter',\n    templateUrl: 'calendar-footer.component.html'\n})\nexport class CalendarFooterComponent implements OnInit {\n    @Input() showTime = false;\n    @Input() mustShowTime = false;\n    @Input() value: TinyDate;\n    @Output() readonly selectTime = new EventEmitter<TinyDate>();\n    @Output() readonly clickOk = new EventEmitter<void>();\n    @Output() readonly clickRemove = new EventEmitter<void>();\n    @Output() readonly showTimePickerChange = new EventEmitter<boolean>();\n    isShowTime = false;\n    isCanTime = false;\n    constructor(_elementRef: ElementRef, _renderer: Renderer2, _viewContainerRef: ViewContainerRef) {}\n\n    ngOnInit() {\n        this._initTimeShowMode();\n        if (!this.value) {\n            this.value = new TinyDate();\n        }\n    }\n\n    onSelectTime(date: Date): void {\n        this.selectTime.emit(new TinyDate(date));\n    }\n\n    onTimeOk() {\n        this.selectTime.emit(this.value);\n        this.clickOk.emit();\n    }\n\n    onClear() {\n        this.value = null;\n        this.clickRemove.emit();\n    }\n\n    changeTimeShowMode(type: string) {\n        switch (type) {\n            case 'can':\n                this.isCanTime = true;\n                this.isShowTime = false;\n                break;\n            case 'show':\n                this.isCanTime = false;\n                this.isShowTime = true;\n                break;\n        }\n        this.showTimePickerChange.emit(this.isShowTime);\n    }\n\n    private _initTimeShowMode() {\n        if (this.mustShowTime) {\n            this.changeTimeShowMode('show');\n        } else {\n            if (this.showTime) {\n                this.changeTimeShowMode('can');\n            }\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { formatDate } from '@angular/common';\nimport { WeekDayIndex } from 'ngx-tethys/util';\n\nexport function DATE_HELPER_SERVICE_FACTORY(): DateHelperService {\n    return new DateHelperByDatePipe();\n}\n\n@Injectable({\n    providedIn: 'root',\n    useFactory: DATE_HELPER_SERVICE_FACTORY\n})\nexport abstract class DateHelperService {\n    relyOnDatePipe: boolean = this instanceof DateHelperByDatePipe;\n    abstract getISOWeek(date: Date): number;\n    abstract getFirstDayOfWeek(): WeekDayIndex;\n    abstract format(date: Date, formatStr: string): string;\n}\n\nexport class DateHelperByDatePipe extends DateHelperService {\n    getISOWeek(date: Date): number {\n        return +this.format(date, 'w');\n    }\n\n    getFirstDayOfWeek(): WeekDayIndex {\n        return 0;\n    }\n\n    format(date: Date | null, formatStr: string): string {\n        return date ? formatDate(date, formatStr, 'zh-Hans') : '';\n    }\n\n    transCompatFormat(format: string): string {\n        return format && format.replace(/Y/g, 'y').replace(/D/g, 'd');\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { PanelMode } from '../../standard-types';\nimport { TinyDate } from 'ngx-tethys/util';\nimport { DateHelperService, DateHelperByDatePipe } from '../../date-helper.service';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'calendar-header',\n    exportAs: 'calendarHeader',\n    templateUrl: 'calendar-header.component.html'\n})\nexport class CalendarHeaderComponent implements OnInit, OnChanges {\n    @Input() enablePrev = true;\n    @Input() enableNext = true;\n    @Input() disabledMonth: (date: Date) => boolean;\n    @Input() disabledYear: (date: Date) => boolean;\n    @Input() value: TinyDate;\n    @Output() readonly valueChange = new EventEmitter<TinyDate>();\n\n    @Input() panelMode: PanelMode;\n    @Output() readonly panelModeChange = new EventEmitter<PanelMode>();\n\n    @Output() readonly chooseDecade = new EventEmitter<TinyDate>();\n    @Output() readonly chooseYear = new EventEmitter<TinyDate>();\n    @Output() readonly chooseMonth = new EventEmitter<TinyDate>();\n\n    prefixCls = 'thy-calendar';\n    yearMonthDaySelectors: YearMonthDaySelector[];\n\n    // tslint:disable-next-line: max-line-length\n    private yearToMonth = false; // Indicate whether should change to month panel when current is year panel (if referer=month, it should show month panel when choosed a year)\n\n    constructor(private dateHelper: DateHelperService) {}\n\n    ngOnInit(): void {\n        if (!this.value) {\n            this.value = new TinyDate();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.value) {\n            this.render();\n        }\n    }\n\n    previousYear(): void {\n        this.gotoYear(-1);\n    }\n\n    nextYear(): void {\n        this.gotoYear(1);\n    }\n\n    previousMonth(): void {\n        this.gotoMonth(-1);\n    }\n\n    nextMonth(): void {\n        this.gotoMonth(1);\n    }\n\n    changePanel(mode: PanelMode, value?: TinyDate): void {\n        this.panelModeChange.emit(mode);\n        if (value) {\n            this.changeValueFromInside(value);\n        }\n    }\n\n    onChooseDecade(value: TinyDate): void {\n        this.changePanel('year', value);\n        this.chooseDecade.emit(value);\n    }\n\n    onChooseYear(value: TinyDate): void {\n        this.changePanel(this.yearToMonth ? 'month' : 'date', value);\n        this.yearToMonth = false; // Clear\n        this.chooseYear.emit(value);\n    }\n\n    onChooseMonth(value: TinyDate): void {\n        this.changePanel('date', value);\n        this.yearToMonth = false; // Clear\n        this.chooseMonth.emit(value);\n    }\n\n    changeToMonthPanel(): void {\n        this.changePanel('month');\n        this.yearToMonth = true;\n    }\n\n    private render(): void {\n        if (this.value) {\n            this.yearMonthDaySelectors = this.createYearMonthDaySelectors();\n        }\n    }\n\n    private gotoMonth(amount: number): void {\n        this.changeValueFromInside(this.value.addMonths(amount));\n    }\n\n    private gotoYear(amount: number): void {\n        this.changeValueFromInside(this.value.addYears(amount));\n    }\n\n    private changeValueFromInside(value: TinyDate): void {\n        if (this.value !== value) {\n            this.value = value;\n            this.valueChange.emit(this.value);\n            this.render();\n        }\n    }\n\n    private formatDateTime(format: string): string {\n        return this.dateHelper.format(this.value.nativeDate, format);\n    }\n\n    private createYearMonthDaySelectors(): YearMonthDaySelector[] {\n        let year: YearMonthDaySelector;\n        let month: YearMonthDaySelector;\n\n        // NOTE: Compat for DatePipe formatting rules\n        let yearFormat = 'yyyy年';\n        if (this.dateHelper.relyOnDatePipe) {\n            yearFormat = (this.dateHelper as DateHelperByDatePipe).transCompatFormat(yearFormat);\n        }\n        year = {\n            className: `${this.prefixCls}-year-select`,\n            onClick: () => this.changePanel('year'),\n            label: this.formatDateTime(yearFormat)\n        };\n\n        month = {\n            className: `${this.prefixCls}-month-select`,\n            onClick: () => this.changeToMonthPanel(),\n            label: this.formatDateTime('MMM')\n        };\n\n        // NOTE: Compat for DatePipe formatting rules\n        let dayFormat = 'd日';\n        if (this.dateHelper.relyOnDatePipe) {\n            dayFormat = (this.dateHelper as DateHelperByDatePipe).transCompatFormat(dayFormat);\n        }\n\n        let result: YearMonthDaySelector[];\n\n        result = [year, month];\n\n        return result.filter(selector => !!selector);\n    }\n}\n\nexport interface YearMonthDaySelector {\n    className: string;\n    title?: string;\n    label: string;\n    onClick?(): void;\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { TinyDate } from 'ngx-tethys/util';\n\nconst MAX_ROW = 4;\nconst MAX_COL = 3;\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'decade-panel',\n    exportAs: 'decadePanel',\n    templateUrl: 'decade-panel.component.html'\n})\nexport class DecadePanelComponent implements OnChanges {\n    @Input() value: TinyDate;\n    @Output() readonly valueChange = new EventEmitter<TinyDate>();\n\n    get startYear(): number {\n        return parseInt(`${this.value.getYear() / 100}`, 10) * 100;\n    }\n    get endYear(): number {\n        return this.startYear + 99;\n    }\n\n    prefixCls = 'thy-calendar-decade-panel';\n    panelDecades: PanelDecadeData[][];\n\n    constructor() {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.value) {\n            this.render();\n        }\n    }\n\n    previousCentury(): void {\n        this.gotoYear(-100);\n    }\n\n    nextCentury(): void {\n        this.gotoYear(100);\n    }\n\n    trackPanelDecade(_index: number, decadeData: PanelDecadeData): string {\n        return decadeData.content;\n    }\n\n    private render(): void {\n        if (this.value) {\n            this.panelDecades = this.makePanelDecades();\n        }\n    }\n\n    // Re-render panel content by the header's buttons (NOTE: Do not try to trigger final value change)\n    private gotoYear(amount: number): void {\n        this.value = this.value.addYears(amount);\n        // this.valueChange.emit(this.value); // Do not try to trigger final value change\n        this.render();\n    }\n\n    private chooseDecade(startYear: number): void {\n        this.value = this.value.setYear(startYear);\n        this.valueChange.emit(this.value);\n    }\n\n    private makePanelDecades(): PanelDecadeData[][] {\n        const decades: PanelDecadeData[][] = [];\n        const currentYear = this.value.getYear();\n        const startYear = this.startYear;\n        const endYear = this.endYear;\n        const previousYear = startYear - 10;\n\n        let index = 0;\n        for (let rowIndex = 0; rowIndex < MAX_ROW; rowIndex++) {\n            decades[rowIndex] = [];\n            for (let colIndex = 0; colIndex < MAX_COL; colIndex++) {\n                const start = previousYear + index * 10;\n                const end = previousYear + index * 10 + 9;\n                const content = `${start}-${end}`;\n\n                const cell: PanelDecadeData = (decades[rowIndex][colIndex] = {\n                    content,\n                    title: content,\n                    isCurrent: currentYear >= start && currentYear <= end,\n                    isLowerThanStart: end < startYear,\n                    isBiggerThanEnd: start > endYear,\n                    classMap: null,\n                    onClick: () => this.chooseDecade(start)\n                });\n\n                cell.classMap = {\n                    [`${this.prefixCls}-cell`]: true,\n                    [`${this.prefixCls}-selected-cell`]: cell.isCurrent,\n                    [`${this.prefixCls}-last-century-cell`]: cell.isLowerThanStart,\n                    [`${this.prefixCls}-next-century-cell`]: cell.isBiggerThanEnd\n                };\n                index++;\n            }\n        }\n        return decades;\n    }\n}\n\nexport interface PanelDecadeData {\n    content: string;\n    title: string;\n    isCurrent: boolean;\n    isLowerThanStart: boolean;\n    isBiggerThanEnd: boolean;\n    classMap?: object | null;\n    onClick: VoidFunction | null;\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { TinyDate } from 'ngx-tethys/util';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'month-panel',\n    exportAs: 'monthPanel',\n    templateUrl: 'month-panel.component.html'\n})\nexport class MonthPanelComponent {\n    @Input() value: TinyDate;\n    @Input() disabledDate: (date: Date) => boolean;\n\n    @Output() readonly valueChange = new EventEmitter<TinyDate>();\n    @Output() readonly yearPanelShow = new EventEmitter<void>();\n\n    prefixCls = 'thy-calendar-month-panel';\n\n    previousYear(): void {\n        this.gotoYear(-1);\n    }\n\n    nextYear(): void {\n        this.gotoYear(1);\n    }\n\n    private gotoYear(amount: number): void {\n        this.value = this.value.addYears(amount);\n    }\n}\n","import { CompatibleDate, DateEntry, RangeEntry, instanceOfDateEntry, instanceOfRangeEntry, CompatibleValue } from './standard-types';\n\nimport { fromUnixTime } from 'date-fns';\nimport { TinyDate } from 'ngx-tethys/util';\n\nexport function transformDateValue(value: CompatibleDate | number | DateEntry | RangeEntry): { value: CompatibleDate; withTime?: boolean } {\n    if (!value) {\n        return { value: null };\n    }\n    let withTime;\n    if (value && typeof value === 'number') {\n        value = convertDate(value);\n    }\n    if (value && instanceOfDateEntry(value as DateEntry)) {\n        const { date, with_time } = value as DateEntry;\n        value = date ? convertDate(date) : null;\n        withTime = !!with_time;\n    }\n    if (value && instanceOfRangeEntry(value as RangeEntry)) {\n        const rangeValue = value as RangeEntry;\n        value = [];\n        if (rangeValue.begin && rangeValue.end) {\n            value[0] = convertDate(rangeValue.begin);\n            value[1] = convertDate(rangeValue.end);\n        }\n    }\n    return { value: value as CompatibleDate, withTime };\n}\n\nexport function convertDate(date: Date | number): Date {\n    if (typeof date === 'number') {\n        if (date.toString().length < 13) {\n            return fromUnixTime(date);\n        } else {\n            return new Date(date);\n        }\n    } else {\n        return date;\n    }\n}\n\nexport function hasValue(value: CompatibleValue): boolean {\n    if (Array.isArray(value)) {\n        return !!value[0] && !!value[1];\n    } else {\n        return !!value;\n    }\n}\n\nexport function makeValue(value: CompatibleDate | null, isRange: boolean = false): CompatibleValue {\n    if (isRange) {\n        return value ? (value as Date[]).map(val => new TinyDate(val)) : [];\n    } else {\n        return value ? new TinyDate(value as Date) : null;\n    }\n}\n","import { endOfDay, startOfDay } from 'date-fns';\nimport { FunctionProp, sortRangeValue, TinyDate } from 'ngx-tethys/util';\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    TemplateRef\n} from '@angular/core';\n\nimport { hasValue, makeValue, transformDateValue } from '../../picker.util';\nimport { CompatibleDate, CompatibleValue, DisabledDateFn, PanelMode, SupportTimeOptions } from '../../standard-types';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'date-popup',\n    exportAs: 'datePopup',\n    templateUrl: './date-popup.component.html'\n})\nexport class DatePopupComponent implements OnChanges, OnInit {\n    @Input() isRange: boolean;\n    @Input() showWeek: boolean;\n\n    @Input() format: string;\n    @Input() disabledDate: DisabledDateFn;\n    @Input() minDate: Date | number;\n    @Input() maxDate: Date | number;\n    @Input() showToday: boolean;\n    @Input() showTime: SupportTimeOptions | boolean;\n    @Input() mustShowTime: boolean;\n    @Input() dateRender: FunctionProp<TemplateRef<Date> | string>;\n    @Input() className: string;\n    @Input() panelMode: PanelMode | PanelMode[];\n    @Input() value: CompatibleValue;\n    @Input() defaultPickerValue: CompatibleDate | number;\n\n    @Output() readonly panelModeChange = new EventEmitter<PanelMode | PanelMode[]>();\n    @Output() readonly calendarChange = new EventEmitter<CompatibleValue>();\n    @Output() readonly valueChange = new EventEmitter<CompatibleValue>();\n    @Output() readonly resultOk = new EventEmitter<void>(); // Emitted when done with date selecting\n    @Output() readonly showTimePickerChange = new EventEmitter<boolean>();\n    prefixCls = 'thy-calendar';\n    showTimePicker = false;\n    timeOptions: SupportTimeOptions | SupportTimeOptions[] | null;\n    valueForRangeShow: TinyDate[]; // Range ONLY\n    selectedValue: TinyDate[]; // Range ONLY\n    hoverValue: TinyDate[]; // Range ONLY\n    private partTypeMap: { [key: string]: number } = { left: 0, right: 1 };\n\n    [property: string]: any;\n\n    constructor(private cdr: ChangeDetectorRef) {}\n\n    setProperty<T extends keyof DatePopupComponent>(key: T, value: this[T]): void {\n        this[key] = value;\n        this.cdr.markForCheck();\n    }\n\n    ngOnInit(): void {\n        // Initialization for range properties to prevent errors while later assignment\n        if (this.isRange) {\n            ['panelMode', 'selectedValue', 'hoverValue'].forEach(prop => this.initialArray(prop));\n        }\n        if (this.defaultPickerValue && !hasValue(this.value)) {\n            const { value } = transformDateValue(this.defaultPickerValue);\n            this.value = makeValue(value, this.isRange);\n            if (this.isRange) {\n                this.reInitializeRangeRelatedValue();\n            }\n        }\n        this.initDisabledDate();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.isRange) {\n            if (changes.value) {\n                this.reInitializeRangeRelatedValue();\n            }\n        }\n    }\n\n    reInitializeRangeRelatedValue() {\n        this.clearHoverValue();\n        this.selectedValue = this.value as TinyDate[];\n        this.valueForRangeShow = this.normalizeRangeValue(this.value as TinyDate[]);\n    }\n\n    initDisabledDate(): void {\n        let minDate: TinyDate;\n        let maxDate: TinyDate;\n        let disabledDateFn: DisabledDateFn;\n        if (this.minDate) {\n            const { value } = transformDateValue(this.minDate);\n            minDate = new TinyDate(value as Date);\n        }\n        if (this.maxDate) {\n            const { value } = transformDateValue(this.maxDate);\n            maxDate = new TinyDate(value as Date);\n        }\n        if (this.disabledDate) {\n            disabledDateFn = this.disabledDate;\n        }\n        this.disabledDate = d => {\n            let expression = false;\n            if (minDate) {\n                expression = d < minDate.startOfDay().nativeDate;\n            }\n            if (maxDate && !expression) {\n                expression = d > maxDate.endOfDay().nativeDate;\n            }\n            if (disabledDateFn && typeof disabledDateFn === 'function' && !expression) {\n                expression = disabledDateFn(d);\n            }\n            return expression;\n        };\n    }\n\n    onShowTimePickerChange(show: boolean): void {\n        this.showTimePicker = show;\n        this.showTimePickerChange.emit(show);\n    }\n\n    onClickOk(): void {\n        this.setValue(this.value);\n        this.valueChange.emit(this.value);\n        this.resultOk.emit();\n    }\n\n    onClickRemove(): void {\n        this.value = this.isRange ? [] : null;\n        this.setValue(this.value);\n        this.valueChange.emit(this.value);\n    }\n\n    onDayHover(value: TinyDate): void {\n        if (this.isRange && this.selectedValue[0] && !this.selectedValue[1]) {\n            // When right value is selected, don't do hover\n            const base = this.selectedValue[0]; // Use the left of selected value as the base to decide later hoverValue\n            if (base.isBeforeDay(value)) {\n                this.hoverValue = [base, value];\n            } else {\n                this.hoverValue = [value, base];\n            }\n        }\n    }\n\n    onPanelModeChange(mode: PanelMode, partType?: RangePartType): void {\n        if (this.isRange) {\n            (this.panelMode as PanelMode[])[this.getPartTypeIndex(partType)] = mode;\n        } else {\n            this.panelMode = mode;\n        }\n        this.panelModeChange.emit(this.panelMode);\n    }\n\n    onHeaderChange(value: TinyDate, partType?: RangePartType): void {\n        if (this.isRange) {\n            this.valueForRangeShow[this.getPartTypeIndex(partType)] = value;\n            this.valueForRangeShow = this.normalizeRangeValue(this.valueForRangeShow); // Should always take care of start/end\n        } else {\n            if (this.showTimePicker) {\n                this.setValue(value);\n            }\n        }\n    }\n\n    onSelectTime(value: TinyDate, partType?: RangePartType): void {\n        if (this.isRange) {\n            // TODO:range picker set time\n        } else {\n            this.setValue(new TinyDate(value.nativeDate));\n        }\n    }\n\n    changeValueFromSelect(value: TinyDate): void {\n        if (this.isRange) {\n            const [left, right] = this.selectedValue as TinyDate[];\n\n            if ((!left && !right) || (left && right)) {\n                // If totally full or empty, clean up && re-assign left first\n                this.hoverValue = this.selectedValue = [value];\n                this.selectedValue = [new TinyDate(startOfDay(this.selectedValue[0].nativeDate))];\n                this.calendarChange.emit([this.selectedValue[0].clone()]);\n            } else if (left && !right) {\n                // If one of them is empty, assign the other one and sort, then set the final values\n                this.clearHoverValue(); // Clean up\n                this.setRangeValue('right', value);\n                this.selectedValue = sortRangeValue(this.selectedValue); // Sort\n                this.selectedValue = [\n                    new TinyDate(startOfDay(this.selectedValue[0].nativeDate)),\n                    new TinyDate(endOfDay(this.selectedValue[1].nativeDate))\n                ];\n                this.valueForRangeShow = this.normalizeRangeValue(this.selectedValue);\n                this.setValue(this.cloneRangeDate(this.selectedValue));\n                this.calendarChange.emit(this.cloneRangeDate(this.selectedValue));\n            }\n        } else {\n            this.setValue(value);\n        }\n    }\n\n    enablePrevNext(direction: 'prev' | 'next', partType?: RangePartType): boolean {\n        if (this.isRange) {\n            const [start, end] = this.valueForRangeShow;\n            const showMiddle = !start.addMonths(1).isSame(end, 'month'); // One month diff then don't show middle prev/next\n            if ((partType === 'left' && direction === 'next') || (partType === 'right' && direction === 'prev')) {\n                return showMiddle;\n            }\n            return true;\n        } else {\n            return true;\n        }\n    }\n\n    getPanelMode(partType?: RangePartType): PanelMode {\n        if (this.isRange) {\n            return this.panelMode[this.getPartTypeIndex(partType)] as PanelMode;\n        } else {\n            return this.panelMode as PanelMode;\n        }\n    }\n\n    getValueBySelector(partType?: RangePartType): TinyDate {\n        if (this.isRange) {\n            const valueShow = this.valueForRangeShow; // Use the real time value that without decorations when timepicker is shown up\n            return (valueShow as TinyDate[])[this.getPartTypeIndex(partType)];\n        } else {\n            return this.value as TinyDate;\n        }\n    }\n\n    getPartTypeIndex(partType?: RangePartType): number {\n        return this.partTypeMap[partType];\n    }\n\n    private clearHoverValue(): void {\n        this.hoverValue = [];\n    }\n\n    private setValue(value: CompatibleValue): void {\n        this.value = value;\n        if (!this.showTime || !this.showTimePicker) {\n            this.valueChange.emit(this.value);\n        }\n    }\n\n    private normalizeRangeValue(value: TinyDate[]): TinyDate[] {\n        const [start, end] = value;\n        const newStart = start || new TinyDate();\n        const newEnd = end && end.isSameMonth(newStart) ? end.addMonths(1) : end || newStart.addMonths(1);\n        return [newStart, newEnd];\n    }\n\n    // Renew and set a range value to trigger sub-component's change detection\n    private setRangeValue(partType: RangePartType, value: TinyDate): void {\n        const ref = (this.selectedValue = this.cloneRangeDate(this.selectedValue as TinyDate[]));\n        ref[this.getPartTypeIndex(partType)] = value;\n    }\n\n    private cloneRangeDate(value: TinyDate[]): TinyDate[] {\n        return [value[0] && value[0].clone(), value[1] && value[1].clone()] as TinyDate[];\n    }\n\n    private initialArray(key: string): void {\n        if (!this[key] || !Array.isArray(this[key])) {\n            this[key] = [];\n        }\n    }\n}\n\nexport type RangePartType = 'left' | 'right';\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, TemplateRef } from '@angular/core';\n\nimport { DisabledDateFn, PanelMode, SupportTimeOptions } from '../../standard-types';\nimport { TinyDate } from 'ngx-tethys/util';\nimport { FunctionProp } from 'ngx-tethys/util';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'inner-popup',\n    exportAs: 'innerPopup',\n    templateUrl: 'inner-popup.component.html'\n})\nexport class InnerPopupComponent implements OnChanges {\n    @Input() showWeek: boolean;\n\n    @Input() enablePrev: boolean;\n    @Input() enableNext: boolean;\n    @Input() disabledDate: DisabledDateFn;\n    @Input() dateRender: FunctionProp<TemplateRef<Date> | string>;\n    @Input() selectedValue: TinyDate[]; // Range ONLY\n    @Input() hoverValue: TinyDate[]; // Range ONLY\n\n    @Input() panelMode: PanelMode;\n    @Output() readonly panelModeChange = new EventEmitter<PanelMode>();\n\n    @Input() value: TinyDate;\n\n    @Output() readonly headerChange = new EventEmitter<TinyDate>();\n    @Output() readonly selectDate = new EventEmitter<TinyDate>();\n    @Output() readonly dayHover = new EventEmitter<TinyDate>();\n\n    prefixCls = 'thy-calendar';\n\n    constructor() {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.value && !this.value) {\n            this.value = new TinyDate();\n        }\n    }\n\n    // The value real changed to outside\n    onSelectDate(date: TinyDate | Date): void {\n        const value = date instanceof TinyDate ? date : new TinyDate(date);\n        this.selectDate.emit(value);\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { TinyDate } from 'ngx-tethys/util';\n\nconst MAX_ROW = 4;\nconst MAX_COL = 3;\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'year-panel',\n    exportAs: 'yearPanel',\n    templateUrl: 'year-panel.component.html'\n})\nexport class YearPanelComponent implements OnChanges {\n    @Input() value: TinyDate;\n    @Output() readonly valueChange = new EventEmitter<TinyDate>();\n\n    @Input() disabledDate: (date: Date) => boolean;\n\n    @Output() readonly decadePanelShow = new EventEmitter<void>();\n\n    get currentYear(): number {\n        return this.value.getYear();\n    }\n    get startYear(): number {\n        return parseInt(`${this.currentYear / 10}`, 10) * 10;\n    }\n    get endYear(): number {\n        return this.startYear + 9;\n    }\n\n    prefixCls = 'thy-calendar-year-panel';\n    panelYears: PanelYearData[][];\n\n    constructor() {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.value || changes.disabledDate) {\n            this.render();\n        }\n    }\n\n    previousDecade(): void {\n        this.gotoYear(-10);\n    }\n\n    nextDecade(): void {\n        this.gotoYear(10);\n    }\n\n    trackPanelYear(_index: number, yearData: PanelYearData): string {\n        return yearData.content;\n    }\n\n    private render(): void {\n        if (this.value) {\n            this.panelYears = this.makePanelYears();\n        }\n    }\n\n    // Re-render panel content by the header's buttons (NOTE: Do not try to trigger final value change)\n    private gotoYear(amount: number): void {\n        this.value = this.value.addYears(amount);\n        // this.valueChange.emit(this.value); // Do not trigger final value change\n        this.render();\n    }\n\n    private chooseYear(year: number): void {\n        this.value = this.value.setYear(year);\n        this.valueChange.emit(this.value);\n        this.render();\n    }\n\n    private makePanelYears(): PanelYearData[][] {\n        const years: PanelYearData[][] = [];\n        const currentYear = this.currentYear;\n        const startYear = this.startYear;\n        const endYear = this.endYear;\n        const previousYear = startYear - 1;\n        let index = 0;\n        for (let rowIndex = 0; rowIndex < MAX_ROW; rowIndex++) {\n            years[rowIndex] = [];\n            for (let colIndex = 0; colIndex < MAX_COL; colIndex++) {\n                const year = previousYear + index;\n                const content = String(year);\n                const disabled = this.disabledDate ? this.disabledDate(this.value.setYear(year).nativeDate) : false;\n\n                const cell: PanelYearData = (years[rowIndex][colIndex] = {\n                    disabled,\n                    content,\n                    year,\n                    title: content,\n                    isCurrent: year === currentYear,\n                    isLowerThanStart: year < startYear,\n                    isBiggerThanEnd: year > endYear,\n                    classMap: null,\n                    onClick: () => this.chooseYear(cell.year)\n                });\n\n                cell.classMap = {\n                    [`${this.prefixCls}-cell`]: true,\n                    [`${this.prefixCls}-selected-cell`]: cell.isCurrent,\n                    [`${this.prefixCls}-cell-disabled`]: disabled,\n                    [`${this.prefixCls}-last-decade-cell`]: cell.isLowerThanStart,\n                    [`${this.prefixCls}-next-decade-cell`]: cell.isBiggerThanEnd\n                };\n                index++;\n            }\n        }\n        return years;\n    }\n}\n\nexport interface PanelYearData {\n    disabled: boolean;\n    content: string;\n    year: number;\n    title: string;\n    isCurrent: boolean;\n    isLowerThanStart: boolean;\n    isBiggerThanEnd: boolean;\n    classMap: object | null;\n    onClick: VoidFunction | null;\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { TinyDate } from 'ngx-tethys/util';\nimport { DateHelperService } from '../../date-helper.service';\n\nconst MAX_ROW = 4;\nconst MAX_COL = 3;\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'month-table',\n    exportAs: 'monthTable',\n    templateUrl: 'month-table.component.html'\n})\nexport class MonthTableComponent implements OnChanges {\n    @Input() value: TinyDate = new TinyDate();\n    @Input() prefixCls = 'thy-calendar';\n    @Output() readonly valueChange = new EventEmitter<TinyDate>();\n\n    @Input() disabledDate: (date: Date) => boolean;\n\n    panelMonths: PanelMonthData[][];\n\n    constructor(private dateHelper: DateHelperService) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.value || changes.disabledDate) {\n            this.render();\n        }\n    }\n\n    trackYear(_index: number): number {\n        return this.value ? this.value.getYear() : _index;\n    }\n\n    trackPanelMonth(_index: number, monthData: PanelMonthData): string {\n        return monthData.content;\n    }\n\n    private render(): void {\n        if (this.value) {\n            this.panelMonths = this.makePanelMonths();\n        }\n    }\n\n    private makePanelMonths(): PanelMonthData[][] {\n        const months: PanelMonthData[][] = [];\n        const currentMonth = this.value.getMonth();\n        const today = new TinyDate();\n\n        let monthValue = 0;\n        for (let rowIndex = 0; rowIndex < MAX_ROW; rowIndex++) {\n            months[rowIndex] = [];\n            for (let colIndex = 0; colIndex < MAX_COL; colIndex++) {\n                const month = this.value.setMonth(monthValue);\n                const disabled = this.disabledDate ? this.disabledDate(this.value.setMonth(monthValue).nativeDate) : false;\n                const content = this.dateHelper.format(month.nativeDate, 'MMMM');\n\n                const cell: PanelMonthData = (months[rowIndex][colIndex] = {\n                    value: month.nativeDate,\n                    disabled,\n                    content,\n                    month: monthValue,\n                    title: content,\n                    classMap: null,\n                    onClick: () => this.chooseMonth(cell.month) // don't use monthValue here\n                });\n\n                cell.classMap = {\n                    [`${this.prefixCls}-month-panel-cell`]: true,\n                    [`${this.prefixCls}-month-panel-cell-disabled`]: disabled,\n                    [`${this.prefixCls}-month-panel-selected-cell`]: monthValue === currentMonth,\n                    [`${this.prefixCls}-month-panel-current-cell`]:\n                        today.getYear() === this.value.getYear() && monthValue === today.getMonth()\n                };\n\n                monthValue++;\n            }\n        }\n        return months;\n    }\n\n    private chooseMonth(month: number): void {\n        this.value = this.value.setMonth(month);\n        this.valueChange.emit(this.value);\n        this.render();\n    }\n}\n\nexport interface PanelMonthData {\n    disabled: boolean;\n    content: string;\n    month: number;\n    title: string;\n    classMap: object | null;\n    onClick: VoidFunction | null;\n    value: Date;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChange,\n    SimpleChanges,\n    TemplateRef\n} from '@angular/core';\nimport { TinyDate } from 'ngx-tethys/util';\nimport { valueFunctionProp, FunctionProp } from 'ngx-tethys/util';\nimport { DateHelperService } from '../../date-helper.service';\n\nconst DATE_ROW_NUM = 6;\nconst DATE_COL_NUM = 7;\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'date-table',\n    exportAs: 'dateTable',\n    templateUrl: 'date-table.component.html'\n})\nexport class DateTableComponent implements OnChanges {\n    _value: TinyDate;\n    headWeekDays: WeekDayLabel[];\n    weekRows: WeekRow[];\n\n    @Input() prefixCls = 'thy-calendar';\n    @Input() selectedValue: TinyDate[]; // Range ONLY\n    @Input() hoverValue: TinyDate[]; // Range ONLY\n\n    @Input()\n    set value(date: TinyDate) {\n        this._value = date;\n    }\n\n    get value(): TinyDate {\n        return this._value;\n    }\n\n    @Input() showWeek = false;\n    @Input() disabledDate: (d: Date) => boolean;\n    @Input() dateCellRender: FunctionProp<TemplateRef<Date> | string>;\n    @Output() readonly dayHover = new EventEmitter<TinyDate>(); // Emitted when hover on a day by mouse enter\n    @Output() readonly valueChange = new EventEmitter<TinyDate>();\n\n    constructor(private dateHelper: DateHelperService) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            this.isDateRealChange(changes.value) ||\n            this.isDateRealChange(changes.selectedValue) ||\n            this.isDateRealChange(changes.hoverValue)\n        ) {\n            this.render();\n        }\n    }\n\n    private isDateRealChange(change: SimpleChange): boolean {\n        if (change) {\n            const previousValue: TinyDate | TinyDate[] = change.previousValue;\n            const currentValue: TinyDate | TinyDate[] = change.currentValue;\n            if (Array.isArray(currentValue)) {\n                return (\n                    !Array.isArray(previousValue) ||\n                    currentValue.length !== previousValue.length ||\n                    currentValue.some((value, index) => {\n                        const previousTinyDate = previousValue[index];\n                        return previousTinyDate instanceof TinyDate ? previousTinyDate.isSameDay(value) : previousTinyDate !== value;\n                    })\n                );\n            } else {\n                return !this.isSameDate(previousValue as TinyDate, currentValue);\n            }\n        }\n        return false;\n    }\n\n    private isSameDate(left: TinyDate, right: TinyDate): boolean {\n        return (!left && !right) || (left && right && right.isSameDay(left));\n    }\n\n    private render(): void {\n        if (this.value) {\n            this.headWeekDays = this.makeHeadWeekDays();\n            this.weekRows = this.makeWeekRows();\n        }\n    }\n\n    private changeValueFromInside(value: TinyDate): void {\n        // Only change date not change time\n        const newValue = this.value\n            .setYear(value.getYear())\n            .setMonth(value.getMonth())\n            .setDate(value.getDate());\n        this.valueChange.emit(newValue);\n    }\n\n    private makeHeadWeekDays(): WeekDayLabel[] {\n        const weekDays: WeekDayLabel[] = [];\n        const start = this.value.calendarStart({ weekStartsOn: this.dateHelper.getFirstDayOfWeek() });\n        for (let colIndex = 0; colIndex < DATE_COL_NUM; colIndex++) {\n            const day = start.addDays(colIndex);\n            weekDays[colIndex] = {\n                short: this.dateHelper.format(day.nativeDate, this.dateHelper.relyOnDatePipe ? 'E' : 'ddd'), // eg. 周二\n                veryShort: this.dateHelper.format(day.nativeDate, this.getVeryShortWeekFormat()) // eg. 二\n            };\n        }\n        return weekDays;\n    }\n\n    private getVeryShortWeekFormat(): string {\n        if (this.dateHelper.relyOnDatePipe) {\n            return 'EEEEE'; // eg. 二\n        }\n        return 'dd';\n    }\n\n    private makeWeekRows(): WeekRow[] {\n        const weekRows: WeekRow[] = [];\n        const firstDayOfMonth = this.value.calendarStart({ weekStartsOn: this.dateHelper.getFirstDayOfWeek() });\n\n        for (let week = 0; week < DATE_ROW_NUM; week++) {\n            const weekStart = firstDayOfMonth.addDays(week * 7);\n            const row: WeekRow = {\n                isActive: false,\n                isCurrent: false,\n                dateCells: [],\n                year: weekStart.getYear()\n            };\n\n            for (let day = 0; day < 7; day++) {\n                const date = weekStart.addDays(day);\n                const dateFormat = this.dateHelper.relyOnDatePipe ? 'longDate' : 'YYYY-MM-DD';\n                const title = this.dateHelper.format(date.nativeDate, dateFormat);\n                const label = this.dateHelper.format(date.nativeDate, this.dateHelper.relyOnDatePipe ? 'dd' : 'DD');\n\n                const cell: DateCell = {\n                    value: date.nativeDate,\n                    label: label,\n                    isSelected: false,\n                    isDisabled: false,\n                    isToday: false,\n                    title: title,\n                    dateCellRender: valueFunctionProp(this.dateCellRender, date),\n                    content: `${date.getDate()}`,\n                    onClick: () => this.changeValueFromInside(date),\n                    // 暂时用不到鼠标事件的交互,在html这种删除了\n                    onMouseEnter: () => this.dayHover.emit(date)\n                };\n\n                if (this.showWeek && !row.weekNum) {\n                    row.weekNum = this.dateHelper.getISOWeek(date.nativeDate);\n                }\n\n                if (date.isToday()) {\n                    cell.isToday = true;\n                    row.isCurrent = true;\n                }\n\n                if (Array.isArray(this.selectedValue)) {\n                    // Range selections\n                    const rangeValue = this.hoverValue && this.hoverValue.length ? this.hoverValue : this.selectedValue;\n                    const start = rangeValue[0];\n                    const end = rangeValue[1];\n                    if (start) {\n                        if (start.isSameDay(date)) {\n                            cell.isSelectedStartDate = true;\n                            cell.isSelected = true;\n                            row.isActive = true;\n                        }\n                        if (end) {\n                            if (end.isSameDay(date)) {\n                                cell.isSelectedEndDate = true;\n                                cell.isSelected = true;\n                                row.isActive = true;\n                            } else if (date.isAfterDay(start) && date.isBeforeDay(end)) {\n                                cell.isInRange = true;\n                            }\n                        }\n                    }\n                } else if (date.isSameDay(this.value)) {\n                    cell.isSelected = true;\n                    row.isActive = true;\n                }\n\n                if (this.disabledDate && this.disabledDate(date.nativeDate)) {\n                    cell.isDisabled = true;\n                }\n\n                cell.classMap = {\n                    [`${this.prefixCls}-cell`]: true,\n                    [`${this.prefixCls}-today`]: cell.isToday,\n                    [`${this.prefixCls}-last-month-cell`]: date.isBeforeMonth(this.value),\n                    [`${this.prefixCls}-next-month-btn-day`]: date.isAfterMonth(this.value),\n                    [`${this.prefixCls}-selected-day`]: cell.isSelected,\n                    [`${this.prefixCls}-disabled-cell`]: cell.isDisabled,\n                    [`${this.prefixCls}-selected-start-date`]: !!cell.isSelectedStartDate,\n                    [`${this.prefixCls}-selected-end-date`]: !!cell.isSelectedEndDate,\n                    [`${this.prefixCls}-in-range-cell`]: !!cell.isInRange\n                };\n\n                row.dateCells.push(cell);\n            }\n\n            row.classMap = {\n                [`${this.prefixCls}-current-week`]: row.isCurrent,\n                [`${this.prefixCls}-active-week`]: row.isActive\n            };\n\n            weekRows.push(row);\n        }\n\n        return weekRows;\n    }\n\n    trackByDateFn(_index: number, item: DateCell): string {\n        return `${item.title}`;\n    }\n\n    trackByWeekFn(_index: number, item: WeekRow): string {\n        return `${item.year}-${item.weekNum}`;\n    }\n}\n\nexport interface WeekDayLabel {\n    short: string;\n    veryShort: string;\n}\n\nexport interface DateCell {\n    value: Date;\n    label: string;\n    title: string;\n    dateCellRender: TemplateRef<Date> | string;\n    fullCellRender?: TemplateRef<Date> | string;\n    content: string;\n    isSelected?: boolean;\n    isToday?: boolean;\n    isDisabled?: boolean;\n    isSelectedStartDate?: boolean;\n    isSelectedEndDate?: boolean;\n    isInRange?: boolean;\n    classMap?: object;\n    onClick(date: TinyDate): void;\n    onMouseEnter(): void;\n}\n\nexport interface WeekRow {\n    isCurrent?: boolean; // Is the week that today stays in\n    isActive?: boolean; // Is the week that current setting date stays in\n    weekNum?: number;\n    year?: number;\n    classMap?: object;\n    dateCells: DateCell[];\n}\n","import { Component, Input } from '@angular/core';\nimport { isEmpty, isString, isTemplateRef } from 'ngx-tethys/util';\nimport { DateCell } from './date-table.component';\n\n@Component({\n    selector: '[date-table-cell]',\n    exportAs: 'dateTableCell',\n    templateUrl: './date-table-cell.component.html'\n})\nexport class DateTableCellComponent {\n    isTemplateRef = isTemplateRef;\n\n    @Input() prefixCls: 'thy-calendar';\n    @Input() cell: DateCell;\n\n    isNonEmptyString = (v: any) => isEmpty(v) && isString(v);\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { CalendarFooterComponent } from './calendar/calendar-footer.component';\nimport { CalendarHeaderComponent } from './calendar/calendar-header.component';\n\nimport { DecadePanelComponent } from './decade/decade-panel.component';\nimport { MonthPanelComponent } from './month/month-panel.component';\nimport { DatePopupComponent } from './popups/date-popup.component';\nimport { InnerPopupComponent } from './popups/inner-popup.component';\nimport { YearPanelComponent } from './year/year-panel.component';\nimport { MonthTableComponent } from './month/month-table.component';\nimport { DateTableComponent } from './date/date-table.component';\nimport { DateTableCellComponent } from './date/date-table-cell.component';\nimport { ThyButtonModule } from 'ngx-tethys/button';\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyTimePickerModule } from 'ngx-tethys/time-picker';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ThyButtonModule, ThyIconModule, ThyTimePickerModule],\n    exports: [\n        CalendarHeaderComponent,\n        CalendarFooterComponent,\n        DateTableComponent,\n        YearPanelComponent,\n        MonthTableComponent,\n        MonthPanelComponent,\n        DecadePanelComponent,\n        InnerPopupComponent,\n        DatePopupComponent,\n        DateTableCellComponent\n    ],\n    declarations: [\n        CalendarHeaderComponent,\n        CalendarFooterComponent,\n        DateTableComponent,\n        YearPanelComponent,\n        MonthTableComponent,\n        MonthPanelComponent,\n        DecadePanelComponent,\n        InnerPopupComponent,\n        DatePopupComponent,\n        DateTableCellComponent\n    ]\n})\nexport class LibPackerModule {}\n","import { getFlexiblePositions, ThyPlacement } from 'ngx-tethys/core';\nimport { TinyDate } from 'ngx-tethys/util';\n\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild\n} from '@angular/core';\n\nimport { DateHelperService } from './date-helper.service';\nimport { CompatibleValue } from './standard-types';\n\nexport type RangePartType = 'left' | 'right';\n\n@Component({\n    selector: 'thy-picker',\n    exportAs: 'thyPicker',\n    templateUrl: './picker.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyPickerComponent implements AfterViewInit {\n    @Input() isRange = false;\n    @Input() open: boolean | undefined = undefined;\n    @Input() disabled: boolean;\n    @Input() placeholder: string | string[];\n    @Input() readonly: boolean;\n    @Input() allowClear: boolean;\n    @Input() autoFocus: boolean;\n    @Input() className: string;\n    @Input() format: string;\n    @Input() size: 'sm' | 'xs' | 'lg' | 'md' | 'default';\n    @Input() value: TinyDate | TinyDate[] | null;\n    @Input() suffixIcon: string;\n    @Input() placement: ThyPlacement = 'bottomLeft';\n    @Output() readonly valueChange = new EventEmitter<TinyDate | TinyDate[] | null>();\n    @Output() readonly openChange = new EventEmitter<boolean>(); // Emitted when overlay's open state change\n\n    @ViewChild('origin', { static: true }) origin: CdkOverlayOrigin;\n    @ViewChild(CdkConnectedOverlay, { static: true }) cdkConnectedOverlay: CdkConnectedOverlay;\n    @ViewChild('pickerInput', { static: true }) pickerInput: ElementRef;\n\n    prefixCls = 'thy-calendar';\n    animationOpenState = false;\n    overlayOpen = false; // Available when \"open\"=undefined\n    overlayPositions = getFlexiblePositions(this.placement, 4);\n\n    get realOpenState(): boolean {\n        // The value that really decide the open state of overlay\n        return this.isOpenHandledByUser() ? !!this.open : this.overlayOpen;\n    }\n\n    constructor(private changeDetector: ChangeDetectorRef, private dateHelper: DateHelperService) {}\n\n    ngAfterViewInit(): void {\n        this.overlayPositions = getFlexiblePositions(this.placement, 4);\n        if (this.autoFocus) {\n            this.focus();\n        }\n    }\n\n    focus(): void {\n        this.pickerInput.nativeElement.focus();\n    }\n\n    showOverlay(): void {\n        if (!this.realOpenState) {\n            this.overlayOpen = true;\n            if (this.realOpenState) {\n                this.animationOpenState = true;\n            }\n            this.openChange.emit(this.overlayOpen);\n            setTimeout(() => {\n                if (this.cdkConnectedOverlay && this.cdkConnectedOverlay.overlayRef) {\n                    this.cdkConnectedOverlay.overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n\n    hideOverlay(): void {\n        if (this.realOpenState) {\n            this.overlayOpen = false;\n            if (!this.realOpenState) {\n                this.animationOpenState = false;\n            }\n            this.openChange.emit(this.overlayOpen);\n            this.focus();\n        }\n    }\n\n    onClickInputBox(): void {\n        if (!this.disabled && !this.readonly && !this.isOpenHandledByUser()) {\n            this.showOverlay();\n        }\n    }\n\n    onClickBackdrop(): void {\n        this.hideOverlay();\n    }\n\n    onOverlayDetach(): void {\n        this.hideOverlay();\n    }\n\n    onPositionChange(position: ConnectedOverlayPositionChange): void {\n        this.changeDetector.detectChanges();\n    }\n\n    onClickClear(event: MouseEvent): void {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.value = this.isRange ? [] : null;\n        this.valueChange.emit(this.value);\n    }\n\n    getPartTypeIndex(partType: RangePartType): number {\n        return { left: 0, right: 1 }[partType];\n    }\n\n    isEmptyValue(value: CompatibleValue | null): boolean {\n        if (value === null) {\n            return true;\n        } else if (this.isRange) {\n            return !value || !Array.isArray(value) || value.every(val => !val);\n        } else {\n            return !value;\n        }\n    }\n\n    // Whether open state is permanently controlled by user himself\n    isOpenHandledByUser(): boolean {\n        return this.open !== undefined;\n    }\n\n    getReadableValue(): string | null {\n        let value: TinyDate;\n        if (this.isRange) {\n            const start = this.value[0] ? this.dateHelper.format(this.value[0].nativeDate, this.format) : '';\n            const end = this.value[1] ? this.dateHelper.format(this.value[1].nativeDate, this.format) : '';\n            return start && end ? `${start} ~ ${end}` : null;\n        } else {\n            value = this.value as TinyDate;\n            return value ? this.dateHelper.format(value.nativeDate, this.format) : null;\n        }\n    }\n\n    getPlaceholder(): string {\n        return this.isRange && this.placeholder && Array.isArray(this.placeholder)\n            ? (this.placeholder as string[]).join(' ~ ')\n            : (this.placeholder as string);\n    }\n}\n","import {\n    ChangeDetectorRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    Directive\n} from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { InputBoolean } from 'ngx-tethys/core';\nimport { TinyDate } from 'ngx-tethys/util';\n\nimport { ThyPickerComponent } from './picker.component';\nimport { CompatibleDate, CompatibleValue, DisabledDateFn, DateEntry, RangeEntry } from './standard-types';\nimport { transformDateValue, makeValue } from './picker.util';\n\n@Directive()\nexport abstract class AbstractPickerComponent implements OnInit, OnChanges, OnDestroy, ControlValueAccessor {\n    thyValue: CompatibleValue | null;\n    @Input() @InputBoolean() thyAllowClear = true;\n    @Input() @InputBoolean() thyAutoFocus = false;\n    @Input() @InputBoolean() thyDisabled = false;\n    @Input() @InputBoolean() thyOpen: boolean;\n    @Input() thyDisabledDate: (d: Date) => boolean;\n    @Input() thyMinDate: Date | number;\n    @Input() thyMaxDate: Date | number;\n    @Input() thyPlaceHolder: string | string[];\n    @Input() @InputBoolean() thyReadonly: boolean;\n    @Input() thyOriginClassName: string;\n    @Input() thyPanelClassName: string;\n    @Input() thySize: 'lg' | 'md' | 'sm' | 'xs' | 'default' = 'default';\n    @Input() thyFormat: string;\n    // tslint:disable-next-line: max-line-length\n    @Input() thyAutoStartAndEnd = false; // only for range picker, Whether to automatically take the beginning and ending unixTime of the day\n    @Input() thyDefaultPickerValue: CompatibleDate | number | null = null;\n    @Input() thySuffixIcon = 'calendar';\n\n    @Output() readonly thyOpenChange = new EventEmitter<boolean>();\n\n    @ViewChild(ThyPickerComponent, { static: true }) public picker: ThyPickerComponent;\n\n    isRange = false;\n\n    withTime: boolean;\n\n    protected destroyed$: Subject<void> = new Subject();\n    protected isCustomPlaceHolder = false;\n    private onlyEmitDate = false;\n    protected originWithTime: boolean;\n\n    get realOpenState(): boolean {\n        return this.picker.realOpenState;\n    }\n\n    initValue(): void {\n        this.thyValue = this.isRange ? [] : null;\n    }\n\n    constructor(public cdr: ChangeDetectorRef) {}\n\n    ngOnInit(): void {\n        this.setDefaultPlaceHolder();\n        this.initValue();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.thyPlaceHolder && changes.thyPlaceHolder.firstChange && typeof this.thyPlaceHolder !== 'undefined') {\n            this.isCustomPlaceHolder = true;\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed$.next();\n        this.destroyed$.complete();\n    }\n\n    closeOverlay(): void {\n        this.picker.hideOverlay();\n    }\n\n    onValueChange(originalValue: CompatibleValue): void {\n        this.setFormatRule();\n        this.thyValue = originalValue;\n        if (this.isRange) {\n            const vAsRange: any = this.thyValue;\n            let value = { begin: null, end: null } as RangeEntry;\n            if (vAsRange.length) {\n                const [begin, end] = vAsRange as TinyDate[];\n                if (this.thyAutoStartAndEnd) {\n                    value = {\n                        begin: begin.startOfDay().getUnixTime(),\n                        end: end.endOfDay().getUnixTime()\n                    };\n                } else {\n                    value = {\n                        begin: begin.getUnixTime(),\n                        end: end.getUnixTime()\n                    };\n                }\n            }\n            this.onChangeFn(value);\n        } else {\n            const value = { date: null, with_time: this.withTime ? 1 : 0 } as DateEntry;\n            if (this.thyValue) {\n                value.date = (this.thyValue as TinyDate).getUnixTime();\n            }\n            if (this.onlyEmitDate) {\n                this.onChangeFn(value.date);\n            } else {\n                this.onChangeFn(value);\n            }\n        }\n        this.onTouchedFn();\n    }\n\n    setFormatRule() {\n        if (!this.thyFormat) {\n            if (this.withTime) {\n                this.thyFormat = 'yyyy-MM-dd HH:mm';\n            } else {\n                if (!this.onlyEmitDate) {\n                    this.thyFormat = 'yyyy-MM-dd';\n                }\n            }\n        }\n    }\n\n    onOpenChange(open: boolean): void {\n        this.thyOpen = open;\n        this.thyOpenChange.emit(open);\n    }\n\n    onChangeFn: (val: CompatibleDate | DateEntry | RangeEntry | number | null) => void = () => void 0;\n    onTouchedFn: () => void = () => void 0;\n\n    writeValue(originalValue: CompatibleDate): void {\n        const { value, withTime } = transformDateValue(originalValue);\n        this.setValue(value);\n        this.setTimePickerState(withTime);\n        this.onlyEmitDate = typeof withTime === 'undefined';\n        this.originWithTime = withTime;\n        this.setFormatRule();\n        this.cdr.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeFn = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedFn = fn;\n    }\n\n    setTimePickerState(withTime: boolean): void {\n        this.withTime = withTime;\n    }\n\n    setDisabledState(disabled: boolean): void {\n        this.thyDisabled = disabled;\n        this.cdr.markForCheck();\n    }\n\n    private setDefaultPlaceHolder(): void {\n        if (!this.isCustomPlaceHolder) {\n            this.thyPlaceHolder = this.isRange ? ['开始日期', '结束日期'] : '请选择日期';\n        }\n        this.cdr.markForCheck();\n    }\n\n    public setValue(value: CompatibleDate): void {\n        this.thyValue = makeValue(value, this.isRange);\n    }\n}\n","import { ThyPlacement } from 'ngx-tethys/core';\nimport { coerceBooleanProperty, FunctionProp, TinyDate } from 'ngx-tethys/util';\n\nimport { ChangeDetectorRef, Component, EventEmitter, Input, OnChanges, OnInit, Output, TemplateRef } from '@angular/core';\n\nimport { AbstractPickerComponent } from './abstract-picker.component';\nimport { CompatibleDate, CompatibleValue, PanelMode } from './standard-types';\n\n@Component({\n    template: ``\n})\nexport class BasePickerComponent extends AbstractPickerComponent implements OnInit, OnChanges {\n    showWeek = false;\n\n    @Input() thyDateRender: FunctionProp<TemplateRef<Date> | string>;\n    @Input() thyMode: PanelMode | PanelMode[];\n    @Output() readonly thyOnPanelChange = new EventEmitter<PanelMode | PanelMode[]>();\n    @Output() readonly thyOnCalendarChange = new EventEmitter<Date[]>();\n\n    private _showTime: object | boolean;\n    @Input() get thyShowTime(): object | boolean {\n        return this._showTime;\n    }\n    set thyShowTime(value: object | boolean) {\n        this._showTime = typeof value === 'object' ? value : coerceBooleanProperty(value);\n    }\n\n    @Input() thyMustShowTime = false;\n\n    @Input() thyPlacement: ThyPlacement = 'bottomLeft';\n\n    @Output() readonly thyOnOk = new EventEmitter<CompatibleDate | null>();\n\n    constructor(cdr: ChangeDetectorRef) {\n        super(cdr);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        if (!this.thyFormat) {\n            if (this.showWeek) {\n                this.thyFormat = 'yyyy-ww';\n            } else {\n                this.thyFormat = this.thyShowTime ? 'yyyy-MM-dd HH:mm' : 'yyyy-MM-dd';\n            }\n        }\n        this.setDefaultTimePickerState();\n    }\n\n    onValueChange(value: CompatibleValue): void {\n        this.restoreTimePickerState(value);\n        super.onValueChange(value);\n\n        this.closeOverlay();\n    }\n\n    // Displays the time directly when the time must be displayed by default\n    setDefaultTimePickerState() {\n        this.withTime = this.thyMustShowTime;\n    }\n\n    // Restore after clearing time to select whether the original picker time is displayed or not\n    restoreTimePickerState(value: CompatibleValue | null) {\n        if (!value) {\n            this.withTime = this.thyMustShowTime || this.originWithTime;\n        }\n    }\n\n    // Emit thyOnCalendarChange when select date by thy-range-picker\n    onCalendarChange(value: TinyDate[]): void {\n        if (this.isRange) {\n            const rangeValue = value.map(x => x.nativeDate);\n            this.thyOnCalendarChange.emit(rangeValue);\n        }\n    }\n\n    onShowTimePickerChange(show: boolean): void {\n        this.withTime = show;\n    }\n\n    onResultOk(): void {\n        if (this.isRange) {\n            const value = this.thyValue as TinyDate[];\n            if (value.length) {\n                this.thyOnOk.emit([value[0].nativeDate, value[1].nativeDate]);\n            } else {\n                this.thyOnOk.emit([]);\n            }\n        } else {\n            if (this.thyValue) {\n                this.thyOnOk.emit((this.thyValue as TinyDate).nativeDate);\n            } else {\n                this.thyOnOk.emit(null);\n            }\n        }\n        this.closeOverlay();\n    }\n\n    onOpenChange(open: boolean): void {\n        this.thyOpenChange.emit(open);\n    }\n}\n","import { ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\nimport { AbstractPickerComponent } from './abstract-picker.component';\nimport { PanelMode, CompatibleValue } from './standard-types';\nimport { TinyDate } from 'ngx-tethys/util';\n\n@Component({\n    template: ``\n})\nexport class HeaderPickerComponent extends AbstractPickerComponent implements OnInit, OnChanges {\n    @Input() thyPlaceHolder: string;\n\n    @Input() thyDefaultValue: TinyDate;\n    @Input() thyFormat: string;\n\n    endPanelMode: SupportHeaderPanel; // would rewrite by sub class\n    panelMode: PanelMode;\n\n    private supportPanels: PanelMode[];\n\n    constructor(cdr: ChangeDetectorRef) {\n        super(cdr);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.panelMode = this.endPanelMode;\n\n        const allHeaderPanels: PanelMode[] = ['decade', 'year', 'month'];\n        this.supportPanels = allHeaderPanels.slice(0, allHeaderPanels.indexOf(this.endPanelMode) + 1);\n    }\n\n    onPanelModeChange(mode: PanelMode): void {\n        if (this.supportPanels.indexOf(mode) > -1) {\n            this.panelMode = mode;\n        } else {\n            // Since the default \"click year\" logic can be \"year panel\" -> \"date panel\", we need force to the end panel otherwise\n            this.panelMode = this.endPanelMode;\n        }\n    }\n\n    onChooseValue(mode: SupportHeaderPanel, value: CompatibleValue): void {\n        if (this.endPanelMode === mode) {\n            super.onValueChange(value);\n\n            this.closeOverlay();\n        }\n    }\n\n    onOpenChange(open: boolean): void {\n        if (!open) {\n            this.cleanUp();\n        }\n        this.thyOpenChange.emit(open);\n    }\n\n    // Restore some initial props to let open as new in next time\n    private cleanUp(): void {\n        this.panelMode = this.endPanelMode;\n    }\n}\n\nexport type SupportHeaderPanel = 'year' | 'month';\n","import {\n    forwardRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Renderer2,\n    OnInit,\n    NgZone\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { BasePickerComponent } from './base-picker.component';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'thy-date-picker',\n    exportAs: 'thyDatePicker',\n    templateUrl: './base-picker.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: forwardRef(() => ThyDatePickerComponent)\n        }\n    ]\n})\nexport class ThyDatePickerComponent extends BasePickerComponent implements OnInit {\n    isRange = false;\n\n    constructor(cdr: ChangeDetectorRef, protected renderer: Renderer2, protected elementRef: ElementRef) {\n        super(cdr);\n        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');\n    }\n}\n","import {\n    forwardRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Host,\n    Input,\n    Optional,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { HeaderPickerComponent, SupportHeaderPanel } from './header-picker.component';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'thy-month-picker',\n    exportAs: 'thyMonthPicker',\n    templateUrl: './header-picker.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: forwardRef(() => ThyMonthPickerComponent)\n        }\n    ]\n})\nexport class ThyMonthPickerComponent extends HeaderPickerComponent {\n    @Input() thyFormat = 'yyyy-MM';\n\n    endPanelMode: SupportHeaderPanel = 'month';\n\n    constructor(cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef) {\n        super(cdr);\n        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');\n    }\n}\n","import {\n    forwardRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Renderer2,\n    NgZone,\n    OnInit\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { BasePickerComponent } from './base-picker.component';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'thy-range-picker',\n    exportAs: 'thyRangePicker',\n    templateUrl: './base-picker.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: forwardRef(() => ThyRangePickerComponent)\n        }\n    ]\n})\nexport class ThyRangePickerComponent extends BasePickerComponent implements OnInit {\n    isRange = true;\n\n    constructor(cdr: ChangeDetectorRef, protected renderer: Renderer2, protected elementRef: ElementRef) {\n        super(cdr);\n        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');\n    }\n}\n","import {\n    forwardRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Renderer2\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { BasePickerComponent } from './base-picker.component';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'thy-week-picker',\n    exportAs: 'thyWeekPicker',\n    templateUrl: './base-picker.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: forwardRef(() => ThyWeekPickerComponent)\n        }\n    ]\n})\nexport class ThyWeekPickerComponent extends BasePickerComponent {\n    showWeek = true;\n\n    constructor(cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef) {\n        super(cdr);\n        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');\n    }\n}\n","import {\n    forwardRef,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Input,\n    Renderer2\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { HeaderPickerComponent, SupportHeaderPanel } from './header-picker.component';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'thy-year-picker',\n    exportAs: 'thyYearPicker',\n    templateUrl: './header-picker.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: forwardRef(() => ThyYearPickerComponent)\n        }\n    ]\n})\nexport class ThyYearPickerComponent extends HeaderPickerComponent {\n    @Input() thyFormat = 'yyyy';\n\n    endPanelMode: SupportHeaderPanel = 'year';\n\n    constructor(cdr: ChangeDetectorRef, renderer: Renderer2, elementRef: ElementRef) {\n        super(cdr);\n        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');\n    }\n}\n","import { Directive, Input, StaticProvider, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, AbstractControl, ValidationErrors, Validator } from '@angular/forms';\nimport { DateEntry, RangeEntry, instanceOfDateEntry, instanceOfRangeEntry } from './standard-types';\n\nconst DATE_PICKER_REQUIRED_VALIDATOR: StaticProvider = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => DatePickerRequiredValidator),\n    multi: true\n};\n\n@Directive({\n    selector:\n        '[thyDatePicker][required][formControlName],[thyDatePicker][required][formControl],[thyDatePicker][required][ngModel],thy-date-picker[required][formControlName],thy-date-picker[required][formControl],thy-date-picker[required][ngModel]',\n    providers: [DATE_PICKER_REQUIRED_VALIDATOR]\n})\nexport class DatePickerRequiredValidator implements Validator {\n    private _required!: boolean;\n\n    @Input()\n    get required(): boolean | string {\n        return this._required;\n    }\n\n    set required(value: boolean | string) {\n        this._required = value != null && value !== false && `${value}` !== 'false';\n    }\n\n    validate(control: AbstractControl): ValidationErrors | null {\n        return this.required ? this.validateRequired(control) : null;\n    }\n\n    private validateRequired(control: AbstractControl): ValidationErrors | null {\n        return isEmptyInputDateValue(control.value) ? { required: true } : null;\n    }\n}\n\nconst RANGE_PICKER_REQUIRED_VALIDATOR: StaticProvider = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => RangePickerRequiredValidator),\n    multi: true\n};\n\n@Directive({\n    selector:\n        '[thyRangePicker][required][formControlName],[thyRangePicker][required][formControl],[thyRangePicker][required][ngModel],thy-range-picker[required][formControlName],thy-range-picker[required][formControl],thy-range-picker[required][ngModel]',\n    providers: [RANGE_PICKER_REQUIRED_VALIDATOR]\n})\nexport class RangePickerRequiredValidator implements Validator {\n    private _required!: boolean;\n\n    @Input()\n    get required(): boolean | string {\n        return this._required;\n    }\n\n    set required(value: boolean | string) {\n        this._required = value != null && value !== false && `${value}` !== 'false';\n    }\n\n    validate(control: AbstractControl): ValidationErrors | null {\n        return this.required ? this.validateRequired(control) : null;\n    }\n\n    private validateRequired(control: AbstractControl): ValidationErrors | null {\n        return isEmptyInputRangeValue(control.value) ? { required: true } : null;\n    }\n}\n\nfunction isEmptyInputRangeValue(value: RangeEntry): boolean {\n    return value == null || (instanceOfRangeEntry(value) && (value.begin == null || value.end == null));\n}\n\nfunction isEmptyInputDateValue(value: DateEntry): boolean {\n    return value == null || (instanceOfDateEntry(value) && value.date == null);\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DateHelperService } from './date-helper.service';\nimport { CompatibleDate, DateEntry, RangeEntry } from './standard-types';\nimport { transformDateValue } from './picker.util';\n\n@Pipe({ name: 'thyDatePickerFormat' })\nexport class ThyDatePickerFormatPipe implements PipeTransform {\n    constructor(private dateHelper: DateHelperService) {}\n\n    transform(originalValue: CompatibleDate | DateEntry | RangeEntry, formatStr?: string): string {\n        const { value, withTime } = transformDateValue(originalValue);\n\n        if (!formatStr) {\n            formatStr = withTime ? 'yyyy-MM-dd HH:mm' : 'yyyy-MM-dd';\n        }\n\n        if (!Array.isArray(value)) {\n            return this.dateHelper.format(value, formatStr);\n        } else {\n            return value.map(date => this.dateHelper.format(date, formatStr)).join(' ~ ');\n        }\n    }\n}\n\n@Pipe({ name: 'thyDatePickerFormatString' })\nexport class ThyDatePickerFormatStringPipe implements PipeTransform {\n    constructor(private dateHelper: DateHelperService) {}\n\n    transform(originalValue: CompatibleDate | DateEntry | RangeEntry): string {\n        const { withTime } = transformDateValue(originalValue);\n\n        return withTime ? 'yyyy-MM-dd HH:mm' : 'yyyy-MM-dd';\n    }\n}\n","import { ThyPlacement } from 'ngx-tethys/core';\nimport { ThyPopover, ThyPopoverConfig } from 'ngx-tethys/popover';\nimport { coerceBooleanProperty, FunctionProp, warnDeprecation } from 'ngx-tethys/util';\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { debounceTime, mapTo, takeUntil, tap } from 'rxjs/operators';\n\nimport { coerceArray } from '@angular/cdk/coercion';\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Output,\n    SimpleChange,\n    TemplateRef\n} from '@angular/core';\n\nimport { AbstractPickerComponent } from './abstract-picker.component';\nimport { DatePopupComponent } from './lib/popups/date-popup.component';\nimport { CompatibleValue, PanelMode } from './standard-types';\n\n@Directive()\nexport abstract class PickerDirective extends AbstractPickerComponent implements AfterViewInit, OnDestroy, OnChanges {\n    showWeek = false;\n\n    @Input() thyDateRender: FunctionProp<TemplateRef<Date> | string>;\n    @Input() thyMode: PanelMode | PanelMode[];\n\n    @Output() readonly thyOnPanelChange = new EventEmitter<PanelMode | PanelMode[]>();\n    @Output() readonly thyOnCalendarChange = new EventEmitter<Date[]>();\n\n    private _showTime: object | boolean;\n    @Input() get thyShowTime(): object | boolean {\n        return this._showTime;\n    }\n    set thyShowTime(value: object | boolean) {\n        this._showTime = typeof value === 'object' ? value : coerceBooleanProperty(value);\n    }\n\n    @Input() thyMustShowTime = false;\n\n    @Input() thyPlacement: ThyPlacement = 'bottom';\n\n    private offset = 4;\n    @Input() set thyOffset(value: number) {\n        warnDeprecation(`thyOffset parameter will be deprecated, please use thyPopoverOptions instead.`);\n        this.offset = value;\n    }\n\n    private hasBackdrop = true;\n    @Input() set thyHasBackdrop(value: boolean) {\n        warnDeprecation(`thyHasBackdrop parameter will be deprecated, please use thyPopoverOptions instead.`);\n        this.hasBackdrop = value;\n    }\n\n    @Input() thyPopoverOptions: ThyPopoverConfig;\n\n    @Input() thyStopPropagation = true;\n\n    private destroy$ = new Subject();\n    private el: HTMLElement = this.elementRef.nativeElement;\n    readonly $click: Observable<boolean> = fromEvent(this.el, 'click').pipe(\n        tap(e => {\n            if (this.thyStopPropagation) {\n                e.stopPropagation();\n            }\n        }),\n        mapTo(true)\n    );\n\n    private openOverlay(): void {\n        const popoverRef = this.thyPopover.open(\n            DatePopupComponent,\n            Object.assign(\n                {\n                    origin: this.el,\n                    hasBackdrop: this.hasBackdrop,\n                    backdropClass: 'thy-overlay-transparent-backdrop',\n                    offset: this.offset,\n                    initialState: {\n                        isRange: this.isRange,\n                        showWeek: this.showWeek,\n                        value: this.thyValue,\n                        showTime: this.thyShowTime,\n                        mustShowTime: this.withTime,\n                        format: this.thyFormat,\n                        dateRender: this.thyDateRender,\n                        disabledDate: this.thyDisabledDate,\n                        placeholder: this.thyPlaceHolder,\n                        className: this.thyPanelClassName,\n                        defaultPickerValue: this.thyDefaultPickerValue,\n                        minDate: this.thyMinDate,\n                        maxDate: this.thyMaxDate\n                    },\n                    placement: this.thyPlacement\n                },\n                this.thyPopoverOptions\n            )\n        );\n        if (popoverRef) {\n            const componentInstance = popoverRef.componentInstance;\n            componentInstance.valueChange.pipe(takeUntil(this.destroy$)).subscribe((event: CompatibleValue) => this.onValueChange(event));\n            componentInstance.calendarChange.pipe(takeUntil(this.destroy$)).subscribe((event: CompatibleValue) => {\n                const rangeValue = coerceArray(event).map(x => x.nativeDate);\n                this.thyOnCalendarChange.emit(rangeValue);\n            });\n            componentInstance.showTimePickerChange\n                .pipe(takeUntil(this.destroy$))\n                .subscribe((event: boolean) => this.onShowTimePickerChange(event));\n            // tslint:disable-next-line: max-line-length\n            componentInstance.ngOnChanges({ value: {} as SimpleChange }); // dynamically created components don't call ngOnChanges, manual call\n            popoverRef\n                .afterOpened()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.thyOpenChange.emit(true));\n            popoverRef\n                .afterClosed()\n                .pipe(takeUntil(this.destroy$))\n                .subscribe(() => this.thyOpenChange.emit(false));\n        }\n    }\n\n    closeOverlay(): void {\n        this.thyPopover.close();\n    }\n\n    initActionSubscribe(): void {\n        this.$click.pipe(debounceTime(50), takeUntil(this.destroy$)).subscribe(() => {\n            if (!this.thyDisabled && !this.thyReadonly) {\n                this.openOverlay();\n            }\n        });\n    }\n\n    constructor(public elementRef: ElementRef, public cdr: ChangeDetectorRef, private thyPopover: ThyPopover) {\n        super(cdr);\n    }\n\n    ngAfterViewInit(): void {\n        this.setDefaultTimePickerState();\n        this.initActionSubscribe();\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    onValueChange(value: CompatibleValue): void {\n        this.restoreTimePickerState(value);\n        super.onValueChange(value);\n\n        this.closeOverlay();\n    }\n\n    // Displays the time directly when the time must be displayed by default\n    setDefaultTimePickerState() {\n        this.withTime = this.thyMustShowTime;\n    }\n\n    // Restore after clearing time to select whether the original picker time is displayed or not\n    restoreTimePickerState(value: CompatibleValue | null) {\n        if (!value) {\n            this.withTime = this.thyMustShowTime || this.originWithTime;\n        }\n    }\n    onShowTimePickerChange(show: boolean): void {\n        this.withTime = show;\n    }\n}\n","import { forwardRef, ChangeDetectorRef, ElementRef, OnInit, Directive } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PickerDirective } from './abstract-picker.directive';\nimport { ThyPopover } from 'ngx-tethys/popover';\n\n@Directive({\n    selector: '[thyDatePicker]',\n    exportAs: 'thyDatePicker',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: forwardRef(() => ThyDatePickerDirective)\n        }\n    ]\n})\nexport class ThyDatePickerDirective extends PickerDirective implements OnInit {\n    isRange = false;\n\n    constructor(elementRef: ElementRef, cdr: ChangeDetectorRef, thyPopover: ThyPopover) {\n        super(elementRef, cdr, thyPopover);\n    }\n}\n","import { forwardRef, ChangeDetectorRef, ElementRef, OnInit, Directive } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PickerDirective } from './abstract-picker.directive';\nimport { ThyPopover } from 'ngx-tethys/popover';\n\n@Directive({\n    selector: '[thyRangePicker]',\n    exportAs: 'thyRangePicker',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: forwardRef(() => ThyRangePickerDirective)\n        }\n    ]\n})\nexport class ThyRangePickerDirective extends PickerDirective implements OnInit {\n    isRange = true;\n\n    constructor(elementRef: ElementRef, cdr: ChangeDetectorRef, thyPopover: ThyPopover) {\n        super(elementRef, cdr, thyPopover);\n    }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule, registerLocaleData } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport localeZhHans from '@angular/common/locales/zh-Hans';\n\nimport { LibPackerModule } from './lib/lib-packer.module';\n\nimport { BasePickerComponent } from './base-picker.component';\nimport { HeaderPickerComponent } from './header-picker.component';\nimport { ThyDatePickerComponent } from './date-picker.component';\nimport { ThyMonthPickerComponent } from './month-picker.component';\nimport { ThyRangePickerComponent } from './range-picker.component';\nimport { ThyWeekPickerComponent } from './week-picker.component';\nimport { ThyYearPickerComponent } from './year-picker.component';\nimport { ThyPickerComponent } from './picker.component';\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyInputModule } from 'ngx-tethys/input';\nimport { DatePickerRequiredValidator, RangePickerRequiredValidator } from './picker.validators';\nimport { ThyDatePickerFormatPipe, ThyDatePickerFormatStringPipe } from './picker.pipes';\nimport { ThyDatePickerDirective } from './date-picker.directive';\nimport { ThyRangePickerDirective } from './range-picker.directive';\nimport { DatePopupComponent } from './lib/popups/date-popup.component';\nimport { ThyPopoverModule } from 'ngx-tethys/popover';\n\nregisterLocaleData(localeZhHans, 'zh-Hans');\n\n@NgModule({\n    imports: [CommonModule, OverlayModule, LibPackerModule, ThyIconModule, ThyInputModule, ThyPopoverModule],\n    exports: [\n        ThyDatePickerComponent,\n        ThyRangePickerComponent,\n        ThyMonthPickerComponent,\n        ThyYearPickerComponent,\n        ThyWeekPickerComponent,\n        DatePickerRequiredValidator,\n        RangePickerRequiredValidator,\n        ThyDatePickerFormatPipe,\n        ThyDatePickerFormatStringPipe,\n        ThyDatePickerDirective,\n        ThyRangePickerDirective\n    ],\n    declarations: [\n        HeaderPickerComponent,\n        BasePickerComponent,\n        ThyPickerComponent,\n        ThyDatePickerComponent,\n        ThyMonthPickerComponent,\n        ThyYearPickerComponent,\n        ThyWeekPickerComponent,\n        ThyRangePickerComponent,\n        DatePickerRequiredValidator,\n        RangePickerRequiredValidator,\n        ThyDatePickerFormatPipe,\n        ThyDatePickerFormatStringPipe,\n        ThyDatePickerDirective,\n        ThyRangePickerDirective\n    ],\n    entryComponents: [DatePopupComponent]\n})\nexport class ThyDatePickerModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["MAX_ROW","MAX_COL"],"mappings":"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"}