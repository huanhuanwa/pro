import { Component, ChangeDetectionStrategy, HostBinding, Input, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ThyIconModule } from 'ngx-tethys/icon';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ngx-tethys/icon';

function ThyBreadcrumbComponent_div_0_thy_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 4);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r1.svgIconName);
} }
function ThyBreadcrumbComponent_div_0_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 5);
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r3.iconClasses);
} }
function ThyBreadcrumbComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, ThyBreadcrumbComponent_div_0_thy_icon_1_Template, 1, 1, "thy-icon", 2);
    ɵngcc0.ɵɵtemplate(2, ThyBreadcrumbComponent_div_0_ng_template_2_Template, 1, 1, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r2 = ɵngcc0.ɵɵreference(3);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.svgIconName)("ngIfElse", _r2);
} }
const _c0 = ["*"];
class ThyBreadcrumbComponent {
    constructor() {
        this._isBreadcrumb = true;
        this.isSlash = false;
        this.isBackslash = false;
    }
    set thyIcon(icon) {
        this.setIcon(icon);
    }
    set thySeparator(type) {
        if (type === 'slash') {
            this.isSlash = true;
        }
        if (type === 'backslash') {
            this.isBackslash = true;
        }
    }
    setIcon(icon) {
        if (icon) {
            if (icon.includes('wtf')) {
                const classes = icon.split(' ');
                if (classes.length === 1) {
                    classes.unshift('wtf');
                }
                this.iconClasses = classes;
            }
            else {
                this.svgIconName = icon;
            }
        }
        else {
            this.iconClasses = null;
            this.svgIconName = null;
        }
    }
}
ThyBreadcrumbComponent.ɵfac = function ThyBreadcrumbComponent_Factory(t) { return new (t || ThyBreadcrumbComponent)(); };
ThyBreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyBreadcrumbComponent, selectors: [["thy-breadcrumb"]], hostVars: 6, hostBindings: function ThyBreadcrumbComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-breadcrumb", ctx._isBreadcrumb)("separator-slash", ctx.isSlash)("separator-backslash", ctx.isBackslash);
    } }, inputs: { thyIcon: "thyIcon", thySeparator: "thySeparator" }, exportAs: ["ThyBreadcrumb"], ngContentSelectors: _c0, decls: 2, vars: 1, consts: [["class", "thy-breadcrumb-icon", 4, "ngIf"], [1, "thy-breadcrumb-icon"], [3, "thyIconName", 4, "ngIf", "ngIfElse"], ["iconFont", ""], [3, "thyIconName"], [3, "ngClass"]], template: function ThyBreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ThyBreadcrumbComponent_div_0_Template, 4, 2, "div", 0);
        ɵngcc0.ɵɵprojection(1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.svgIconName || ctx.iconClasses);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ThyIconComponent, ɵngcc1.NgClass], encapsulation: 2, changeDetection: 0 });
ThyBreadcrumbComponent.propDecorators = {
    _isBreadcrumb: [{ type: HostBinding, args: [`class.thy-breadcrumb`,] }],
    isSlash: [{ type: HostBinding, args: [`class.separator-slash`,] }],
    isBackslash: [{ type: HostBinding, args: [`class.separator-backslash`,] }],
    thyIcon: [{ type: Input }],
    thySeparator: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyBreadcrumbComponent, [{
        type: Component,
        args: [{
                selector: 'thy-breadcrumb',
                template: `
        <div class="thy-breadcrumb-icon" *ngIf="svgIconName || iconClasses">
            <thy-icon *ngIf="svgIconName; else iconFont" [thyIconName]="svgIconName"></thy-icon>
            <ng-template #iconFont>
                <i [ngClass]="iconClasses"></i>
            </ng-template>
        </div>
        <ng-content></ng-content>
    `,
                exportAs: 'ThyBreadcrumb',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { _isBreadcrumb: [{
            type: HostBinding,
            args: [`class.thy-breadcrumb`]
        }], isSlash: [{
            type: HostBinding,
            args: [`class.separator-slash`]
        }], isBackslash: [{
            type: HostBinding,
            args: [`class.separator-backslash`]
        }], thyIcon: [{
            type: Input
        }], thySeparator: [{
            type: Input
        }] }); })();

class ThyBreadcrumbItemComponent {
    constructor() {
        this._isBreadcrumbItem = true;
    }
}
ThyBreadcrumbItemComponent.ɵfac = function ThyBreadcrumbItemComponent_Factory(t) { return new (t || ThyBreadcrumbItemComponent)(); };
ThyBreadcrumbItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyBreadcrumbItemComponent, selectors: [["thy-breadcrumb-item"], ["", "thyBreadcrumbItem", ""]], hostVars: 2, hostBindings: function ThyBreadcrumbItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-breadcrumb-item", ctx._isBreadcrumbItem);
    } }, exportAs: ["ThyBreadcrumbItem"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [["thyIconName", "angle-right", 1, "default-icon"]], template: function ThyBreadcrumbItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵelement(1, "thy-icon", 0);
    } }, directives: [ɵngcc2.ThyIconComponent], encapsulation: 2, changeDetection: 0 });
ThyBreadcrumbItemComponent.propDecorators = {
    _isBreadcrumbItem: [{ type: HostBinding, args: [`class.thy-breadcrumb-item`,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyBreadcrumbItemComponent, [{
        type: Component,
        args: [{
                selector: 'thy-breadcrumb-item,[thyBreadcrumbItem]',
                template: '<ng-content></ng-content><thy-icon class="default-icon" thyIconName="angle-right"></thy-icon>',
                exportAs: 'ThyBreadcrumbItem',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { _isBreadcrumbItem: [{
            type: HostBinding,
            args: [`class.thy-breadcrumb-item`]
        }] }); })();

class ThyBreadcrumbModule {
}
ThyBreadcrumbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyBreadcrumbModule });
ThyBreadcrumbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyBreadcrumbModule_Factory(t) { return new (t || ThyBreadcrumbModule)(); }, imports: [[CommonModule, ThyIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyBreadcrumbModule, { declarations: function () { return [ThyBreadcrumbComponent, ThyBreadcrumbItemComponent]; }, imports: function () { return [CommonModule, ThyIconModule]; }, exports: function () { return [ThyBreadcrumbComponent, ThyBreadcrumbItemComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyBreadcrumbModule, [{
        type: NgModule,
        args: [{
                declarations: [ThyBreadcrumbComponent, ThyBreadcrumbItemComponent],
                imports: [CommonModule, ThyIconModule],
                exports: [ThyBreadcrumbComponent, ThyBreadcrumbItemComponent]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ThyBreadcrumbComponent, ThyBreadcrumbItemComponent, ThyBreadcrumbModule };

//# sourceMappingURL=ngx-tethys-breadcrumb.js.map