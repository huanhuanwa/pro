{"version":3,"file":"ngx-tethys-transfer.js","sources":["../../src/transfer/transfer.interface.ts","../../src/transfer/transfer.component.ts","../../src/transfer/transfer-list.component.ts","../../src/transfer/transfer.module.ts","../../src/transfer/ngx-tethys-transfer.ts"],"names":[],"mappings":"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","sourcesContent":["export type Direction = 'left' | 'right';\n\nexport enum TransferDirection {\n    left = 'left',\n    right = 'right'\n}\n\nexport interface ThyTransferData {\n    source: ThyTransferModel;\n    target: ThyTransferModel;\n}\n\nexport interface ThyTransferModel {\n    title?: string;\n    data: Array<any>;\n}\n\nexport interface ThyTransferItem {\n    title: string;\n    direction?: Direction;\n    order?: number;\n    disabled?: boolean;\n    checked?: boolean;\n    isLock?: boolean;\n    groupId?: string;\n    isFixed?: boolean;\n    [key: string]: any;\n}\n\nexport interface ThyTransferSelectEvent {\n    item: ThyTransferItem;\n}\n\nexport interface ThyTransferChangeEvent {\n    from?: string;\n    to?: string;\n    items?: ThyTransferItem[];\n    left?: InnerTransferList;\n    right?: InnerTransferList;\n}\n\nexport interface ThyTransferDragEvent {\n    oldIndex?: number;\n    newIndex?: number;\n    model?: ThyTransferItem;\n    models?: ThyTransferItem[];\n    left?: InnerTransferList;\n    right?: InnerTransferList;\n}\n\nexport interface InnerTransferDragEvent {\n    dragEvent?: ThyTransferDragEvent;\n    listData?: InnerTransferList;\n}\n\nexport interface InnerTransferList {\n    lock?: ThyTransferItem[];\n    unlock?: ThyTransferItem[];\n}\n","import { Observable, isObservable } from 'rxjs';\nimport { Component, Input, Output, ViewEncapsulation, HostBinding, EventEmitter, ContentChild, TemplateRef, OnInit } from '@angular/core';\n\nimport {\n    ThyTransferItem,\n    ThyTransferChangeEvent,\n    ThyTransferSelectEvent,\n    ThyTransferDragEvent,\n    InnerTransferDragEvent,\n    Direction,\n    TransferDirection\n} from './transfer.interface';\n\n@Component({\n    selector: 'thy-transfer',\n    templateUrl: './transfer.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyTransferComponent implements OnInit {\n    @HostBinding('class') hostClass = 'thy-transfer';\n\n    public leftDataSource: ThyTransferItem[] = [];\n\n    public rightDataSource: ThyTransferItem[] = [];\n\n    public allDataSource: ThyTransferItem[] = [];\n\n    public leftTitle: string;\n\n    public rightTitle: string;\n\n    public rightDraggable = false;\n\n    private _autoMove = true;\n\n    @Input()\n    set thyData(value: ThyTransferItem[]) {\n        if (value) {\n            this.initializeTransferData(value);\n        }\n    }\n\n    @Input() thyrenderLeftTemplateRef: TemplateRef<any>;\n\n    @Input() thyrenderRightTemplateRef: TemplateRef<any>;\n\n    // @Input() transferToRight\n\n    @Input()\n    set thyTitles(value: string[]) {\n        this.leftTitle = value[0] || '';\n        this.rightTitle = value[1] || '';\n    }\n\n    @Input() thyRightCanLock: boolean;\n\n    @Input() thyRightLockMax: number;\n\n    // Currently not implemented, in order to support the selections move\n    @Input()\n    set thyAutoMove(value: boolean) {\n        this._autoMove = value;\n    }\n\n    @Input() thyLeftDraggable: boolean;\n\n    @Input() thyRightDraggable: boolean;\n\n    @Output() thyDraggableUpdate: EventEmitter<ThyTransferDragEvent> = new EventEmitter<ThyTransferDragEvent>();\n\n    @Output() thyChange: EventEmitter<ThyTransferChangeEvent> = new EventEmitter<ThyTransferChangeEvent>();\n\n    @ContentChild('renderTemplate') templateRef: TemplateRef<any>;\n\n    @ContentChild('renderLeftTemplate') leftContentRef: TemplateRef<any>;\n\n    @ContentChild('renderRightTemplate') rightContentRef: TemplateRef<any>;\n\n    ngOnInit() {}\n\n    initializeTransferData(data: ThyTransferItem[] = []) {\n        this.allDataSource = [];\n        this.leftDataSource = [];\n        this.rightDataSource = [];\n        data.forEach(item => {\n            this.allDataSource.push(item);\n            if (item.direction === TransferDirection.left) {\n                this.leftDataSource.push(item);\n            }\n            if (item.direction === TransferDirection.right) {\n                this.rightDataSource.push(item);\n            }\n        });\n    }\n\n    onSelect(from: Direction, event: ThyTransferSelectEvent) {\n        if (event.item.isFixed) {\n            return;\n        }\n        const to = from === TransferDirection.left ? TransferDirection.right : TransferDirection.left;\n        event.item.checked = !event.item.checked;\n        if (this._autoMove) {\n            this.onMove(to);\n        }\n    }\n\n    selectItem(event: ThyTransferSelectEvent) {\n        this.onSelect(TransferDirection.left, event);\n    }\n\n    unselectItem(event: ThyTransferSelectEvent) {\n        this.onSelect(TransferDirection.right, event);\n    }\n\n    private groupListByIsLock(list: ThyTransferItem[] = []) {\n        const lock: ThyTransferItem[] = [],\n            unlock: ThyTransferItem[] = [];\n        list.forEach(item => {\n            if (item.isLock) {\n                lock.push(item);\n            } else {\n                unlock.push(item);\n            }\n        });\n        return { lock: lock, unlock: unlock };\n    }\n\n    onMove(to: Direction) {\n        const fromDataSource = to === TransferDirection.right ? this.leftDataSource : this.rightDataSource;\n        const toDataSource = to === TransferDirection.right ? this.rightDataSource : this.leftDataSource;\n        const selections = fromDataSource.filter(item => item.checked);\n        const changeEvent: ThyTransferChangeEvent = {\n            from: to === TransferDirection.right ? TransferDirection.left : TransferDirection.right,\n            to: to,\n            items: [...selections]\n        };\n        selections.forEach(item => {\n            const index = fromDataSource.indexOf(item);\n            const removed = fromDataSource.splice(index, 1)[0];\n            removed.checked = !removed.checked;\n            removed.direction = to;\n            toDataSource.push(removed);\n        });\n        this.thyChange.emit({\n            ...changeEvent,\n            left: this.groupListByIsLock(this.leftDataSource),\n            right: this.groupListByIsLock(this.rightDataSource)\n        });\n    }\n\n    onDragUpdate(direction: Direction, event: InnerTransferDragEvent) {\n        const otherDirectionData = direction === TransferDirection.left ? this.rightDataSource : this.leftDataSource;\n        const otherListData = this.groupListByIsLock(otherDirectionData);\n        this.thyDraggableUpdate.emit({\n            ...event.dragEvent,\n            left: direction === TransferDirection.left ? event.listData : otherListData,\n            right: direction === TransferDirection.right ? event.listData : otherListData\n        });\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    ElementRef,\n    ViewEncapsulation,\n    HostBinding,\n    EventEmitter,\n    TemplateRef,\n    IterableDiffer,\n    IterableDiffers,\n    OnInit,\n    OnDestroy,\n    DoCheck,\n    IterableChanges\n} from '@angular/core';\nimport { ThyTransferSelectEvent, ThyTransferItem, ThyTransferDragEvent, InnerTransferDragEvent, Direction } from './transfer.interface';\nimport { ThyTransferComponent } from './transfer.component';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\n\n@Component({\n    selector: 'thy-transfer-list',\n    templateUrl: './transfer-list.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyTransferListComponent implements OnInit, DoCheck {\n    public lockItems: ThyTransferItem[] = [];\n\n    public unlockItems: ThyTransferItem[] = [];\n\n    private _diff: IterableDiffer<ThyTransferItem>;\n\n    private _lockDiff: IterableDiffer<ThyTransferItem>;\n\n    private _unlockDiff: IterableDiffer<ThyTransferItem>;\n\n    @Input() title: string;\n\n    @Input() items: ThyTransferItem[];\n\n    @Input() draggable: boolean;\n\n    @Input() canLock: boolean;\n\n    @Input() maxLock: number;\n\n    @Input() template: TemplateRef<any>;\n\n    @Input('renderContentRef') contentRef: TemplateRef<any>;\n\n    @Output() draggableUpdate: EventEmitter<InnerTransferDragEvent> = new EventEmitter<InnerTransferDragEvent>();\n\n    @Output() selectItem: EventEmitter<ThyTransferSelectEvent> = new EventEmitter<ThyTransferSelectEvent>();\n\n    @Output() unselectItem: EventEmitter<ThyTransferSelectEvent> = new EventEmitter<ThyTransferSelectEvent>();\n\n    @HostBinding('class') hostClass = 'thy-transfer-list';\n\n    constructor(private root: ThyTransferComponent, private differs: IterableDiffers) {}\n\n    ngOnInit() {\n        this._combineTransferData();\n        if (this.canLock) {\n            this._lockDiff = this.differs.find(this.lockItems).create();\n            this._unlockDiff = this.differs.find(this.unlockItems).create();\n        } else {\n            this._unlockDiff = this.differs.find(this.unlockItems).create();\n        }\n        this._diff = this.differs.find(this.items).create();\n    }\n\n    private _combineTransferData() {\n        this.lockItems = [];\n        this.unlockItems = [];\n        if (this.canLock) {\n            (this.items || []).forEach(item => {\n                if (item.isLock) {\n                    this.lockItems.push(item);\n                } else {\n                    this.unlockItems.push(item);\n                }\n            });\n        } else {\n            this.unlockItems = this.items;\n        }\n    }\n\n    private _afterChangeItems(changes: IterableChanges<ThyTransferItem>, items: ThyTransferItem[]) {\n        // 数据发生变化时，更改order值\n        changes.forEachAddedItem(record => {\n            record.item.order = record.currentIndex;\n        });\n        changes.forEachRemovedItem(() => {\n            items.forEach((item, index) => {\n                item.order = index;\n            });\n        });\n        changes.forEachMovedItem(() => {\n            items.forEach((item, index) => {\n                item.order = index;\n            });\n        });\n    }\n\n    ngDoCheck() {\n        const changes = this._diff.diff(this.items);\n        if (changes) {\n            this._afterChangeItems(changes, this.items);\n            this._combineTransferData();\n        }\n        if (this._lockDiff) {\n            const lockChanges = this._lockDiff.diff(this.lockItems);\n            if (lockChanges) {\n                this._afterChangeItems(lockChanges, this.lockItems);\n            }\n        }\n        const unlockChanges = this._unlockDiff.diff(this.unlockItems);\n        if (unlockChanges) {\n            this._afterChangeItems(unlockChanges, this.unlockItems);\n        }\n    }\n\n    lockListEnterPredicate = () => {\n        return this.lockItems.length < this.maxLock;\n    };\n\n    onSelectItem = (item: ThyTransferItem) => {\n        this.selectItem.emit({ item });\n    };\n\n    onUnselectItem = (item: ThyTransferItem) => {\n        this.unselectItem.emit({ item });\n    };\n\n    drop(event: CdkDragDrop<ThyTransferItem[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n            (event.previousContainer.data || []).forEach(item => {\n                item.isLock = event.previousContainer.id === 'lock';\n            });\n\n            (event.container.data || []).forEach(item => {\n                item.isLock = event.container.id === 'lock';\n            });\n        }\n        const dragEvent: ThyTransferDragEvent = {\n            model: event.item.data,\n            models: event.container.data,\n            oldIndex: event.previousIndex,\n            newIndex: event.currentIndex\n        };\n        this.draggableUpdate.emit({\n            dragEvent: dragEvent,\n            listData: { lock: this.lockItems, unlock: this.unlockItems }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyTransferComponent } from './transfer.component';\nimport { ThyTransferListComponent } from './transfer-list.component';\nimport { ThyButtonModule } from 'ngx-tethys/button';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyListModule } from 'ngx-tethys/list';\nimport { ThySharedModule } from 'ngx-tethys/shared';\nimport { ThyFlexibleTextModule } from 'ngx-tethys/flexible-text';\n@NgModule({\n    declarations: [ThyTransferComponent, ThyTransferListComponent],\n    imports: [CommonModule, ThyButtonModule, DragDropModule, ThyIconModule, ThyListModule, ThySharedModule, ThyFlexibleTextModule],\n    exports: [ThyTransferComponent]\n})\nexport class ThyTransferModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}