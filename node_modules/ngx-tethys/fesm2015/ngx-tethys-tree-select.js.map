{"version":3,"file":"ngx-tethys-tree-select.js","sources":["../../src/tree-select/tree-select.component.ts","../../src/tree-select/tree-select-nodes.component.ts","../../src/tree-select/module.ts","../../src/tree-select/ngx-tethys-tree-select.ts"],"names":[],"mappings":"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","sourcesContent":["import { getFlexiblePositions } from 'ngx-tethys/core';\nimport { ThyTreeNode } from 'ngx-tethys/tree';\nimport { isArray, isObject, produce, warnDeprecation } from 'ngx-tethys/util';\nimport { Observable, of } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport {\n    Component,\n    ContentChild,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    HostListener,\n    Input,\n    NgZone,\n    OnInit,\n    Renderer2,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThyTreeSelectNode, ThyTreeSelectType } from './tree-select.class';\n\ntype InputSize = 'xs' | 'sm' | 'md' | 'lg' | '';\n\nexport function filterTreeData(treeNodes: ThyTreeSelectNode[], searchText: string, searchKey: string = 'name') {\n    const filterNodes = (node: ThyTreeSelectNode, result: ThyTreeSelectNode[]) => {\n        if (node[searchKey] && node[searchKey].indexOf(searchText) !== -1) {\n            result.push(node);\n            return result;\n        }\n        if (Array.isArray(node.children)) {\n            const nodes = node.children.reduce((previous, current) => filterNodes(current, previous), [] as ThyTreeSelectNode[]);\n            if (nodes.length) {\n                const parentNode = { ...node, children: nodes, expand: true };\n                result.push(parentNode);\n            }\n        }\n        return result;\n    };\n    const treeData = treeNodes.reduce((previous, current) => filterNodes(current, previous), [] as ThyTreeSelectNode[]);\n    return treeData;\n}\n@Component({\n    selector: 'thy-tree-select',\n    templateUrl: './tree-select.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyTreeSelectComponent),\n            multi: true\n        }\n    ]\n})\nexport class ThyTreeSelectComponent implements OnInit, ControlValueAccessor {\n    @HostBinding('class.thy-select-custom') treeSelectClass = true;\n\n    @HostBinding('class.thy-select') isTreeSelect = true;\n\n    // 菜单是否展开\n    @HostBinding('class.menu-is-opened') expandTreeSelectOptions = false;\n\n    @HostBinding('class.thy-select-custom--multiple') isMulti = false;\n\n    public treeNodes: ThyTreeSelectNode[];\n\n    public selectedValue: any;\n\n    public selectedNode: ThyTreeSelectNode;\n\n    public selectedNodes: ThyTreeSelectNode[] = [];\n\n    public flattenTreeNodes: ThyTreeSelectNode[] = [];\n\n    public cdkConnectOverlayWidth = 0;\n\n    public positions: ConnectionPositionPair[];\n\n    public icons: { expand: string; collapse: string; gap?: number } = {\n        expand: 'angle-down',\n        collapse: 'angle-right',\n        gap: 15\n    };\n\n    private initialled = false;\n\n    public valueIsObject = false;\n\n    originTreeNodes: ThyTreeSelectNode[];\n\n    @ContentChild('thyTreeSelectTriggerDisplay')\n    thyTreeSelectTriggerDisplayRef: TemplateRef<any>;\n\n    @ContentChild('treeNodeTemplate')\n    treeNodeTemplateRef: TemplateRef<any>;\n\n    @ViewChild(CdkOverlayOrigin, { static: true }) cdkOverlayOrigin: CdkOverlayOrigin;\n\n    @ViewChild(CdkConnectedOverlay, { static: true }) cdkConnectedOverlay: CdkConnectedOverlay;\n\n    @ViewChild('customDisplayTemplate', { static: true }) customDisplayTemplate: TemplateRef<any>;\n\n    @Input()\n    set thyTreeNodes(value: ThyTreeSelectNode[]) {\n        this.treeNodes = value;\n        this.originTreeNodes = value;\n        if (this.initialled) {\n            this.flattenTreeNodes = this.flattenNodes(this.treeNodes, this.flattenTreeNodes, []);\n            this.setSelectedNodes();\n        }\n    }\n\n    @Input() thyPrimaryKey = '_id';\n\n    @Input() thyShowKey = 'name';\n\n    @Input() thyChildCountKey = 'childCount';\n\n    @Input() thyAllowClear: boolean;\n\n    @Input() thyMultiple = false;\n\n    @Input() thyDisable = false;\n\n    @Input() thyPlaceholder = '请选择节点';\n\n    get placeholder() {\n        return this.thyPlaceholder;\n    }\n\n    @Input() thySize: InputSize;\n\n    @Input() thyEmptyOptionsText = '暂时没有数据可选';\n\n    @Input() thyHiddenNodeKey = 'hidden';\n\n    @Input() thyDisableNodeKey = 'disabled';\n\n    @Input() thyAsyncNode = false;\n\n    @Input() thyShowWholeName = false;\n\n    @Input() thyShowSearch = false;\n\n    @Input()\n    set thyIconType(type: ThyTreeSelectType) {\n        warnDeprecation('This parameter has been deprecation');\n        // if (type === 'especial') {\n        //     this.icons = { expand: 'minus-square', collapse: 'plus-square', gap: 20 };\n        // } else {\n        //     this.icons = { expand: 'caret-right-down', collapse: 'caret-right', gap: 15 };\n        // }\n    }\n\n    @Input() thyHiddenNodeFn: (node: ThyTreeSelectNode) => boolean = (node: ThyTreeSelectNode) => node.hidden;\n\n    @Input() thyDisableNodeFn: (node: ThyTreeSelectNode) => boolean = (node: ThyTreeSelectNode) => node.disabled;\n\n    @Input() thyGetNodeChildren: (node: ThyTreeSelectNode) => Observable<ThyTreeSelectNode> = (node: ThyTreeSelectNode) => of([]);\n\n    // TODO: 是否可以取消选中的node\n    // @Input() thyUnRemoveSelectedNodeFn: Function;\n\n    public onModelChange: Function = () => {};\n\n    public onModelTouch: Function = () => {};\n\n    private _getNgModelType() {\n        if (this.thyMultiple) {\n            this.valueIsObject = !this.selectedValue[0] || isObject(this.selectedValue[0]);\n        } else {\n            this.valueIsObject = isObject(this.selectedValue);\n        }\n    }\n\n    writeValue(value: any): void {\n        this.selectedValue = value;\n\n        if (value) {\n            this._getNgModelType();\n        }\n        this.setSelectedNodes();\n    }\n\n    registerOnChange(fn: any): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onModelTouch = fn;\n    }\n\n    constructor(public elementRef: ElementRef, public renderer: Renderer2, private ngZone: NgZone) {}\n\n    @HostListener('document:click', ['$event'])\n    onDocumentClick(event: Event) {\n        event.stopPropagation();\n        if (!this.elementRef.nativeElement.contains(event.target) && this.expandTreeSelectOptions) {\n            this.expandTreeSelectOptions = false;\n        }\n    }\n\n    ngOnInit() {\n        this.positions = getFlexiblePositions('bottom', 4);\n        this.isMulti = this.thyMultiple;\n        this.flattenTreeNodes = this.flattenNodes(this.treeNodes, this.flattenTreeNodes, []);\n        this.setSelectedNodes();\n        this.initialled = true;\n        this.init();\n    }\n\n    get selectedValueObject() {\n        return this.thyMultiple ? this.selectedNodes : this.selectedNode;\n    }\n\n    searchValue(searchText: string) {\n        this.treeNodes = filterTreeData(this.originTreeNodes, searchText.trim(), this.thyShowKey);\n    }\n\n    public setPosition() {\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.cdkConnectedOverlay.overlayRef.updatePosition();\n            });\n    }\n\n    private init() {\n        this.cdkConnectOverlayWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n    }\n\n    private flattenNodes(\n        nodes: ThyTreeSelectNode[] = [],\n        resultNodes: ThyTreeSelectNode[] = [],\n        parentPrimaryValue: string[] = []\n    ): ThyTreeSelectNode[] {\n        resultNodes = resultNodes.concat(nodes);\n        let nodesLeafs: ThyTreeSelectNode[] = [];\n        (nodes || []).forEach(item => {\n            item.parentValues = parentPrimaryValue;\n            item.level = item.parentValues.length;\n            if (item.children && isArray(item.children)) {\n                const nodeLeafs = this.flattenNodes(item.children, resultNodes, [...parentPrimaryValue, item[this.thyPrimaryKey]]);\n                nodesLeafs = [...nodesLeafs, ...nodeLeafs];\n            }\n        });\n        return [...nodes, ...nodesLeafs];\n    }\n\n    private _findTreeNode(value: string): ThyTreeSelectNode {\n        return (this.flattenTreeNodes || []).find(item => item[this.thyPrimaryKey] === value);\n    }\n\n    getShowNodeName() {\n        if (this.thyShowWholeName) {\n            let wholeName = '';\n            (this.selectedNode.parentValues || []).forEach((item: string, index: number) => {\n                const node = this._findTreeNode(item);\n                wholeName = `${wholeName}${node[this.thyShowKey]} > `;\n            });\n            return `${wholeName}${this.selectedNode[this.thyShowKey]}`;\n        } else {\n            return this.selectedNode[this.thyShowKey];\n        }\n    }\n\n    private setSelectedNodes() {\n        if (this.selectedValue) {\n            // 多选数据初始化\n            if (this.thyMultiple) {\n                if (this.selectedValue.length > 0) {\n                    if (this.valueIsObject && Object.keys(this.selectedValue[0]).indexOf(this.thyPrimaryKey) >= 0) {\n                        this.selectedNodes = this.selectedValue.map((item: any) => {\n                            return this._findTreeNode(item[this.thyPrimaryKey]);\n                        });\n                    } else {\n                        this.selectedNodes = this.selectedValue.map((item: any) => {\n                            return this._findTreeNode(item);\n                        });\n                    }\n                }\n            } else {\n                // 单选数据初始化\n                if (this.valueIsObject) {\n                    if (Object.keys(this.selectedValue).indexOf(this.thyPrimaryKey) >= 0) {\n                        this.selectedNode = this._findTreeNode(this.selectedValue[this.thyPrimaryKey]);\n                    }\n                } else {\n                    this.selectedNode = this._findTreeNode(this.selectedValue);\n                }\n            }\n        } else {\n            this.selectedNodes = [];\n            this.selectedNode = null;\n        }\n    }\n\n    openSelectPop() {\n        if (this.thyDisable) {\n            return;\n        }\n        this.cdkConnectOverlayWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n        this.expandTreeSelectOptions = !this.expandTreeSelectOptions;\n    }\n\n    close() {\n        this.expandTreeSelectOptions = false;\n    }\n\n    clearSelectedValue(event: Event) {\n        event.stopPropagation();\n        this.selectedValue = null;\n        this.selectedNode = null;\n        this.selectedNodes = [];\n        this.onModelChange(this.selectedValue);\n    }\n\n    private _changeSelectValue() {\n        if (this.valueIsObject) {\n            this.selectedValue = this.thyMultiple ? this.selectedNodes : this.selectedNode;\n        } else {\n            this.selectedValue = this.thyMultiple\n                ? this.selectedNodes.map(item => item[this.thyPrimaryKey])\n                : this.selectedNode[this.thyPrimaryKey];\n        }\n        this.onModelChange(this.selectedValue);\n    }\n\n    removeMultipleSelectedNode(event: { item: ThyTreeSelectNode; $event: Event }) {\n        this.removeSelectedNode(event.item, event.$event);\n    }\n\n    // thyMultiple = true 时，移除数据时调用\n    removeSelectedNode(node: ThyTreeSelectNode, event?: Event) {\n        if (event) {\n            event.stopPropagation();\n        }\n        if (this.thyDisable) {\n            return;\n        }\n        if (this.thyMultiple) {\n            this.selectedNodes = produce(this.selectedNodes).remove((item: ThyTreeSelectNode) => {\n                return item[this.thyPrimaryKey] === node[this.thyPrimaryKey];\n            });\n            this._changeSelectValue();\n        }\n    }\n\n    selectNode(node: ThyTreeSelectNode) {\n        if (!this.thyMultiple) {\n            this.selectedNode = node;\n            this.expandTreeSelectOptions = false;\n        } else {\n            if (\n                this.selectedNodes.find(item => {\n                    return item[this.thyPrimaryKey] === node[this.thyPrimaryKey];\n                })\n            ) {\n                this.removeSelectedNode(node);\n            } else {\n                this.selectedNodes = produce(this.selectedNodes).add(node);\n            }\n        }\n        this._changeSelectValue();\n    }\n\n    getNodeChildren(node: ThyTreeSelectNode) {\n        const result = this.thyGetNodeChildren(node);\n        if (result && result.subscribe) {\n            result.pipe().subscribe((data: ThyTreeSelectNode[]) => {\n                const nodes = this.flattenNodes(data, this.flattenTreeNodes, [...node.parentValues, node[this.thyPrimaryKey]]);\n                const otherNodes = nodes.filter((item: ThyTreeNode) => {\n                    return !this.flattenTreeNodes.find(hasItem => {\n                        return hasItem[this.thyPrimaryKey] === item[this.thyPrimaryKey];\n                    });\n                });\n                this.flattenTreeNodes = [...this.flattenTreeNodes, ...otherNodes];\n                node.children = data;\n            });\n            return result;\n        }\n    }\n}\n","import { BehaviorSubject, Subject } from 'rxjs';\nimport { Component, OnInit, HostBinding, Input } from '@angular/core';\nimport { ThyTreeSelectComponent } from './tree-select.component';\nimport { ThyTreeSelectNode } from './tree-select.class';\n\n@Component({\n    selector: 'thy-tree-select-nodes',\n    templateUrl: './tree-select-nodes.component.html'\n})\nexport class ThyTreeSelectNodesComponent implements OnInit {\n    @HostBinding('class') class: string;\n\n    @Input() treeNodes: ThyTreeSelectNode[];\n\n    public primaryKey = this.parent.thyPrimaryKey;\n\n    public showKey = this.parent.thyShowKey;\n\n    public isMultiple = this.parent.thyMultiple;\n\n    public valueIsObject = this.parent.valueIsObject;\n\n    public selectedValue = this.parent.selectedValue;\n\n    public childCountKey = this.parent.thyChildCountKey;\n\n    public treeNodeTemplateRef = this.parent.treeNodeTemplateRef;\n\n    constructor(public parent: ThyTreeSelectComponent) {}\n\n    ngOnInit() {\n        this.class = this.isMultiple ? 'thy-tree-select-dropdown thy-tree-select-dropdown-multiple' : 'thy-tree-select-dropdown';\n    }\n\n    treeNodeIsSelected(node: ThyTreeSelectNode) {\n        if (this.parent.thyMultiple) {\n            return (this.parent.selectedNodes || []).find(item => {\n                return item[this.primaryKey] === node[this.primaryKey];\n            });\n        } else {\n            return this.parent.selectedNode && this.parent.selectedNode[this.primaryKey] === node[this.primaryKey];\n        }\n    }\n\n    treeNodeIsHidden(node: ThyTreeSelectNode) {\n        if (this.parent.thyHiddenNodeKey) {\n            return node[this.parent.thyHiddenNodeKey];\n        }\n        if (this.parent.thyHiddenNodeFn) {\n            return this.parent.thyHiddenNodeFn(node);\n        }\n        return false;\n    }\n\n    treeNodeIsDisable(node: ThyTreeSelectNode) {\n        if (this.parent.thyDisableNodeKey) {\n            return node[this.parent.thyDisableNodeKey];\n        }\n        if (this.parent.thyDisableNodeFn) {\n            return this.parent.thyDisableNodeFn(node);\n        }\n        return false;\n    }\n\n    treeNodeIsExpand(node: ThyTreeSelectNode) {\n        let isSelectedNodeParent = false;\n        if (this.parent.thyMultiple) {\n            isSelectedNodeParent = !!(this.parent.selectedNodes || []).find(item => {\n                return item.parentValues.indexOf(node[this.primaryKey]) > -1;\n            });\n        } else {\n            isSelectedNodeParent = this.parent.selectedNode\n                ? this.parent.selectedNode.parentValues.indexOf(node[this.primaryKey]) > -1\n                : false;\n        }\n        const isExpand = node.expand || (Object.keys(node).indexOf('expand') < 0 && isSelectedNodeParent);\n        node.expand = isExpand;\n        return isExpand;\n    }\n\n    getNodeChildren(node: ThyTreeSelectNode) {\n        return this.parent.getNodeChildren(node);\n    }\n\n    selectTreeNode(event: Event, node: ThyTreeSelectNode) {\n        event.stopPropagation();\n        if (this.treeNodeIsDisable(node)) {\n            return;\n        }\n        this.parent.selectNode(node);\n    }\n\n    nodeExpandToggle(event: Event, node: ThyTreeSelectNode) {\n        event.stopPropagation();\n        if (Object.keys(node).indexOf('expand') > -1) {\n            node.expand = !node.expand;\n        } else {\n            if (this.treeNodeIsExpand(node)) {\n                node.expand = false;\n            } else {\n                node.expand = true;\n            }\n        }\n\n        if (node.expand && this.parent.thyAsyncNode) {\n            this.getNodeChildren(node).subscribe(() => {\n                this.parent.setPosition();\n            });\n        }\n        this.parent.setPosition();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ThyLabelModule } from 'ngx-tethys/label';\nimport { ThyTreeSelectComponent } from './tree-select.component';\nimport { ThyTreeSelectNodesComponent } from './tree-select-nodes.component';\nimport { ThyListModule } from 'ngx-tethys/list';\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyEmptyModule } from 'ngx-tethys/empty';\nimport { ThySelectCommonModule } from 'ngx-tethys/shared';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        OverlayModule,\n        ThyLabelModule,\n        ThyListModule,\n        ThyIconModule,\n        ThyEmptyModule,\n        ThySelectCommonModule\n    ],\n    declarations: [ThyTreeSelectComponent, ThyTreeSelectNodesComponent],\n    exports: [ThyTreeSelectComponent, ThyTreeSelectNodesComponent]\n})\nexport class ThyTreeSelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}