{"version":3,"file":"ngx-tethys-radio.js","sources":["../../src/radio/group/radio-group.component.ts","../../src/radio/radio.component.ts","../../src/radio/button/radio-button.component.ts","../../src/radio/module.ts","../../src/radio/ngx-tethys-radio.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, forwardRef, HostBinding, Input, ElementRef, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { ThyRadioComponent } from '../radio.component';\nimport { ThyRadioButtonComponent } from '../button/radio-button.component';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\n\nconst buttonGroupSizeMap = {\n    sm: ['btn-group-sm'],\n    lg: ['btn-group-lg']\n};\n\nconst radioGroupLayoutMap = {\n    flex: ['radio-group-layout-flex']\n};\n\n@Component({\n    selector: 'thy-radio-group',\n    templateUrl: './radio-group.component.html',\n    providers: [\n        UpdateHostClassService,\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyRadioGroupComponent),\n            multi: true\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyRadioGroupComponent implements ControlValueAccessor, OnInit {\n    @HostBinding('class.thy-radio-group') thyRadioGroup = true;\n\n    @HostBinding('class.btn-group') isButtonGroup = false;\n\n    @HostBinding('class.btn-group-outline-default')\n    isButtonGroupOutline = false;\n    // @HostBinding('class.radio-group-layout-flex')\n    // isFullLayout = false;\n\n    private _size: string;\n\n    private _layout: string;\n\n    @Input()\n    set thySize(size: string) {\n        this._size = size;\n    }\n\n    @Input()\n    set thyLayout(layout: string) {\n        this._layout = layout;\n    }\n\n    _innerValue: string | number;\n\n    radios: Array<ThyRadioComponent | ThyRadioButtonComponent> = [];\n\n    @Input()\n    set thyDisabled(value: boolean) {\n        this.setDisabledState(value);\n    }\n\n    onChange: (_: string) => void = () => null;\n    onTouched: () => void = () => null;\n\n    constructor(\n        private updateHostClassService: UpdateHostClassService,\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n\n    addRadio(radio: ThyRadioComponent | ThyRadioButtonComponent): void {\n        this.radios.push(radio);\n        radio.thyChecked = radio.thyValue === this._innerValue;\n    }\n\n    updateValue(value: string, emit: boolean): void {\n        this._innerValue = value;\n        this.radios.forEach(radio => {\n            radio.thyChecked = radio.thyValue === this._innerValue;\n        });\n        if (emit) {\n            this.onChange(value);\n        }\n        this.changeDetectorRef.detectChanges();\n    }\n\n    writeValue(value: any): void {\n        this.updateValue(value, false);\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.radios.forEach(radio => {\n            radio.setDisabledState(isDisabled);\n        });\n    }\n\n    setGroup() {\n        if (!this.isButtonGroup && !this.isButtonGroupOutline) {\n            this.isButtonGroup = true;\n            this.isButtonGroupOutline = true;\n        }\n    }\n\n    ngOnInit() {\n        this._setClasses();\n    }\n\n    private _setClasses() {\n        const classNames: string[] = [];\n        if (buttonGroupSizeMap[this._size]) {\n            classNames.push(buttonGroupSizeMap[this._size]);\n        }\n        if (radioGroupLayoutMap[this._layout]) {\n            classNames.push(radioGroupLayoutMap[this._layout]);\n        }\n        this.updateHostClassService.updateClass(classNames);\n    }\n}\n","import {\n    Component,\n    forwardRef,\n    OnInit,\n    HostBinding,\n    HostListener,\n    Input,\n    ElementRef,\n    Optional,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { ThyTranslate } from 'ngx-tethys/core';\nimport { ThyFormCheckBaseComponent } from 'ngx-tethys/shared';\nimport { ThyRadioGroupComponent } from './group/radio-group.component';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\n@Component({\n    selector: '[thy-radio],[thyRadio]',\n    templateUrl: './radio.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyRadioComponent),\n            multi: true\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyRadioComponent extends ThyFormCheckBaseComponent implements OnInit {\n    name: string;\n\n    @Input() thyValue: string;\n\n    set thyChecked(value: boolean) {\n        this.writeValue(coerceBooleanProperty(value));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    constructor(\n        public thyTranslate: ThyTranslate,\n        @Optional() public thyRadioGroupComponent: ThyRadioGroupComponent,\n        changeDetectorRef: ChangeDetectorRef\n    ) {\n        super(thyTranslate, changeDetectorRef);\n    }\n\n    ngOnInit() {\n        if (this.thyRadioGroupComponent) {\n            this.thyRadioGroupComponent.addRadio(this);\n        }\n    }\n\n    change() {\n        if (this.thyRadioGroupComponent) {\n            this.thyRadioGroupComponent.updateValue(this.thyValue, true);\n        } else {\n            this.updateValue(!this._innerValue);\n        }\n    }\n}\n","import { Component, forwardRef, OnInit, HostBinding, HostListener, Input, Optional, ChangeDetectorRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ThyTranslate } from 'ngx-tethys/core';\nimport { ThyRadioGroupComponent } from './../group/radio-group.component';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\nimport { ThyRadioComponent } from '../radio.component';\n\n@Component({\n    selector: '[thy-radio-button],[thyRadioButton]',\n    templateUrl: './radio-button.component.html'\n})\nexport class ThyRadioButtonComponent extends ThyRadioComponent implements OnInit {\n    @HostBinding('class.btn') isButton = true;\n    @HostBinding('class.active') isActive = false;\n\n    name: string;\n\n    @Input() thyValue: string;\n\n    set thyChecked(value: boolean) {\n        this.isActive = !!value;\n        this.writeValue(coerceBooleanProperty(value));\n    }\n\n    constructor(\n        thyTranslate: ThyTranslate,\n        @Optional() thyRadioGroupComponent: ThyRadioGroupComponent,\n        changeDetectorRef: ChangeDetectorRef\n    ) {\n        super(thyTranslate, thyRadioGroupComponent, changeDetectorRef);\n    }\n\n    ngOnInit() {\n        this._isFormCheck = false;\n        if (this.thyRadioGroupComponent) {\n            this.thyRadioGroupComponent.addRadio(this);\n            this.thyRadioGroupComponent.setGroup();\n        }\n    }\n\n    @HostListener('click', ['$event'])\n    click($event: MouseEvent) {\n        this.change();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ThyRadioComponent } from './radio.component';\nimport { ThyRadioButtonComponent } from './button/radio-button.component';\nimport { ThyRadioGroupComponent } from './group/radio-group.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [\n        ThyRadioComponent,\n        ThyRadioGroupComponent,\n        ThyRadioButtonComponent\n    ],\n    exports: [\n        ThyRadioComponent,\n        ThyRadioGroupComponent,\n        ThyRadioButtonComponent\n    ]\n})\nexport class ThyRadioModule {\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}