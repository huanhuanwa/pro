{"version":3,"file":"ngx-tethys-list.js","sources":["../../src/list/list.component.ts","../../src/list/list-item.component.ts","../../src/list/selection/selection-list.ts","../../src/list/list-item-meta.component.ts","../../src/list/list.module.ts","../../src/list/ngx-tethys-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, HostBinding } from '@angular/core';\nimport { InputBoolean } from 'ngx-tethys/core';\n\n@Component({\n    selector: 'thy-list',\n    template: '<ng-content></ng-content>'\n})\nexport class ThyListComponent {\n    @Input()\n    @InputBoolean()\n    set thyDivided(value: boolean) {\n        this._isDivided = value;\n    }\n\n    @HostBinding(`class.thy-list-divided`) _isDivided = false;\n\n    @HostBinding(`class.thy-list`) _isList = true;\n\n    constructor() {}\n}\n","import { Component, Input, HostBinding } from '@angular/core';\n\n@Component({\n    selector: 'thy-list-item,[thy-list-item]',\n    template: '<ng-content></ng-content>'\n})\nexport class ThyListItemComponent {\n    @HostBinding(`class.thy-list-item`) _isListItem = true;\n\n    constructor() {}\n}\n","import { ScrollToService, UpdateHostClassService } from 'ngx-tethys/core';\nimport { IThyListOptionParentComponent, THY_LIST_OPTION_PARENT_COMPONENT, ThyListLayout, ThyListOptionComponent } from 'ngx-tethys/shared';\nimport { coerceBooleanProperty, dom, helpers, keycodes } from 'ngx-tethys/util';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThySelectionListChange } from './selection.interface';\n\nexport type ThyListSize = 'sm' | 'md' | 'lg';\n\nconst listSizesMap = {\n    sm: 'thy-list-sm'\n};\n\n@Component({\n    selector: 'thy-selection-list,[thy-selection-list]',\n    template: '<ng-content></ng-content>',\n    providers: [\n        UpdateHostClassService,\n        {\n            provide: THY_LIST_OPTION_PARENT_COMPONENT,\n            useExisting: ThySelectionListComponent\n        },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThySelectionListComponent),\n            multi: true\n        }\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThySelectionListComponent implements OnInit, OnDestroy, AfterContentInit, IThyListOptionParentComponent, ControlValueAccessor {\n    private _keyManager: ActiveDescendantKeyManager<ThyListOptionComponent>;\n\n    private _selectionChangesUnsubscribe$ = Subscription.EMPTY;\n\n    private _bindKeyEventUnsubscribe: () => void;\n\n    private _modelValues: any[];\n\n    /** The currently selected options. */\n    selectionModel: SelectionModel<any>;\n\n    disabled: boolean;\n\n    layout: ThyListLayout = 'list';\n\n    @HostBinding(`class.thy-list`) _isList = true;\n\n    @HostBinding(`class.thy-selection-list`) _isSelectionList = true;\n\n    @HostBinding(`class.thy-multiple-selection-list`) multiple = true;\n\n    @HostBinding(`class.thy-grid-list`) isLayoutGrid = false;\n\n    /** The option components contained within this selection-list. */\n    @ContentChildren(ThyListOptionComponent) options: QueryList<ThyListOptionComponent>;\n\n    @Input()\n    set thyMultiple(value: any) {\n        const previousValue = this.multiple;\n        this.multiple = coerceBooleanProperty(value);\n        if (previousValue !== this.multiple) {\n            this._instanceSelectionModel();\n        }\n    }\n\n    @Input() thyBindKeyEventContainer: HTMLElement | ElementRef | string;\n\n    @Input() thyScrollContainer: HTMLElement | ElementRef | string;\n\n    @Input() thyBeforeKeydown: (event?: KeyboardEvent) => boolean;\n\n    @Input() thyUniqueKey: string;\n\n    @Input() thyCompareWith: (o1: any, o2: any) => boolean;\n\n    @Input() set thyLayout(value: ThyListLayout) {\n        this.layout = value;\n        this.isLayoutGrid = value === 'grid';\n    }\n\n    @Input() set thyAutoActiveFirstItem(value: boolean) {\n        this.autoActiveFirstItem = coerceBooleanProperty(value);\n    }\n\n    @Input() set thySize(value: ThyListSize) {\n        this._setListSize(value);\n    }\n\n    private spaceEnabled = true;\n    /** Whether keydown space toggle focused option */\n    @Input() set thySpaceKeyEnabled(value: boolean) {\n        this.spaceEnabled = coerceBooleanProperty(value);\n    }\n\n    /** Emits a change event whenever the selected state of an option changes. */\n    @Output() readonly thySelectionChange: EventEmitter<ThySelectionListChange> = new EventEmitter<ThySelectionListChange>();\n\n    private autoActiveFirstItem: boolean;\n\n    private _onTouched: () => void = () => {};\n\n    private _onChange: (value: any) => void = (_: any) => {};\n\n    private _emitChangeEvent(option: ThyListOptionComponent, event: Event) {\n        this.thySelectionChange.emit({\n            source: this,\n            value: option.thyValue,\n            option: option,\n            event: event,\n            selected: this.isSelected(option)\n        });\n    }\n\n    private _emitModelValueChange() {\n        if (this.options) {\n            let selectedValues = this.selectionModel.selected;\n            if (this.thyUniqueKey) {\n                selectedValues = selectedValues.map(selectedValue => {\n                    const selectedOption = this.options.find(option => {\n                        return option.thyValue[this.thyUniqueKey] === selectedValue;\n                    });\n                    if (selectedOption) {\n                        return selectedOption.thyValue;\n                    } else {\n                        return this._modelValues.find(value => {\n                            return value[this.thyUniqueKey] === selectedValue;\n                        });\n                    }\n                });\n            }\n            this._modelValues = selectedValues;\n            let changeValue = selectedValues;\n            if (!this.multiple && selectedValues && selectedValues.length > 0) {\n                changeValue = selectedValues[0];\n            }\n            this._onChange(changeValue);\n        }\n    }\n\n    private _toggleFocusedOption(event: KeyboardEvent): void {\n        if (this._keyManager.activeItem) {\n            this.ngZone.run(() => {\n                this.toggleOption(this._keyManager.activeItem, event);\n            });\n        }\n    }\n\n    private _initializeFocusKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<ThyListOptionComponent>(this.options)\n            .withWrap()\n            // .withTypeAhead()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false);\n    }\n\n    private _instanceSelectionModel() {\n        this.selectionModel = new SelectionModel<any>(this.multiple);\n    }\n\n    private _getElementBySelector(element: HTMLElement | ElementRef | string): HTMLElement {\n        return dom.getHTMLElementBySelector(element, this.elementRef);\n    }\n\n    private _compareValue(value1: any, value2: any) {\n        if (this.thyCompareWith) {\n            const compareFn = this.thyCompareWith as (o1: any, o2: any) => boolean;\n            return compareFn(value1, value2);\n        } else if (this.thyUniqueKey) {\n            return value1 && value1[this.thyUniqueKey] === value2 && value2[this.thyUniqueKey];\n        } else {\n            return value1 === value2;\n        }\n    }\n\n    private _getOptionSelectionValue(option: ThyListOptionComponent) {\n        if (option.thyValue) {\n            return this.thyUniqueKey ? option.thyValue[this.thyUniqueKey] : option.thyValue;\n        } else {\n            return option;\n        }\n    }\n\n    private _setSelectionByValues(values: any[]) {\n        this.selectionModel.clear();\n        values.forEach(value => {\n            if (this.thyUniqueKey) {\n                this.selectionModel.select(value[this.thyUniqueKey]);\n            } else {\n                this.selectionModel.select(value);\n            }\n        });\n    }\n\n    private _setAllOptionsSelected(toIsSelected: boolean) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        let hasChanged = false;\n\n        this.options.forEach(option => {\n            const fromIsSelected = this.selectionModel.isSelected(option.thyValue);\n            if (fromIsSelected !== toIsSelected) {\n                hasChanged = true;\n                this.selectionModel.toggle(option.thyValue);\n            }\n        });\n\n        if (hasChanged) {\n            this._emitModelValueChange();\n        }\n    }\n\n    private _getOptionByValue(value: any) {\n        return this.options.find(option => {\n            return this._compareValue(option.thyValue, value);\n        });\n    }\n\n    private _getActiveOption() {\n        if (this._keyManager.activeItem) {\n            return this._getOptionByValue(this._keyManager.activeItem.thyValue);\n        } else {\n            return null;\n        }\n    }\n\n    private _setListSize(size: ThyListSize) {\n        for (const key in listSizesMap) {\n            if (listSizesMap.hasOwnProperty(key)) {\n                this.updateHostClassService.removeClass(listSizesMap[key]);\n            }\n        }\n        if (size) {\n            this.updateHostClassService.addClass(listSizesMap[size]);\n        }\n    }\n\n    constructor(\n        private renderer: Renderer2,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private updateHostClassService: UpdateHostClassService\n    ) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n\n    ngOnInit() {\n        const bindKeyEventElement = this._getElementBySelector(this.thyBindKeyEventContainer);\n        this.ngZone.runOutsideAngular(() => {\n            this._bindKeyEventUnsubscribe = this.renderer.listen(bindKeyEventElement, 'keydown', this.onKeydown.bind(this));\n        });\n        this._instanceSelectionModel();\n    }\n\n    writeValue(value: any[] | any): void {\n        if (value) {\n            if (this.multiple && !helpers.isArray(value)) {\n                throw new Error(`multiple selection ngModel must be array.`);\n            }\n            if (!this.multiple && helpers.isArray(value)) {\n                throw new Error(`single selection ngModel not be array.`);\n            }\n        }\n        const values = helpers.isArray(value) ? value : value ? [value] : [];\n        this._modelValues = values;\n        if (this.options) {\n            this._setSelectionByValues(values);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this._onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (this.thyBeforeKeydown) {\n            // stop key down event\n            const isContinue = this.thyBeforeKeydown(event);\n            if (!isContinue) {\n                return;\n            }\n        }\n        const keyCode = event.keyCode || event.which;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n\n        switch (keyCode) {\n            case keycodes.SPACE:\n            case keycodes.ENTER:\n                if (keyCode === keycodes.SPACE && !this.spaceEnabled) {\n                    return;\n                }\n                this._toggleFocusedOption(event);\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n            default:\n                manager.onKeydown(event);\n        }\n        if (\n            (keyCode === keycodes.UP_ARROW || keyCode === keycodes.DOWN_ARROW) &&\n            event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex\n        ) {\n            this._toggleFocusedOption(event);\n        }\n    }\n\n    toggleOption(option: ThyListOptionComponent, event?: Event) {\n        if (option && !option.disabled) {\n            this.selectionModel.toggle(this._getOptionSelectionValue(option));\n            // Emit a change event because the focused option changed its state through user\n            // interaction.\n            this._emitModelValueChange();\n            this._emitChangeEvent(option, event);\n        }\n    }\n\n    setActiveOption(option: ThyListOptionComponent) {\n        this._keyManager.updateActiveItem(option); // .updateActiveItemIndex(this._getOptionIndex(option));\n    }\n\n    scrollIntoView(option: ThyListOptionComponent) {\n        const scrollContainerElement = dom.getHTMLElementBySelector(this.thyScrollContainer, this.elementRef);\n        ScrollToService.scrollToElement(option.element.nativeElement, scrollContainerElement);\n    }\n\n    isSelected(option: ThyListOptionComponent) {\n        return this.selectionModel.isSelected(this._getOptionSelectionValue(option));\n    }\n\n    clearActiveItem() {\n        if (this._keyManager.activeItem) {\n            this._keyManager.setActiveItem(-1);\n        }\n    }\n\n    determineClearActiveItem() {\n        if (!this._getActiveOption()) {\n            this.clearActiveItem();\n        }\n    }\n\n    /** Selects all of the options. */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n\n    /** Deselects all of the options. */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n\n    ngAfterContentInit(): void {\n        this._initializeFocusKeyManager();\n        this.options.changes.pipe(startWith(true)).subscribe(() => {\n            if (this.autoActiveFirstItem) {\n                if (!this._keyManager.activeItem || this.options.toArray().indexOf(this._keyManager.activeItem) < 0) {\n                    this._keyManager.setFirstItemActive();\n                }\n            }\n        });\n\n        // if (this._tempValues) {\n        //     this._setSelectionByValues(this._tempValues);\n        //     this._tempValues = null;\n        // }\n    }\n\n    ngOnDestroy() {\n        this._selectionChangesUnsubscribe$.unsubscribe();\n        if (this._bindKeyEventUnsubscribe) {\n            this._bindKeyEventUnsubscribe();\n        }\n    }\n}\n","import { Component, Input, HostBinding, ChangeDetectionStrategy, TemplateRef, ContentChild } from '@angular/core';\n\n@Component({\n    selector: 'thy-list-item-meta,[thy-list-item-meta]',\n    templateUrl: './list-item-meta.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyListItemMetaComponent {\n    @Input() thyAvatar: string;\n\n    @Input() thyTitle: string;\n\n    @Input() thyDescription: string;\n\n    @ContentChild('metaAvatar')\n    public avatarTemplateRef: TemplateRef<any>;\n\n    @ContentChild('metaTitle')\n    public titleTemplateRef: TemplateRef<any>;\n\n    @ContentChild('metaDescription')\n    public descriptionTemplateRef: TemplateRef<any>;\n\n    @HostBinding('class') className = `thy-list-item-meta`;\n\n    constructor() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyListComponent } from './list.component';\nimport { ThyListItemComponent } from './list-item.component';\nimport { ThySelectionListComponent } from './selection/selection-list';\n// import { ThyListOptionComponent } from './option/option';\nimport { ThyOptionModule } from 'ngx-tethys/shared';\nimport { ThyListItemMetaComponent } from './list-item-meta.component';\nimport { ThyAvatarModule } from 'ngx-tethys/avatar';\n\n@NgModule({\n    declarations: [ThyListComponent, ThyListItemComponent, ThySelectionListComponent, ThyListItemMetaComponent],\n    imports: [CommonModule, ThyOptionModule, ThyAvatarModule],\n    exports: [ThyListComponent, ThyListItemComponent, ThySelectionListComponent, ThyListItemMetaComponent, ThyOptionModule]\n})\nexport class ThyListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}