{"version":3,"file":"ngx-tethys-tooltip.js","sources":["../../src/tooltip/interface.ts","../../src/tooltip/tooltip-animations.ts","../../src/tooltip/tooltip.component.ts","../../src/tooltip/tooltip.config.ts","../../src/tooltip/tooltip.directive.ts","../../src/tooltip/tooltip.module.ts","../../src/tooltip/tooltip.service.ts","../../src/tooltip/ngx-tethys-tooltip.ts"],"sourcesContent":["export type ThyTooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\nexport type ThyTooltipVisibility = 'initial' | 'visible' | 'hidden';\n\nexport interface ThyTooltipOptions {\n    showDelay: number;\n    hideDelay: number;\n    touchendHideDelay: number;\n    // position?: ThyTooltipPosition;\n}\n\nexport const DEFAULT_TOOLTIP_OPTIONS: ThyTooltipOptions = {\n    showDelay: 200,\n    hideDelay: 100,\n    touchendHideDelay: 1500\n};\n","import { animate, AnimationTriggerMetadata, keyframes, state, style, transition, trigger } from '@angular/animations';\n\n// 'cubic-bezier(0, 0, 0.2, 1)';\n// cubic-bezier(.17, .86, .73, .14)\nconst CUBIC_BEZIER = 'cubic-bezier(0.08, 0.82, 0.17, 1)';\n\n/**\n * Animations used by ThyTooltip.\n * @docs-private\n */\nexport const thyTooltipAnimations: {\n    readonly tooltipState: AnimationTriggerMetadata;\n} = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition(\n            '* => visible',\n            animate(\n                `200ms ${CUBIC_BEZIER}`,\n                keyframes([\n                    style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n                    style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n                    style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n                ])\n            )\n        ),\n        transition('* => hidden', animate(`100ms ${CUBIC_BEZIER}`, style({ opacity: 0 })))\n    ])\n};\n","import {\n    Component,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    HostBinding,\n    ElementRef,\n    TemplateRef,\n    OnInit\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { AnimationEvent } from '@angular/animations';\n\nimport { ThyTooltipVisibility } from './interface';\nimport { thyTooltipAnimations } from './tooltip-animations';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { coerceArray } from 'ngx-tethys/util';\n\n@Component({\n    selector: 'thy-tooltip',\n    templateUrl: './tooltip.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [thyTooltipAnimations.tooltipState],\n    host: {\n        '[@state]': 'visibility',\n        '(@state.start)': 'animationStart()',\n        '(@state.done)': 'animationDone($event)'\n    },\n    providers: [UpdateHostClassService]\n})\nexport class ThyTooltipComponent implements OnInit {\n    @HostBinding(`class.thy-tooltip`) addTooltipContainerClass = true;\n\n    _content: string | TemplateRef<HTMLElement>;\n\n    data: any;\n\n    private readonly onHide: Subject<void> = new Subject();\n\n    private closeOnInteraction = false;\n\n    visibility: ThyTooltipVisibility = 'initial';\n\n    showTimeoutId: number | null | any;\n\n    hideTimeoutId: number | null | any;\n\n    tooltipClasses: string[] = [];\n\n    isTemplateRef = false;\n\n    get content() {\n        return this._content;\n    }\n\n    set content(value: string | TemplateRef<HTMLElement>) {\n        this._content = value;\n        this.isTemplateRef = value instanceof TemplateRef;\n    }\n\n    private updateClasses() {\n        let classes: string[] = [];\n\n        if (this.tooltipClasses) {\n            classes = classes.concat(this.tooltipClasses);\n        }\n\n        this.updateHostClassService.updateClass(classes);\n    }\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        private updateHostClassService: UpdateHostClassService,\n        elementRef: ElementRef<HTMLElement>\n    ) {\n        this.updateHostClassService.initializeElement(elementRef);\n    }\n\n    ngOnInit() {}\n\n    markForCheck(): void {\n        this.changeDetectorRef.markForCheck();\n    }\n\n    isVisible() {\n        return this.visibility === 'visible';\n    }\n\n    show(delay: number): void {\n        // Cancel the delayed hide if it is scheduled\n        if (this.hideTimeoutId) {\n            clearTimeout(this.hideTimeoutId);\n            this.hideTimeoutId = null;\n        }\n\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this.closeOnInteraction = true;\n        this.showTimeoutId = setTimeout(() => {\n            this.visibility = 'visible';\n            this.showTimeoutId = null;\n            this.markForCheck();\n        }, delay);\n    }\n\n    hide(delay: number): void {\n        // Cancel the delayed show if it is scheduled\n        if (this.showTimeoutId) {\n            clearTimeout(this.showTimeoutId);\n            this.showTimeoutId = null;\n        }\n\n        this.hideTimeoutId = setTimeout(() => {\n            this.visibility = 'hidden';\n            this.hideTimeoutId = null;\n            this.markForCheck();\n        }, delay);\n    }\n\n    animationStart() {\n        this.closeOnInteraction = false;\n    }\n\n    animationDone(event: AnimationEvent): void {\n        const toState = event.toState as ThyTooltipVisibility;\n        if (toState === 'hidden' && !this.isVisible()) {\n            this.onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this.closeOnInteraction = true;\n        }\n    }\n\n    afterHidden(): Observable<void> {\n        return this.onHide.asObservable();\n    }\n\n    setTooltipClass(classes: string | string[]) {\n        this.tooltipClasses = coerceArray(classes);\n        this.updateClasses();\n        // this.markForCheck();\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport class ThyTooltipConfig {\n    offset: number;\n    tooltipPin: boolean;\n    scrollThrottleSeconds: number;\n    tooltipPanelClass: string;\n}\n\nexport const THY_TOOLTIP_DEFAULT_CONFIG_TOKEN = new InjectionToken<ThyTooltipConfig>('thy-tooltip-default-config');\n\nexport const thyTooltipDefaultConfig: ThyTooltipConfig = {\n    offset: 4,\n    tooltipPin: false,\n    scrollThrottleSeconds: 20,\n    tooltipPanelClass: 'thy-tooltip-panel'\n};\n\nexport const THY_TOOLTIP_DEFAULT_CONFIG_PROVIDER = {\n    provide: THY_TOOLTIP_DEFAULT_CONFIG_TOKEN,\n    useValue: thyTooltipDefaultConfig\n};\n","import { Directive, ElementRef, ViewContainerRef, NgZone, Input, OnInit, OnDestroy, TemplateRef, Inject } from '@angular/core';\nimport { Overlay, ScrollDispatcher, OverlayRef, ScrollStrategy, FlexibleConnectedPositionStrategy } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { takeUntil, take } from 'rxjs/operators';\n\nimport { ThyTooltipOptions, DEFAULT_TOOLTIP_OPTIONS } from './interface';\nimport { coerceBooleanProperty, isString } from 'ngx-tethys/util';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ThyTooltipComponent } from './tooltip.component';\nimport { getFlexiblePositions, ThyPlacement, ThyOverlayDirectiveBase, ThyOverlayTrigger } from 'ngx-tethys/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { THY_TOOLTIP_DEFAULT_CONFIG_TOKEN, ThyTooltipConfig } from './tooltip.config';\n\n@Directive({\n    selector: '[thyTooltip],[thy-tooltip]',\n    exportAs: 'thyTooltip'\n})\nexport class ThyTooltipDirective extends ThyOverlayDirectiveBase implements OnInit, OnDestroy {\n    private options: ThyTooltipOptions = DEFAULT_TOOLTIP_OPTIONS;\n    private portal: ComponentPortal<ThyTooltipComponent>;\n    private scrollStrategy: ScrollStrategy;\n    private tooltipClass: string | string[];\n\n    tooltipInstance: ThyTooltipComponent;\n\n    panelClassPrefix = 'thy-tooltip';\n\n    touchendHideDelay = this.options.touchendHideDelay;\n\n    private _content: string | TemplateRef<HTMLElement>;\n\n    get content() {\n        return this._content;\n    }\n\n    @Input('thyTooltip') set content(value: string | TemplateRef<HTMLElement>) {\n        // If the content is not a string (e.g. number), convert it to a string and trim it.\n        this._content = value && isString(value) ? `${value}`.trim() : value;\n\n        if (!this._content && this.isTooltipVisible()) {\n            this.hide(0);\n        } else {\n            this.updateTooltipContent();\n        }\n    }\n\n    // tslint:disable-next-line:no-input-rename\n    @Input('thyTooltipPlacement') placement: ThyPlacement = 'top';\n\n    @Input('thyTooltipClass')\n    set thyTooltipClass(value: string | string[]) {\n        this.tooltipClass = value;\n        if (this.tooltipInstance) {\n            this.setTooltipClass(this.tooltipClass);\n        }\n    }\n\n    // tslint:disable-next-line:no-input-rename\n    @Input('thyTooltipShowDelay') showDelay = this.options.showDelay;\n\n    // tslint:disable-next-line:no-input-rename\n    @Input('thyTooltipHideDelay') hideDelay = this.options.hideDelay;\n\n    _trigger: ThyOverlayTrigger = 'hover';\n    // tslint:disable-next-line:no-input-rename\n    @Input('thyTooltipTrigger') set thyTooltipTrigger(value: ThyOverlayTrigger) {\n        this.trigger = value;\n    }\n\n    /** Disables the display of the tooltip. */\n    @Input('thyTooltipDisabled')\n    set thyTooltipDisabled(value: boolean) {\n        this.disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this.disabled) {\n            this.hide(0);\n        }\n    }\n\n    @Input('thyTooltipTemplateContext') data: any;\n\n    @Input('thyTooltipOffset') tooltipOffset: number;\n\n    @Input('thyTooltipPin') tooltipPin: boolean;\n\n    private detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltipInstance = null;\n    }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        const scrollableAncestors = this.scrollDispatcher.getAncestorScrollContainers(this.elementRef);\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay\n            .position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.thy-tooltip-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.ngUnsubscribe$)).subscribe(change => {\n            if (this.tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            positionStrategy: strategy,\n            panelClass: this.thyTooltipConfig.tooltipPanelClass,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.trigger === 'click',\n            backdropClass: 'thy-tooltip-backdrop'\n        });\n\n        this.updatePosition();\n\n        this.overlayRef\n            .detachments()\n            .pipe(takeUntil(this.ngUnsubscribe$))\n            .subscribe(() => this.detach());\n\n        this.overlayRef.backdropClick().subscribe(() => {\n            this.overlayRef.detachBackdrop();\n            this.hide();\n        });\n\n        return this.overlayRef;\n    }\n\n    private updateTooltipContent() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this.tooltipInstance) {\n            this.tooltipInstance.content = this.content;\n            this.tooltipInstance.data = this.data;\n            this.tooltipInstance.markForCheck();\n\n            this.ngZone.onMicrotaskEmpty\n                .asObservable()\n                .pipe(take(1), takeUntil(this.ngUnsubscribe$))\n                .subscribe(() => {\n                    if (this.tooltipInstance) {\n                        this.overlayRef.updatePosition();\n                    }\n                });\n        }\n    }\n\n    /** Returns true if the tooltip is currently visible to the user */\n    public isTooltipVisible(): boolean {\n        return !!this.tooltipInstance && this.tooltipInstance.isVisible();\n    }\n\n    /** Updates the position of the current tooltip. */\n    private updatePosition() {\n        const position = this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const connectionPositions = getFlexiblePositions(\n            this.placement,\n            this.tooltipOffset || this.thyTooltipConfig.offset,\n            this.panelClassPrefix\n        );\n        position.withPositions(connectionPositions);\n    }\n\n    private setTooltipClass(tooltipClass: string | string[]) {\n        if (this.tooltipInstance) {\n            this.tooltipInstance.setTooltipClass(tooltipClass);\n        }\n    }\n\n    constructor(\n        private overlay: Overlay,\n        elementRef: ElementRef<HTMLElement>,\n        private scrollDispatcher: ScrollDispatcher,\n        private viewContainerRef: ViewContainerRef,\n        ngZone: NgZone,\n        platform: Platform,\n        focusMonitor: FocusMonitor,\n        @Inject(THY_TOOLTIP_DEFAULT_CONFIG_TOKEN)\n        private thyTooltipConfig: ThyTooltipConfig\n    ) {\n        super(elementRef, platform, focusMonitor, ngZone);\n        this.tooltipPin = this.thyTooltipConfig.tooltipPin;\n        this.options = DEFAULT_TOOLTIP_OPTIONS;\n        this.scrollStrategy = overlay.scrollStrategies.reposition({\n            scrollThrottle: this.thyTooltipConfig.scrollThrottleSeconds\n        });\n    }\n\n    ngOnInit() {\n        this.initialize();\n    }\n\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show 200ms */\n    show(delay: number = this.showDelay): void {\n        if (\n            this.disabled ||\n            !this.content ||\n            (this.isTooltipVisible() && !this.tooltipInstance.showTimeoutId && !this.tooltipInstance.hideTimeoutId)\n        ) {\n            return;\n        }\n\n        const overlayRef = this.createOverlay();\n\n        this.detach();\n        this.portal = this.portal || new ComponentPortal(ThyTooltipComponent, this.viewContainerRef);\n        this.tooltipInstance = overlayRef.attach(this.portal).instance;\n        this.tooltipInstance\n            .afterHidden()\n            .pipe(takeUntil(this.ngUnsubscribe$))\n            .subscribe(() => this.detach());\n        this.setTooltipClass(this.tooltipClass);\n        this.updateTooltipContent();\n        this.tooltipInstance.show(delay);\n    }\n\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide 100ms */\n    hide(delay: number = this.hideDelay): void {\n        if (this.tooltipInstance) {\n            this.tooltipInstance.hide(delay);\n        }\n    }\n\n    ngOnDestroy() {\n        this.hide(0);\n        this.dispose();\n        if (this.overlayRef) {\n            this.tooltipInstance = null;\n        }\n    }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { ThyTooltipDirective } from './tooltip.directive';\nimport { ThyTooltipComponent } from './tooltip.component';\nimport { THY_TOOLTIP_DEFAULT_CONFIG_PROVIDER } from './tooltip.config';\n\n@NgModule({\n    imports: [A11yModule, CommonModule, OverlayModule],\n    exports: [ThyTooltipDirective],\n    declarations: [ThyTooltipDirective, ThyTooltipComponent],\n    entryComponents: [ThyTooltipComponent],\n    providers: [THY_TOOLTIP_DEFAULT_CONFIG_PROVIDER]\n})\nexport class ThyTooltipModule {}\n","import {\n    Directive,\n    ElementRef,\n    ViewContainerRef,\n    NgZone,\n    Input,\n    OnInit,\n    OnDestroy,\n    TemplateRef,\n    Injectable,\n    Inject\n} from '@angular/core';\nimport { Overlay, ScrollDispatcher } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ThyTooltipDirective } from './tooltip.directive';\nimport { ThyTooltipConfig, THY_TOOLTIP_DEFAULT_CONFIG_TOKEN } from './tooltip.config';\n\n@Injectable()\nexport class TooltipService {\n    thyTooltipDirective: ThyTooltipDirective;\n\n    constructor(\n        private overlay: Overlay,\n        private scrollDispatcher: ScrollDispatcher,\n        private ngZone: NgZone,\n        private platform: Platform,\n        private focusMonitor: FocusMonitor,\n        @Inject(THY_TOOLTIP_DEFAULT_CONFIG_TOKEN)\n        private thyTooltipConfig: ThyTooltipConfig\n    ) {}\n\n    attach(elementRef: ElementRef, viewContainerRef: ViewContainerRef, trigger?: 'hover' | 'focus' | 'click') {\n        this.thyTooltipDirective = new ThyTooltipDirective(\n            this.overlay,\n            elementRef,\n            this.scrollDispatcher,\n            viewContainerRef,\n            this.ngZone,\n            this.platform,\n            this.focusMonitor,\n            this.thyTooltipConfig\n        );\n        if (trigger) {\n            this.thyTooltipDirective.trigger = trigger;\n        }\n\n        this.thyTooltipDirective.ngOnInit();\n    }\n\n    detach() {\n        this.thyTooltipDirective.ngOnDestroy();\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}