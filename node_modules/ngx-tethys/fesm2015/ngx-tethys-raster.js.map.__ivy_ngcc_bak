{"version":3,"file":"ngx-tethys-raster.js","sources":["../../src/raster/thy-row.directive.ts","../../src/raster/thy-col.directive.ts","../../src/raster/module.ts","../../src/raster/ngx-tethys-raster.ts"],"sourcesContent":["import { Directive, HostBinding, Input, Renderer2, OnChanges, OnInit, AfterViewInit, OnDestroy, ElementRef } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { mixinUnsubscribe, MixinBase, Constructor, ThyUnsubscribe } from 'ngx-tethys/core';\nimport { isString } from 'ngx-tethys/util';\n\nexport type ThyRowJustify = 'start' | 'end' | 'center' | 'space-around' | 'space-between';\nexport type ThyRowAlign = 'top' | 'middle' | 'bottom';\n\nconst _MixinBase: Constructor<ThyUnsubscribe> & typeof MixinBase = mixinUnsubscribe(MixinBase);\n@Directive({\n    selector: '[thyRow]',\n    host: {\n        class: 'thy-row'\n    }\n})\nexport class ThyRowDirective extends _MixinBase implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n    @Input() thyGutter: number | { xs?: number; sm?: number; md?: number; lg?: number; xl?: number; xxl?: number };\n    @Input() thyAlign: ThyRowAlign | null = null;\n    @Input() thyJustify: ThyRowJustify | null = null;\n    public actualGutter$ = new ReplaySubject<[number, number]>(1);\n\n    constructor(private renderer: Renderer2, private elementRef: ElementRef) {\n        super();\n    }\n\n    ngOnInit() {\n        this._setGutterStyle();\n    }\n\n    ngOnChanges() {\n        this._setGutterStyle();\n    }\n\n    ngAfterViewInit(): void {}\n\n    private _setGutterStyle() {\n        const [horizontalGutter, verticalGutter] = this._getGutter();\n        this.actualGutter$.next([horizontalGutter, verticalGutter]);\n        const renderGutter = (name: string, gutter: number) => {\n            const nativeElement = this.elementRef.nativeElement;\n            this.renderer.setStyle(nativeElement, name, `-${gutter / 2}px`);\n        };\n        if (horizontalGutter > 0) {\n            renderGutter('margin-left', horizontalGutter);\n            renderGutter('margin-right', horizontalGutter);\n        }\n        if (verticalGutter > 0) {\n            renderGutter('margin-top', verticalGutter);\n            renderGutter('margin-bottom', verticalGutter);\n        }\n    }\n\n    private _getGutter() {\n        if (isString(this.thyGutter)) {\n            throw Error(`thyGutter value can not be string type`);\n        }\n        return [this.thyGutter as number, 0];\n    }\n\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n    }\n}\n","import {\n    Directive,\n    HostBinding,\n    Input,\n    OnChanges,\n    ElementRef,\n    Optional,\n    Host,\n    AfterContentInit,\n    AfterViewInit,\n    OnDestroy,\n    Renderer2,\n    OnInit\n} from '@angular/core';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { ThyRowDirective } from './thy-row.directive';\nimport { takeUntil } from 'rxjs/operators';\nimport { mixinUnsubscribe, MixinBase, Constructor, ThyUnsubscribe } from 'ngx-tethys/core';\n\nexport interface ThyColEmbeddedProperty {\n    span?: number;\n    pull?: number;\n    push?: number;\n    offset?: number;\n    order?: number;\n}\n\nconst _MixinBase: Constructor<ThyUnsubscribe> & typeof MixinBase = mixinUnsubscribe(MixinBase);\n\n@Directive({\n    selector: '[thyCol]',\n    providers: [UpdateHostClassService],\n    host: {\n        class: 'thy-col'\n    }\n})\nexport class ThyColDirective extends _MixinBase implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n    @Input() thyFlex: string | number | null = null;\n    @Input() thySpan: number | null = 24;\n    @Input() thyOrder: number | null = null;\n    @Input() thyOffset: number | null = null;\n    @Input() thyPush: number | null = null;\n    @Input() thyPull: number | null = null;\n    @Input() thyXs: number | ThyColEmbeddedProperty | null = null;\n    @Input() thySm: number | ThyColEmbeddedProperty | null = null;\n    @Input() thyMd: number | ThyColEmbeddedProperty | null = null;\n    @Input() thyLg: number | ThyColEmbeddedProperty | null = null;\n    @Input() thyXl: number | ThyColEmbeddedProperty | null = null;\n    @Input() thyXXl: number | ThyColEmbeddedProperty | null = null;\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private updateHostClassService: UpdateHostClassService,\n        @Optional() @Host() public thyRowDirective: ThyRowDirective\n    ) {\n        super();\n        this.updateHostClassService.initializeElement(this.elementRef);\n    }\n\n    ngOnInit() {\n        this._setHostClassMap();\n    }\n\n    ngOnChanges(changes: import('@angular/core').SimpleChanges): void {\n        this._setHostClassMap();\n    }\n\n    ngAfterViewInit(): void {\n        if (this.thyRowDirective) {\n            this.thyRowDirective.actualGutter$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe(([horizontalGutter, verticalGutter]) => {\n                const renderGutter = (name: string, gutter: number) => {\n                    const nativeElement = this.elementRef.nativeElement;\n                    this.renderer.setStyle(nativeElement, name, `${gutter / 2}px`);\n                };\n                if (horizontalGutter > 0) {\n                    renderGutter('padding-left', horizontalGutter);\n                    renderGutter('padding-right', horizontalGutter);\n                }\n                if (verticalGutter > 0) {\n                    renderGutter('padding-top', verticalGutter);\n                    renderGutter('padding-bottom', verticalGutter);\n                }\n            });\n        }\n    }\n\n    private _setHostClassMap() {\n        this.updateHostClassService.updateClassByMap({\n            [`thy-col-${this.thySpan}`]: true\n        });\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { ThyRowDirective } from './thy-row.directive';\nimport { ThyColDirective } from './thy-col.directive';\n\n@NgModule({\n    declarations: [ThyRowDirective, ThyColDirective],\n    exports: [ThyRowDirective, ThyColDirective],\n    imports: []\n\n})\n\nexport class ThyRasterModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["_MixinBase"],"mappings":"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"}