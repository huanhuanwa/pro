import { Directive, Input, HostListener, Component, ViewEncapsulation, HostBinding, ElementRef, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ThyPopover, ThyPopoverModule } from 'ngx-tethys/popover';
import { coerceBooleanProperty, camelCase } from 'ngx-tethys/util';
import { fromEvent } from 'rxjs';
import { debounceTime, shareReplay, takeUntil } from 'rxjs/operators';
import { UpdateHostClassService, mixinUnsubscribe, MixinBase } from 'ngx-tethys/core';
import { ThyPositioningService } from 'ngx-tethys/positioning';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/popover';
import * as ɵngcc2 from 'ngx-tethys/core';
import * as ɵngcc3 from 'ngx-tethys/positioning';

const _c0 = ["*"];
var ActionEnum;
(function (ActionEnum) {
    ActionEnum["click"] = "click";
    ActionEnum["contextmenu"] = "contextmenu";
})(ActionEnum || (ActionEnum = {}));
class ThyActionMenuToggleDirective {
    constructor(thyPopover) {
        this.thyPopover = thyPopover;
        this._action = ActionEnum.click;
        this._stopPropagation = false;
        this._thyContainerClass = '';
    }
    set thyActionMenuToggle(value) {
        this._templateRef = value;
    }
    set thyPlacement(value) {
        this._placement = value;
    }
    set thyAction(value) {
        this._action = value;
    }
    set thyStopPropagation(value) {
        this._stopPropagation = coerceBooleanProperty(value);
    }
    set thyContainerClass(value) {
        this._thyContainerClass = value;
    }
    onClick(event) {
        if (this._action === ActionEnum.click) {
            this._show.bind(this)(event);
        }
    }
    onRightClick(event) {
        if (this._action === ActionEnum.contextmenu) {
            this._show.bind(this)(event);
            return false;
        }
        return true;
    }
    _show(event) {
        if (this._stopPropagation) {
            event.stopPropagation();
        }
        this.thyPopover.open(this._templateRef, {
            origin: event.currentTarget,
            insideClosable: true,
            placement: this._placement ? camelCase(this._placement.split(' ')) : 'bottomLeft',
            panelClass: this._thyContainerClass,
            originActiveClass: this.thyOriginActiveClass
        });
    }
}
ThyActionMenuToggleDirective.ɵfac = function ThyActionMenuToggleDirective_Factory(t) { return new (t || ThyActionMenuToggleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyPopover)); };
ThyActionMenuToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuToggleDirective, selectors: [["", "thyActionMenuToggle", ""]], hostBindings: function ThyActionMenuToggleDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ThyActionMenuToggleDirective_click_HostBindingHandler($event) { return ctx.onClick($event); })("contextmenu", function ThyActionMenuToggleDirective_contextmenu_HostBindingHandler($event) { return ctx.onRightClick($event); });
    } }, inputs: { thyActionMenuToggle: "thyActionMenuToggle", thyPlacement: "thyPlacement", thyAction: "thyAction", thyStopPropagation: "thyStopPropagation", thyContainerClass: "thyContainerClass", thyOriginActiveClass: "thyOriginActiveClass" } });
ThyActionMenuToggleDirective.ctorParameters = () => [
    { type: ThyPopover }
];
ThyActionMenuToggleDirective.propDecorators = {
    thyActionMenuToggle: [{ type: Input }],
    thyPlacement: [{ type: Input }],
    thyAction: [{ type: Input }],
    thyStopPropagation: [{ type: Input }],
    thyContainerClass: [{ type: Input }],
    thyOriginActiveClass: [{ type: Input }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],
    onRightClick: [{ type: HostListener, args: ['contextmenu', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuToggleDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuToggle]'
            }]
    }], function () { return [{ type: ɵngcc1.ThyPopover }]; }, { thyActionMenuToggle: [{
            type: Input
        }], thyPlacement: [{
            type: Input
        }], thyAction: [{
            type: Input
        }], thyStopPropagation: [{
            type: Input
        }], thyContainerClass: [{
            type: Input
        }], onClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }], onRightClick: [{
            type: HostListener,
            args: ['contextmenu', ['$event']]
        }], thyOriginActiveClass: [{
            type: Input
        }] }); })();

class ThyActionMenuComponent {
    constructor() {
        this.className = true;
        this.themeClassName = false;
        this.styleWidth = '';
    }
    set thyTheme(value) {
        this.themeClassName = value === 'group';
    }
    set thyWidth(value) {
        this.styleWidth = value;
    }
}
ThyActionMenuComponent.ɵfac = function ThyActionMenuComponent_Factory(t) { return new (t || ThyActionMenuComponent)(); };
ThyActionMenuComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyActionMenuComponent, selectors: [["thy-action-menu"]], hostVars: 6, hostBindings: function ThyActionMenuComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("width", ctx.styleWidth);
        ɵngcc0.ɵɵclassProp("action-menu", ctx.className)("action-menu--group", ctx.themeClassName);
    } }, inputs: { thyTheme: "thyTheme", thyWidth: "thyWidth" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ThyActionMenuComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
ThyActionMenuComponent.ctorParameters = () => [];
ThyActionMenuComponent.propDecorators = {
    className: [{ type: HostBinding, args: ['class.action-menu',] }],
    themeClassName: [{ type: HostBinding, args: ['class.action-menu--group',] }],
    styleWidth: [{ type: HostBinding, args: ['style.width',] }],
    thyTheme: [{ type: Input }],
    thyWidth: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuComponent, [{
        type: Component,
        args: [{
                selector: 'thy-action-menu',
                template: `
        <ng-content></ng-content>
    `,
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return []; }, { className: [{
            type: HostBinding,
            args: ['class.action-menu']
        }], themeClassName: [{
            type: HostBinding,
            args: ['class.action-menu--group']
        }], styleWidth: [{
            type: HostBinding,
            args: ['style.width']
        }], thyTheme: [{
            type: Input
        }], thyWidth: [{
            type: Input
        }] }); })();
class ThyActionMenuGroupComponent {
    constructor() {
        this.isGroup = true;
    }
    set thyTitle(value) {
        this.groupTitle = value;
    }
}
ThyActionMenuGroupComponent.ɵfac = function ThyActionMenuGroupComponent_Factory(t) { return new (t || ThyActionMenuGroupComponent)(); };
ThyActionMenuGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyActionMenuGroupComponent, selectors: [["thy-action-menu-group"]], hostVars: 2, hostBindings: function ThyActionMenuGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("action-menu-group", ctx.isGroup);
    } }, inputs: { thyTitle: "thyTitle" }, ngContentSelectors: _c0, decls: 3, vars: 1, consts: [[1, "action-menu-group-title"]], template: function ThyActionMenuGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(2);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.groupTitle);
    } }, encapsulation: 2 });
ThyActionMenuGroupComponent.ctorParameters = () => [];
ThyActionMenuGroupComponent.propDecorators = {
    isGroup: [{ type: HostBinding, args: ['class.action-menu-group',] }],
    thyTitle: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuGroupComponent, [{
        type: Component,
        args: [{
                selector: 'thy-action-menu-group',
                template: `
        <div class="action-menu-group-title">{{ groupTitle }}</div>
        <ng-content></ng-content>
    `
            }]
    }], function () { return []; }, { isGroup: [{
            type: HostBinding,
            args: ['class.action-menu-group']
        }], thyTitle: [{
            type: Input
        }] }); })();
class ThyActionMenuDividerComponent {
    constructor() {
        this.className = true;
        this.isCrossing = false;
    }
    set thyTitle(value) {
        this.title = value;
    }
    set thyType(value) {
        this.isCrossing = value === 'crossing';
    }
}
ThyActionMenuDividerComponent.ɵfac = function ThyActionMenuDividerComponent_Factory(t) { return new (t || ThyActionMenuDividerComponent)(); };
ThyActionMenuDividerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyActionMenuDividerComponent, selectors: [["thy-action-menu-divider"]], hostVars: 4, hostBindings: function ThyActionMenuDividerComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("action-menu-divider", ctx.className)("action-menu-divider-crossing", ctx.isCrossing);
    } }, inputs: { thyTitle: "thyTitle", thyType: "thyType" }, decls: 2, vars: 1, consts: [[1, "action-menu-divider-title"]], template: function ThyActionMenuDividerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
    } }, encapsulation: 2 });
ThyActionMenuDividerComponent.ctorParameters = () => [];
ThyActionMenuDividerComponent.propDecorators = {
    className: [{ type: HostBinding, args: ['class.action-menu-divider',] }],
    isCrossing: [{ type: HostBinding, args: ['class.action-menu-divider-crossing',] }],
    thyTitle: [{ type: Input }],
    thyType: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuDividerComponent, [{
        type: Component,
        args: [{
                selector: 'thy-action-menu-divider',
                template: `
        <div class="action-menu-divider-title">{{ title }}</div>
    `
            }]
    }], function () { return []; }, { className: [{
            type: HostBinding,
            args: ['class.action-menu-divider']
        }], isCrossing: [{
            type: HostBinding,
            args: ['class.action-menu-divider-crossing']
        }], thyTitle: [{
            type: Input
        }], thyType: [{
            type: Input
        }] }); })();
class ThyActionMenuDividerTitleDirective {
    constructor() {
        this.className = true;
    }
}
ThyActionMenuDividerTitleDirective.ɵfac = function ThyActionMenuDividerTitleDirective_Factory(t) { return new (t || ThyActionMenuDividerTitleDirective)(); };
ThyActionMenuDividerTitleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuDividerTitleDirective, selectors: [["", "thyActionMenuDividerTitle", ""]], hostVars: 2, hostBindings: function ThyActionMenuDividerTitleDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("action-menu-divider-title", ctx.className);
    } } });
ThyActionMenuDividerTitleDirective.ctorParameters = () => [];
ThyActionMenuDividerTitleDirective.propDecorators = {
    className: [{ type: HostBinding, args: ['class.action-menu-divider-title',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuDividerTitleDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuDividerTitle]'
            }]
    }], function () { return []; }, { className: [{
            type: HostBinding,
            args: ['class.action-menu-divider-title']
        }] }); })();

class ThyActionMenuItemDirective {
    constructor(elementRef, updateHostClassService) {
        this.elementRef = elementRef;
        this.updateHostClassService = updateHostClassService;
        this.className = true;
        this.disabled = false;
        this.danger = false;
        this.success = false;
    }
    set thyDisabled(value) {
        this.disabled = coerceBooleanProperty(value);
    }
    set thyType(value) {
        this[value] = true;
    }
    onClick(event) {
        if (this.disabled) {
            event.stopPropagation();
            event.preventDefault();
        }
    }
    ngOnInit() {
        this.updateHostClassService.initializeElement(this.elementRef);
    }
    updateClass(classes) {
        this.updateHostClassService.updateClass(classes);
    }
    getWidth() {
        return this.elementRef.nativeElement.offsetWidth;
    }
    getElement() {
        return this.elementRef.nativeElement;
    }
    bindMouseenterEvent() {
        return fromEvent(this.elementRef.nativeElement, 'mouseenter').pipe(debounceTime(100), shareReplay());
    }
}
ThyActionMenuItemDirective.ɵfac = function ThyActionMenuItemDirective_Factory(t) { return new (t || ThyActionMenuItemDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UpdateHostClassService)); };
ThyActionMenuItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuItemDirective, selectors: [["", "thyActionMenuItem", ""]], hostVars: 8, hostBindings: function ThyActionMenuItemDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ThyActionMenuItemDirective_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("action-menu-item", ctx.className)("action-menu-item--disabled", ctx.disabled)("action-menu-item--danger", ctx.danger)("action-menu-item--success", ctx.success);
    } }, inputs: { thyDisabled: "thyDisabled", thyType: "thyType" }, features: [ɵngcc0.ɵɵProvidersFeature([UpdateHostClassService])] });
ThyActionMenuItemDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: UpdateHostClassService }
];
ThyActionMenuItemDirective.propDecorators = {
    className: [{ type: HostBinding, args: ['class.action-menu-item',] }],
    disabled: [{ type: HostBinding, args: ['class.action-menu-item--disabled',] }],
    danger: [{ type: HostBinding, args: ['class.action-menu-item--danger',] }],
    success: [{ type: HostBinding, args: ['class.action-menu-item--success',] }],
    thyDisabled: [{ type: Input }],
    thyType: [{ type: Input }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuItemDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuItem]',
                providers: [UpdateHostClassService]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.UpdateHostClassService }]; }, { className: [{
            type: HostBinding,
            args: ['class.action-menu-item']
        }], disabled: [{
            type: HostBinding,
            args: ['class.action-menu-item--disabled']
        }], danger: [{
            type: HostBinding,
            args: ['class.action-menu-item--danger']
        }], success: [{
            type: HostBinding,
            args: ['class.action-menu-item--success']
        }], thyDisabled: [{
            type: Input
        }], thyType: [{
            type: Input
        }], onClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }] }); })();
class ThyActionMenuItemIconDirective {
    constructor() {
        this.className = true;
    }
}
ThyActionMenuItemIconDirective.ɵfac = function ThyActionMenuItemIconDirective_Factory(t) { return new (t || ThyActionMenuItemIconDirective)(); };
ThyActionMenuItemIconDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuItemIconDirective, selectors: [["", "thyActionMenuItemIcon", ""]], hostVars: 2, hostBindings: function ThyActionMenuItemIconDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("icon", ctx.className);
    } } });
ThyActionMenuItemIconDirective.ctorParameters = () => [];
ThyActionMenuItemIconDirective.propDecorators = {
    className: [{ type: HostBinding, args: ['class.icon',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuItemIconDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuItemIcon]'
            }]
    }], function () { return []; }, { className: [{
            type: HostBinding,
            args: ['class.icon']
        }] }); })();
class ThyActionMenuItemNameDirective {
    constructor() {
        this.className = true;
    }
}
ThyActionMenuItemNameDirective.ɵfac = function ThyActionMenuItemNameDirective_Factory(t) { return new (t || ThyActionMenuItemNameDirective)(); };
ThyActionMenuItemNameDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuItemNameDirective, selectors: [["", "thyActionMenuItemName", ""]], hostVars: 2, hostBindings: function ThyActionMenuItemNameDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("name", ctx.className);
    } } });
ThyActionMenuItemNameDirective.ctorParameters = () => [];
ThyActionMenuItemNameDirective.propDecorators = {
    className: [{ type: HostBinding, args: ['class.name',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuItemNameDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuItemName]'
            }]
    }], function () { return []; }, { className: [{
            type: HostBinding,
            args: ['class.name']
        }] }); })();
class ThyActionMenuItemMetaDirective {
    constructor() {
        this.className = true;
    }
}
ThyActionMenuItemMetaDirective.ɵfac = function ThyActionMenuItemMetaDirective_Factory(t) { return new (t || ThyActionMenuItemMetaDirective)(); };
ThyActionMenuItemMetaDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuItemMetaDirective, selectors: [["", "thyActionMenuItemMeta", ""]], hostVars: 2, hostBindings: function ThyActionMenuItemMetaDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("meta", ctx.className);
    } } });
ThyActionMenuItemMetaDirective.ctorParameters = () => [];
ThyActionMenuItemMetaDirective.propDecorators = {
    className: [{ type: HostBinding, args: ['class.meta',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuItemMetaDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuItemMeta]'
            }]
    }], function () { return []; }, { className: [{
            type: HostBinding,
            args: ['class.meta']
        }] }); })();
class ThyActionMenuItemInfoDirective {
    constructor() {
        this.className = true;
    }
}
ThyActionMenuItemInfoDirective.ɵfac = function ThyActionMenuItemInfoDirective_Factory(t) { return new (t || ThyActionMenuItemInfoDirective)(); };
ThyActionMenuItemInfoDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuItemInfoDirective, selectors: [["", "thyActionMenuItemInfo", ""]], hostVars: 2, hostBindings: function ThyActionMenuItemInfoDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("info", ctx.className);
    } } });
ThyActionMenuItemInfoDirective.ctorParameters = () => [];
ThyActionMenuItemInfoDirective.propDecorators = {
    className: [{ type: HostBinding, args: ['class.info',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuItemInfoDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuItemInfo]'
            }]
    }], function () { return []; }, { className: [{
            type: HostBinding,
            args: ['class.info']
        }] }); })();
class ThyActionMenuItemExtendIconDirective {
    constructor() {
        this.className = true;
    }
}
ThyActionMenuItemExtendIconDirective.ɵfac = function ThyActionMenuItemExtendIconDirective_Factory(t) { return new (t || ThyActionMenuItemExtendIconDirective)(); };
ThyActionMenuItemExtendIconDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuItemExtendIconDirective, selectors: [["", "thyActionMenuItemExtendIcon", ""]], hostVars: 2, hostBindings: function ThyActionMenuItemExtendIconDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("extend-icon", ctx.className);
    } } });
ThyActionMenuItemExtendIconDirective.ctorParameters = () => [];
ThyActionMenuItemExtendIconDirective.propDecorators = {
    className: [{ type: HostBinding, args: ['class.extend-icon',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuItemExtendIconDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuItemExtendIcon]'
            }]
    }], function () { return []; }, { className: [{
            type: HostBinding,
            args: ['class.extend-icon']
        }] }); })();
class ThyActionMenuItemActiveDirective {
    constructor() {
        this._isActive = false;
    }
    set thyActionMenuItemActive(value) {
        this._isActive = coerceBooleanProperty(value);
    }
}
ThyActionMenuItemActiveDirective.ɵfac = function ThyActionMenuItemActiveDirective_Factory(t) { return new (t || ThyActionMenuItemActiveDirective)(); };
ThyActionMenuItemActiveDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuItemActiveDirective, selectors: [["", "thyActionMenuItemActive", ""]], hostVars: 2, hostBindings: function ThyActionMenuItemActiveDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("active", ctx._isActive);
    } }, inputs: { thyActionMenuItemActive: "thyActionMenuItemActive" } });
ThyActionMenuItemActiveDirective.ctorParameters = () => [];
ThyActionMenuItemActiveDirective.propDecorators = {
    _isActive: [{ type: HostBinding, args: ['class.active',] }],
    thyActionMenuItemActive: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuItemActiveDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuItemActive]'
            }]
    }], function () { return []; }, { _isActive: [{
            type: HostBinding,
            args: ['class.active']
        }], thyActionMenuItemActive: [{
            type: Input
        }] }); })();

const _MixinBase = mixinUnsubscribe(MixinBase);
class ThyActionMenuSubItemDirective extends _MixinBase {
    constructor(actionMenuItem, positioningService) {
        super();
        this.actionMenuItem = actionMenuItem;
        this.positioningService = positioningService;
        this.className = true;
        this.thyActionMenuSubItem = 'right';
    }
    ngOnInit() {
        let direction = this.thyActionMenuSubItem || 'right';
        if (this.thyActionMenuSubItem === 'auto') {
            this.actionMenuItem.updateClass([`action-menu-item-${direction}`]);
            this.actionMenuItem
                .bindMouseenterEvent()
                .pipe(takeUntil(this.ngUnsubscribe$))
                .subscribe(() => {
                const element = this.actionMenuItem.getElement();
                const offset = this.positioningService.offset(element);
                if (document.documentElement.clientWidth < offset.left + offset.width + offset.width) {
                    direction = 'left';
                }
                else {
                    direction = 'right';
                }
                this.actionMenuItem.updateClass([`action-menu-item-${direction}`]);
            });
        }
        else {
            this.actionMenuItem.updateClass([`action-menu-item-${direction}`]);
        }
    }
    ngOnDestroy() {
        super.ngOnDestroy();
    }
}
ThyActionMenuSubItemDirective.ɵfac = function ThyActionMenuSubItemDirective_Factory(t) { return new (t || ThyActionMenuSubItemDirective)(ɵngcc0.ɵɵdirectiveInject(ThyActionMenuItemDirective), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ThyPositioningService)); };
ThyActionMenuSubItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuSubItemDirective, selectors: [["", "thyActionMenuSubItem", ""]], hostVars: 2, hostBindings: function ThyActionMenuSubItemDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("action-menu-sub-item", ctx.className);
    } }, inputs: { thyActionMenuSubItem: "thyActionMenuSubItem" }, features: [ɵngcc0.ɵɵProvidersFeature([]), ɵngcc0.ɵɵInheritDefinitionFeature] });
ThyActionMenuSubItemDirective.ctorParameters = () => [
    { type: ThyActionMenuItemDirective },
    { type: ThyPositioningService }
];
ThyActionMenuSubItemDirective.propDecorators = {
    className: [{ type: HostBinding, args: ['class.action-menu-sub-item',] }],
    thyActionMenuSubItem: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuSubItemDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuSubItem]',
                providers: []
            }]
    }], function () { return [{ type: ThyActionMenuItemDirective }, { type: ɵngcc3.ThyPositioningService }]; }, { className: [{
            type: HostBinding,
            args: ['class.action-menu-sub-item']
        }], thyActionMenuSubItem: [{
            type: Input
        }] }); })();

class ThyActionMenuModule {
}
ThyActionMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyActionMenuModule });
ThyActionMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyActionMenuModule_Factory(t) { return new (t || ThyActionMenuModule)(); }, providers: [], imports: [[CommonModule, ThyPopoverModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyActionMenuModule, { declarations: function () { return [ThyActionMenuToggleDirective, ThyActionMenuComponent, ThyActionMenuDividerComponent, ThyActionMenuItemDirective, ThyActionMenuItemIconDirective, ThyActionMenuItemNameDirective, ThyActionMenuItemExtendIconDirective, ThyActionMenuItemMetaDirective, ThyActionMenuItemInfoDirective, ThyActionMenuSubItemDirective, ThyActionMenuDividerTitleDirective, ThyActionMenuItemActiveDirective, ThyActionMenuGroupComponent]; }, imports: function () { return [CommonModule, ThyPopoverModule]; }, exports: function () { return [ThyActionMenuToggleDirective, ThyActionMenuComponent, ThyActionMenuDividerComponent, ThyActionMenuItemDirective, ThyActionMenuItemIconDirective, ThyActionMenuItemNameDirective, ThyActionMenuItemExtendIconDirective, ThyActionMenuItemMetaDirective, ThyActionMenuItemInfoDirective, ThyActionMenuSubItemDirective, ThyActionMenuDividerTitleDirective, ThyActionMenuItemActiveDirective, ThyActionMenuGroupComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ThyActionMenuToggleDirective,
                    ThyActionMenuComponent,
                    ThyActionMenuDividerComponent,
                    ThyActionMenuItemDirective,
                    ThyActionMenuItemIconDirective,
                    ThyActionMenuItemNameDirective,
                    ThyActionMenuItemExtendIconDirective,
                    ThyActionMenuItemMetaDirective,
                    ThyActionMenuItemInfoDirective,
                    ThyActionMenuSubItemDirective,
                    ThyActionMenuDividerTitleDirective,
                    ThyActionMenuItemActiveDirective,
                    ThyActionMenuGroupComponent
                ],
                imports: [CommonModule, ThyPopoverModule],
                providers: [],
                exports: [
                    ThyActionMenuToggleDirective,
                    ThyActionMenuComponent,
                    ThyActionMenuDividerComponent,
                    ThyActionMenuItemDirective,
                    ThyActionMenuItemIconDirective,
                    ThyActionMenuItemNameDirective,
                    ThyActionMenuItemExtendIconDirective,
                    ThyActionMenuItemMetaDirective,
                    ThyActionMenuItemInfoDirective,
                    ThyActionMenuSubItemDirective,
                    ThyActionMenuDividerTitleDirective,
                    ThyActionMenuItemActiveDirective,
                    ThyActionMenuGroupComponent
                ]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { ActionEnum, ThyActionMenuComponent, ThyActionMenuDividerComponent, ThyActionMenuDividerTitleDirective, ThyActionMenuGroupComponent, ThyActionMenuItemActiveDirective, ThyActionMenuItemDirective, ThyActionMenuItemExtendIconDirective, ThyActionMenuItemIconDirective, ThyActionMenuItemInfoDirective, ThyActionMenuItemMetaDirective, ThyActionMenuItemNameDirective, ThyActionMenuModule, ThyActionMenuSubItemDirective, ThyActionMenuToggleDirective };

//# sourceMappingURL=ngx-tethys-action-menu.js.map