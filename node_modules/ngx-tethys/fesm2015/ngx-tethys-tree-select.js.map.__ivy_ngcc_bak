{"version":3,"file":"ngx-tethys-tree-select.js","sources":["../../src/tree-select/tree-select.component.ts","../../src/tree-select/tree-select-nodes.component.ts","../../src/tree-select/module.ts","../../src/tree-select/ngx-tethys-tree-select.ts"],"sourcesContent":["import { getFlexiblePositions } from 'ngx-tethys/core';\nimport { ThyTreeNode } from 'ngx-tethys/tree';\nimport { isArray, isObject, produce, warnDeprecation } from 'ngx-tethys/util';\nimport { Observable, of } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport {\n    Component,\n    ContentChild,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    HostListener,\n    Input,\n    NgZone,\n    OnInit,\n    Renderer2,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThyTreeSelectNode, ThyTreeSelectType } from './tree-select.class';\n\ntype InputSize = 'xs' | 'sm' | 'md' | 'lg' | '';\n\nexport function filterTreeData(treeNodes: ThyTreeSelectNode[], searchText: string, searchKey: string = 'name') {\n    const filterNodes = (node: ThyTreeSelectNode, result: ThyTreeSelectNode[]) => {\n        if (node[searchKey] && node[searchKey].indexOf(searchText) !== -1) {\n            result.push(node);\n            return result;\n        }\n        if (Array.isArray(node.children)) {\n            const nodes = node.children.reduce((previous, current) => filterNodes(current, previous), [] as ThyTreeSelectNode[]);\n            if (nodes.length) {\n                const parentNode = { ...node, children: nodes, expand: true };\n                result.push(parentNode);\n            }\n        }\n        return result;\n    };\n    const treeData = treeNodes.reduce((previous, current) => filterNodes(current, previous), [] as ThyTreeSelectNode[]);\n    return treeData;\n}\n@Component({\n    selector: 'thy-tree-select',\n    templateUrl: './tree-select.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyTreeSelectComponent),\n            multi: true\n        }\n    ]\n})\nexport class ThyTreeSelectComponent implements OnInit, ControlValueAccessor {\n    @HostBinding('class.thy-select-custom') treeSelectClass = true;\n\n    @HostBinding('class.thy-select') isTreeSelect = true;\n\n    // 菜单是否展开\n    @HostBinding('class.menu-is-opened') expandTreeSelectOptions = false;\n\n    @HostBinding('class.thy-select-custom--multiple') isMulti = false;\n\n    public treeNodes: ThyTreeSelectNode[];\n\n    public selectedValue: any;\n\n    public selectedNode: ThyTreeSelectNode;\n\n    public selectedNodes: ThyTreeSelectNode[] = [];\n\n    public flattenTreeNodes: ThyTreeSelectNode[] = [];\n\n    public cdkConnectOverlayWidth = 0;\n\n    public positions: ConnectionPositionPair[];\n\n    public icons: { expand: string; collapse: string; gap?: number } = {\n        expand: 'angle-down',\n        collapse: 'angle-right',\n        gap: 15\n    };\n\n    private initialled = false;\n\n    public valueIsObject = false;\n\n    originTreeNodes: ThyTreeSelectNode[];\n\n    @ContentChild('thyTreeSelectTriggerDisplay')\n    thyTreeSelectTriggerDisplayRef: TemplateRef<any>;\n\n    @ContentChild('treeNodeTemplate')\n    treeNodeTemplateRef: TemplateRef<any>;\n\n    @ViewChild(CdkOverlayOrigin, { static: true }) cdkOverlayOrigin: CdkOverlayOrigin;\n\n    @ViewChild(CdkConnectedOverlay, { static: true }) cdkConnectedOverlay: CdkConnectedOverlay;\n\n    @ViewChild('customDisplayTemplate', { static: true }) customDisplayTemplate: TemplateRef<any>;\n\n    @Input()\n    set thyTreeNodes(value: ThyTreeSelectNode[]) {\n        this.treeNodes = value;\n        this.originTreeNodes = value;\n        if (this.initialled) {\n            this.flattenTreeNodes = this.flattenNodes(this.treeNodes, this.flattenTreeNodes, []);\n            this.setSelectedNodes();\n        }\n    }\n\n    @Input() thyPrimaryKey = '_id';\n\n    @Input() thyShowKey = 'name';\n\n    @Input() thyChildCountKey = 'childCount';\n\n    @Input() thyAllowClear: boolean;\n\n    @Input() thyMultiple = false;\n\n    @Input() thyDisable = false;\n\n    @Input() thyPlaceholder = '请选择节点';\n\n    get placeholder() {\n        return this.thyPlaceholder;\n    }\n\n    @Input() thySize: InputSize;\n\n    @Input() thyEmptyOptionsText = '暂时没有数据可选';\n\n    @Input() thyHiddenNodeKey = 'hidden';\n\n    @Input() thyDisableNodeKey = 'disabled';\n\n    @Input() thyAsyncNode = false;\n\n    @Input() thyShowWholeName = false;\n\n    @Input() thyShowSearch = false;\n\n    @Input()\n    set thyIconType(type: ThyTreeSelectType) {\n        warnDeprecation('This parameter has been deprecation');\n        // if (type === 'especial') {\n        //     this.icons = { expand: 'minus-square', collapse: 'plus-square', gap: 20 };\n        // } else {\n        //     this.icons = { expand: 'caret-right-down', collapse: 'caret-right', gap: 15 };\n        // }\n    }\n\n    @Input() thyHiddenNodeFn: (node: ThyTreeSelectNode) => boolean = (node: ThyTreeSelectNode) => node.hidden;\n\n    @Input() thyDisableNodeFn: (node: ThyTreeSelectNode) => boolean = (node: ThyTreeSelectNode) => node.disabled;\n\n    @Input() thyGetNodeChildren: (node: ThyTreeSelectNode) => Observable<ThyTreeSelectNode> = (node: ThyTreeSelectNode) => of([]);\n\n    // TODO: 是否可以取消选中的node\n    // @Input() thyUnRemoveSelectedNodeFn: Function;\n\n    public onModelChange: Function = () => {};\n\n    public onModelTouch: Function = () => {};\n\n    private _getNgModelType() {\n        if (this.thyMultiple) {\n            this.valueIsObject = !this.selectedValue[0] || isObject(this.selectedValue[0]);\n        } else {\n            this.valueIsObject = isObject(this.selectedValue);\n        }\n    }\n\n    writeValue(value: any): void {\n        this.selectedValue = value;\n\n        if (value) {\n            this._getNgModelType();\n        }\n        this.setSelectedNodes();\n    }\n\n    registerOnChange(fn: any): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onModelTouch = fn;\n    }\n\n    constructor(public elementRef: ElementRef, public renderer: Renderer2, private ngZone: NgZone) {}\n\n    @HostListener('document:click', ['$event'])\n    onDocumentClick(event: Event) {\n        event.stopPropagation();\n        if (!this.elementRef.nativeElement.contains(event.target) && this.expandTreeSelectOptions) {\n            this.expandTreeSelectOptions = false;\n        }\n    }\n\n    ngOnInit() {\n        this.positions = getFlexiblePositions('bottom', 4);\n        this.isMulti = this.thyMultiple;\n        this.flattenTreeNodes = this.flattenNodes(this.treeNodes, this.flattenTreeNodes, []);\n        this.setSelectedNodes();\n        this.initialled = true;\n        this.init();\n    }\n\n    get selectedValueObject() {\n        return this.thyMultiple ? this.selectedNodes : this.selectedNode;\n    }\n\n    searchValue(searchText: string) {\n        this.treeNodes = filterTreeData(this.originTreeNodes, searchText.trim(), this.thyShowKey);\n    }\n\n    public setPosition() {\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.cdkConnectedOverlay.overlayRef.updatePosition();\n            });\n    }\n\n    private init() {\n        this.cdkConnectOverlayWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n    }\n\n    private flattenNodes(\n        nodes: ThyTreeSelectNode[] = [],\n        resultNodes: ThyTreeSelectNode[] = [],\n        parentPrimaryValue: string[] = []\n    ): ThyTreeSelectNode[] {\n        resultNodes = resultNodes.concat(nodes);\n        let nodesLeafs: ThyTreeSelectNode[] = [];\n        (nodes || []).forEach(item => {\n            item.parentValues = parentPrimaryValue;\n            item.level = item.parentValues.length;\n            if (item.children && isArray(item.children)) {\n                const nodeLeafs = this.flattenNodes(item.children, resultNodes, [...parentPrimaryValue, item[this.thyPrimaryKey]]);\n                nodesLeafs = [...nodesLeafs, ...nodeLeafs];\n            }\n        });\n        return [...nodes, ...nodesLeafs];\n    }\n\n    private _findTreeNode(value: string): ThyTreeSelectNode {\n        return (this.flattenTreeNodes || []).find(item => item[this.thyPrimaryKey] === value);\n    }\n\n    getShowNodeName() {\n        if (this.thyShowWholeName) {\n            let wholeName = '';\n            (this.selectedNode.parentValues || []).forEach((item: string, index: number) => {\n                const node = this._findTreeNode(item);\n                wholeName = `${wholeName}${node[this.thyShowKey]} > `;\n            });\n            return `${wholeName}${this.selectedNode[this.thyShowKey]}`;\n        } else {\n            return this.selectedNode[this.thyShowKey];\n        }\n    }\n\n    private setSelectedNodes() {\n        if (this.selectedValue) {\n            // 多选数据初始化\n            if (this.thyMultiple) {\n                if (this.selectedValue.length > 0) {\n                    if (this.valueIsObject && Object.keys(this.selectedValue[0]).indexOf(this.thyPrimaryKey) >= 0) {\n                        this.selectedNodes = this.selectedValue.map((item: any) => {\n                            return this._findTreeNode(item[this.thyPrimaryKey]);\n                        });\n                    } else {\n                        this.selectedNodes = this.selectedValue.map((item: any) => {\n                            return this._findTreeNode(item);\n                        });\n                    }\n                }\n            } else {\n                // 单选数据初始化\n                if (this.valueIsObject) {\n                    if (Object.keys(this.selectedValue).indexOf(this.thyPrimaryKey) >= 0) {\n                        this.selectedNode = this._findTreeNode(this.selectedValue[this.thyPrimaryKey]);\n                    }\n                } else {\n                    this.selectedNode = this._findTreeNode(this.selectedValue);\n                }\n            }\n        } else {\n            this.selectedNodes = [];\n            this.selectedNode = null;\n        }\n    }\n\n    openSelectPop() {\n        if (this.thyDisable) {\n            return;\n        }\n        this.cdkConnectOverlayWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n        this.expandTreeSelectOptions = !this.expandTreeSelectOptions;\n    }\n\n    close() {\n        this.expandTreeSelectOptions = false;\n    }\n\n    clearSelectedValue(event: Event) {\n        event.stopPropagation();\n        this.selectedValue = null;\n        this.selectedNode = null;\n        this.selectedNodes = [];\n        this.onModelChange(this.selectedValue);\n    }\n\n    private _changeSelectValue() {\n        if (this.valueIsObject) {\n            this.selectedValue = this.thyMultiple ? this.selectedNodes : this.selectedNode;\n        } else {\n            this.selectedValue = this.thyMultiple\n                ? this.selectedNodes.map(item => item[this.thyPrimaryKey])\n                : this.selectedNode[this.thyPrimaryKey];\n        }\n        this.onModelChange(this.selectedValue);\n    }\n\n    removeMultipleSelectedNode(event: { item: ThyTreeSelectNode; $event: Event }) {\n        this.removeSelectedNode(event.item, event.$event);\n    }\n\n    // thyMultiple = true 时，移除数据时调用\n    removeSelectedNode(node: ThyTreeSelectNode, event?: Event) {\n        if (event) {\n            event.stopPropagation();\n        }\n        if (this.thyDisable) {\n            return;\n        }\n        if (this.thyMultiple) {\n            this.selectedNodes = produce(this.selectedNodes).remove((item: ThyTreeSelectNode) => {\n                return item[this.thyPrimaryKey] === node[this.thyPrimaryKey];\n            });\n            this._changeSelectValue();\n        }\n    }\n\n    selectNode(node: ThyTreeSelectNode) {\n        if (!this.thyMultiple) {\n            this.selectedNode = node;\n            this.expandTreeSelectOptions = false;\n        } else {\n            if (\n                this.selectedNodes.find(item => {\n                    return item[this.thyPrimaryKey] === node[this.thyPrimaryKey];\n                })\n            ) {\n                this.removeSelectedNode(node);\n            } else {\n                this.selectedNodes = produce(this.selectedNodes).add(node);\n            }\n        }\n        this._changeSelectValue();\n    }\n\n    getNodeChildren(node: ThyTreeSelectNode) {\n        const result = this.thyGetNodeChildren(node);\n        if (result && result.subscribe) {\n            result.pipe().subscribe((data: ThyTreeSelectNode[]) => {\n                const nodes = this.flattenNodes(data, this.flattenTreeNodes, [...node.parentValues, node[this.thyPrimaryKey]]);\n                const otherNodes = nodes.filter((item: ThyTreeNode) => {\n                    return !this.flattenTreeNodes.find(hasItem => {\n                        return hasItem[this.thyPrimaryKey] === item[this.thyPrimaryKey];\n                    });\n                });\n                this.flattenTreeNodes = [...this.flattenTreeNodes, ...otherNodes];\n                node.children = data;\n            });\n            return result;\n        }\n    }\n}\n","import { BehaviorSubject, Subject } from 'rxjs';\nimport { Component, OnInit, HostBinding, Input } from '@angular/core';\nimport { ThyTreeSelectComponent } from './tree-select.component';\nimport { ThyTreeSelectNode } from './tree-select.class';\n\n@Component({\n    selector: 'thy-tree-select-nodes',\n    templateUrl: './tree-select-nodes.component.html'\n})\nexport class ThyTreeSelectNodesComponent implements OnInit {\n    @HostBinding('class') class: string;\n\n    @Input() treeNodes: ThyTreeSelectNode[];\n\n    public primaryKey = this.parent.thyPrimaryKey;\n\n    public showKey = this.parent.thyShowKey;\n\n    public isMultiple = this.parent.thyMultiple;\n\n    public valueIsObject = this.parent.valueIsObject;\n\n    public selectedValue = this.parent.selectedValue;\n\n    public childCountKey = this.parent.thyChildCountKey;\n\n    public treeNodeTemplateRef = this.parent.treeNodeTemplateRef;\n\n    constructor(public parent: ThyTreeSelectComponent) {}\n\n    ngOnInit() {\n        this.class = this.isMultiple ? 'thy-tree-select-dropdown thy-tree-select-dropdown-multiple' : 'thy-tree-select-dropdown';\n    }\n\n    treeNodeIsSelected(node: ThyTreeSelectNode) {\n        if (this.parent.thyMultiple) {\n            return (this.parent.selectedNodes || []).find(item => {\n                return item[this.primaryKey] === node[this.primaryKey];\n            });\n        } else {\n            return this.parent.selectedNode && this.parent.selectedNode[this.primaryKey] === node[this.primaryKey];\n        }\n    }\n\n    treeNodeIsHidden(node: ThyTreeSelectNode) {\n        if (this.parent.thyHiddenNodeKey) {\n            return node[this.parent.thyHiddenNodeKey];\n        }\n        if (this.parent.thyHiddenNodeFn) {\n            return this.parent.thyHiddenNodeFn(node);\n        }\n        return false;\n    }\n\n    treeNodeIsDisable(node: ThyTreeSelectNode) {\n        if (this.parent.thyDisableNodeKey) {\n            return node[this.parent.thyDisableNodeKey];\n        }\n        if (this.parent.thyDisableNodeFn) {\n            return this.parent.thyDisableNodeFn(node);\n        }\n        return false;\n    }\n\n    treeNodeIsExpand(node: ThyTreeSelectNode) {\n        let isSelectedNodeParent = false;\n        if (this.parent.thyMultiple) {\n            isSelectedNodeParent = !!(this.parent.selectedNodes || []).find(item => {\n                return item.parentValues.indexOf(node[this.primaryKey]) > -1;\n            });\n        } else {\n            isSelectedNodeParent = this.parent.selectedNode\n                ? this.parent.selectedNode.parentValues.indexOf(node[this.primaryKey]) > -1\n                : false;\n        }\n        const isExpand = node.expand || (Object.keys(node).indexOf('expand') < 0 && isSelectedNodeParent);\n        node.expand = isExpand;\n        return isExpand;\n    }\n\n    getNodeChildren(node: ThyTreeSelectNode) {\n        return this.parent.getNodeChildren(node);\n    }\n\n    selectTreeNode(event: Event, node: ThyTreeSelectNode) {\n        event.stopPropagation();\n        if (this.treeNodeIsDisable(node)) {\n            return;\n        }\n        this.parent.selectNode(node);\n    }\n\n    nodeExpandToggle(event: Event, node: ThyTreeSelectNode) {\n        event.stopPropagation();\n        if (Object.keys(node).indexOf('expand') > -1) {\n            node.expand = !node.expand;\n        } else {\n            if (this.treeNodeIsExpand(node)) {\n                node.expand = false;\n            } else {\n                node.expand = true;\n            }\n        }\n\n        if (node.expand && this.parent.thyAsyncNode) {\n            this.getNodeChildren(node).subscribe(() => {\n                this.parent.setPosition();\n            });\n        }\n        this.parent.setPosition();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ThyLabelModule } from 'ngx-tethys/label';\nimport { ThyTreeSelectComponent } from './tree-select.component';\nimport { ThyTreeSelectNodesComponent } from './tree-select-nodes.component';\nimport { ThyListModule } from 'ngx-tethys/list';\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyEmptyModule } from 'ngx-tethys/empty';\nimport { ThySelectCommonModule } from 'ngx-tethys/shared';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        OverlayModule,\n        ThyLabelModule,\n        ThyListModule,\n        ThyIconModule,\n        ThyEmptyModule,\n        ThySelectCommonModule\n    ],\n    declarations: [ThyTreeSelectComponent, ThyTreeSelectNodesComponent],\n    exports: [ThyTreeSelectComponent, ThyTreeSelectNodesComponent]\n})\nexport class ThyTreeSelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}