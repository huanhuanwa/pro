{"version":3,"file":"ngx-tethys-positioning.js","sources":["../../src/positioning/positioning.service.ts","../../src/positioning/ngx-tethys-positioning.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, ElementRef, NgZone } from '@angular/core';\nimport { isNumber } from 'ngx-tethys/util';\nimport { NewClientRect } from './client-rect';\n\nexport enum PlacementTypes {\n    left = 'left',\n    right = 'right',\n    center = 'center',\n    top = 'top',\n    bottom = 'bottom'\n}\n\nexport interface PositioningOptions {\n    /** The DOM element, ElementRef, or a selector string of an element which will be moved */\n    attach?: HTMLElement | ElementRef | string;\n\n    /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\n    target?: HTMLElement | ElementRef | string;\n\n    /**\n     * A string of the form 'vert-attachment horiz-attachment' or 'placement'\n     * - placement can be \"top\", \"bottom\", \"left\", \"right\"\n     * not yet supported:\n     * - vert-attachment can be any of 'top', 'middle', 'bottom'\n     * - horiz-attachment can be any of 'left', 'center', 'right'\n     */\n    placement?: string;\n\n    // 直接传入位置，不用根据 attachment target 计算，右击菜单使用\n    position?: {\n        top: number;\n        left: number;\n    };\n\n    /** A string of the form 'vert-offset horiz-offset'\n     * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\n     */\n    offset?: number;\n\n    /** If true component will be attached to body */\n    appendToBody?: boolean;\n\n    /** If true component auto adapt top or bottom */\n    autoAdapt?: boolean;\n}\n\nexport const defaultPositioningOptions: PositioningOptions = {\n    offset: 10,\n    appendToBody: true,\n    placement: 'bottom center'\n};\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyPositioningService {\n    constructor(private ngZone: NgZone) {}\n\n    static getHTMLElement(element: HTMLElement | ElementRef | string): HTMLElement {\n        // it means that we got a selector\n        if (typeof element === 'string') {\n            return document.querySelector(element) as HTMLElement;\n        }\n\n        if (element instanceof ElementRef) {\n            return element.nativeElement;\n        }\n\n        return element as HTMLElement;\n    }\n\n    private autoPosition(targetElPosition: ClientRect, hostElPosition: ClientRect, targetElement: HTMLElement, preferredPosition?: string) {\n        if (\n            (!preferredPosition || preferredPosition === 'right') &&\n            targetElPosition.left + hostElPosition.left - targetElement.offsetWidth < 0\n        ) {\n            return 'right';\n        } else if (\n            (!preferredPosition || preferredPosition === 'top') &&\n            targetElPosition.bottom + hostElPosition.bottom + targetElement.offsetHeight > window.innerHeight\n        ) {\n            return 'top';\n        } else if (\n            (!preferredPosition || preferredPosition === 'bottom') &&\n            targetElPosition.top + hostElPosition.top - targetElement.offsetHeight < 0\n        ) {\n            return 'bottom';\n        } else if (\n            (!preferredPosition || preferredPosition === 'left') &&\n            targetElPosition.right + hostElPosition.right + targetElement.offsetWidth > window.innerWidth\n        ) {\n            return 'left';\n        }\n        return null;\n    }\n\n    private getAllStyles(element: HTMLElement) {\n        return window.getComputedStyle(element);\n    }\n\n    private getStyle(element: HTMLElement, prop: string): string {\n        return (this.getAllStyles(element) as any)[prop];\n    }\n\n    private isStaticPositioned(element: HTMLElement): boolean {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    }\n\n    private offsetParent(element: HTMLElement): HTMLElement {\n        let offsetParentEl = <HTMLElement>element.offsetParent || document.documentElement;\n\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n        }\n\n        return offsetParentEl || document.documentElement;\n    }\n\n    private calculateTopBottomPosition(\n        placementSecondary: string,\n        attachElPosition: ClientRect,\n        targetElPosition: ClientRect,\n        offset: number\n    ): ClientRect {\n        const documentClientHeight = document.documentElement.clientHeight;\n        if (placementSecondary === PlacementTypes.top) {\n            targetElPosition.top = attachElPosition.top;\n            targetElPosition.bottom = null;\n            // Top 对齐时，下面的内容超过了整个屏幕的高度, 为了可以看见全部内容，牺牲 Top 对齐\n            if (targetElPosition.top + targetElPosition.height > documentClientHeight) {\n                targetElPosition.top = documentClientHeight - targetElPosition.height;\n            }\n        } else if (placementSecondary === PlacementTypes.bottom) {\n            targetElPosition.bottom = documentClientHeight - attachElPosition.top - attachElPosition.height;\n            targetElPosition.top = null;\n            // Bottom 对齐时，上面的内容超过了整个屏幕的高度，为了可以看见全部内容，牺牲 Bottom 对齐\n            if (targetElPosition.bottom + targetElPosition.height > documentClientHeight) {\n                targetElPosition.bottom = documentClientHeight - targetElPosition.height;\n            }\n        } else {\n            targetElPosition.top = attachElPosition.top + attachElPosition.height / 2 - targetElPosition.height / 2;\n            // 顶部的内容被遮挡，牺牲居中，让顶部侧内容可见\n            if (targetElPosition.top < 0) {\n                targetElPosition.top = offset;\n            } else if (targetElPosition.top + targetElPosition.height > documentClientHeight) {\n                // 下面的内容被遮挡，牺牲居中，让下方的内容可见\n                targetElPosition.top = documentClientHeight - targetElPosition.height + offset;\n            }\n            targetElPosition.bottom = null;\n        }\n        return targetElPosition;\n    }\n\n    private calculateLeftRightPosition(\n        placementSecondary: string,\n        attachElPosition: ClientRect,\n        targetElPosition: ClientRect,\n        offset: number\n    ): ClientRect {\n        const documentClientWidth = document.documentElement.clientWidth;\n        if (placementSecondary === PlacementTypes.right) {\n            targetElPosition.right = document.documentElement.clientWidth - attachElPosition.left - attachElPosition.width;\n            targetElPosition.left = null;\n            // 右对齐时，左侧的内容超过了整个屏幕的宽度, 为了可以看见全部内容，牺牲右对齐\n            if (targetElPosition.right + targetElPosition.width > documentClientWidth) {\n                targetElPosition.right = documentClientWidth - targetElPosition.width - offset;\n            }\n        } else if (placementSecondary === PlacementTypes.left) {\n            targetElPosition.left = attachElPosition.left;\n            // 左对齐时，右侧的内容超过了整个屏幕的宽度, 为了可以看见全部内容，牺牲左对齐\n            if (targetElPosition.left + targetElPosition.width > documentClientWidth) {\n                targetElPosition.left = documentClientWidth - targetElPosition.width - offset;\n            }\n        } else {\n            targetElPosition.left = attachElPosition.left + attachElPosition.width / 2 - targetElPosition.width / 2;\n            // 左侧的内容被遮挡，牺牲居中，让左侧内容可见\n            if (targetElPosition.left < 0) {\n                targetElPosition.left = offset;\n            } else if (targetElPosition.left + targetElPosition.width > documentClientWidth) {\n                // 右侧的内容被遮挡，牺牲居中，让右侧内容可见\n                targetElPosition.left = documentClientWidth - targetElPosition.width - offset;\n            }\n        }\n        return targetElPosition;\n    }\n\n    private autoAdaptTopBottom(\n        placementPrimary: string,\n        hostElPosition: NewClientRect,\n        targetElPosition: NewClientRect,\n        offset: number,\n        autoAdapt = true\n    ) {\n        if (!autoAdapt) {\n            return;\n        }\n        const documentClientHeight = document.documentElement.clientHeight;\n        if (placementPrimary === 'top') {\n            // 如果 Top 空间不够，则自动适应 Bottom Top 和 Bottom 空间都不够，默认为可视区域Top\n            if (hostElPosition.originBottom - hostElPosition.height - targetElPosition.height < 0) {\n                if (documentClientHeight - hostElPosition.originBottom >= targetElPosition.height) {\n                    targetElPosition.bottom = targetElPosition.bottom - targetElPosition.height - hostElPosition.height - offset;\n                } else {\n                    targetElPosition.bottom = null;\n                    targetElPosition.top = hostElPosition.top - hostElPosition.originTop;\n                }\n            }\n        }\n        if (placementPrimary === 'bottom') {\n            // 如果 Bottom 空间不够，则自动适应 Top，如果 Bottom 和 Top 空间都不够，默认为可视区域Top\n            if (hostElPosition.originBottom + targetElPosition.height > documentClientHeight) {\n                const newTop = hostElPosition.top - targetElPosition.height - offset;\n                if (newTop > hostElPosition.top - hostElPosition.originTop) {\n                    targetElPosition.top = newTop;\n                } else {\n                    targetElPosition.top = hostElPosition.top - hostElPosition.originTop;\n                }\n            }\n        }\n    }\n\n    public position(element: HTMLElement, round = true): NewClientRect {\n        let elPosition: NewClientRect;\n        let parentOffset: NewClientRect = {\n            width: 0,\n            height: 0,\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0\n        };\n\n        if (this.getStyle(element, 'position') === 'fixed') {\n            const bcRect = element.getBoundingClientRect();\n            elPosition = {\n                width: bcRect.width,\n                height: bcRect.height,\n                top: bcRect.top,\n                bottom: bcRect.bottom,\n                left: bcRect.left,\n                right: bcRect.right,\n                originTop: bcRect.top,\n                originBottom: bcRect.bottom,\n                originLeft: bcRect.left,\n                originRight: bcRect.right\n            };\n        } else {\n            const offsetParentEl = this.offsetParent(element);\n\n            elPosition = this.offset(element, false);\n\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n\n        return elPosition;\n    }\n\n    public offset(element: HTMLElement, round = true): NewClientRect {\n        const elBcr = element.getBoundingClientRect();\n        const viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n\n        const elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left,\n            originTop: elBcr.top,\n            originBottom: elBcr.bottom,\n            originLeft: elBcr.left,\n            originRight: elBcr.right\n        };\n\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n\n        return elOffset;\n    }\n\n    /**\n     * 计算弹出层的位置\n     * @param hostElement 被追加的元素\n     * @param targetElement 弹出层内元素\n     * @param options 参数\n     */\n    public calculatePosition(hostElement: HTMLElement, targetElement: HTMLElement, options: PositioningOptions): ClientRect {\n        const { placement, appendToBody, offset, position, autoAdapt } = options;\n        let hostElPosition: NewClientRect = null;\n        // 外部传入已经算好的位置, 需要设置 hostElPosition 宽度和高度为 0，不计算位置，主要使用于右击弹出位置计算\n        if (position) {\n            hostElPosition = {\n                top: position.top || 0,\n                left: position.left || 0,\n                bottom: 0,\n                right: 0,\n                width: 0,\n                height: 0\n            };\n        } else {\n            hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        }\n\n        const targetElStyles = this.getAllStyles(targetElement);\n\n        const documentClientWidth = document.documentElement.clientWidth;\n        const documentClientHeight = document.documentElement.clientHeight;\n\n        let placementPrimary = placement.split(' ')[0] || 'top';\n        const placementSecondary = placement.split(' ')[1] || 'center';\n\n        const targetElBCR = targetElement.getBoundingClientRect();\n        const targetElPosition: NewClientRect = {\n            height: targetElBCR.height || targetElement.offsetHeight,\n            width: targetElBCR.width || targetElement.offsetWidth,\n            top: null,\n            bottom: null,\n            left: null,\n            right: null,\n            originTop: targetElBCR.top,\n            originBottom: targetElBCR.bottom,\n            originLeft: targetElBCR.left,\n            originRight: targetElBCR.right\n        };\n\n        if (placementPrimary === 'auto') {\n            let newPlacementPrimary = this.autoPosition(targetElPosition, hostElPosition, targetElement, placementSecondary);\n            if (!newPlacementPrimary) {\n                newPlacementPrimary = this.autoPosition(targetElPosition, hostElPosition, targetElement);\n            }\n            if (newPlacementPrimary) {\n                placementPrimary = newPlacementPrimary;\n            }\n            targetElement.classList.add(placementPrimary);\n        }\n\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.bottom = documentClientHeight - hostElPosition.top + offset;\n                targetElPosition.top = null;\n                this.autoAdaptTopBottom(placementPrimary, hostElPosition, targetElPosition, offset, autoAdapt);\n                this.calculateLeftRightPosition(placementSecondary, hostElPosition, targetElPosition, offset);\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height + offset;\n                this.autoAdaptTopBottom(placementPrimary, hostElPosition, targetElPosition, offset, autoAdapt);\n                this.calculateLeftRightPosition(placementSecondary, hostElPosition, targetElPosition, offset);\n                break;\n            case 'left':\n                targetElPosition.right = documentClientWidth - hostElPosition.left + offset;\n                targetElPosition.left = null;\n                this.calculateTopBottomPosition(placementSecondary, hostElPosition, targetElPosition, offset);\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width + offset;\n                targetElPosition.right = null;\n                this.calculateTopBottomPosition(placementSecondary, hostElPosition, targetElPosition, offset);\n                break;\n        }\n\n        // targetElPosition.top = Math.round(targetElPosition.top);\n        // targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        // targetElPosition.left = Math.round(targetElPosition.left);\n        // targetElPosition.right = Math.round(targetElPosition.right);\n\n        return targetElPosition;\n    }\n\n    setPosition(options: PositioningOptions): void {\n        const { attach, target } = options;\n        const attachElement = ThyPositioningService.getHTMLElement(attach);\n        const targetElement = ThyPositioningService.getHTMLElement(target);\n        setTimeout(() => {\n            this.ngZone.runOutsideAngular(() => {\n                const pos = this.calculatePosition(attachElement, targetElement, options);\n                if (isNumber(pos.top)) {\n                    targetElement.style.top = `${pos.top}px`;\n                } else if (isNumber(pos.bottom)) {\n                    targetElement.style.bottom = `${pos.bottom}px`;\n                }\n                if (isNumber(pos.left)) {\n                    targetElement.style.left = `${pos.left}px`;\n                } else if (isNumber(pos.right)) {\n                    targetElement.style.right = `${pos.right}px`;\n                }\n            });\n        });\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}