import { CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';
import { formatDate, CommonModule, registerLocaleData } from '@angular/common';
import * as i0 from '@angular/core';
import { EventEmitter, Component, ChangeDetectionStrategy, ElementRef, Renderer2, ViewContainerRef, Input, Output, Injectable, ChangeDetectorRef, NgModule, ViewChild, Directive, forwardRef, Pipe } from '@angular/core';
import localeZhHans from '@angular/common/locales/zh-Hans';
import { FormsModule, NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';
import { TinyDate, sortRangeValue, valueFunctionProp, isTemplateRef, isEmpty, isString, coerceBooleanProperty, warnDeprecation } from 'ngx-tethys/util';
import { fromUnixTime, startOfDay, endOfDay } from 'date-fns';
import { ThyButtonModule } from 'ngx-tethys/button';
import { ThyIconModule } from 'ngx-tethys/icon';
import { ThyTimePickerModule } from 'ngx-tethys/time-picker';
import { __decorate, __metadata } from 'tslib';
import { Subject, fromEvent } from 'rxjs';
import { getFlexiblePositions, InputBoolean } from 'ngx-tethys/core';
import { ThyInputModule } from 'ngx-tethys/input';
import { ThyPopover, ThyPopoverModule } from 'ngx-tethys/popover';
import { tap, mapTo, takeUntil, debounceTime } from 'rxjs/operators';
import { coerceArray } from '@angular/cdk/coercion';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ngx-tethys/button';
import * as ɵngcc3 from 'ngx-tethys/icon';
import * as ɵngcc4 from 'ngx-tethys/time-picker';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from '@angular/cdk/overlay';
import * as ɵngcc7 from 'ngx-tethys/input';
import * as ɵngcc8 from 'ngx-tethys/popover';

function CalendarFooterComponent_div_0_a_1_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 7);
    ɵngcc0.ɵɵlistener("click", function CalendarFooterComponent_div_0_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.changeTimeShowMode("show"); });
    ɵngcc0.ɵɵelement(1, "thy-icon", 8);
    ɵngcc0.ɵɵtext(2, "\u8BBE\u7F6E\u65F6\u95F4 ");
    ɵngcc0.ɵɵelementEnd();
} }
function CalendarFooterComponent_div_0_thy_time_picker_2_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "thy-time-picker", 9);
    ɵngcc0.ɵɵlistener("ngModelChange", function CalendarFooterComponent_div_0_thy_time_picker_2_Template_thy_time_picker_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onSelectTime($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("showMeridian", false)("ngModel", ctx_r2.value == null ? null : ctx_r2.value.nativeDate);
} }
function CalendarFooterComponent_div_0_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function CalendarFooterComponent_div_0_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.onTimeOk(); });
    ɵngcc0.ɵɵtext(1, " \u786E\u5B9A ");
    ɵngcc0.ɵɵelementEnd();
} }
function CalendarFooterComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵlistener("click", function CalendarFooterComponent_div_0_Template_div_click_0_listener($event) { return $event.stopPropagation(); });
    ɵngcc0.ɵɵtemplate(1, CalendarFooterComponent_div_0_a_1_Template, 3, 0, "a", 2);
    ɵngcc0.ɵɵtemplate(2, CalendarFooterComponent_div_0_thy_time_picker_2_Template, 1, 2, "thy-time-picker", 3);
    ɵngcc0.ɵɵelementStart(3, "div", 4);
    ɵngcc0.ɵɵtemplate(4, CalendarFooterComponent_div_0_button_4_Template, 2, 0, "button", 5);
    ɵngcc0.ɵɵelementStart(5, "button", 6);
    ɵngcc0.ɵɵlistener("click", function CalendarFooterComponent_div_0_Template_button_click_5_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onClear(); });
    ɵngcc0.ɵɵtext(6, " \u6E05\u9664 ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isCanTime);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.isShowTime);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r0.isCanTime);
} }
function CalendarHeaderComponent_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 8);
    ɵngcc0.ɵɵlistener("click", function CalendarHeaderComponent_a_2_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.previousYear(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-prev-year-btn");
} }
function CalendarHeaderComponent_a_3_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 9);
    ɵngcc0.ɵɵlistener("click", function CalendarHeaderComponent_a_3_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.previousMonth(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r1.prefixCls, "-prev-month-btn");
} }
function CalendarHeaderComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "a", 10);
    ɵngcc0.ɵɵlistener("click", function CalendarHeaderComponent_ng_container_5_Template_a_click_1_listener() { const selector_r12 = ctx.$implicit; return selector_r12.onClick ? selector_r12.onClick() : null; });
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const selector_r12 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMap(selector_r12.className);
    ɵngcc0.ɵɵpropertyInterpolate("title", selector_r12.title || null);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", selector_r12.label, " ");
} }
function CalendarHeaderComponent_a_6_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 11);
    ɵngcc0.ɵɵlistener("click", function CalendarHeaderComponent_a_6_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.nextMonth(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r3.prefixCls, "-next-month-btn");
} }
function CalendarHeaderComponent_a_7_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 12);
    ɵngcc0.ɵɵlistener("click", function CalendarHeaderComponent_a_7_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.nextYear(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r4.prefixCls, "-next-year-btn");
} }
function CalendarHeaderComponent_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "decade-panel", 13);
    ɵngcc0.ɵɵlistener("valueChange", function CalendarHeaderComponent_ng_container_9_Template_decade_panel_valueChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.onChooseDecade($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("value", ctx_r5.value);
} }
function CalendarHeaderComponent_ng_container_10_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "year-panel", 14);
    ɵngcc0.ɵɵlistener("valueChange", function CalendarHeaderComponent_ng_container_10_Template_year_panel_valueChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.onChooseYear($event); })("decadePanelShow", function CalendarHeaderComponent_ng_container_10_Template_year_panel_decadePanelShow_1_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.changePanel("decade"); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("value", ctx_r6.value)("disabledDate", ctx_r6.disabledYear);
} }
function CalendarHeaderComponent_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "month-panel", 15);
    ɵngcc0.ɵɵlistener("valueChange", function CalendarHeaderComponent_ng_container_11_Template_month_panel_valueChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.onChooseMonth($event); })("yearPanelShow", function CalendarHeaderComponent_ng_container_11_Template_month_panel_yearPanelShow_1_listener() { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r25 = ɵngcc0.ɵɵnextContext(); return ctx_r25.changePanel("year"); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("value", ctx_r7.value)("disabledDate", ctx_r7.disabledMonth);
} }
function DecadePanelComponent_tr_9_td_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 6);
    ɵngcc0.ɵɵlistener("click", function DecadePanelComponent_tr_9_td_1_Template_td_click_0_listener() { const cell_r3 = ctx.$implicit; return cell_r3.onClick(); });
    ɵngcc0.ɵɵelementStart(1, "a");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r3 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", cell_r3.title);
    ɵngcc0.ɵɵproperty("ngClass", cell_r3.classMap);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r2.prefixCls, "-decade");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(cell_r3.content);
} }
function DecadePanelComponent_tr_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 4);
    ɵngcc0.ɵɵtemplate(1, DecadePanelComponent_tr_9_td_1_Template, 3, 6, "td", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", row_r1)("ngForTrackBy", ctx_r0.trackPanelDecade);
} }
function DatePopupComponent_ng_container_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DatePopupComponent_ng_container_4_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c0 = function () { return { partType: "left" }; };
const _c1 = function () { return { partType: "right" }; };
function DatePopupComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DatePopupComponent_ng_container_4_ng_container_1_Template, 1, 0, "ng-container", 6);
    ɵngcc0.ɵɵtemplate(2, DatePopupComponent_ng_container_4_ng_container_2_Template, 1, 0, "ng-container", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r9 = ɵngcc0.ɵɵreference(14);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r9)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction0(4, _c0));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r9)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction0(5, _c1));
} }
function DatePopupComponent_ng_container_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DatePopupComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DatePopupComponent_ng_container_5_ng_container_1_Template, 1, 0, "ng-container", 7);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r5 = ɵngcc0.ɵɵreference(10);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5);
} }
function DatePopupComponent_ng_container_6_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DatePopupComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DatePopupComponent_ng_container_6_ng_container_1_Template, 1, 0, "ng-container", 7);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r5 = ɵngcc0.ɵɵreference(10);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5);
} }
function DatePopupComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "inner-popup", 8);
    ɵngcc0.ɵɵlistener("panelModeChange", function DatePopupComponent_ng_template_7_Template_inner_popup_panelModeChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const partType_r15 = ctx.partType; const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.onPanelModeChange($event, partType_r15); })("dayHover", function DatePopupComponent_ng_template_7_Template_inner_popup_dayHover_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.onDayHover($event); })("selectDate", function DatePopupComponent_ng_template_7_Template_inner_popup_selectDate_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const ctx_r19 = ɵngcc0.ɵɵnextContext(); return ctx_r19.changeValueFromSelect($event); })("headerChange", function DatePopupComponent_ng_template_7_Template_inner_popup_headerChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r17); const partType_r15 = ctx.partType; const ctx_r20 = ɵngcc0.ɵɵnextContext(); return ctx_r20.onHeaderChange($event, partType_r15); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const partType_r15 = ctx.partType;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("showWeek", ctx_r4.showWeek)("panelMode", ctx_r4.getPanelMode(partType_r15))("value", ctx_r4.getValueBySelector(partType_r15))("disabledDate", ctx_r4.disabledDate)("dateRender", ctx_r4.dateRender)("selectedValue", ctx_r4.selectedValue)("hoverValue", ctx_r4.hoverValue)("enablePrev", ctx_r4.enablePrevNext("prev", partType_r15))("enableNext", ctx_r4.enablePrevNext("next", partType_r15));
} }
function DatePopupComponent_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "calendar-footer", 9);
    ɵngcc0.ɵɵlistener("showTimePickerChange", function DatePopupComponent_ng_template_9_Template_calendar_footer_showTimePickerChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); const ctx_r21 = ɵngcc0.ɵɵnextContext(); return ctx_r21.onShowTimePickerChange($event); })("selectTime", function DatePopupComponent_ng_template_9_Template_calendar_footer_selectTime_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.onSelectTime($event); })("clickOk", function DatePopupComponent_ng_template_9_Template_calendar_footer_clickOk_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); const ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24.onClickOk(); })("clickRemove", function DatePopupComponent_ng_template_9_Template_calendar_footer_clickRemove_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); const ctx_r25 = ɵngcc0.ɵɵnextContext(); return ctx_r25.onClickRemove(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("showTime", ctx_r6.showTime)("mustShowTime", ctx_r6.mustShowTime)("value", ctx_r6.value);
} }
function DatePopupComponent_ng_template_11_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DatePopupComponent_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, DatePopupComponent_ng_template_11_ng_container_1_Template, 1, 0, "ng-container", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r3 = ɵngcc0.ɵɵreference(8);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
function DatePopupComponent_ng_template_13_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c2 = function (a0) { return { partType: a0 }; };
function DatePopupComponent_ng_template_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 10);
    ɵngcc0.ɵɵtemplate(2, DatePopupComponent_ng_template_13_ng_container_2_Template, 1, 0, "ng-container", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const partType_r27 = ctx.partType;
    const ctx_r10 = ɵngcc0.ɵɵnextContext();
    const _r3 = ɵngcc0.ɵɵreference(8);
    ɵngcc0.ɵɵclassMapInterpolate3("", ctx_r10.prefixCls, "-range-part ", ctx_r10.prefixCls, "-range-", partType_r27, "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(7, _c2, partType_r27));
} }
function YearPanelComponent_tr_10_td_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 7);
    ɵngcc0.ɵɵlistener("click", function YearPanelComponent_tr_10_td_1_Template_td_click_0_listener() { const yearCell_r3 = ctx.$implicit; return yearCell_r3.disabled ? null : yearCell_r3.onClick(); });
    ɵngcc0.ɵɵelementStart(1, "a");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const yearCell_r3 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", yearCell_r3.title);
    ɵngcc0.ɵɵproperty("ngClass", yearCell_r3.classMap);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r2.prefixCls, "-year");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(yearCell_r3.content);
} }
function YearPanelComponent_tr_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 5);
    ɵngcc0.ɵɵtemplate(1, YearPanelComponent_tr_10_td_1_Template, 3, 6, "td", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", row_r1)("ngForTrackBy", ctx_r0.trackPanelYear);
} }
function MonthTableComponent_tr_2_td_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "a");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const monthCell_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r4.prefixCls, "-month-panel-month");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(monthCell_r3.content);
} }
function MonthTableComponent_tr_2_td_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 4);
    ɵngcc0.ɵɵlistener("click", function MonthTableComponent_tr_2_td_1_Template_td_click_0_listener() { const monthCell_r3 = ctx.$implicit; return monthCell_r3.disabled ? null : monthCell_r3.onClick(); });
    ɵngcc0.ɵɵelementContainerStart(1, 5);
    ɵngcc0.ɵɵtemplate(2, MonthTableComponent_tr_2_td_1_ng_container_2_Template, 3, 4, "ng-container", 6);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const monthCell_r3 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", monthCell_r3.title);
    ɵngcc0.ɵɵproperty("ngClass", monthCell_r3.classMap);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitch", ctx_r2.prefixCls);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "thy-calendar");
} }
function MonthTableComponent_tr_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 2);
    ɵngcc0.ɵɵtemplate(1, MonthTableComponent_tr_2_td_1_Template, 3, 4, "td", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", row_r1)("ngForTrackBy", ctx_r0.trackPanelMonth);
} }
function DateTableComponent_th_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 5);
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2, "x");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate2("", ctx_r0.prefixCls, "-column-header ", ctx_r0.prefixCls, "-week-number-header");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r0.prefixCls, "-column-header-inner");
} }
function DateTableComponent_th_4_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r4.prefixCls, "-column-header-inner");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(cell_r3.veryShort);
} }
function DateTableComponent_th_4_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r3 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r5.prefixCls, "-column-header-inner");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("\u5468", cell_r3.veryShort, "");
} }
function DateTableComponent_th_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 6);
    ɵngcc0.ɵɵtemplate(1, DateTableComponent_th_4_span_1_Template, 2, 4, "span", 7);
    ɵngcc0.ɵɵtemplate(2, DateTableComponent_th_4_span_2_Template, 2, 4, "span", 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r3 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r1.prefixCls, "-column-header");
    ɵngcc0.ɵɵpropertyInterpolate("title", cell_r3.short);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.prefixCls === "thy-calendar");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.prefixCls === "thy-calendar-full");
} }
function DateTableComponent_tr_6_td_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 11);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r8 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r9.prefixCls, "-week-number-cell");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", row_r8.weekNum, " ");
} }
function DateTableComponent_tr_6_td_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 12);
    ɵngcc0.ɵɵlistener("click", function DateTableComponent_tr_6_td_2_Template_td_click_0_listener() { const cell_r12 = ctx.$implicit; return cell_r12.isDisabled ? null : cell_r12.onClick(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const cell_r12 = ctx.$implicit;
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", cell_r12.classMap)("prefixCls", ctx_r10.prefixCls)("cell", cell_r12);
} }
function DateTableComponent_tr_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", 8);
    ɵngcc0.ɵɵtemplate(1, DateTableComponent_tr_6_td_1_Template, 2, 4, "td", 9);
    ɵngcc0.ɵɵtemplate(2, DateTableComponent_tr_6_td_2_Template, 1, 3, "td", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r8 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", row_r8.classMap);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", row_r8.weekNum);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", row_r8.dateCells)("ngForTrackBy", ctx_r2.trackByDateFn);
} }
const _c3 = ["date-table-cell", ""];
function DateTableCellComponent_ng_container_1_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c4 = function (a0) { return { $implicit: a0 }; };
function DateTableCellComponent_ng_container_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DateTableCellComponent_ng_container_1_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.cell.dateCellRender)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c4, ctx_r2.cell.value));
} }
function DateTableCellComponent_ng_container_1_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "span", 4);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r3.cell.dateCellRender, ɵngcc0.ɵɵsanitizeHtml);
} }
function DateTableCellComponent_ng_container_1_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r4.prefixCls, "-date");
    ɵngcc0.ɵɵattribute("aria-selected", ctx_r4.cell.isSelected)("aria-disabled", ctx_r4.cell.isDisabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r4.cell.content, " ");
} }
function DateTableCellComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementContainerStart(1, 0);
    ɵngcc0.ɵɵtemplate(2, DateTableCellComponent_ng_container_1_ng_container_2_Template, 2, 4, "ng-container", 1);
    ɵngcc0.ɵɵtemplate(3, DateTableCellComponent_ng_container_1_ng_container_3_Template, 2, 1, "ng-container", 1);
    ɵngcc0.ɵɵtemplate(4, DateTableCellComponent_ng_container_1_ng_container_4_Template, 3, 6, "ng-container", 2);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitch", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r0.isTemplateRef(ctx_r0.cell.dateCellRender));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r0.isNonEmptyString(ctx_r0.cell.dateCellRender));
} }
function DateTableCellComponent_ng_container_2_ng_container_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DateTableCellComponent_ng_container_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DateTableCellComponent_ng_container_2_ng_container_2_ng_container_1_Template, 1, 0, "ng-container", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r6.cell.fullCellRender)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c4, ctx_r6.cell.value));
} }
function DateTableCellComponent_ng_container_2_ng_template_3_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function DateTableCellComponent_ng_container_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div");
    ɵngcc0.ɵɵtemplate(5, DateTableCellComponent_ng_container_2_ng_template_3_ng_container_5_Template, 1, 0, "ng-container", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r8.prefixCls, "-date-value");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r8.prefixCls, "-date-value-today-text");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r8.prefixCls, "-date-value-text");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r8.cell.content);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r8.prefixCls, "-date-content");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r8.cell.dateCellRender)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(15, _c4, ctx_r8.cell.value));
} }
function DateTableCellComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 5);
    ɵngcc0.ɵɵtemplate(2, DateTableCellComponent_ng_container_2_ng_container_2_Template, 2, 4, "ng-container", 6);
    ɵngcc0.ɵɵtemplate(3, DateTableCellComponent_ng_container_2_ng_template_3_Template, 6, 17, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r7 = ɵngcc0.ɵɵreference(4);
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r1.prefixCls, "-date thy-calendar-full-cell-inner");
    ɵngcc0.ɵɵclassProp("thy-calendar-full-calendar-date-today", ctx_r1.cell.isToday);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.cell.fullCellRender)("ngIfElse", _r7);
} }
const _c5 = ["origin"];
const _c6 = ["pickerInput"];
function ThyPickerComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ThyPickerComponent_ng_template_6_thy_icon_1_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "thy-icon", 9);
    ɵngcc0.ɵɵlistener("click", function ThyPickerComponent_ng_template_6_thy_icon_1_Template_thy_icon_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.onClickClear($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate1("ngClass", "remove-link remove-link-", ctx_r6.size, "");
} }
function ThyPickerComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, ThyPickerComponent_ng_template_6_thy_icon_1_Template, 1, 1, "thy-icon", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵelement(3, "thy-icon", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r4.prefixCls, "-picker-clear");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r4.disabled && !ctx_r4.isEmptyValue(ctx_r4.value) && ctx_r4.allowClear && !ctx_r4.readonly);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r4.prefixCls, "-picker-icon");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("ngClass", "remove-link-", ctx_r4.size, "");
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r4.suffixIcon);
} }
function ThyPickerComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} }
const _c7 = ["*"];
function ThyDatePickerComponent_date_popup_1_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "date-popup", 2);
    ɵngcc0.ɵɵlistener("panelModeChange", function ThyDatePickerComponent_date_popup_1_Template_date_popup_panelModeChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.thyOnPanelChange.emit($event); })("showTimePickerChange", function ThyDatePickerComponent_date_popup_1_Template_date_popup_showTimePickerChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onShowTimePickerChange($event); })("valueChange", function ThyDatePickerComponent_date_popup_1_Template_date_popup_valueChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onValueChange($event); })("calendarChange", function ThyDatePickerComponent_date_popup_1_Template_date_popup_calendarChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onCalendarChange($event); })("resultOk", function ThyDatePickerComponent_date_popup_1_Template_date_popup_resultOk_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onResultOk(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("isRange", ctx_r0.isRange)("showWeek", ctx_r0.showWeek)("panelMode", ctx_r0.thyMode)("defaultPickerValue", ctx_r0.thyDefaultPickerValue)("value", ctx_r0.thyValue)("showTime", ctx_r0.thyShowTime)("mustShowTime", ctx_r0.withTime)("format", ctx_r0.thyFormat)("dateRender", ctx_r0.thyDateRender)("disabledDate", ctx_r0.thyDisabledDate)("minDate", ctx_r0.thyMinDate)("maxDate", ctx_r0.thyMaxDate)("className", ctx_r0.thyPanelClassName);
} }
function ThyMonthPickerComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵelementStart(2, "div", 2);
    ɵngcc0.ɵɵelementStart(3, "calendar-header", 3);
    ɵngcc0.ɵɵlistener("panelModeChange", function ThyMonthPickerComponent_div_1_Template_calendar_header_panelModeChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.onPanelModeChange($event); })("chooseYear", function ThyMonthPickerComponent_div_1_Template_calendar_header_chooseYear_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onChooseValue("year", $event); })("chooseMonth", function ThyMonthPickerComponent_div_1_Template_calendar_header_chooseMonth_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onChooseValue("month", $event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("thy-calendar-picker-container thy-calendar thy-calendar-month ", ctx_r0.thyPanelClassName, "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabledMonth", ctx_r0.thyDisabledDate)("disabledYear", ctx_r0.thyDisabledDate)("panelMode", ctx_r0.panelMode)("value", ctx_r0.thyValue)("enablePrev", true)("enableNext", true);
} }
function ThyRangePickerComponent_date_popup_1_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "date-popup", 2);
    ɵngcc0.ɵɵlistener("panelModeChange", function ThyRangePickerComponent_date_popup_1_Template_date_popup_panelModeChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.thyOnPanelChange.emit($event); })("showTimePickerChange", function ThyRangePickerComponent_date_popup_1_Template_date_popup_showTimePickerChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onShowTimePickerChange($event); })("valueChange", function ThyRangePickerComponent_date_popup_1_Template_date_popup_valueChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onValueChange($event); })("calendarChange", function ThyRangePickerComponent_date_popup_1_Template_date_popup_calendarChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onCalendarChange($event); })("resultOk", function ThyRangePickerComponent_date_popup_1_Template_date_popup_resultOk_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onResultOk(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("isRange", ctx_r0.isRange)("showWeek", ctx_r0.showWeek)("panelMode", ctx_r0.thyMode)("defaultPickerValue", ctx_r0.thyDefaultPickerValue)("value", ctx_r0.thyValue)("showTime", ctx_r0.thyShowTime)("mustShowTime", ctx_r0.withTime)("format", ctx_r0.thyFormat)("dateRender", ctx_r0.thyDateRender)("disabledDate", ctx_r0.thyDisabledDate)("minDate", ctx_r0.thyMinDate)("maxDate", ctx_r0.thyMaxDate)("className", ctx_r0.thyPanelClassName);
} }
function ThyWeekPickerComponent_date_popup_1_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "date-popup", 2);
    ɵngcc0.ɵɵlistener("panelModeChange", function ThyWeekPickerComponent_date_popup_1_Template_date_popup_panelModeChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.thyOnPanelChange.emit($event); })("showTimePickerChange", function ThyWeekPickerComponent_date_popup_1_Template_date_popup_showTimePickerChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onShowTimePickerChange($event); })("valueChange", function ThyWeekPickerComponent_date_popup_1_Template_date_popup_valueChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onValueChange($event); })("calendarChange", function ThyWeekPickerComponent_date_popup_1_Template_date_popup_calendarChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onCalendarChange($event); })("resultOk", function ThyWeekPickerComponent_date_popup_1_Template_date_popup_resultOk_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onResultOk(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("isRange", ctx_r0.isRange)("showWeek", ctx_r0.showWeek)("panelMode", ctx_r0.thyMode)("defaultPickerValue", ctx_r0.thyDefaultPickerValue)("value", ctx_r0.thyValue)("showTime", ctx_r0.thyShowTime)("mustShowTime", ctx_r0.withTime)("format", ctx_r0.thyFormat)("dateRender", ctx_r0.thyDateRender)("disabledDate", ctx_r0.thyDisabledDate)("minDate", ctx_r0.thyMinDate)("maxDate", ctx_r0.thyMaxDate)("className", ctx_r0.thyPanelClassName);
} }
function ThyYearPickerComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵelementStart(2, "div", 2);
    ɵngcc0.ɵɵelementStart(3, "calendar-header", 3);
    ɵngcc0.ɵɵlistener("panelModeChange", function ThyYearPickerComponent_div_1_Template_calendar_header_panelModeChange_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.onPanelModeChange($event); })("chooseYear", function ThyYearPickerComponent_div_1_Template_calendar_header_chooseYear_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onChooseValue("year", $event); })("chooseMonth", function ThyYearPickerComponent_div_1_Template_calendar_header_chooseMonth_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onChooseValue("month", $event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("thy-calendar-picker-container thy-calendar thy-calendar-month ", ctx_r0.thyPanelClassName, "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabledMonth", ctx_r0.thyDisabledDate)("disabledYear", ctx_r0.thyDisabledDate)("panelMode", ctx_r0.panelMode)("value", ctx_r0.thyValue)("enablePrev", true)("enableNext", true);
} }
function instanceOfDateEntry(object) {
    return isSupportDateType(object, 'date') && typeof object.with_time === 'number';
}
function instanceOfRangeEntry(object) {
    return isSupportDateType(object, 'begin') && isSupportDateType(object, 'end');
}
function isSupportDateType(object, key) {
    return typeof object[key] === 'number' || object[key] === null || object[key] instanceof Date;
}

class CalendarFooterComponent {
    constructor(_elementRef, _renderer, _viewContainerRef) {
        this.showTime = false;
        this.mustShowTime = false;
        this.selectTime = new EventEmitter();
        this.clickOk = new EventEmitter();
        this.clickRemove = new EventEmitter();
        this.showTimePickerChange = new EventEmitter();
        this.isShowTime = false;
        this.isCanTime = false;
    }
    ngOnInit() {
        this._initTimeShowMode();
        if (!this.value) {
            this.value = new TinyDate();
        }
    }
    onSelectTime(date) {
        this.selectTime.emit(new TinyDate(date));
    }
    onTimeOk() {
        this.selectTime.emit(this.value);
        this.clickOk.emit();
    }
    onClear() {
        this.value = null;
        this.clickRemove.emit();
    }
    changeTimeShowMode(type) {
        switch (type) {
            case 'can':
                this.isCanTime = true;
                this.isShowTime = false;
                break;
            case 'show':
                this.isCanTime = false;
                this.isShowTime = true;
                break;
        }
        this.showTimePickerChange.emit(this.isShowTime);
    }
    _initTimeShowMode() {
        if (this.mustShowTime) {
            this.changeTimeShowMode('show');
        }
        else {
            if (this.showTime) {
                this.changeTimeShowMode('can');
            }
        }
    }
}
CalendarFooterComponent.ɵfac = function CalendarFooterComponent_Factory(t) { return new (t || CalendarFooterComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };
CalendarFooterComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CalendarFooterComponent, selectors: [["calendar-footer"]], inputs: { showTime: "showTime", mustShowTime: "mustShowTime", value: "value" }, outputs: { selectTime: "selectTime", clickOk: "clickOk", clickRemove: "clickRemove", showTimePickerChange: "showTimePickerChange" }, exportAs: ["calendarFooter"], decls: 1, vars: 1, consts: [["class", "time-picker-section", 3, "click", 4, "ngIf"], [1, "time-picker-section", 3, "click"], ["href", "javascript:;", "class", "link-has-icon time-picker-set-btn", 3, "click", 4, "ngIf"], ["class", "time-picker-wrap", 3, "showMeridian", "ngModel", "ngModelChange", 4, "ngIf"], [1, "time-picker-btn-wrap"], ["class", "time-picker-ok-btn", "thyButton", "primary", "thySize", "sm", 3, "click", 4, "ngIf"], ["thyButton", "link-secondary", "thySize", "sm", 1, "time-picker-clear-btn", 3, "click"], ["href", "javascript:;", 1, "link-has-icon", "time-picker-set-btn", 3, "click"], ["thyIconName", "clock-circle"], [1, "time-picker-wrap", 3, "showMeridian", "ngModel", "ngModelChange"], ["thyButton", "primary", "thySize", "sm", 1, "time-picker-ok-btn", 3, "click"]], template: function CalendarFooterComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, CalendarFooterComponent_div_0_Template, 7, 3, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.isShowTime || ctx.isCanTime);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ThyButtonComponent, ɵngcc3.ThyIconComponent, ɵngcc4.ThyTimePickerComponent, ɵngcc5.NgControlStatus, ɵngcc5.NgModel], encapsulation: 2, changeDetection: 0 });
CalendarFooterComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ViewContainerRef }
];
CalendarFooterComponent.propDecorators = {
    showTime: [{ type: Input }],
    mustShowTime: [{ type: Input }],
    value: [{ type: Input }],
    selectTime: [{ type: Output }],
    clickOk: [{ type: Output }],
    clickRemove: [{ type: Output }],
    showTimePickerChange: [{ type: Output }]
};

function DATE_HELPER_SERVICE_FACTORY() {
    return new DateHelperByDatePipe();
}
class DateHelperService {
    constructor() {
        this.relyOnDatePipe = this instanceof DateHelperByDatePipe;
    }
}
DateHelperService.ɵfac = function DateHelperService_Factory(t) { return new (t || DateHelperService)(); };
DateHelperService.ɵprov = i0.ɵɵdefineInjectable({ factory: DATE_HELPER_SERVICE_FACTORY, token: DateHelperService, providedIn: "root" });
class DateHelperByDatePipe extends DateHelperService {
    getISOWeek(date) {
        return +this.format(date, 'w');
    }
    getFirstDayOfWeek() {
        return 0;
    }
    format(date, formatStr) {
        return date ? formatDate(date, formatStr, 'zh-Hans') : '';
    }
    transCompatFormat(format) {
        return format && format.replace(/Y/g, 'y').replace(/D/g, 'd');
    }
}
DateHelperByDatePipe.ɵprov = i0.ɵɵdefineInjectable({ factory: DATE_HELPER_SERVICE_FACTORY, token: DateHelperByDatePipe, providedIn: "root" });

class CalendarHeaderComponent {
    constructor(dateHelper) {
        this.dateHelper = dateHelper;
        this.enablePrev = true;
        this.enableNext = true;
        this.valueChange = new EventEmitter();
        this.panelModeChange = new EventEmitter();
        this.chooseDecade = new EventEmitter();
        this.chooseYear = new EventEmitter();
        this.chooseMonth = new EventEmitter();
        this.prefixCls = 'thy-calendar';
        // tslint:disable-next-line: max-line-length
        this.yearToMonth = false; // Indicate whether should change to month panel when current is year panel (if referer=month, it should show month panel when choosed a year)
    }
    ngOnInit() {
        if (!this.value) {
            this.value = new TinyDate();
        }
    }
    ngOnChanges(changes) {
        if (changes.value) {
            this.render();
        }
    }
    previousYear() {
        this.gotoYear(-1);
    }
    nextYear() {
        this.gotoYear(1);
    }
    previousMonth() {
        this.gotoMonth(-1);
    }
    nextMonth() {
        this.gotoMonth(1);
    }
    changePanel(mode, value) {
        this.panelModeChange.emit(mode);
        if (value) {
            this.changeValueFromInside(value);
        }
    }
    onChooseDecade(value) {
        this.changePanel('year', value);
        this.chooseDecade.emit(value);
    }
    onChooseYear(value) {
        this.changePanel(this.yearToMonth ? 'month' : 'date', value);
        this.yearToMonth = false; // Clear
        this.chooseYear.emit(value);
    }
    onChooseMonth(value) {
        this.changePanel('date', value);
        this.yearToMonth = false; // Clear
        this.chooseMonth.emit(value);
    }
    changeToMonthPanel() {
        this.changePanel('month');
        this.yearToMonth = true;
    }
    render() {
        if (this.value) {
            this.yearMonthDaySelectors = this.createYearMonthDaySelectors();
        }
    }
    gotoMonth(amount) {
        this.changeValueFromInside(this.value.addMonths(amount));
    }
    gotoYear(amount) {
        this.changeValueFromInside(this.value.addYears(amount));
    }
    changeValueFromInside(value) {
        if (this.value !== value) {
            this.value = value;
            this.valueChange.emit(this.value);
            this.render();
        }
    }
    formatDateTime(format) {
        return this.dateHelper.format(this.value.nativeDate, format);
    }
    createYearMonthDaySelectors() {
        let year;
        let month;
        // NOTE: Compat for DatePipe formatting rules
        let yearFormat = 'yyyy年';
        if (this.dateHelper.relyOnDatePipe) {
            yearFormat = this.dateHelper.transCompatFormat(yearFormat);
        }
        year = {
            className: `${this.prefixCls}-year-select`,
            onClick: () => this.changePanel('year'),
            label: this.formatDateTime(yearFormat)
        };
        month = {
            className: `${this.prefixCls}-month-select`,
            onClick: () => this.changeToMonthPanel(),
            label: this.formatDateTime('MMM')
        };
        // NOTE: Compat for DatePipe formatting rules
        let dayFormat = 'd日';
        if (this.dateHelper.relyOnDatePipe) {
            dayFormat = this.dateHelper.transCompatFormat(dayFormat);
        }
        let result;
        result = [year, month];
        return result.filter(selector => !!selector);
    }
}
CalendarHeaderComponent.ɵfac = function CalendarHeaderComponent_Factory(t) { return new (t || CalendarHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(DateHelperService)); };
CalendarHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CalendarHeaderComponent, selectors: [["calendar-header"]], inputs: { enablePrev: "enablePrev", enableNext: "enableNext", value: "value", disabledMonth: "disabledMonth", disabledYear: "disabledYear", panelMode: "panelMode" }, outputs: { valueChange: "valueChange", panelModeChange: "panelModeChange", chooseDecade: "chooseDecade", chooseYear: "chooseYear", chooseMonth: "chooseMonth" }, exportAs: ["calendarHeader"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 12, vars: 15, consts: [[2, "position", "relative"], ["role", "button", "title", "\u53BB\u5E74", 3, "class", "click", 4, "ngIf"], ["role", "button", "title", "\u4E0A\u6708", 3, "class", "click", 4, "ngIf"], [4, "ngFor", "ngForOf"], ["role", "button", "title", "\u4E0B\u4E2A\u6708", 3, "class", "click", 4, "ngIf"], ["role", "button", "title", "\u4E0B\u4E00\u5E74", 3, "class", "click", 4, "ngIf"], [3, "ngSwitch"], [4, "ngSwitchCase"], ["role", "button", "title", "\u53BB\u5E74", 3, "click"], ["role", "button", "title", "\u4E0A\u6708", 3, "click"], ["role", "button", 3, "title", "click"], ["role", "button", "title", "\u4E0B\u4E2A\u6708", 3, "click"], ["role", "button", "title", "\u4E0B\u4E00\u5E74", 3, "click"], [3, "value", "valueChange"], [3, "value", "disabledDate", "valueChange", "decadePanelShow"], [3, "value", "disabledDate", "valueChange", "yearPanelShow"]], template: function CalendarHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "div", 0);
        ɵngcc0.ɵɵtemplate(2, CalendarHeaderComponent_a_2_Template, 1, 3, "a", 1);
        ɵngcc0.ɵɵtemplate(3, CalendarHeaderComponent_a_3_Template, 1, 3, "a", 2);
        ɵngcc0.ɵɵelementStart(4, "span");
        ɵngcc0.ɵɵtemplate(5, CalendarHeaderComponent_ng_container_5_Template, 3, 5, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, CalendarHeaderComponent_a_6_Template, 1, 3, "a", 4);
        ɵngcc0.ɵɵtemplate(7, CalendarHeaderComponent_a_7_Template, 1, 3, "a", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementContainerStart(8, 6);
        ɵngcc0.ɵɵtemplate(9, CalendarHeaderComponent_ng_container_9_Template, 2, 1, "ng-container", 7);
        ɵngcc0.ɵɵtemplate(10, CalendarHeaderComponent_ng_container_10_Template, 2, 2, "ng-container", 7);
        ɵngcc0.ɵɵtemplate(11, CalendarHeaderComponent_ng_container_11_Template, 2, 2, "ng-container", 7);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-header");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.enablePrev);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.enablePrev);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-my-select");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.yearMonthDaySelectors);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.enableNext);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.enableNext);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.panelMode);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "decade");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "year");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "month");
    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, DecadePanelComponent, YearPanelComponent, MonthPanelComponent]; }, encapsulation: 2, changeDetection: 0 });
CalendarHeaderComponent.ctorParameters = () => [
    { type: DateHelperService }
];
CalendarHeaderComponent.propDecorators = {
    enablePrev: [{ type: Input }],
    enableNext: [{ type: Input }],
    disabledMonth: [{ type: Input }],
    disabledYear: [{ type: Input }],
    value: [{ type: Input }],
    valueChange: [{ type: Output }],
    panelMode: [{ type: Input }],
    panelModeChange: [{ type: Output }],
    chooseDecade: [{ type: Output }],
    chooseYear: [{ type: Output }],
    chooseMonth: [{ type: Output }]
};

const MAX_ROW$2 = 4;
const MAX_COL$2 = 3;
class DecadePanelComponent {
    constructor() {
        this.valueChange = new EventEmitter();
        this.prefixCls = 'thy-calendar-decade-panel';
    }
    get startYear() {
        return parseInt(`${this.value.getYear() / 100}`, 10) * 100;
    }
    get endYear() {
        return this.startYear + 99;
    }
    ngOnChanges(changes) {
        if (changes.value) {
            this.render();
        }
    }
    previousCentury() {
        this.gotoYear(-100);
    }
    nextCentury() {
        this.gotoYear(100);
    }
    trackPanelDecade(_index, decadeData) {
        return decadeData.content;
    }
    render() {
        if (this.value) {
            this.panelDecades = this.makePanelDecades();
        }
    }
    // Re-render panel content by the header's buttons (NOTE: Do not try to trigger final value change)
    gotoYear(amount) {
        this.value = this.value.addYears(amount);
        // this.valueChange.emit(this.value); // Do not try to trigger final value change
        this.render();
    }
    chooseDecade(startYear) {
        this.value = this.value.setYear(startYear);
        this.valueChange.emit(this.value);
    }
    makePanelDecades() {
        const decades = [];
        const currentYear = this.value.getYear();
        const startYear = this.startYear;
        const endYear = this.endYear;
        const previousYear = startYear - 10;
        let index = 0;
        for (let rowIndex = 0; rowIndex < MAX_ROW$2; rowIndex++) {
            decades[rowIndex] = [];
            for (let colIndex = 0; colIndex < MAX_COL$2; colIndex++) {
                const start = previousYear + index * 10;
                const end = previousYear + index * 10 + 9;
                const content = `${start}-${end}`;
                const cell = (decades[rowIndex][colIndex] = {
                    content,
                    title: content,
                    isCurrent: currentYear >= start && currentYear <= end,
                    isLowerThanStart: end < startYear,
                    isBiggerThanEnd: start > endYear,
                    classMap: null,
                    onClick: () => this.chooseDecade(start)
                });
                cell.classMap = {
                    [`${this.prefixCls}-cell`]: true,
                    [`${this.prefixCls}-selected-cell`]: cell.isCurrent,
                    [`${this.prefixCls}-last-century-cell`]: cell.isLowerThanStart,
                    [`${this.prefixCls}-next-century-cell`]: cell.isBiggerThanEnd
                };
                index++;
            }
        }
        return decades;
    }
}
DecadePanelComponent.ɵfac = function DecadePanelComponent_Factory(t) { return new (t || DecadePanelComponent)(); };
DecadePanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DecadePanelComponent, selectors: [["decade-panel"]], inputs: { value: "value" }, outputs: { valueChange: "valueChange" }, exportAs: ["decadePanel"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 10, vars: 27, consts: [["role", "button", "title", "\u4E0A\u4E00\u4E16\u7EAA", 3, "click"], ["role", "button", "title", "\u4E0B\u4E00\u4E16\u7EAA", 3, "click"], ["cellSpacing", "0", "role", "grid"], ["role", "row", 4, "ngFor", "ngForOf"], ["role", "row"], ["role", "gridcell", 3, "title", "ngClass", "click", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "gridcell", 3, "title", "ngClass", "click"]], template: function DecadePanelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵelementStart(2, "a", 0);
        ɵngcc0.ɵɵlistener("click", function DecadePanelComponent_Template_a_click_2_listener() { return ctx.previousCentury(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "a", 1);
        ɵngcc0.ɵɵlistener("click", function DecadePanelComponent_Template_a_click_5_listener() { return ctx.nextCentury(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div");
        ɵngcc0.ɵɵelementStart(7, "table", 2);
        ɵngcc0.ɵɵelementStart(8, "tbody");
        ɵngcc0.ɵɵtemplate(9, DecadePanelComponent_tr_9_Template, 2, 2, "tr", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.prefixCls);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-header");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-prev-century-btn");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-century");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate2("", ctx.startYear, "-", ctx.endYear, "");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-next-century-btn");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-body");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-table");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-tbody");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.panelDecades);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass], encapsulation: 2, changeDetection: 0 });
DecadePanelComponent.ctorParameters = () => [];
DecadePanelComponent.propDecorators = {
    value: [{ type: Input }],
    valueChange: [{ type: Output }]
};

class MonthPanelComponent {
    constructor() {
        this.valueChange = new EventEmitter();
        this.yearPanelShow = new EventEmitter();
        this.prefixCls = 'thy-calendar-month-panel';
    }
    previousYear() {
        this.gotoYear(-1);
    }
    nextYear() {
        this.gotoYear(1);
    }
    gotoYear(amount) {
        this.value = this.value.addYears(amount);
    }
}
MonthPanelComponent.ɵfac = function MonthPanelComponent_Factory(t) { return new (t || MonthPanelComponent)(); };
MonthPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MonthPanelComponent, selectors: [["month-panel"]], inputs: { value: "value", disabledDate: "disabledDate" }, outputs: { valueChange: "valueChange", yearPanelShow: "yearPanelShow" }, exportAs: ["monthPanel"], decls: 9, vars: 25, consts: [["role", "button", "title", "\u53BB\u5E74", 3, "click"], ["role", "button", "title", "\u9009\u62E9\u5E74\u4EFD", 3, "click"], ["role", "button", "title", "\u4E0B\u4E00\u5E74", 3, "click"], [3, "prefixCls", "disabledDate", "value", "valueChange"]], template: function MonthPanelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵelementStart(2, "a", 0);
        ɵngcc0.ɵɵlistener("click", function MonthPanelComponent_Template_a_click_2_listener() { return ctx.previousYear(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "a", 1);
        ɵngcc0.ɵɵlistener("click", function MonthPanelComponent_Template_a_click_3_listener() { return ctx.yearPanelShow.emit(); });
        ɵngcc0.ɵɵelementStart(4, "span");
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "a", 2);
        ɵngcc0.ɵɵlistener("click", function MonthPanelComponent_Template_a_click_6_listener() { return ctx.nextYear(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div");
        ɵngcc0.ɵɵelementStart(8, "month-table", 3);
        ɵngcc0.ɵɵlistener("valueChange", function MonthPanelComponent_Template_month_table_valueChange_8_listener($event) { return ctx.valueChange.emit($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.prefixCls);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-header");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-prev-year-btn");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-year-select");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-year-select-content");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.value.getYear());
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-next-year-btn");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-body");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("prefixCls", "thy-calendar")("disabledDate", ctx.disabledDate)("value", ctx.value);
    } }, directives: function () { return [MonthTableComponent]; }, encapsulation: 2, changeDetection: 0 });
MonthPanelComponent.propDecorators = {
    value: [{ type: Input }],
    disabledDate: [{ type: Input }],
    valueChange: [{ type: Output }],
    yearPanelShow: [{ type: Output }]
};

function transformDateValue(value) {
    if (!value) {
        return { value: null };
    }
    let withTime;
    if (value && typeof value === 'number') {
        value = convertDate(value);
    }
    if (value && instanceOfDateEntry(value)) {
        const { date, with_time } = value;
        value = date ? convertDate(date) : null;
        withTime = !!with_time;
    }
    if (value && instanceOfRangeEntry(value)) {
        const rangeValue = value;
        value = [];
        if (rangeValue.begin && rangeValue.end) {
            value[0] = convertDate(rangeValue.begin);
            value[1] = convertDate(rangeValue.end);
        }
    }
    return { value: value, withTime };
}
function convertDate(date) {
    if (typeof date === 'number') {
        if (date.toString().length < 13) {
            return fromUnixTime(date);
        }
        else {
            return new Date(date);
        }
    }
    else {
        return date;
    }
}
function hasValue(value) {
    if (Array.isArray(value)) {
        return !!value[0] && !!value[1];
    }
    else {
        return !!value;
    }
}
function makeValue(value, isRange = false) {
    if (isRange) {
        return value ? value.map(val => new TinyDate(val)) : [];
    }
    else {
        return value ? new TinyDate(value) : null;
    }
}

class DatePopupComponent {
    constructor(cdr) {
        this.cdr = cdr;
        this.panelModeChange = new EventEmitter();
        this.calendarChange = new EventEmitter();
        this.valueChange = new EventEmitter();
        this.resultOk = new EventEmitter(); // Emitted when done with date selecting
        this.showTimePickerChange = new EventEmitter();
        this.prefixCls = 'thy-calendar';
        this.showTimePicker = false;
        this.partTypeMap = { left: 0, right: 1 };
    }
    setProperty(key, value) {
        this[key] = value;
        this.cdr.markForCheck();
    }
    ngOnInit() {
        // Initialization for range properties to prevent errors while later assignment
        if (this.isRange) {
            ['panelMode', 'selectedValue', 'hoverValue'].forEach(prop => this.initialArray(prop));
        }
        if (this.defaultPickerValue && !hasValue(this.value)) {
            const { value } = transformDateValue(this.defaultPickerValue);
            this.value = makeValue(value, this.isRange);
            if (this.isRange) {
                this.reInitializeRangeRelatedValue();
            }
        }
        this.initDisabledDate();
    }
    ngOnChanges(changes) {
        if (this.isRange) {
            if (changes.value) {
                this.reInitializeRangeRelatedValue();
            }
        }
    }
    reInitializeRangeRelatedValue() {
        this.clearHoverValue();
        this.selectedValue = this.value;
        this.valueForRangeShow = this.normalizeRangeValue(this.value);
    }
    initDisabledDate() {
        let minDate;
        let maxDate;
        let disabledDateFn;
        if (this.minDate) {
            const { value } = transformDateValue(this.minDate);
            minDate = new TinyDate(value);
        }
        if (this.maxDate) {
            const { value } = transformDateValue(this.maxDate);
            maxDate = new TinyDate(value);
        }
        if (this.disabledDate) {
            disabledDateFn = this.disabledDate;
        }
        this.disabledDate = d => {
            let expression = false;
            if (minDate) {
                expression = d < minDate.startOfDay().nativeDate;
            }
            if (maxDate && !expression) {
                expression = d > maxDate.endOfDay().nativeDate;
            }
            if (disabledDateFn && typeof disabledDateFn === 'function' && !expression) {
                expression = disabledDateFn(d);
            }
            return expression;
        };
    }
    onShowTimePickerChange(show) {
        this.showTimePicker = show;
        this.showTimePickerChange.emit(show);
    }
    onClickOk() {
        this.setValue(this.value);
        this.valueChange.emit(this.value);
        this.resultOk.emit();
    }
    onClickRemove() {
        this.value = this.isRange ? [] : null;
        this.setValue(this.value);
        this.valueChange.emit(this.value);
    }
    onDayHover(value) {
        if (this.isRange && this.selectedValue[0] && !this.selectedValue[1]) {
            // When right value is selected, don't do hover
            const base = this.selectedValue[0]; // Use the left of selected value as the base to decide later hoverValue
            if (base.isBeforeDay(value)) {
                this.hoverValue = [base, value];
            }
            else {
                this.hoverValue = [value, base];
            }
        }
    }
    onPanelModeChange(mode, partType) {
        if (this.isRange) {
            this.panelMode[this.getPartTypeIndex(partType)] = mode;
        }
        else {
            this.panelMode = mode;
        }
        this.panelModeChange.emit(this.panelMode);
    }
    onHeaderChange(value, partType) {
        if (this.isRange) {
            this.valueForRangeShow[this.getPartTypeIndex(partType)] = value;
            this.valueForRangeShow = this.normalizeRangeValue(this.valueForRangeShow); // Should always take care of start/end
        }
        else {
            if (this.showTimePicker) {
                this.setValue(value);
            }
        }
    }
    onSelectTime(value, partType) {
        if (this.isRange) {
            // TODO:range picker set time
        }
        else {
            this.setValue(new TinyDate(value.nativeDate));
        }
    }
    changeValueFromSelect(value) {
        if (this.isRange) {
            const [left, right] = this.selectedValue;
            if ((!left && !right) || (left && right)) {
                // If totally full or empty, clean up && re-assign left first
                this.hoverValue = this.selectedValue = [value];
                this.selectedValue = [new TinyDate(startOfDay(this.selectedValue[0].nativeDate))];
                this.calendarChange.emit([this.selectedValue[0].clone()]);
            }
            else if (left && !right) {
                // If one of them is empty, assign the other one and sort, then set the final values
                this.clearHoverValue(); // Clean up
                this.setRangeValue('right', value);
                this.selectedValue = sortRangeValue(this.selectedValue); // Sort
                this.selectedValue = [
                    new TinyDate(startOfDay(this.selectedValue[0].nativeDate)),
                    new TinyDate(endOfDay(this.selectedValue[1].nativeDate))
                ];
                this.valueForRangeShow = this.normalizeRangeValue(this.selectedValue);
                this.setValue(this.cloneRangeDate(this.selectedValue));
                this.calendarChange.emit(this.cloneRangeDate(this.selectedValue));
            }
        }
        else {
            this.setValue(value);
        }
    }
    enablePrevNext(direction, partType) {
        if (this.isRange) {
            const [start, end] = this.valueForRangeShow;
            const showMiddle = !start.addMonths(1).isSame(end, 'month'); // One month diff then don't show middle prev/next
            if ((partType === 'left' && direction === 'next') || (partType === 'right' && direction === 'prev')) {
                return showMiddle;
            }
            return true;
        }
        else {
            return true;
        }
    }
    getPanelMode(partType) {
        if (this.isRange) {
            return this.panelMode[this.getPartTypeIndex(partType)];
        }
        else {
            return this.panelMode;
        }
    }
    getValueBySelector(partType) {
        if (this.isRange) {
            const valueShow = this.valueForRangeShow; // Use the real time value that without decorations when timepicker is shown up
            return valueShow[this.getPartTypeIndex(partType)];
        }
        else {
            return this.value;
        }
    }
    getPartTypeIndex(partType) {
        return this.partTypeMap[partType];
    }
    clearHoverValue() {
        this.hoverValue = [];
    }
    setValue(value) {
        this.value = value;
        if (!this.showTime || !this.showTimePicker) {
            this.valueChange.emit(this.value);
        }
    }
    normalizeRangeValue(value) {
        const [start, end] = value;
        const newStart = start || new TinyDate();
        const newEnd = end && end.isSameMonth(newStart) ? end.addMonths(1) : end || newStart.addMonths(1);
        return [newStart, newEnd];
    }
    // Renew and set a range value to trigger sub-component's change detection
    setRangeValue(partType, value) {
        const ref = (this.selectedValue = this.cloneRangeDate(this.selectedValue));
        ref[this.getPartTypeIndex(partType)] = value;
    }
    cloneRangeDate(value) {
        return [value[0] && value[0].clone(), value[1] && value[1].clone()];
    }
    initialArray(key) {
        if (!this[key] || !Array.isArray(this[key])) {
            this[key] = [];
        }
    }
}
DatePopupComponent.ɵfac = function DatePopupComponent_Factory(t) { return new (t || DatePopupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
DatePopupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DatePopupComponent, selectors: [["date-popup"]], inputs: { value: "value", disabledDate: "disabledDate", panelMode: "panelMode", isRange: "isRange", showWeek: "showWeek", format: "format", minDate: "minDate", maxDate: "maxDate", showToday: "showToday", showTime: "showTime", mustShowTime: "mustShowTime", dateRender: "dateRender", className: "className", defaultPickerValue: "defaultPickerValue" }, outputs: { panelModeChange: "panelModeChange", calendarChange: "calendarChange", valueChange: "valueChange", resultOk: "resultOk", showTimePickerChange: "showTimePickerChange" }, exportAs: ["datePopup"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 15, vars: 19, consts: [[4, "ngIf", "ngIfElse"], [4, "ngIf"], ["tplInnerPopup", ""], ["tplFooter", ""], ["tplSinglePart", ""], ["tplRangePart", ""], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngTemplateOutlet"], [3, "showWeek", "panelMode", "value", "disabledDate", "dateRender", "selectedValue", "hoverValue", "enablePrev", "enableNext", "panelModeChange", "dayHover", "selectDate", "headerChange"], [3, "showTime", "mustShowTime", "value", "showTimePickerChange", "selectTime", "clickOk", "clickRemove"], [2, "outline", "none"]], template: function DatePopupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵelementStart(2, "div");
        ɵngcc0.ɵɵelementStart(3, "div");
        ɵngcc0.ɵɵtemplate(4, DatePopupComponent_ng_container_4_Template, 3, 6, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(5, DatePopupComponent_ng_container_5_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, DatePopupComponent_ng_container_6_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, DatePopupComponent_ng_template_7_Template, 1, 9, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(9, DatePopupComponent_ng_template_9_Template, 1, 3, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(11, DatePopupComponent_ng_template_11_Template, 2, 1, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(13, DatePopupComponent_ng_template_13_Template, 3, 9, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r7 = ɵngcc0.ɵɵreference(12);
        ɵngcc0.ɵɵclassMapInterpolate2("", ctx.prefixCls, "-picker-container ", ctx.className, "");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate3("", ctx.prefixCls, " ", ctx.showWeek ? ctx.prefixCls + "-week-number" : "", "\n     ", ctx.isRange ? ctx.prefixCls + "-range" : "", "");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-panel");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-date-panel");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRange)("ngIfElse", _r7);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isRange);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isRange);
    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, InnerPopupComponent, CalendarFooterComponent]; }, encapsulation: 2, changeDetection: 0 });
DatePopupComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
DatePopupComponent.propDecorators = {
    isRange: [{ type: Input }],
    showWeek: [{ type: Input }],
    format: [{ type: Input }],
    disabledDate: [{ type: Input }],
    minDate: [{ type: Input }],
    maxDate: [{ type: Input }],
    showToday: [{ type: Input }],
    showTime: [{ type: Input }],
    mustShowTime: [{ type: Input }],
    dateRender: [{ type: Input }],
    className: [{ type: Input }],
    panelMode: [{ type: Input }],
    value: [{ type: Input }],
    defaultPickerValue: [{ type: Input }],
    panelModeChange: [{ type: Output }],
    calendarChange: [{ type: Output }],
    valueChange: [{ type: Output }],
    resultOk: [{ type: Output }],
    showTimePickerChange: [{ type: Output }]
};

class InnerPopupComponent {
    constructor() {
        this.panelModeChange = new EventEmitter();
        this.headerChange = new EventEmitter();
        this.selectDate = new EventEmitter();
        this.dayHover = new EventEmitter();
        this.prefixCls = 'thy-calendar';
    }
    ngOnChanges(changes) {
        if (changes.value && !this.value) {
            this.value = new TinyDate();
        }
    }
    // The value real changed to outside
    onSelectDate(date) {
        const value = date instanceof TinyDate ? date : new TinyDate(date);
        this.selectDate.emit(value);
    }
}
InnerPopupComponent.ɵfac = function InnerPopupComponent_Factory(t) { return new (t || InnerPopupComponent)(); };
InnerPopupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: InnerPopupComponent, selectors: [["inner-popup"]], inputs: { value: "value", showWeek: "showWeek", enablePrev: "enablePrev", enableNext: "enableNext", disabledDate: "disabledDate", dateRender: "dateRender", selectedValue: "selectedValue", hoverValue: "hoverValue", panelMode: "panelMode" }, outputs: { panelModeChange: "panelModeChange", headerChange: "headerChange", selectDate: "selectDate", dayHover: "dayHover" }, exportAs: ["innerPopup"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 13, consts: [[3, "panelMode", "value", "enablePrev", "enableNext", "panelModeChange", "valueChange"], ["showWeekNumber", "false", 3, "showWeek", "value", "disabledDate", "dateCellRender", "selectedValue", "hoverValue", "valueChange", "dayHover"]], template: function InnerPopupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "calendar-header", 0);
        ɵngcc0.ɵɵlistener("panelModeChange", function InnerPopupComponent_Template_calendar_header_panelModeChange_0_listener($event) { return ctx.panelMode = $event; })("panelModeChange", function InnerPopupComponent_Template_calendar_header_panelModeChange_0_listener($event) { return ctx.panelModeChange.emit($event); })("valueChange", function InnerPopupComponent_Template_calendar_header_valueChange_0_listener($event) { return ctx.value = $event; })("valueChange", function InnerPopupComponent_Template_calendar_header_valueChange_0_listener($event) { return ctx.headerChange.emit($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵelementStart(2, "date-table", 1);
        ɵngcc0.ɵɵlistener("valueChange", function InnerPopupComponent_Template_date_table_valueChange_2_listener($event) { return ctx.onSelectDate($event); })("dayHover", function InnerPopupComponent_Template_date_table_dayHover_2_listener($event) { return ctx.dayHover.emit($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("panelMode", ctx.panelMode)("value", ctx.value)("enablePrev", ctx.enablePrev)("enableNext", ctx.enableNext);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-body");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("showWeek", ctx.showWeek)("value", ctx.value)("disabledDate", ctx.disabledDate)("dateCellRender", ctx.dateRender)("selectedValue", ctx.selectedValue)("hoverValue", ctx.hoverValue);
    } }, directives: function () { return [CalendarHeaderComponent, DateTableComponent]; }, encapsulation: 2, changeDetection: 0 });
InnerPopupComponent.ctorParameters = () => [];
InnerPopupComponent.propDecorators = {
    showWeek: [{ type: Input }],
    enablePrev: [{ type: Input }],
    enableNext: [{ type: Input }],
    disabledDate: [{ type: Input }],
    dateRender: [{ type: Input }],
    selectedValue: [{ type: Input }],
    hoverValue: [{ type: Input }],
    panelMode: [{ type: Input }],
    panelModeChange: [{ type: Output }],
    value: [{ type: Input }],
    headerChange: [{ type: Output }],
    selectDate: [{ type: Output }],
    dayHover: [{ type: Output }]
};

const MAX_ROW$1 = 4;
const MAX_COL$1 = 3;
class YearPanelComponent {
    constructor() {
        this.valueChange = new EventEmitter();
        this.decadePanelShow = new EventEmitter();
        this.prefixCls = 'thy-calendar-year-panel';
    }
    get currentYear() {
        return this.value.getYear();
    }
    get startYear() {
        return parseInt(`${this.currentYear / 10}`, 10) * 10;
    }
    get endYear() {
        return this.startYear + 9;
    }
    ngOnChanges(changes) {
        if (changes.value || changes.disabledDate) {
            this.render();
        }
    }
    previousDecade() {
        this.gotoYear(-10);
    }
    nextDecade() {
        this.gotoYear(10);
    }
    trackPanelYear(_index, yearData) {
        return yearData.content;
    }
    render() {
        if (this.value) {
            this.panelYears = this.makePanelYears();
        }
    }
    // Re-render panel content by the header's buttons (NOTE: Do not try to trigger final value change)
    gotoYear(amount) {
        this.value = this.value.addYears(amount);
        // this.valueChange.emit(this.value); // Do not trigger final value change
        this.render();
    }
    chooseYear(year) {
        this.value = this.value.setYear(year);
        this.valueChange.emit(this.value);
        this.render();
    }
    makePanelYears() {
        const years = [];
        const currentYear = this.currentYear;
        const startYear = this.startYear;
        const endYear = this.endYear;
        const previousYear = startYear - 1;
        let index = 0;
        for (let rowIndex = 0; rowIndex < MAX_ROW$1; rowIndex++) {
            years[rowIndex] = [];
            for (let colIndex = 0; colIndex < MAX_COL$1; colIndex++) {
                const year = previousYear + index;
                const content = String(year);
                const disabled = this.disabledDate ? this.disabledDate(this.value.setYear(year).nativeDate) : false;
                const cell = (years[rowIndex][colIndex] = {
                    disabled,
                    content,
                    year,
                    title: content,
                    isCurrent: year === currentYear,
                    isLowerThanStart: year < startYear,
                    isBiggerThanEnd: year > endYear,
                    classMap: null,
                    onClick: () => this.chooseYear(cell.year)
                });
                cell.classMap = {
                    [`${this.prefixCls}-cell`]: true,
                    [`${this.prefixCls}-selected-cell`]: cell.isCurrent,
                    [`${this.prefixCls}-cell-disabled`]: disabled,
                    [`${this.prefixCls}-last-decade-cell`]: cell.isLowerThanStart,
                    [`${this.prefixCls}-next-decade-cell`]: cell.isBiggerThanEnd
                };
                index++;
            }
        }
        return years;
    }
}
YearPanelComponent.ɵfac = function YearPanelComponent_Factory(t) { return new (t || YearPanelComponent)(); };
YearPanelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: YearPanelComponent, selectors: [["year-panel"]], inputs: { value: "value", disabledDate: "disabledDate" }, outputs: { valueChange: "valueChange", decadePanelShow: "decadePanelShow" }, exportAs: ["yearPanel"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 11, vars: 30, consts: [["role", "button", "title", "\u4E0A\u4E00\u5E74\u4EE3", 3, "click"], ["role", "button", "title", "\u9009\u62E9\u5E74\u4EE3", 3, "click"], ["title", "\u4E0B\u4E00\u5E74\u4EE3", "role", "button", 3, "click"], ["cellSpacing", "0", "role", "grid"], ["role", "row", 4, "ngFor", "ngForOf"], ["role", "row"], ["role", "gridcell", 3, "title", "ngClass", "click", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "gridcell", 3, "title", "ngClass", "click"]], template: function YearPanelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div");
        ɵngcc0.ɵɵelementStart(1, "div");
        ɵngcc0.ɵɵelementStart(2, "a", 0);
        ɵngcc0.ɵɵlistener("click", function YearPanelComponent_Template_a_click_2_listener() { return ctx.previousDecade(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "a", 1);
        ɵngcc0.ɵɵlistener("click", function YearPanelComponent_Template_a_click_3_listener() { return ctx.decadePanelShow.emit(); });
        ɵngcc0.ɵɵelementStart(4, "span");
        ɵngcc0.ɵɵtext(5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "a", 2);
        ɵngcc0.ɵɵlistener("click", function YearPanelComponent_Template_a_click_6_listener() { return ctx.nextDecade(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div");
        ɵngcc0.ɵɵelementStart(8, "table", 3);
        ɵngcc0.ɵɵelementStart(9, "tbody");
        ɵngcc0.ɵɵtemplate(10, YearPanelComponent_tr_10_Template, 2, 2, "tr", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.prefixCls);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-header");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-prev-decade-btn");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-decade-select");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-decade-select-content");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate2(" ", ctx.startYear, "-", ctx.endYear, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-next-decade-btn");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-body");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-table");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-tbody");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.panelYears);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass], encapsulation: 2, changeDetection: 0 });
YearPanelComponent.ctorParameters = () => [];
YearPanelComponent.propDecorators = {
    value: [{ type: Input }],
    valueChange: [{ type: Output }],
    disabledDate: [{ type: Input }],
    decadePanelShow: [{ type: Output }]
};

const MAX_ROW = 4;
const MAX_COL = 3;
class MonthTableComponent {
    constructor(dateHelper) {
        this.dateHelper = dateHelper;
        this.value = new TinyDate();
        this.prefixCls = 'thy-calendar';
        this.valueChange = new EventEmitter();
    }
    ngOnChanges(changes) {
        if (changes.value || changes.disabledDate) {
            this.render();
        }
    }
    trackYear(_index) {
        return this.value ? this.value.getYear() : _index;
    }
    trackPanelMonth(_index, monthData) {
        return monthData.content;
    }
    render() {
        if (this.value) {
            this.panelMonths = this.makePanelMonths();
        }
    }
    makePanelMonths() {
        const months = [];
        const currentMonth = this.value.getMonth();
        const today = new TinyDate();
        let monthValue = 0;
        for (let rowIndex = 0; rowIndex < MAX_ROW; rowIndex++) {
            months[rowIndex] = [];
            for (let colIndex = 0; colIndex < MAX_COL; colIndex++) {
                const month = this.value.setMonth(monthValue);
                const disabled = this.disabledDate ? this.disabledDate(this.value.setMonth(monthValue).nativeDate) : false;
                const content = this.dateHelper.format(month.nativeDate, 'MMMM');
                const cell = (months[rowIndex][colIndex] = {
                    value: month.nativeDate,
                    disabled,
                    content,
                    month: monthValue,
                    title: content,
                    classMap: null,
                    onClick: () => this.chooseMonth(cell.month) // don't use monthValue here
                });
                cell.classMap = {
                    [`${this.prefixCls}-month-panel-cell`]: true,
                    [`${this.prefixCls}-month-panel-cell-disabled`]: disabled,
                    [`${this.prefixCls}-month-panel-selected-cell`]: monthValue === currentMonth,
                    [`${this.prefixCls}-month-panel-current-cell`]: today.getYear() === this.value.getYear() && monthValue === today.getMonth()
                };
                monthValue++;
            }
        }
        return months;
    }
    chooseMonth(month) {
        this.value = this.value.setMonth(month);
        this.valueChange.emit(this.value);
        this.render();
    }
}
MonthTableComponent.ɵfac = function MonthTableComponent_Factory(t) { return new (t || MonthTableComponent)(ɵngcc0.ɵɵdirectiveInject(DateHelperService)); };
MonthTableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MonthTableComponent, selectors: [["month-table"]], inputs: { value: "value", prefixCls: "prefixCls", disabledDate: "disabledDate" }, outputs: { valueChange: "valueChange" }, exportAs: ["monthTable"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 8, consts: [["cellSpacing", "0", "role", "grid"], ["role", "row", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "row"], ["role", "gridcell", 3, "title", "ngClass", "click", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "gridcell", 3, "title", "ngClass", "click"], [3, "ngSwitch"], [4, "ngSwitchCase"]], template: function MonthTableComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "table", 0);
        ɵngcc0.ɵɵelementStart(1, "tbody");
        ɵngcc0.ɵɵtemplate(2, MonthTableComponent_tr_2_Template, 2, 2, "tr", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-month-panel-table");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-month-panel-tbody");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.panelMonths)("ngForTrackBy", ctx.trackYear);
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase], encapsulation: 2, changeDetection: 0 });
MonthTableComponent.ctorParameters = () => [
    { type: DateHelperService }
];
MonthTableComponent.propDecorators = {
    value: [{ type: Input }],
    prefixCls: [{ type: Input }],
    valueChange: [{ type: Output }],
    disabledDate: [{ type: Input }]
};

const DATE_ROW_NUM = 6;
const DATE_COL_NUM = 7;
class DateTableComponent {
    constructor(dateHelper) {
        this.dateHelper = dateHelper;
        this.prefixCls = 'thy-calendar';
        this.showWeek = false;
        this.dayHover = new EventEmitter(); // Emitted when hover on a day by mouse enter
        this.valueChange = new EventEmitter();
    }
    set value(date) {
        this._value = date;
    }
    get value() {
        return this._value;
    }
    ngOnChanges(changes) {
        if (this.isDateRealChange(changes.value) ||
            this.isDateRealChange(changes.selectedValue) ||
            this.isDateRealChange(changes.hoverValue)) {
            this.render();
        }
    }
    isDateRealChange(change) {
        if (change) {
            const previousValue = change.previousValue;
            const currentValue = change.currentValue;
            if (Array.isArray(currentValue)) {
                return (!Array.isArray(previousValue) ||
                    currentValue.length !== previousValue.length ||
                    currentValue.some((value, index) => {
                        const previousTinyDate = previousValue[index];
                        return previousTinyDate instanceof TinyDate ? previousTinyDate.isSameDay(value) : previousTinyDate !== value;
                    }));
            }
            else {
                return !this.isSameDate(previousValue, currentValue);
            }
        }
        return false;
    }
    isSameDate(left, right) {
        return (!left && !right) || (left && right && right.isSameDay(left));
    }
    render() {
        if (this.value) {
            this.headWeekDays = this.makeHeadWeekDays();
            this.weekRows = this.makeWeekRows();
        }
    }
    changeValueFromInside(value) {
        // Only change date not change time
        const newValue = this.value
            .setYear(value.getYear())
            .setMonth(value.getMonth())
            .setDate(value.getDate());
        this.valueChange.emit(newValue);
    }
    makeHeadWeekDays() {
        const weekDays = [];
        const start = this.value.calendarStart({ weekStartsOn: this.dateHelper.getFirstDayOfWeek() });
        for (let colIndex = 0; colIndex < DATE_COL_NUM; colIndex++) {
            const day = start.addDays(colIndex);
            weekDays[colIndex] = {
                short: this.dateHelper.format(day.nativeDate, this.dateHelper.relyOnDatePipe ? 'E' : 'ddd'),
                veryShort: this.dateHelper.format(day.nativeDate, this.getVeryShortWeekFormat()) // eg. 二
            };
        }
        return weekDays;
    }
    getVeryShortWeekFormat() {
        if (this.dateHelper.relyOnDatePipe) {
            return 'EEEEE'; // eg. 二
        }
        return 'dd';
    }
    makeWeekRows() {
        const weekRows = [];
        const firstDayOfMonth = this.value.calendarStart({ weekStartsOn: this.dateHelper.getFirstDayOfWeek() });
        for (let week = 0; week < DATE_ROW_NUM; week++) {
            const weekStart = firstDayOfMonth.addDays(week * 7);
            const row = {
                isActive: false,
                isCurrent: false,
                dateCells: [],
                year: weekStart.getYear()
            };
            for (let day = 0; day < 7; day++) {
                const date = weekStart.addDays(day);
                const dateFormat = this.dateHelper.relyOnDatePipe ? 'longDate' : 'YYYY-MM-DD';
                const title = this.dateHelper.format(date.nativeDate, dateFormat);
                const label = this.dateHelper.format(date.nativeDate, this.dateHelper.relyOnDatePipe ? 'dd' : 'DD');
                const cell = {
                    value: date.nativeDate,
                    label: label,
                    isSelected: false,
                    isDisabled: false,
                    isToday: false,
                    title: title,
                    dateCellRender: valueFunctionProp(this.dateCellRender, date),
                    content: `${date.getDate()}`,
                    onClick: () => this.changeValueFromInside(date),
                    // 暂时用不到鼠标事件的交互,在html这种删除了
                    onMouseEnter: () => this.dayHover.emit(date)
                };
                if (this.showWeek && !row.weekNum) {
                    row.weekNum = this.dateHelper.getISOWeek(date.nativeDate);
                }
                if (date.isToday()) {
                    cell.isToday = true;
                    row.isCurrent = true;
                }
                if (Array.isArray(this.selectedValue)) {
                    // Range selections
                    const rangeValue = this.hoverValue && this.hoverValue.length ? this.hoverValue : this.selectedValue;
                    const start = rangeValue[0];
                    const end = rangeValue[1];
                    if (start) {
                        if (start.isSameDay(date)) {
                            cell.isSelectedStartDate = true;
                            cell.isSelected = true;
                            row.isActive = true;
                        }
                        if (end) {
                            if (end.isSameDay(date)) {
                                cell.isSelectedEndDate = true;
                                cell.isSelected = true;
                                row.isActive = true;
                            }
                            else if (date.isAfterDay(start) && date.isBeforeDay(end)) {
                                cell.isInRange = true;
                            }
                        }
                    }
                }
                else if (date.isSameDay(this.value)) {
                    cell.isSelected = true;
                    row.isActive = true;
                }
                if (this.disabledDate && this.disabledDate(date.nativeDate)) {
                    cell.isDisabled = true;
                }
                cell.classMap = {
                    [`${this.prefixCls}-cell`]: true,
                    [`${this.prefixCls}-today`]: cell.isToday,
                    [`${this.prefixCls}-last-month-cell`]: date.isBeforeMonth(this.value),
                    [`${this.prefixCls}-next-month-btn-day`]: date.isAfterMonth(this.value),
                    [`${this.prefixCls}-selected-day`]: cell.isSelected,
                    [`${this.prefixCls}-disabled-cell`]: cell.isDisabled,
                    [`${this.prefixCls}-selected-start-date`]: !!cell.isSelectedStartDate,
                    [`${this.prefixCls}-selected-end-date`]: !!cell.isSelectedEndDate,
                    [`${this.prefixCls}-in-range-cell`]: !!cell.isInRange
                };
                row.dateCells.push(cell);
            }
            row.classMap = {
                [`${this.prefixCls}-current-week`]: row.isCurrent,
                [`${this.prefixCls}-active-week`]: row.isActive
            };
            weekRows.push(row);
        }
        return weekRows;
    }
    trackByDateFn(_index, item) {
        return `${item.title}`;
    }
    trackByWeekFn(_index, item) {
        return `${item.year}-${item.weekNum}`;
    }
}
DateTableComponent.ɵfac = function DateTableComponent_Factory(t) { return new (t || DateTableComponent)(ɵngcc0.ɵɵdirectiveInject(DateHelperService)); };
DateTableComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DateTableComponent, selectors: [["date-table"]], inputs: { prefixCls: "prefixCls", showWeek: "showWeek", value: "value", selectedValue: "selectedValue", hoverValue: "hoverValue", disabledDate: "disabledDate", dateCellRender: "dateCellRender" }, outputs: { dayHover: "dayHover", valueChange: "valueChange" }, exportAs: ["dateTable"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 7, vars: 10, consts: [["cellSpacing", "0", "role", "grid"], ["role", "row"], ["role", "columnheader", 3, "class", 4, "ngIf"], ["role", "columnheader", 3, "title", "class", 4, "ngFor", "ngForOf"], ["role", "row", 3, "ngClass", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "columnheader"], ["role", "columnheader", 3, "title"], [3, "class", 4, "ngIf"], ["role", "row", 3, "ngClass"], ["role", "gridcell", 3, "class", 4, "ngIf"], ["role", "gridcell", "date-table-cell", "", 3, "ngClass", "prefixCls", "cell", "click", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["role", "gridcell"], ["role", "gridcell", "date-table-cell", "", 3, "ngClass", "prefixCls", "cell", "click"]], template: function DateTableComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "table", 0);
        ɵngcc0.ɵɵelementStart(1, "thead");
        ɵngcc0.ɵɵelementStart(2, "tr", 1);
        ɵngcc0.ɵɵtemplate(3, DateTableComponent_th_3_Template, 3, 7, "th", 2);
        ɵngcc0.ɵɵtemplate(4, DateTableComponent_th_4_Template, 3, 6, "th", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "tbody");
        ɵngcc0.ɵɵtemplate(6, DateTableComponent_tr_6_Template, 3, 4, "tr", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-table");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showWeek);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.headWeekDays);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("", ctx.prefixCls, "-tbody");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.weekRows)("ngForTrackBy", ctx.trackByWeekFn);
    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass, DateTableCellComponent]; }, encapsulation: 2, changeDetection: 0 });
DateTableComponent.ctorParameters = () => [
    { type: DateHelperService }
];
DateTableComponent.propDecorators = {
    prefixCls: [{ type: Input }],
    selectedValue: [{ type: Input }],
    hoverValue: [{ type: Input }],
    value: [{ type: Input }],
    showWeek: [{ type: Input }],
    disabledDate: [{ type: Input }],
    dateCellRender: [{ type: Input }],
    dayHover: [{ type: Output }],
    valueChange: [{ type: Output }]
};

class DateTableCellComponent {
    constructor() {
        this.isTemplateRef = isTemplateRef;
        this.isNonEmptyString = (v) => isEmpty(v) && isString(v);
    }
}
DateTableCellComponent.ɵfac = function DateTableCellComponent_Factory(t) { return new (t || DateTableCellComponent)(); };
DateTableCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DateTableCellComponent, selectors: [["", "date-table-cell", ""]], inputs: { prefixCls: "prefixCls", cell: "cell" }, exportAs: ["dateTableCell"], attrs: _c3, decls: 3, vars: 3, consts: [[3, "ngSwitch"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [3, "innerHTML"], ["tabindex", "0"], [4, "ngIf", "ngIfElse"], ["defaultCell", ""]], template: function DateTableCellComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0, 0);
        ɵngcc0.ɵɵtemplate(1, DateTableCellComponent_ng_container_1_Template, 5, 3, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(2, DateTableCellComponent_ng_container_2_Template, 5, 7, "ng-container", 1);
        ɵngcc0.ɵɵelementContainerEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.prefixCls);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "thy-calendar");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngSwitchCase", "thy-calendar-full");
    } }, directives: [ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf], encapsulation: 2 });
DateTableCellComponent.propDecorators = {
    prefixCls: [{ type: Input }],
    cell: [{ type: Input }]
};

class LibPackerModule {
}
LibPackerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LibPackerModule });
LibPackerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LibPackerModule_Factory(t) { return new (t || LibPackerModule)(); }, imports: [[CommonModule, FormsModule, ThyButtonModule, ThyIconModule, ThyTimePickerModule]] });

class ThyPickerComponent {
    constructor(changeDetector, dateHelper) {
        this.changeDetector = changeDetector;
        this.dateHelper = dateHelper;
        this.isRange = false;
        this.open = undefined;
        this.placement = 'bottomLeft';
        this.valueChange = new EventEmitter();
        this.openChange = new EventEmitter(); // Emitted when overlay's open state change
        this.prefixCls = 'thy-calendar';
        this.animationOpenState = false;
        this.overlayOpen = false; // Available when "open"=undefined
        this.overlayPositions = getFlexiblePositions(this.placement, 4);
    }
    get realOpenState() {
        // The value that really decide the open state of overlay
        return this.isOpenHandledByUser() ? !!this.open : this.overlayOpen;
    }
    ngAfterViewInit() {
        this.overlayPositions = getFlexiblePositions(this.placement, 4);
        if (this.autoFocus) {
            this.focus();
        }
    }
    focus() {
        this.pickerInput.nativeElement.focus();
    }
    showOverlay() {
        if (!this.realOpenState) {
            this.overlayOpen = true;
            if (this.realOpenState) {
                this.animationOpenState = true;
            }
            this.openChange.emit(this.overlayOpen);
            setTimeout(() => {
                if (this.cdkConnectedOverlay && this.cdkConnectedOverlay.overlayRef) {
                    this.cdkConnectedOverlay.overlayRef.updatePosition();
                }
            });
        }
    }
    hideOverlay() {
        if (this.realOpenState) {
            this.overlayOpen = false;
            if (!this.realOpenState) {
                this.animationOpenState = false;
            }
            this.openChange.emit(this.overlayOpen);
            this.focus();
        }
    }
    onClickInputBox() {
        if (!this.disabled && !this.readonly && !this.isOpenHandledByUser()) {
            this.showOverlay();
        }
    }
    onClickBackdrop() {
        this.hideOverlay();
    }
    onOverlayDetach() {
        this.hideOverlay();
    }
    onPositionChange(position) {
        this.changeDetector.detectChanges();
    }
    onClickClear(event) {
        event.preventDefault();
        event.stopPropagation();
        this.value = this.isRange ? [] : null;
        this.valueChange.emit(this.value);
    }
    getPartTypeIndex(partType) {
        return { left: 0, right: 1 }[partType];
    }
    isEmptyValue(value) {
        if (value === null) {
            return true;
        }
        else if (this.isRange) {
            return !value || !Array.isArray(value) || value.every(val => !val);
        }
        else {
            return !value;
        }
    }
    // Whether open state is permanently controlled by user himself
    isOpenHandledByUser() {
        return this.open !== undefined;
    }
    getReadableValue() {
        let value;
        if (this.isRange) {
            const start = this.value[0] ? this.dateHelper.format(this.value[0].nativeDate, this.format) : '';
            const end = this.value[1] ? this.dateHelper.format(this.value[1].nativeDate, this.format) : '';
            return start && end ? `${start} ~ ${end}` : null;
        }
        else {
            value = this.value;
            return value ? this.dateHelper.format(value.nativeDate, this.format) : null;
        }
    }
    getPlaceholder() {
        return this.isRange && this.placeholder && Array.isArray(this.placeholder)
            ? this.placeholder.join(' ~ ')
            : this.placeholder;
    }
}
ThyPickerComponent.ɵfac = function ThyPickerComponent_Factory(t) { return new (t || ThyPickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DateHelperService)); };
ThyPickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyPickerComponent, selectors: [["thy-picker"]], viewQuery: function ThyPickerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c5, true);
        ɵngcc0.ɵɵstaticViewQuery(CdkConnectedOverlay, true);
        ɵngcc0.ɵɵstaticViewQuery(_c6, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.origin = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cdkConnectedOverlay = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pickerInput = _t.first);
    } }, inputs: { isRange: "isRange", open: "open", placement: "placement", value: "value", disabled: "disabled", placeholder: "placeholder", readonly: "readonly", allowClear: "allowClear", autoFocus: "autoFocus", className: "className", format: "format", size: "size", suffixIcon: "suffixIcon" }, outputs: { valueChange: "valueChange", openChange: "openChange" }, exportAs: ["thyPicker"], ngContentSelectors: _c7, decls: 9, vars: 22, consts: [["cdkOverlayOrigin", "", 3, "click"], ["origin", "cdkOverlayOrigin"], ["thyInput", "", "readonly", "", 3, "thySize", "disabled", "value", "placeholder"], ["pickerInput", ""], [4, "ngTemplateOutlet"], ["tplRightRest", ""], ["cdkConnectedOverlay", "", "cdkConnectedOverlayBackdropClass", "cdk-overlay-transparent-backdrop", 3, "cdkConnectedOverlayOrigin", "cdkConnectedOverlayOpen", "cdkConnectedOverlayHasBackdrop", "cdkConnectedOverlayPositions", "positionChange", "backdropClick", "detach"], ["thyIconName", "close-circle-bold-fill", 3, "ngClass", "click", 4, "ngIf"], [3, "thyIconName", "ngClass"], ["thyIconName", "close-circle-bold-fill", 3, "ngClass", "click"], [2, "position", "relative"]], template: function ThyPickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵlistener("click", function ThyPickerComponent_Template_span_click_0_listener() { return ctx.onClickInputBox(); });
        ɵngcc0.ɵɵelementContainerStart(2);
        ɵngcc0.ɵɵelement(3, "input", 2, 3);
        ɵngcc0.ɵɵtemplate(5, ThyPickerComponent_ng_container_5_Template, 1, 0, "ng-container", 4);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, ThyPickerComponent_ng_template_6_Template, 4, 9, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(8, ThyPickerComponent_ng_template_8_Template, 2, 0, "ng-template", 6);
        ɵngcc0.ɵɵlistener("positionChange", function ThyPickerComponent_Template_ng_template_positionChange_8_listener($event) { return ctx.onPositionChange($event); })("backdropClick", function ThyPickerComponent_Template_ng_template_backdropClick_8_listener() { return ctx.onClickBackdrop(); })("detach", function ThyPickerComponent_Template_ng_template_detach_8_listener() { return ctx.onOverlayDetach(); });
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(1);
        const _r3 = ɵngcc0.ɵɵreference(7);
        ɵngcc0.ɵɵclassMapInterpolate3("", ctx.prefixCls, "-picker ", ctx.size ? ctx.prefixCls + "-picker-" + ctx.size : "", " ", ctx.className, "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵclassMapInterpolate2("form-control-", ctx.size, " form-control ", ctx.prefixCls, "-picker-input");
        ɵngcc0.ɵɵclassProp("thy-input-disabled", ctx.disabled)("thy-input-readonly", ctx.readonly);
        ɵngcc0.ɵɵpropertyInterpolate("value", ctx.getReadableValue());
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx.getPlaceholder());
        ɵngcc0.ɵɵproperty("thySize", ctx.size)("disabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("cdkConnectedOverlayOrigin", _r0)("cdkConnectedOverlayOpen", ctx.realOpenState)("cdkConnectedOverlayHasBackdrop", !ctx.isOpenHandledByUser())("cdkConnectedOverlayPositions", ctx.overlayPositions);
    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.ThyInputDirective, ɵngcc1.NgTemplateOutlet, ɵngcc6.CdkConnectedOverlay, ɵngcc1.NgIf, ɵngcc3.ThyIconComponent, ɵngcc1.NgClass], encapsulation: 2, changeDetection: 0 });
ThyPickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: DateHelperService }
];
ThyPickerComponent.propDecorators = {
    isRange: [{ type: Input }],
    open: [{ type: Input }],
    disabled: [{ type: Input }],
    placeholder: [{ type: Input }],
    readonly: [{ type: Input }],
    allowClear: [{ type: Input }],
    autoFocus: [{ type: Input }],
    className: [{ type: Input }],
    format: [{ type: Input }],
    size: [{ type: Input }],
    value: [{ type: Input }],
    suffixIcon: [{ type: Input }],
    placement: [{ type: Input }],
    valueChange: [{ type: Output }],
    openChange: [{ type: Output }],
    origin: [{ type: ViewChild, args: ['origin', { static: true },] }],
    cdkConnectedOverlay: [{ type: ViewChild, args: [CdkConnectedOverlay, { static: true },] }],
    pickerInput: [{ type: ViewChild, args: ['pickerInput', { static: true },] }]
};

class AbstractPickerComponent {
    constructor(cdr) {
        this.cdr = cdr;
        this.thyAllowClear = true;
        this.thyAutoFocus = false;
        this.thyDisabled = false;
        this.thySize = 'default';
        // tslint:disable-next-line: max-line-length
        this.thyAutoStartAndEnd = false; // only for range picker, Whether to automatically take the beginning and ending unixTime of the day
        this.thyDefaultPickerValue = null;
        this.thySuffixIcon = 'calendar';
        this.thyOpenChange = new EventEmitter();
        this.isRange = false;
        this.destroyed$ = new Subject();
        this.isCustomPlaceHolder = false;
        this.onlyEmitDate = false;
        this.onChangeFn = () => void 0;
        this.onTouchedFn = () => void 0;
    }
    get realOpenState() {
        return this.picker.realOpenState;
    }
    initValue() {
        this.thyValue = this.isRange ? [] : null;
    }
    ngOnInit() {
        this.setDefaultPlaceHolder();
        this.initValue();
    }
    ngOnChanges(changes) {
        if (changes.thyPlaceHolder && changes.thyPlaceHolder.firstChange && typeof this.thyPlaceHolder !== 'undefined') {
            this.isCustomPlaceHolder = true;
        }
    }
    ngOnDestroy() {
        this.destroyed$.next();
        this.destroyed$.complete();
    }
    closeOverlay() {
        this.picker.hideOverlay();
    }
    onValueChange(originalValue) {
        this.setFormatRule();
        this.thyValue = originalValue;
        if (this.isRange) {
            const vAsRange = this.thyValue;
            let value = { begin: null, end: null };
            if (vAsRange.length) {
                const [begin, end] = vAsRange;
                if (this.thyAutoStartAndEnd) {
                    value = {
                        begin: begin.startOfDay().getUnixTime(),
                        end: end.endOfDay().getUnixTime()
                    };
                }
                else {
                    value = {
                        begin: begin.getUnixTime(),
                        end: end.getUnixTime()
                    };
                }
            }
            this.onChangeFn(value);
        }
        else {
            const value = { date: null, with_time: this.withTime ? 1 : 0 };
            if (this.thyValue) {
                value.date = this.thyValue.getUnixTime();
            }
            if (this.onlyEmitDate) {
                this.onChangeFn(value.date);
            }
            else {
                this.onChangeFn(value);
            }
        }
        this.onTouchedFn();
    }
    setFormatRule() {
        if (!this.thyFormat) {
            if (this.withTime) {
                this.thyFormat = 'yyyy-MM-dd HH:mm';
            }
            else {
                if (!this.onlyEmitDate) {
                    this.thyFormat = 'yyyy-MM-dd';
                }
            }
        }
    }
    onOpenChange(open) {
        this.thyOpen = open;
        this.thyOpenChange.emit(open);
    }
    writeValue(originalValue) {
        const { value, withTime } = transformDateValue(originalValue);
        this.setValue(value);
        this.setTimePickerState(withTime);
        this.onlyEmitDate = typeof withTime === 'undefined';
        this.originWithTime = withTime;
        this.setFormatRule();
        this.cdr.markForCheck();
    }
    registerOnChange(fn) {
        this.onChangeFn = fn;
    }
    registerOnTouched(fn) {
        this.onTouchedFn = fn;
    }
    setTimePickerState(withTime) {
        this.withTime = withTime;
    }
    setDisabledState(disabled) {
        this.thyDisabled = disabled;
        this.cdr.markForCheck();
    }
    setDefaultPlaceHolder() {
        if (!this.isCustomPlaceHolder) {
            this.thyPlaceHolder = this.isRange ? ['开始日期', '结束日期'] : '请选择日期';
        }
        this.cdr.markForCheck();
    }
    setValue(value) {
        this.thyValue = makeValue(value, this.isRange);
    }
}
AbstractPickerComponent.ɵfac = function AbstractPickerComponent_Factory(t) { return new (t || AbstractPickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
AbstractPickerComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AbstractPickerComponent, viewQuery: function AbstractPickerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(ThyPickerComponent, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.picker = _t.first);
    } }, inputs: { thyAllowClear: "thyAllowClear", thyAutoFocus: "thyAutoFocus", thyDisabled: "thyDisabled", thySize: "thySize", thyAutoStartAndEnd: "thyAutoStartAndEnd", thyDefaultPickerValue: "thyDefaultPickerValue", thySuffixIcon: "thySuffixIcon", thyFormat: "thyFormat", thyOpen: "thyOpen", thyPlaceHolder: "thyPlaceHolder", thyDisabledDate: "thyDisabledDate", thyMinDate: "thyMinDate", thyMaxDate: "thyMaxDate", thyReadonly: "thyReadonly", thyOriginClassName: "thyOriginClassName", thyPanelClassName: "thyPanelClassName" }, outputs: { thyOpenChange: "thyOpenChange" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });
AbstractPickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
AbstractPickerComponent.propDecorators = {
    thyAllowClear: [{ type: Input }],
    thyAutoFocus: [{ type: Input }],
    thyDisabled: [{ type: Input }],
    thyOpen: [{ type: Input }],
    thyDisabledDate: [{ type: Input }],
    thyMinDate: [{ type: Input }],
    thyMaxDate: [{ type: Input }],
    thyPlaceHolder: [{ type: Input }],
    thyReadonly: [{ type: Input }],
    thyOriginClassName: [{ type: Input }],
    thyPanelClassName: [{ type: Input }],
    thySize: [{ type: Input }],
    thyFormat: [{ type: Input }],
    thyAutoStartAndEnd: [{ type: Input }],
    thyDefaultPickerValue: [{ type: Input }],
    thySuffixIcon: [{ type: Input }],
    thyOpenChange: [{ type: Output }],
    picker: [{ type: ViewChild, args: [ThyPickerComponent, { static: true },] }]
};
__decorate([
    InputBoolean(),
    __metadata("design:type", Object)
], AbstractPickerComponent.prototype, "thyAllowClear", void 0);
__decorate([
    InputBoolean(),
    __metadata("design:type", Object)
], AbstractPickerComponent.prototype, "thyAutoFocus", void 0);
__decorate([
    InputBoolean(),
    __metadata("design:type", Object)
], AbstractPickerComponent.prototype, "thyDisabled", void 0);
__decorate([
    InputBoolean(),
    __metadata("design:type", Boolean)
], AbstractPickerComponent.prototype, "thyOpen", void 0);
__decorate([
    InputBoolean(),
    __metadata("design:type", Boolean)
], AbstractPickerComponent.prototype, "thyReadonly", void 0);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CalendarFooterComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'calendar-footer',
                exportAs: 'calendarFooter',
                template: "<div *ngIf=\"isShowTime || isCanTime\" class=\"time-picker-section\" (click)=\"$event.stopPropagation()\">\n  <a\n    href=\"javascript:;\"\n    *ngIf=\"isCanTime\"\n    class=\"link-has-icon time-picker-set-btn\"\n    (click)=\"changeTimeShowMode('show')\"\n  >\n    <thy-icon thyIconName=\"clock-circle\"></thy-icon>\u8BBE\u7F6E\u65F6\u95F4\n  </a>\n  <thy-time-picker\n    *ngIf=\"isShowTime\"\n    class=\"time-picker-wrap\"\n    [showMeridian]=\"false\"\n    [ngModel]=\"value?.nativeDate\"\n    (ngModelChange)=\"onSelectTime($event)\"\n  ></thy-time-picker>\n  <div class=\"time-picker-btn-wrap\">\n    <button *ngIf=\"!isCanTime\" class=\"time-picker-ok-btn\" thyButton=\"primary\" thySize=\"sm\" (click)=\"onTimeOk()\">\n      \u786E\u5B9A\n    </button>\n    <button class=\"time-picker-clear-btn\" thyButton=\"link-secondary\" thySize=\"sm\" (click)=\"onClear()\">\n      \u6E05\u9664\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ViewContainerRef }]; }, { showTime: [{
            type: Input
        }], mustShowTime: [{
            type: Input
        }], selectTime: [{
            type: Output
        }], clickOk: [{
            type: Output
        }], clickRemove: [{
            type: Output
        }], showTimePickerChange: [{
            type: Output
        }], value: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateHelperService, [{
        type: Injectable,
        args: [{
                providedIn: 'root',
                useFactory: DATE_HELPER_SERVICE_FACTORY
            }]
    }], function () { return []; }, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CalendarHeaderComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'calendar-header',
                exportAs: 'calendarHeader',
                template: "<div class=\"{{ prefixCls }}-header\">\n  <div style=\"position: relative;\">\n    <a *ngIf=\"enablePrev\" class=\"{{ prefixCls }}-prev-year-btn\" role=\"button\" (click)=\"previousYear()\" title=\"\u53BB\u5E74\"></a>\n    <a\n      *ngIf=\"enablePrev\"\n      class=\"{{ prefixCls }}-prev-month-btn\"\n      role=\"button\"\n      (click)=\"previousMonth()\"\n      title=\"\u4E0A\u6708\"\n    ></a>\n\n    <span class=\"{{ prefixCls }}-my-select\">\n      <ng-container *ngFor=\"let selector of yearMonthDaySelectors\">\n        <a\n          class=\"{{ selector.className }}\"\n          role=\"button\"\n          (click)=\"selector.onClick ? selector.onClick() : null\"\n          title=\"{{ selector.title || null }}\"\n        >\n          {{ selector.label }}\n        </a>\n      </ng-container>\n    </span>\n\n    <a *ngIf=\"enableNext\" class=\"{{ prefixCls }}-next-month-btn\" role=\"button\" (click)=\"nextMonth()\" title=\"\u4E0B\u4E2A\u6708\"></a>\n    <a *ngIf=\"enableNext\" class=\"{{ prefixCls }}-next-year-btn\" role=\"button\" (click)=\"nextYear()\" title=\"\u4E0B\u4E00\u5E74\"></a>\n  </div>\n\n  <ng-container [ngSwitch]=\"panelMode\">\n    <ng-container *ngSwitchCase=\"'decade'\">\n      <decade-panel [value]=\"value\" (valueChange)=\"onChooseDecade($event)\"></decade-panel>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'year'\">\n      <year-panel\n        [value]=\"value\"\n        [disabledDate]=\"disabledYear\"\n        (valueChange)=\"onChooseYear($event)\"\n        (decadePanelShow)=\"changePanel('decade')\"\n      ></year-panel>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'month'\">\n      <month-panel\n        [value]=\"value\"\n        [disabledDate]=\"disabledMonth\"\n        (valueChange)=\"onChooseMonth($event)\"\n        (yearPanelShow)=\"changePanel('year')\"\n      ></month-panel>\n    </ng-container>\n  </ng-container>\n</div>\n"
            }]
    }], function () { return [{ type: DateHelperService }]; }, { enablePrev: [{
            type: Input
        }], enableNext: [{
            type: Input
        }], valueChange: [{
            type: Output
        }], panelModeChange: [{
            type: Output
        }], chooseDecade: [{
            type: Output
        }], chooseYear: [{
            type: Output
        }], chooseMonth: [{
            type: Output
        }], value: [{
            type: Input
        }], disabledMonth: [{
            type: Input
        }], disabledYear: [{
            type: Input
        }], panelMode: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DecadePanelComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'decade-panel',
                exportAs: 'decadePanel',
                template: "<div class=\"{{ prefixCls }}\">\n  <div class=\"{{ prefixCls }}-header\">\n    <a class=\"{{ prefixCls }}-prev-century-btn\" role=\"button\" (click)=\"previousCentury()\" title=\"\u4E0A\u4E00\u4E16\u7EAA\"></a>\n\n    <div class=\"{{ prefixCls }}-century\">{{ startYear }}-{{ endYear }}</div>\n    <a class=\"{{ prefixCls }}-next-century-btn\" role=\"button\" (click)=\"nextCentury()\" title=\"\u4E0B\u4E00\u4E16\u7EAA\"></a>\n  </div>\n  <div class=\"{{ prefixCls }}-body\">\n    <table class=\"{{ prefixCls }}-table\" cellSpacing=\"0\" role=\"grid\">\n      <tbody class=\"{{ prefixCls }}-tbody\">\n        <tr *ngFor=\"let row of panelDecades\" role=\"row\">\n          <td\n            *ngFor=\"let cell of row; trackBy: trackPanelDecade\"\n            role=\"gridcell\"\n            title=\"{{ cell.title }}\"\n            (click)=\"cell.onClick()\"\n            [ngClass]=\"cell.classMap\"\n          >\n            <a class=\"{{ prefixCls }}-decade\">{{ cell.content }}</a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n"
            }]
    }], function () { return []; }, { valueChange: [{
            type: Output
        }], value: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MonthPanelComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'month-panel',
                exportAs: 'monthPanel',
                template: "<div class=\"{{ prefixCls }}\">\n  <div class=\"{{ prefixCls }}-header\">\n    <a class=\"{{ prefixCls }}-prev-year-btn\" role=\"button\" (click)=\"previousYear()\" title=\"\u53BB\u5E74\"></a>\n\n    <a class=\"{{ prefixCls }}-year-select\" role=\"button\" (click)=\"yearPanelShow.emit()\" title=\"\u9009\u62E9\u5E74\u4EFD\">\n      <span class=\"{{ prefixCls }}-year-select-content\">{{ value.getYear() }}</span>\n    </a>\n\n    <a class=\"{{ prefixCls }}-next-year-btn\" role=\"button\" (click)=\"nextYear()\" title=\"\u4E0B\u4E00\u5E74\"></a>\n  </div>\n  <div class=\"{{ prefixCls }}-body\">\n    <month-table\n      [prefixCls]=\"'thy-calendar'\"\n      [disabledDate]=\"disabledDate\"\n      [value]=\"value\"\n      (valueChange)=\"valueChange.emit($event)\"\n    ></month-table>\n  </div>\n</div>\n"
            }]
    }], function () { return []; }, { valueChange: [{
            type: Output
        }], yearPanelShow: [{
            type: Output
        }], value: [{
            type: Input
        }], disabledDate: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatePopupComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'date-popup',
                exportAs: 'datePopup',
                template: "<div class=\"{{ prefixCls }}-picker-container {{ className }}\">\n  <div\n    class=\"{{ prefixCls }} {{ showWeek ? prefixCls + '-week-number' : '' }}\n     {{ isRange ? prefixCls + '-range' : '' }}\"\n  >\n    <div class=\"{{ prefixCls }}-panel\">\n      <div class=\"{{ prefixCls }}-date-panel\">\n        <ng-container *ngIf=\"isRange; else tplSinglePart\">\n          <!-- Range Selectors -->\n          <ng-container *ngTemplateOutlet=\"tplRangePart; context: { partType: 'left' }\"></ng-container>\n          <ng-container *ngTemplateOutlet=\"tplRangePart; context: { partType: 'right' }\"></ng-container>\n        </ng-container>\n\n        <ng-container *ngIf=\"!isRange\">\n          <!-- Single ONLY -->\n          <ng-container *ngTemplateOutlet=\"tplFooter\"></ng-container>\n        </ng-container>\n      </div>\n      <ng-container *ngIf=\"isRange\">\n        <!-- Range ONLY -->\n        <ng-container *ngTemplateOutlet=\"tplFooter\"></ng-container>\n      </ng-container>\n    </div>\n  </div>\n</div>\n\n<ng-template #tplInnerPopup let-partType=\"partType\">\n  <inner-popup\n    [showWeek]=\"showWeek\"\n    [panelMode]=\"getPanelMode(partType)\"\n    (panelModeChange)=\"onPanelModeChange($event, partType)\"\n    [value]=\"getValueBySelector(partType)\"\n    [disabledDate]=\"disabledDate\"\n    [dateRender]=\"dateRender\"\n    [selectedValue]=\"selectedValue\"\n    [hoverValue]=\"hoverValue\"\n    [enablePrev]=\"enablePrevNext('prev', partType)\"\n    [enableNext]=\"enablePrevNext('next', partType)\"\n    (dayHover)=\"onDayHover($event)\"\n    (selectDate)=\"changeValueFromSelect($event)\"\n    (headerChange)=\"onHeaderChange($event, partType)\"\n  ></inner-popup>\n</ng-template>\n\n<ng-template #tplFooter>\n  <calendar-footer\n    [showTime]=\"showTime\"\n    [mustShowTime]=\"mustShowTime\"\n    [value]=\"value\"\n    (showTimePickerChange)=\"onShowTimePickerChange($event)\"\n    (selectTime)=\"onSelectTime($event)\"\n    (clickOk)=\"onClickOk()\"\n    (clickRemove)=\"onClickRemove()\"\n  ></calendar-footer>\n</ng-template>\n\n<!-- Single ONLY -->\n<ng-template #tplSinglePart>\n  <div>\n    <ng-container *ngTemplateOutlet=\"tplInnerPopup\"></ng-container>\n  </div>\n</ng-template>\n\n<!-- Range ONLY -->\n<ng-template #tplRangePart let-partType=\"partType\">\n  <div class=\"{{ prefixCls }}-range-part {{ prefixCls }}-range-{{ partType }}\">\n    <div style=\"outline: none;\">\n      <ng-container *ngTemplateOutlet=\"tplInnerPopup; context: { partType: partType }\"></ng-container>\n    </div>\n  </div>\n</ng-template>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { panelModeChange: [{
            type: Output
        }], calendarChange: [{
            type: Output
        }], valueChange: [{
            type: Output
        }], resultOk: [{
            type: Output
        }], showTimePickerChange: [{
            type: Output
        }], value: [{
            type: Input
        }], disabledDate: [{
            type: Input
        }], panelMode: [{
            type: Input
        }], isRange: [{
            type: Input
        }], showWeek: [{
            type: Input
        }], format: [{
            type: Input
        }], minDate: [{
            type: Input
        }], maxDate: [{
            type: Input
        }], showToday: [{
            type: Input
        }], showTime: [{
            type: Input
        }], mustShowTime: [{
            type: Input
        }], dateRender: [{
            type: Input
        }], className: [{
            type: Input
        }], defaultPickerValue: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InnerPopupComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'inner-popup',
                exportAs: 'innerPopup',
                template: "<calendar-header\n  [(panelMode)]=\"panelMode\"\n  (panelModeChange)=\"panelModeChange.emit($event)\"\n  [(value)]=\"value\"\n  (valueChange)=\"headerChange.emit($event)\"\n  [enablePrev]=\"enablePrev\"\n  [enableNext]=\"enableNext\"\n></calendar-header>\n\n<div class=\"{{ prefixCls }}-body\">\n  <date-table\n    [showWeek]=\"showWeek\"\n    [value]=\"value\"\n    (valueChange)=\"onSelectDate($event)\"\n    showWeekNumber=\"false\"\n    [disabledDate]=\"disabledDate\"\n    [dateCellRender]=\"dateRender\"\n    [selectedValue]=\"selectedValue\"\n    [hoverValue]=\"hoverValue\"\n    (dayHover)=\"dayHover.emit($event)\"\n  ></date-table>\n</div>\n"
            }]
    }], function () { return []; }, { panelModeChange: [{
            type: Output
        }], headerChange: [{
            type: Output
        }], selectDate: [{
            type: Output
        }], dayHover: [{
            type: Output
        }], value: [{
            type: Input
        }], showWeek: [{
            type: Input
        }], enablePrev: [{
            type: Input
        }], enableNext: [{
            type: Input
        }], disabledDate: [{
            type: Input
        }], dateRender: [{
            type: Input
        }], selectedValue: [{
            type: Input
        }], hoverValue: [{
            type: Input
        }], panelMode: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(YearPanelComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'year-panel',
                exportAs: 'yearPanel',
                template: "<div class=\"{{ prefixCls }}\">\n  <div class=\"{{ prefixCls }}-header\">\n    <a class=\"{{ prefixCls }}-prev-decade-btn\" role=\"button\" (click)=\"previousDecade()\" title=\"\u4E0A\u4E00\u5E74\u4EE3\"></a>\n    <a class=\"{{ prefixCls }}-decade-select\" role=\"button\" (click)=\"decadePanelShow.emit()\" title=\"\u9009\u62E9\u5E74\u4EE3\">\n      <span class=\"{{ prefixCls }}-decade-select-content\"> {{ startYear }}-{{ endYear }} </span>\n    </a>\n\n    <a class=\"{{ prefixCls }}-next-decade-btn\" (click)=\"nextDecade()\" title=\"\u4E0B\u4E00\u5E74\u4EE3\" role=\"button\"></a>\n  </div>\n  <div class=\"{{ prefixCls }}-body\">\n    <table class=\"{{ prefixCls }}-table\" cellSpacing=\"0\" role=\"grid\">\n      <tbody class=\"{{ prefixCls }}-tbody\">\n        <tr *ngFor=\"let row of panelYears\" role=\"row\">\n          <td\n            *ngFor=\"let yearCell of row; trackBy: trackPanelYear\"\n            role=\"gridcell\"\n            title=\"{{ yearCell.title }}\"\n            (click)=\"yearCell.disabled ? null : yearCell.onClick()\"\n            [ngClass]=\"yearCell.classMap\"\n          >\n            <a class=\"{{ prefixCls }}-year\">{{ yearCell.content }}</a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n"
            }]
    }], function () { return []; }, { valueChange: [{
            type: Output
        }], decadePanelShow: [{
            type: Output
        }], value: [{
            type: Input
        }], disabledDate: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MonthTableComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'month-table',
                exportAs: 'monthTable',
                template: "<table class=\"{{ prefixCls }}-month-panel-table\" cellSpacing=\"0\" role=\"grid\">\n  <tbody class=\"{{ prefixCls }}-month-panel-tbody\">\n    <tr *ngFor=\"let row of panelMonths; trackBy: trackYear\" role=\"row\">\n      <td\n        *ngFor=\"let monthCell of row; trackBy: trackPanelMonth\"\n        role=\"gridcell\"\n        title=\"{{ monthCell.title }}\"\n        (click)=\"monthCell.disabled ? null : monthCell.onClick()\"\n        [ngClass]=\"monthCell.classMap\"\n      >\n        <ng-container [ngSwitch]=\"prefixCls\">\n          <ng-container *ngSwitchCase=\"'thy-calendar'\">\n            <a class=\"{{ prefixCls }}-month-panel-month\">{{ monthCell.content }}</a>\n          </ng-container>\n        </ng-container>\n      </td>\n    </tr>\n  </tbody>\n</table>\n"
            }]
    }], function () { return [{ type: DateHelperService }]; }, { value: [{
            type: Input
        }], prefixCls: [{
            type: Input
        }], valueChange: [{
            type: Output
        }], disabledDate: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateTableComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'date-table',
                exportAs: 'dateTable',
                template: "<table class=\"{{ prefixCls }}-table\" cellSpacing=\"0\" role=\"grid\">\n  <thead>\n    <tr role=\"row\">\n      <th *ngIf=\"showWeek\" role=\"columnheader\" class=\"{{ prefixCls }}-column-header {{ prefixCls }}-week-number-header\">\n        <span class=\"{{ prefixCls }}-column-header-inner\">x</span>\n      </th>\n      <th *ngFor=\"let cell of headWeekDays\" role=\"columnheader\" title=\"{{ cell.short }}\" class=\"{{ prefixCls }}-column-header\">\n        <span *ngIf=\"prefixCls === 'thy-calendar'\" class=\"{{ prefixCls }}-column-header-inner\">{{ cell.veryShort }}</span>\n        <span *ngIf=\"prefixCls === 'thy-calendar-full'\" class=\"{{ prefixCls }}-column-header-inner\">\u5468{{ cell.veryShort }}</span>\n      </th>\n    </tr>\n  </thead>\n  <tbody class=\"{{ prefixCls }}-tbody\">\n    <tr *ngFor=\"let row of weekRows; trackBy: trackByWeekFn\" [ngClass]=\"row.classMap\" role=\"row\">\n      <td *ngIf=\"row.weekNum\" role=\"gridcell\" class=\"{{ prefixCls }}-week-number-cell\">\n        {{ row.weekNum }}\n      </td>\n      <!-- \u5728td\u4E2D\u5220\u9664\u4E86\u9F20\u6807\u4E8B\u4EF6 -->\n      <!-- \u53BB\u6389tooltip\uFF0C\u6545\u53BB\u6389title\u5C5E\u6027 -->\n      <td\n        *ngFor=\"let cell of row.dateCells; trackBy: trackByDateFn\"\n        role=\"gridcell\"\n        [ngClass]=\"cell.classMap\"\n        (click)=\"cell.isDisabled ? null : cell.onClick()\"\n        date-table-cell\n        [prefixCls]=\"prefixCls\"\n        [cell]=\"cell\"\n      ></td>\n    </tr>\n  </tbody>\n</table>\n"
            }]
    }], function () { return [{ type: DateHelperService }]; }, { prefixCls: [{
            type: Input
        }], showWeek: [{
            type: Input
        }], dayHover: [{
            type: Output
        }], valueChange: [{
            type: Output
        }], value: [{
            type: Input
        }], selectedValue: [{
            type: Input
        }], hoverValue: [{
            type: Input
        }], disabledDate: [{
            type: Input
        }], dateCellRender: [{
            type: Input
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DateTableCellComponent, [{
        type: Component,
        args: [{
                selector: '[date-table-cell]',
                exportAs: 'dateTableCell',
                template: "<ng-container [ngSwitch]=\"prefixCls\">\n  <ng-container *ngSwitchCase=\"'thy-calendar'\">\n    <ng-container [ngSwitch]=\"true\">\n      <ng-container *ngSwitchCase=\"isTemplateRef(cell.dateCellRender)\">\n        <ng-container *ngTemplateOutlet=\"cell.dateCellRender; context: { $implicit: cell.value }\"></ng-container>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"isNonEmptyString(cell.dateCellRender)\">\n        <span [innerHTML]=\"cell.dateCellRender\"></span>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <div class=\"{{ prefixCls }}-date\" [attr.aria-selected]=\"cell.isSelected\" [attr.aria-disabled]=\"cell.isDisabled\">\n          {{ cell.content }}\n        </div>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'thy-calendar-full'\">\n    <div\n      tabindex=\"0\"\n      class=\"{{ prefixCls }}-date thy-calendar-full-cell-inner\"\n      [class.thy-calendar-full-calendar-date-today]=\"cell.isToday\"\n    >\n      <ng-container *ngIf=\"cell.fullCellRender; else defaultCell\">\n        <ng-container *ngTemplateOutlet=\"$any(cell.fullCellRender); context: { $implicit: cell.value }\"> </ng-container>\n      </ng-container>\n      <ng-template #defaultCell>\n        <div class=\"{{ prefixCls }}-date-value\">\n          <span class=\"{{ prefixCls }}-date-value-today-text\">\n            <span class=\"{{ prefixCls }}-date-value-text\">{{ cell.content }}</span>\n          </span>\n        </div>\n        <div class=\"{{ prefixCls }}-date-content\">\n          <ng-container *ngTemplateOutlet=\"$any(cell.dateCellRender); context: { $implicit: cell.value }\"> </ng-container>\n        </div>\n      </ng-template>\n    </div>\n  </ng-container>\n</ng-container>\n"
            }]
    }], function () { return []; }, { prefixCls: [{
            type: Input
        }], cell: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LibPackerModule, { declarations: function () { return [CalendarHeaderComponent, CalendarFooterComponent, DateTableComponent, YearPanelComponent, MonthTableComponent, MonthPanelComponent, DecadePanelComponent, InnerPopupComponent, DatePopupComponent, DateTableCellComponent]; }, imports: function () { return [CommonModule, FormsModule, ThyButtonModule, ThyIconModule, ThyTimePickerModule]; }, exports: function () { return [CalendarHeaderComponent, CalendarFooterComponent, DateTableComponent, YearPanelComponent, MonthTableComponent, MonthPanelComponent, DecadePanelComponent, InnerPopupComponent, DatePopupComponent, DateTableCellComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LibPackerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, FormsModule, ThyButtonModule, ThyIconModule, ThyTimePickerModule],
                exports: [
                    CalendarHeaderComponent,
                    CalendarFooterComponent,
                    DateTableComponent,
                    YearPanelComponent,
                    MonthTableComponent,
                    MonthPanelComponent,
                    DecadePanelComponent,
                    InnerPopupComponent,
                    DatePopupComponent,
                    DateTableCellComponent
                ],
                declarations: [
                    CalendarHeaderComponent,
                    CalendarFooterComponent,
                    DateTableComponent,
                    YearPanelComponent,
                    MonthTableComponent,
                    MonthPanelComponent,
                    DecadePanelComponent,
                    InnerPopupComponent,
                    DatePopupComponent,
                    DateTableCellComponent
                ]
            }]
    }], null, null); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyPickerComponent, [{
        type: Component,
        args: [{
                selector: 'thy-picker',
                exportAs: 'thyPicker',
                template: "<span\n  cdkOverlayOrigin\n  #origin=\"cdkOverlayOrigin\"\n  class=\"{{ prefixCls }}-picker {{ size ? prefixCls + '-picker-' + size : '' }} {{ className }}\"\n  (click)=\"onClickInputBox()\"\n>\n  <ng-container>\n    <input\n      #pickerInput\n      thyInput\n      class=\"form-control-{{ size }} form-control {{ prefixCls }}-picker-input\"\n      [thySize]=\"size\"\n      [class.thy-input-disabled]=\"disabled\"\n      [class.thy-input-readonly]=\"readonly\"\n      [disabled]=\"disabled\"\n      readonly\n      value=\"{{ getReadableValue() }}\"\n      placeholder=\"{{ getPlaceholder() }}\"\n    />\n    <ng-container *ngTemplateOutlet=\"tplRightRest\"></ng-container>\n  </ng-container>\n</span>\n\n<!-- Right operator icons -->\n<ng-template #tplRightRest>\n  <span class=\"{{ prefixCls }}-picker-clear\">\n    <thy-icon\n      thyIconName=\"close-circle-bold-fill\"\n      *ngIf=\"!disabled && !isEmptyValue(value) && allowClear && !readonly\"\n      (click)=\"onClickClear($event)\"\n      ngClass=\"remove-link remove-link-{{ size }}\"\n    ></thy-icon>\n  </span>\n  <span class=\"{{ prefixCls }}-picker-icon\">\n    <thy-icon [thyIconName]=\"suffixIcon\" ngClass=\"remove-link-{{ size }}\"></thy-icon>\n  </span>\n</ng-template>\n\n<!-- Overlay -->\n<ng-template\n  cdkConnectedOverlay\n  [cdkConnectedOverlayOrigin]=\"origin\"\n  [cdkConnectedOverlayOpen]=\"realOpenState\"\n  [cdkConnectedOverlayHasBackdrop]=\"!isOpenHandledByUser()\"\n  [cdkConnectedOverlayPositions]=\"overlayPositions\"\n  cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n  (positionChange)=\"onPositionChange($event)\"\n  (backdropClick)=\"onClickBackdrop()\"\n  (detach)=\"onOverlayDetach()\"\n>\n  <div style=\"position: relative;\">\n    <!-- Compatible for overlay that not support offset dynamically and immediately -->\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: DateHelperService }]; }, { isRange: [{
            type: Input
        }], open: [{
            type: Input
        }], placement: [{
            type: Input
        }], valueChange: [{
            type: Output
        }], openChange: [{
            type: Output
        }], value: [{
            type: Input
        }], disabled: [{
            type: Input
        }], placeholder: [{
            type: Input
        }], readonly: [{
            type: Input
        }], allowClear: [{
            type: Input
        }], autoFocus: [{
            type: Input
        }], className: [{
            type: Input
        }], format: [{
            type: Input
        }], size: [{
            type: Input
        }], suffixIcon: [{
            type: Input
        }], origin: [{
            type: ViewChild,
            args: ['origin', { static: true }]
        }], cdkConnectedOverlay: [{
            type: ViewChild,
            args: [CdkConnectedOverlay, { static: true }]
        }], pickerInput: [{
            type: ViewChild,
            args: ['pickerInput', { static: true }]
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AbstractPickerComponent, [{
        type: Directive
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { thyAllowClear: [{
            type: Input
        }], thyAutoFocus: [{
            type: Input
        }], thyDisabled: [{
            type: Input
        }], thySize: [{
            type: Input
        }], thyAutoStartAndEnd: [{
            type: Input
        }], thyDefaultPickerValue: [{
            type: Input
        }], thySuffixIcon: [{
            type: Input
        }], thyOpenChange: [{
            type: Output
        }], thyFormat: [{
            type: Input
        }], thyOpen: [{
            type: Input
        }], thyPlaceHolder: [{
            type: Input
        }], thyDisabledDate: [{
            type: Input
        }], thyMinDate: [{
            type: Input
        }], thyMaxDate: [{
            type: Input
        }], thyReadonly: [{
            type: Input
        }], thyOriginClassName: [{
            type: Input
        }], thyPanelClassName: [{
            type: Input
        }], picker: [{
            type: ViewChild,
            args: [ThyPickerComponent, { static: true }]
        }] }); })();

class BasePickerComponent extends AbstractPickerComponent {
    constructor(cdr) {
        super(cdr);
        this.showWeek = false;
        this.thyOnPanelChange = new EventEmitter();
        this.thyOnCalendarChange = new EventEmitter();
        this.thyMustShowTime = false;
        this.thyPlacement = 'bottomLeft';
        this.thyOnOk = new EventEmitter();
    }
    get thyShowTime() {
        return this._showTime;
    }
    set thyShowTime(value) {
        this._showTime = typeof value === 'object' ? value : coerceBooleanProperty(value);
    }
    ngOnInit() {
        super.ngOnInit();
        if (!this.thyFormat) {
            if (this.showWeek) {
                this.thyFormat = 'yyyy-ww';
            }
            else {
                this.thyFormat = this.thyShowTime ? 'yyyy-MM-dd HH:mm' : 'yyyy-MM-dd';
            }
        }
        this.setDefaultTimePickerState();
    }
    onValueChange(value) {
        this.restoreTimePickerState(value);
        super.onValueChange(value);
        this.closeOverlay();
    }
    // Displays the time directly when the time must be displayed by default
    setDefaultTimePickerState() {
        this.withTime = this.thyMustShowTime;
    }
    // Restore after clearing time to select whether the original picker time is displayed or not
    restoreTimePickerState(value) {
        if (!value) {
            this.withTime = this.thyMustShowTime || this.originWithTime;
        }
    }
    // Emit thyOnCalendarChange when select date by thy-range-picker
    onCalendarChange(value) {
        if (this.isRange) {
            const rangeValue = value.map(x => x.nativeDate);
            this.thyOnCalendarChange.emit(rangeValue);
        }
    }
    onShowTimePickerChange(show) {
        this.withTime = show;
    }
    onResultOk() {
        if (this.isRange) {
            const value = this.thyValue;
            if (value.length) {
                this.thyOnOk.emit([value[0].nativeDate, value[1].nativeDate]);
            }
            else {
                this.thyOnOk.emit([]);
            }
        }
        else {
            if (this.thyValue) {
                this.thyOnOk.emit(this.thyValue.nativeDate);
            }
            else {
                this.thyOnOk.emit(null);
            }
        }
        this.closeOverlay();
    }
    onOpenChange(open) {
        this.thyOpenChange.emit(open);
    }
}
BasePickerComponent.ɵfac = function BasePickerComponent_Factory(t) { return new (t || BasePickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
BasePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BasePickerComponent, selectors: [["ng-component"]], inputs: { thyMustShowTime: "thyMustShowTime", thyPlacement: "thyPlacement", thyShowTime: "thyShowTime", thyDateRender: "thyDateRender", thyMode: "thyMode" }, outputs: { thyOnPanelChange: "thyOnPanelChange", thyOnCalendarChange: "thyOnCalendarChange", thyOnOk: "thyOnOk" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function BasePickerComponent_Template(rf, ctx) { }, encapsulation: 2 });
BasePickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
BasePickerComponent.propDecorators = {
    thyDateRender: [{ type: Input }],
    thyMode: [{ type: Input }],
    thyOnPanelChange: [{ type: Output }],
    thyOnCalendarChange: [{ type: Output }],
    thyShowTime: [{ type: Input }],
    thyMustShowTime: [{ type: Input }],
    thyPlacement: [{ type: Input }],
    thyOnOk: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BasePickerComponent, [{
        type: Component,
        args: [{
                template: ``
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { thyOnPanelChange: [{
            type: Output
        }], thyOnCalendarChange: [{
            type: Output
        }], thyMustShowTime: [{
            type: Input
        }], thyPlacement: [{
            type: Input
        }], thyOnOk: [{
            type: Output
        }], thyShowTime: [{
            type: Input
        }], thyDateRender: [{
            type: Input
        }], thyMode: [{
            type: Input
        }] }); })();

class HeaderPickerComponent extends AbstractPickerComponent {
    constructor(cdr) {
        super(cdr);
    }
    ngOnInit() {
        super.ngOnInit();
        this.panelMode = this.endPanelMode;
        const allHeaderPanels = ['decade', 'year', 'month'];
        this.supportPanels = allHeaderPanels.slice(0, allHeaderPanels.indexOf(this.endPanelMode) + 1);
    }
    onPanelModeChange(mode) {
        if (this.supportPanels.indexOf(mode) > -1) {
            this.panelMode = mode;
        }
        else {
            // Since the default "click year" logic can be "year panel" -> "date panel", we need force to the end panel otherwise
            this.panelMode = this.endPanelMode;
        }
    }
    onChooseValue(mode, value) {
        if (this.endPanelMode === mode) {
            super.onValueChange(value);
            this.closeOverlay();
        }
    }
    onOpenChange(open) {
        if (!open) {
            this.cleanUp();
        }
        this.thyOpenChange.emit(open);
    }
    // Restore some initial props to let open as new in next time
    cleanUp() {
        this.panelMode = this.endPanelMode;
    }
}
HeaderPickerComponent.ɵfac = function HeaderPickerComponent_Factory(t) { return new (t || HeaderPickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
HeaderPickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: HeaderPickerComponent, selectors: [["ng-component"]], inputs: { thyPlaceHolder: "thyPlaceHolder", thyDefaultValue: "thyDefaultValue", thyFormat: "thyFormat" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function HeaderPickerComponent_Template(rf, ctx) { }, encapsulation: 2 });
HeaderPickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
HeaderPickerComponent.propDecorators = {
    thyPlaceHolder: [{ type: Input }],
    thyDefaultValue: [{ type: Input }],
    thyFormat: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderPickerComponent, [{
        type: Component,
        args: [{
                template: ``
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { thyPlaceHolder: [{
            type: Input
        }], thyDefaultValue: [{
            type: Input
        }], thyFormat: [{
            type: Input
        }] }); })();

class ThyDatePickerComponent extends BasePickerComponent {
    constructor(cdr, renderer, elementRef) {
        super(cdr);
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.isRange = false;
        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');
    }
}
ThyDatePickerComponent.ɵfac = function ThyDatePickerComponent_Factory(t) { return new (t || ThyDatePickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyDatePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyDatePickerComponent, selectors: [["thy-date-picker"]], exportAs: ["thyDatePicker"], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => ThyDatePickerComponent)
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 14, consts: [[3, "isRange", "value", "open", "disabled", "format", "allowClear", "className", "autoFocus", "placeholder", "readonly", "size", "suffixIcon", "placement", "valueChange", "openChange"], [3, "isRange", "showWeek", "panelMode", "defaultPickerValue", "value", "showTime", "mustShowTime", "format", "dateRender", "disabledDate", "minDate", "maxDate", "className", "panelModeChange", "showTimePickerChange", "valueChange", "calendarChange", "resultOk", 4, "ngIf"], [3, "isRange", "showWeek", "panelMode", "defaultPickerValue", "value", "showTime", "mustShowTime", "format", "dateRender", "disabledDate", "minDate", "maxDate", "className", "panelModeChange", "showTimePickerChange", "valueChange", "calendarChange", "resultOk"]], template: function ThyDatePickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "thy-picker", 0);
        ɵngcc0.ɵɵlistener("valueChange", function ThyDatePickerComponent_Template_thy_picker_valueChange_0_listener($event) { return ctx.onValueChange($event); })("openChange", function ThyDatePickerComponent_Template_thy_picker_openChange_0_listener($event) { return ctx.onOpenChange($event); });
        ɵngcc0.ɵɵtemplate(1, ThyDatePickerComponent_date_popup_1_Template, 1, 13, "date-popup", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("isRange", ctx.isRange)("value", ctx.thyValue)("open", ctx.thyOpen)("disabled", ctx.thyDisabled)("format", ctx.thyFormat)("allowClear", ctx.thyAllowClear)("className", ctx.thyOriginClassName)("autoFocus", ctx.thyAutoFocus)("placeholder", ctx.thyPlaceHolder)("readonly", ctx.thyReadonly)("size", ctx.thySize)("suffixIcon", ctx.thySuffixIcon)("placement", ctx.thyPlacement);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.realOpenState);
    } }, directives: [ThyPickerComponent, ɵngcc1.NgIf, DatePopupComponent], encapsulation: 2, changeDetection: 0 });
ThyDatePickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: Renderer2 },
    { type: ElementRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDatePickerComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'thy-date-picker',
                exportAs: 'thyDatePicker',
                template: "<thy-picker\n  [isRange]=\"isRange\"\n  [value]=\"thyValue\"\n  (valueChange)=\"onValueChange($event)\"\n  [open]=\"thyOpen\"\n  [disabled]=\"thyDisabled\"\n  [format]=\"thyFormat\"\n  [allowClear]=\"thyAllowClear\"\n  [className]=\"thyOriginClassName\"\n  [autoFocus]=\"thyAutoFocus\"\n  [placeholder]=\"thyPlaceHolder\"\n  [readonly]=\"thyReadonly\"\n  [size]=\"thySize\"\n  [suffixIcon]=\"thySuffixIcon\"\n  [placement]=\"thyPlacement\"\n  (openChange)=\"onOpenChange($event)\"\n>\n  <date-popup\n    *ngIf=\"realOpenState\"\n    [isRange]=\"isRange\"\n    [showWeek]=\"showWeek\"\n    [panelMode]=\"thyMode\"\n    [defaultPickerValue]=\"thyDefaultPickerValue\"\n    (panelModeChange)=\"thyOnPanelChange.emit($event)\"\n    (showTimePickerChange)=\"onShowTimePickerChange($event)\"\n    [value]=\"thyValue\"\n    (valueChange)=\"onValueChange($event)\"\n    (calendarChange)=\"onCalendarChange($event)\"\n    [showTime]=\"thyShowTime\"\n    [mustShowTime]=\"withTime\"\n    [format]=\"thyFormat\"\n    [dateRender]=\"thyDateRender\"\n    [disabledDate]=\"thyDisabledDate\"\n    [minDate]=\"thyMinDate\"\n    [maxDate]=\"thyMaxDate\"\n    [className]=\"thyPanelClassName\"\n    (resultOk)=\"onResultOk()\"\n  ></date-popup>\n</thy-picker>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => ThyDatePickerComponent)
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();

class ThyMonthPickerComponent extends HeaderPickerComponent {
    constructor(cdr, renderer, elementRef) {
        super(cdr);
        this.thyFormat = 'yyyy-MM';
        this.endPanelMode = 'month';
        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');
    }
}
ThyMonthPickerComponent.ɵfac = function ThyMonthPickerComponent_Factory(t) { return new (t || ThyMonthPickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyMonthPickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyMonthPickerComponent, selectors: [["thy-month-picker"]], inputs: { thyFormat: "thyFormat" }, exportAs: ["thyMonthPicker"], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => ThyMonthPickerComponent)
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 13, consts: [[3, "isRange", "value", "open", "disabled", "format", "allowClear", "className", "autoFocus", "placeholder", "readonly", "size", "suffixIcon", "valueChange", "openChange"], [4, "ngIf"], [1, "thy-calendar-header-wrap"], [3, "disabledMonth", "disabledYear", "panelMode", "value", "enablePrev", "enableNext", "panelModeChange", "chooseYear", "chooseMonth"]], template: function ThyMonthPickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "thy-picker", 0);
        ɵngcc0.ɵɵlistener("valueChange", function ThyMonthPickerComponent_Template_thy_picker_valueChange_0_listener($event) { return ctx.onValueChange($event); })("openChange", function ThyMonthPickerComponent_Template_thy_picker_openChange_0_listener($event) { return ctx.onOpenChange($event); });
        ɵngcc0.ɵɵtemplate(1, ThyMonthPickerComponent_div_1_Template, 4, 9, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("isRange", false)("value", ctx.thyValue)("open", ctx.thyOpen)("disabled", ctx.thyDisabled)("format", ctx.thyFormat)("allowClear", ctx.thyAllowClear)("className", ctx.thyOriginClassName)("autoFocus", ctx.thyAutoFocus)("placeholder", ctx.thyPlaceHolder)("readonly", ctx.thyReadonly)("size", ctx.thySize)("suffixIcon", ctx.thySuffixIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.realOpenState);
    } }, directives: [ThyPickerComponent, ɵngcc1.NgIf, CalendarHeaderComponent], encapsulation: 2, changeDetection: 0 });
ThyMonthPickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: Renderer2 },
    { type: ElementRef }
];
ThyMonthPickerComponent.propDecorators = {
    thyFormat: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyMonthPickerComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'thy-month-picker',
                exportAs: 'thyMonthPicker',
                template: "<thy-picker\n  [isRange]=\"false\"\n  [value]=\"thyValue\"\n  (valueChange)=\"onValueChange($event)\"\n  [open]=\"thyOpen\"\n  [disabled]=\"thyDisabled\"\n  [format]=\"thyFormat\"\n  [allowClear]=\"thyAllowClear\"\n  [className]=\"thyOriginClassName\"\n  [autoFocus]=\"thyAutoFocus\"\n  [placeholder]=\"thyPlaceHolder\"\n  [readonly]=\"thyReadonly\"\n  [size]=\"thySize\"\n  [suffixIcon]=\"thySuffixIcon\"\n  (openChange)=\"onOpenChange($event)\"\n>\n  <div *ngIf=\"realOpenState\">\n    <div class=\"thy-calendar-picker-container thy-calendar thy-calendar-month {{ thyPanelClassName }}\">\n      <div class=\"thy-calendar-header-wrap\">\n        <calendar-header\n          [disabledMonth]=\"thyDisabledDate\"\n          [disabledYear]=\"thyDisabledDate\"\n          [panelMode]=\"panelMode\"\n          (panelModeChange)=\"onPanelModeChange($event)\"\n          [value]=\"thyValue\"\n          (chooseYear)=\"onChooseValue('year', $event)\"\n          (chooseMonth)=\"onChooseValue('month', $event)\"\n          [enablePrev]=\"true\"\n          [enableNext]=\"true\"\n        ></calendar-header>\n      </div>\n    </div>\n  </div>\n</thy-picker>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => ThyMonthPickerComponent)
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { thyFormat: [{
            type: Input
        }] }); })();

class ThyRangePickerComponent extends BasePickerComponent {
    constructor(cdr, renderer, elementRef) {
        super(cdr);
        this.renderer = renderer;
        this.elementRef = elementRef;
        this.isRange = true;
        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');
    }
}
ThyRangePickerComponent.ɵfac = function ThyRangePickerComponent_Factory(t) { return new (t || ThyRangePickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyRangePickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyRangePickerComponent, selectors: [["thy-range-picker"]], exportAs: ["thyRangePicker"], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => ThyRangePickerComponent)
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 14, consts: [[3, "isRange", "value", "open", "disabled", "format", "allowClear", "className", "autoFocus", "placeholder", "readonly", "size", "suffixIcon", "placement", "valueChange", "openChange"], [3, "isRange", "showWeek", "panelMode", "defaultPickerValue", "value", "showTime", "mustShowTime", "format", "dateRender", "disabledDate", "minDate", "maxDate", "className", "panelModeChange", "showTimePickerChange", "valueChange", "calendarChange", "resultOk", 4, "ngIf"], [3, "isRange", "showWeek", "panelMode", "defaultPickerValue", "value", "showTime", "mustShowTime", "format", "dateRender", "disabledDate", "minDate", "maxDate", "className", "panelModeChange", "showTimePickerChange", "valueChange", "calendarChange", "resultOk"]], template: function ThyRangePickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "thy-picker", 0);
        ɵngcc0.ɵɵlistener("valueChange", function ThyRangePickerComponent_Template_thy_picker_valueChange_0_listener($event) { return ctx.onValueChange($event); })("openChange", function ThyRangePickerComponent_Template_thy_picker_openChange_0_listener($event) { return ctx.onOpenChange($event); });
        ɵngcc0.ɵɵtemplate(1, ThyRangePickerComponent_date_popup_1_Template, 1, 13, "date-popup", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("isRange", ctx.isRange)("value", ctx.thyValue)("open", ctx.thyOpen)("disabled", ctx.thyDisabled)("format", ctx.thyFormat)("allowClear", ctx.thyAllowClear)("className", ctx.thyOriginClassName)("autoFocus", ctx.thyAutoFocus)("placeholder", ctx.thyPlaceHolder)("readonly", ctx.thyReadonly)("size", ctx.thySize)("suffixIcon", ctx.thySuffixIcon)("placement", ctx.thyPlacement);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.realOpenState);
    } }, directives: [ThyPickerComponent, ɵngcc1.NgIf, DatePopupComponent], encapsulation: 2, changeDetection: 0 });
ThyRangePickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: Renderer2 },
    { type: ElementRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyRangePickerComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'thy-range-picker',
                exportAs: 'thyRangePicker',
                template: "<thy-picker\n  [isRange]=\"isRange\"\n  [value]=\"thyValue\"\n  (valueChange)=\"onValueChange($event)\"\n  [open]=\"thyOpen\"\n  [disabled]=\"thyDisabled\"\n  [format]=\"thyFormat\"\n  [allowClear]=\"thyAllowClear\"\n  [className]=\"thyOriginClassName\"\n  [autoFocus]=\"thyAutoFocus\"\n  [placeholder]=\"thyPlaceHolder\"\n  [readonly]=\"thyReadonly\"\n  [size]=\"thySize\"\n  [suffixIcon]=\"thySuffixIcon\"\n  [placement]=\"thyPlacement\"\n  (openChange)=\"onOpenChange($event)\"\n>\n  <date-popup\n    *ngIf=\"realOpenState\"\n    [isRange]=\"isRange\"\n    [showWeek]=\"showWeek\"\n    [panelMode]=\"thyMode\"\n    [defaultPickerValue]=\"thyDefaultPickerValue\"\n    (panelModeChange)=\"thyOnPanelChange.emit($event)\"\n    (showTimePickerChange)=\"onShowTimePickerChange($event)\"\n    [value]=\"thyValue\"\n    (valueChange)=\"onValueChange($event)\"\n    (calendarChange)=\"onCalendarChange($event)\"\n    [showTime]=\"thyShowTime\"\n    [mustShowTime]=\"withTime\"\n    [format]=\"thyFormat\"\n    [dateRender]=\"thyDateRender\"\n    [disabledDate]=\"thyDisabledDate\"\n    [minDate]=\"thyMinDate\"\n    [maxDate]=\"thyMaxDate\"\n    [className]=\"thyPanelClassName\"\n    (resultOk)=\"onResultOk()\"\n  ></date-popup>\n</thy-picker>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => ThyRangePickerComponent)
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();

class ThyWeekPickerComponent extends BasePickerComponent {
    constructor(cdr, renderer, elementRef) {
        super(cdr);
        this.showWeek = true;
        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');
    }
}
ThyWeekPickerComponent.ɵfac = function ThyWeekPickerComponent_Factory(t) { return new (t || ThyWeekPickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyWeekPickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyWeekPickerComponent, selectors: [["thy-week-picker"]], exportAs: ["thyWeekPicker"], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => ThyWeekPickerComponent)
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 14, consts: [[3, "isRange", "value", "open", "disabled", "format", "allowClear", "className", "autoFocus", "placeholder", "readonly", "size", "suffixIcon", "placement", "valueChange", "openChange"], [3, "isRange", "showWeek", "panelMode", "defaultPickerValue", "value", "showTime", "mustShowTime", "format", "dateRender", "disabledDate", "minDate", "maxDate", "className", "panelModeChange", "showTimePickerChange", "valueChange", "calendarChange", "resultOk", 4, "ngIf"], [3, "isRange", "showWeek", "panelMode", "defaultPickerValue", "value", "showTime", "mustShowTime", "format", "dateRender", "disabledDate", "minDate", "maxDate", "className", "panelModeChange", "showTimePickerChange", "valueChange", "calendarChange", "resultOk"]], template: function ThyWeekPickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "thy-picker", 0);
        ɵngcc0.ɵɵlistener("valueChange", function ThyWeekPickerComponent_Template_thy_picker_valueChange_0_listener($event) { return ctx.onValueChange($event); })("openChange", function ThyWeekPickerComponent_Template_thy_picker_openChange_0_listener($event) { return ctx.onOpenChange($event); });
        ɵngcc0.ɵɵtemplate(1, ThyWeekPickerComponent_date_popup_1_Template, 1, 13, "date-popup", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("isRange", ctx.isRange)("value", ctx.thyValue)("open", ctx.thyOpen)("disabled", ctx.thyDisabled)("format", ctx.thyFormat)("allowClear", ctx.thyAllowClear)("className", ctx.thyOriginClassName)("autoFocus", ctx.thyAutoFocus)("placeholder", ctx.thyPlaceHolder)("readonly", ctx.thyReadonly)("size", ctx.thySize)("suffixIcon", ctx.thySuffixIcon)("placement", ctx.thyPlacement);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.realOpenState);
    } }, directives: [ThyPickerComponent, ɵngcc1.NgIf, DatePopupComponent], encapsulation: 2, changeDetection: 0 });
ThyWeekPickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: Renderer2 },
    { type: ElementRef }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyWeekPickerComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'thy-week-picker',
                exportAs: 'thyWeekPicker',
                template: "<thy-picker\n  [isRange]=\"isRange\"\n  [value]=\"thyValue\"\n  (valueChange)=\"onValueChange($event)\"\n  [open]=\"thyOpen\"\n  [disabled]=\"thyDisabled\"\n  [format]=\"thyFormat\"\n  [allowClear]=\"thyAllowClear\"\n  [className]=\"thyOriginClassName\"\n  [autoFocus]=\"thyAutoFocus\"\n  [placeholder]=\"thyPlaceHolder\"\n  [readonly]=\"thyReadonly\"\n  [size]=\"thySize\"\n  [suffixIcon]=\"thySuffixIcon\"\n  [placement]=\"thyPlacement\"\n  (openChange)=\"onOpenChange($event)\"\n>\n  <date-popup\n    *ngIf=\"realOpenState\"\n    [isRange]=\"isRange\"\n    [showWeek]=\"showWeek\"\n    [panelMode]=\"thyMode\"\n    [defaultPickerValue]=\"thyDefaultPickerValue\"\n    (panelModeChange)=\"thyOnPanelChange.emit($event)\"\n    (showTimePickerChange)=\"onShowTimePickerChange($event)\"\n    [value]=\"thyValue\"\n    (valueChange)=\"onValueChange($event)\"\n    (calendarChange)=\"onCalendarChange($event)\"\n    [showTime]=\"thyShowTime\"\n    [mustShowTime]=\"withTime\"\n    [format]=\"thyFormat\"\n    [dateRender]=\"thyDateRender\"\n    [disabledDate]=\"thyDisabledDate\"\n    [minDate]=\"thyMinDate\"\n    [maxDate]=\"thyMaxDate\"\n    [className]=\"thyPanelClassName\"\n    (resultOk)=\"onResultOk()\"\n  ></date-popup>\n</thy-picker>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => ThyWeekPickerComponent)
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, null); })();

class ThyYearPickerComponent extends HeaderPickerComponent {
    constructor(cdr, renderer, elementRef) {
        super(cdr);
        this.thyFormat = 'yyyy';
        this.endPanelMode = 'year';
        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');
    }
}
ThyYearPickerComponent.ɵfac = function ThyYearPickerComponent_Factory(t) { return new (t || ThyYearPickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyYearPickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyYearPickerComponent, selectors: [["thy-year-picker"]], inputs: { thyFormat: "thyFormat" }, exportAs: ["thyYearPicker"], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => ThyYearPickerComponent)
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 13, consts: [[3, "isRange", "value", "open", "disabled", "format", "allowClear", "className", "autoFocus", "placeholder", "readonly", "size", "suffixIcon", "valueChange", "openChange"], [4, "ngIf"], [1, "thy-calendar-header-wrap"], [3, "disabledMonth", "disabledYear", "panelMode", "value", "enablePrev", "enableNext", "panelModeChange", "chooseYear", "chooseMonth"]], template: function ThyYearPickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "thy-picker", 0);
        ɵngcc0.ɵɵlistener("valueChange", function ThyYearPickerComponent_Template_thy_picker_valueChange_0_listener($event) { return ctx.onValueChange($event); })("openChange", function ThyYearPickerComponent_Template_thy_picker_openChange_0_listener($event) { return ctx.onOpenChange($event); });
        ɵngcc0.ɵɵtemplate(1, ThyYearPickerComponent_div_1_Template, 4, 9, "div", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("isRange", false)("value", ctx.thyValue)("open", ctx.thyOpen)("disabled", ctx.thyDisabled)("format", ctx.thyFormat)("allowClear", ctx.thyAllowClear)("className", ctx.thyOriginClassName)("autoFocus", ctx.thyAutoFocus)("placeholder", ctx.thyPlaceHolder)("readonly", ctx.thyReadonly)("size", ctx.thySize)("suffixIcon", ctx.thySuffixIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.realOpenState);
    } }, directives: [ThyPickerComponent, ɵngcc1.NgIf, CalendarHeaderComponent], encapsulation: 2, changeDetection: 0 });
ThyYearPickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: Renderer2 },
    { type: ElementRef }
];
ThyYearPickerComponent.propDecorators = {
    thyFormat: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyYearPickerComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'thy-year-picker',
                exportAs: 'thyYearPicker',
                template: "<thy-picker\n  [isRange]=\"false\"\n  [value]=\"thyValue\"\n  (valueChange)=\"onValueChange($event)\"\n  [open]=\"thyOpen\"\n  [disabled]=\"thyDisabled\"\n  [format]=\"thyFormat\"\n  [allowClear]=\"thyAllowClear\"\n  [className]=\"thyOriginClassName\"\n  [autoFocus]=\"thyAutoFocus\"\n  [placeholder]=\"thyPlaceHolder\"\n  [readonly]=\"thyReadonly\"\n  [size]=\"thySize\"\n  [suffixIcon]=\"thySuffixIcon\"\n  (openChange)=\"onOpenChange($event)\"\n>\n  <div *ngIf=\"realOpenState\">\n    <div class=\"thy-calendar-picker-container thy-calendar thy-calendar-month {{ thyPanelClassName }}\">\n      <div class=\"thy-calendar-header-wrap\">\n        <calendar-header\n          [disabledMonth]=\"thyDisabledDate\"\n          [disabledYear]=\"thyDisabledDate\"\n          [panelMode]=\"panelMode\"\n          (panelModeChange)=\"onPanelModeChange($event)\"\n          [value]=\"thyValue\"\n          (chooseYear)=\"onChooseValue('year', $event)\"\n          (chooseMonth)=\"onChooseValue('month', $event)\"\n          [enablePrev]=\"true\"\n          [enableNext]=\"true\"\n        ></calendar-header>\n      </div>\n    </div>\n  </div>\n</thy-picker>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => ThyYearPickerComponent)
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { thyFormat: [{
            type: Input
        }] }); })();

const DATE_PICKER_REQUIRED_VALIDATOR = {
    provide: NG_VALIDATORS,
    // tslint:disable-next-line: no-use-before-declare
    useExisting: forwardRef(() => DatePickerRequiredValidator),
    multi: true
};
class DatePickerRequiredValidator {
    get required() {
        return this._required;
    }
    set required(value) {
        this._required = value != null && value !== false && `${value}` !== 'false';
    }
    validate(control) {
        return this.required ? this.validateRequired(control) : null;
    }
    validateRequired(control) {
        return isEmptyInputDateValue(control.value) ? { required: true } : null;
    }
}
DatePickerRequiredValidator.ɵfac = function DatePickerRequiredValidator_Factory(t) { return new (t || DatePickerRequiredValidator)(); };
DatePickerRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DatePickerRequiredValidator, selectors: [["", "thyDatePicker", "", "required", "", "formControlName", ""], ["", "thyDatePicker", "", "required", "", "formControl", ""], ["", "thyDatePicker", "", "required", "", "ngModel", ""], ["thy-date-picker", "required", "", "formControlName", ""], ["thy-date-picker", "required", "", "formControl", ""], ["thy-date-picker", "required", "", "ngModel", ""]], inputs: { required: "required" }, features: [ɵngcc0.ɵɵProvidersFeature([DATE_PICKER_REQUIRED_VALIDATOR])] });
DatePickerRequiredValidator.propDecorators = {
    required: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DatePickerRequiredValidator, [{
        type: Directive,
        args: [{
                selector: '[thyDatePicker][required][formControlName],[thyDatePicker][required][formControl],[thyDatePicker][required][ngModel],thy-date-picker[required][formControlName],thy-date-picker[required][formControl],thy-date-picker[required][ngModel]',
                providers: [DATE_PICKER_REQUIRED_VALIDATOR]
            }]
    }], null, { required: [{
            type: Input
        }] }); })();
const RANGE_PICKER_REQUIRED_VALIDATOR = {
    provide: NG_VALIDATORS,
    // tslint:disable-next-line: no-use-before-declare
    useExisting: forwardRef(() => RangePickerRequiredValidator),
    multi: true
};
class RangePickerRequiredValidator {
    get required() {
        return this._required;
    }
    set required(value) {
        this._required = value != null && value !== false && `${value}` !== 'false';
    }
    validate(control) {
        return this.required ? this.validateRequired(control) : null;
    }
    validateRequired(control) {
        return isEmptyInputRangeValue(control.value) ? { required: true } : null;
    }
}
RangePickerRequiredValidator.ɵfac = function RangePickerRequiredValidator_Factory(t) { return new (t || RangePickerRequiredValidator)(); };
RangePickerRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RangePickerRequiredValidator, selectors: [["", "thyRangePicker", "", "required", "", "formControlName", ""], ["", "thyRangePicker", "", "required", "", "formControl", ""], ["", "thyRangePicker", "", "required", "", "ngModel", ""], ["thy-range-picker", "required", "", "formControlName", ""], ["thy-range-picker", "required", "", "formControl", ""], ["thy-range-picker", "required", "", "ngModel", ""]], inputs: { required: "required" }, features: [ɵngcc0.ɵɵProvidersFeature([RANGE_PICKER_REQUIRED_VALIDATOR])] });
RangePickerRequiredValidator.propDecorators = {
    required: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangePickerRequiredValidator, [{
        type: Directive,
        args: [{
                selector: '[thyRangePicker][required][formControlName],[thyRangePicker][required][formControl],[thyRangePicker][required][ngModel],thy-range-picker[required][formControlName],thy-range-picker[required][formControl],thy-range-picker[required][ngModel]',
                providers: [RANGE_PICKER_REQUIRED_VALIDATOR]
            }]
    }], null, { required: [{
            type: Input
        }] }); })();
function isEmptyInputRangeValue(value) {
    return value == null || (instanceOfRangeEntry(value) && (value.begin == null || value.end == null));
}
function isEmptyInputDateValue(value) {
    return value == null || (instanceOfDateEntry(value) && value.date == null);
}

class ThyDatePickerFormatPipe {
    constructor(dateHelper) {
        this.dateHelper = dateHelper;
    }
    transform(originalValue, formatStr) {
        const { value, withTime } = transformDateValue(originalValue);
        if (!formatStr) {
            formatStr = withTime ? 'yyyy-MM-dd HH:mm' : 'yyyy-MM-dd';
        }
        if (!Array.isArray(value)) {
            return this.dateHelper.format(value, formatStr);
        }
        else {
            return value.map(date => this.dateHelper.format(date, formatStr)).join(' ~ ');
        }
    }
}
ThyDatePickerFormatPipe.ɵfac = function ThyDatePickerFormatPipe_Factory(t) { return new (t || ThyDatePickerFormatPipe)(ɵngcc0.ɵɵdirectiveInject(DateHelperService)); };
ThyDatePickerFormatPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "thyDatePickerFormat", type: ThyDatePickerFormatPipe, pure: true });
ThyDatePickerFormatPipe.ctorParameters = () => [
    { type: DateHelperService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDatePickerFormatPipe, [{
        type: Pipe,
        args: [{ name: 'thyDatePickerFormat' }]
    }], function () { return [{ type: DateHelperService }]; }, null); })();
class ThyDatePickerFormatStringPipe {
    constructor(dateHelper) {
        this.dateHelper = dateHelper;
    }
    transform(originalValue) {
        const { withTime } = transformDateValue(originalValue);
        return withTime ? 'yyyy-MM-dd HH:mm' : 'yyyy-MM-dd';
    }
}
ThyDatePickerFormatStringPipe.ɵfac = function ThyDatePickerFormatStringPipe_Factory(t) { return new (t || ThyDatePickerFormatStringPipe)(ɵngcc0.ɵɵdirectiveInject(DateHelperService)); };
ThyDatePickerFormatStringPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "thyDatePickerFormatString", type: ThyDatePickerFormatStringPipe, pure: true });
ThyDatePickerFormatStringPipe.ctorParameters = () => [
    { type: DateHelperService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDatePickerFormatStringPipe, [{
        type: Pipe,
        args: [{ name: 'thyDatePickerFormatString' }]
    }], function () { return [{ type: DateHelperService }]; }, null); })();

class PickerDirective extends AbstractPickerComponent {
    constructor(elementRef, cdr, thyPopover) {
        super(cdr);
        this.elementRef = elementRef;
        this.cdr = cdr;
        this.thyPopover = thyPopover;
        this.showWeek = false;
        this.thyOnPanelChange = new EventEmitter();
        this.thyOnCalendarChange = new EventEmitter();
        this.thyMustShowTime = false;
        this.thyPlacement = 'bottom';
        this.offset = 4;
        this.hasBackdrop = true;
        this.thyStopPropagation = true;
        this.destroy$ = new Subject();
        this.el = this.elementRef.nativeElement;
        this.$click = fromEvent(this.el, 'click').pipe(tap(e => {
            if (this.thyStopPropagation) {
                e.stopPropagation();
            }
        }), mapTo(true));
    }
    get thyShowTime() {
        return this._showTime;
    }
    set thyShowTime(value) {
        this._showTime = typeof value === 'object' ? value : coerceBooleanProperty(value);
    }
    set thyOffset(value) {
        warnDeprecation(`thyOffset parameter will be deprecated, please use thyPopoverOptions instead.`);
        this.offset = value;
    }
    set thyHasBackdrop(value) {
        warnDeprecation(`thyHasBackdrop parameter will be deprecated, please use thyPopoverOptions instead.`);
        this.hasBackdrop = value;
    }
    openOverlay() {
        const popoverRef = this.thyPopover.open(DatePopupComponent, Object.assign({
            origin: this.el,
            hasBackdrop: this.hasBackdrop,
            backdropClass: 'thy-overlay-transparent-backdrop',
            offset: this.offset,
            initialState: {
                isRange: this.isRange,
                showWeek: this.showWeek,
                value: this.thyValue,
                showTime: this.thyShowTime,
                mustShowTime: this.withTime,
                format: this.thyFormat,
                dateRender: this.thyDateRender,
                disabledDate: this.thyDisabledDate,
                placeholder: this.thyPlaceHolder,
                className: this.thyPanelClassName,
                defaultPickerValue: this.thyDefaultPickerValue,
                minDate: this.thyMinDate,
                maxDate: this.thyMaxDate
            },
            placement: this.thyPlacement
        }, this.thyPopoverOptions));
        if (popoverRef) {
            const componentInstance = popoverRef.componentInstance;
            componentInstance.valueChange.pipe(takeUntil(this.destroy$)).subscribe((event) => this.onValueChange(event));
            componentInstance.calendarChange.pipe(takeUntil(this.destroy$)).subscribe((event) => {
                const rangeValue = coerceArray(event).map(x => x.nativeDate);
                this.thyOnCalendarChange.emit(rangeValue);
            });
            componentInstance.showTimePickerChange
                .pipe(takeUntil(this.destroy$))
                .subscribe((event) => this.onShowTimePickerChange(event));
            // tslint:disable-next-line: max-line-length
            componentInstance.ngOnChanges({ value: {} }); // dynamically created components don't call ngOnChanges, manual call
            popoverRef
                .afterOpened()
                .pipe(takeUntil(this.destroy$))
                .subscribe(() => this.thyOpenChange.emit(true));
            popoverRef
                .afterClosed()
                .pipe(takeUntil(this.destroy$))
                .subscribe(() => this.thyOpenChange.emit(false));
        }
    }
    closeOverlay() {
        this.thyPopover.close();
    }
    initActionSubscribe() {
        this.$click.pipe(debounceTime(50), takeUntil(this.destroy$)).subscribe(() => {
            if (!this.thyDisabled && !this.thyReadonly) {
                this.openOverlay();
            }
        });
    }
    ngAfterViewInit() {
        this.setDefaultTimePickerState();
        this.initActionSubscribe();
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
    onValueChange(value) {
        this.restoreTimePickerState(value);
        super.onValueChange(value);
        this.closeOverlay();
    }
    // Displays the time directly when the time must be displayed by default
    setDefaultTimePickerState() {
        this.withTime = this.thyMustShowTime;
    }
    // Restore after clearing time to select whether the original picker time is displayed or not
    restoreTimePickerState(value) {
        if (!value) {
            this.withTime = this.thyMustShowTime || this.originWithTime;
        }
    }
    onShowTimePickerChange(show) {
        this.withTime = show;
    }
}
PickerDirective.ɵfac = function PickerDirective_Factory(t) { return new (t || PickerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.ThyPopover)); };
PickerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PickerDirective, inputs: { thyMustShowTime: "thyMustShowTime", thyPlacement: "thyPlacement", thyStopPropagation: "thyStopPropagation", thyShowTime: "thyShowTime", thyOffset: "thyOffset", thyHasBackdrop: "thyHasBackdrop", thyDateRender: "thyDateRender", thyMode: "thyMode", thyPopoverOptions: "thyPopoverOptions" }, outputs: { thyOnPanelChange: "thyOnPanelChange", thyOnCalendarChange: "thyOnCalendarChange" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
PickerDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: ChangeDetectorRef },
    { type: ThyPopover }
];
PickerDirective.propDecorators = {
    thyDateRender: [{ type: Input }],
    thyMode: [{ type: Input }],
    thyOnPanelChange: [{ type: Output }],
    thyOnCalendarChange: [{ type: Output }],
    thyShowTime: [{ type: Input }],
    thyMustShowTime: [{ type: Input }],
    thyPlacement: [{ type: Input }],
    thyOffset: [{ type: Input }],
    thyHasBackdrop: [{ type: Input }],
    thyPopoverOptions: [{ type: Input }],
    thyStopPropagation: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PickerDirective, [{
        type: Directive
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc8.ThyPopover }]; }, { thyOnPanelChange: [{
            type: Output
        }], thyOnCalendarChange: [{
            type: Output
        }], thyMustShowTime: [{
            type: Input
        }], thyPlacement: [{
            type: Input
        }], thyStopPropagation: [{
            type: Input
        }], thyShowTime: [{
            type: Input
        }], thyOffset: [{
            type: Input
        }], thyHasBackdrop: [{
            type: Input
        }], thyDateRender: [{
            type: Input
        }], thyMode: [{
            type: Input
        }], thyPopoverOptions: [{
            type: Input
        }] }); })();

class ThyDatePickerDirective extends PickerDirective {
    constructor(elementRef, cdr, thyPopover) {
        super(elementRef, cdr, thyPopover);
        this.isRange = false;
    }
}
ThyDatePickerDirective.ɵfac = function ThyDatePickerDirective_Factory(t) { return new (t || ThyDatePickerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.ThyPopover)); };
ThyDatePickerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyDatePickerDirective, selectors: [["", "thyDatePicker", ""]], exportAs: ["thyDatePicker"], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => ThyDatePickerDirective)
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });
ThyDatePickerDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: ChangeDetectorRef },
    { type: ThyPopover }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDatePickerDirective, [{
        type: Directive,
        args: [{
                selector: '[thyDatePicker]',
                exportAs: 'thyDatePicker',
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => ThyDatePickerDirective)
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc8.ThyPopover }]; }, null); })();

class ThyRangePickerDirective extends PickerDirective {
    constructor(elementRef, cdr, thyPopover) {
        super(elementRef, cdr, thyPopover);
        this.isRange = true;
    }
}
ThyRangePickerDirective.ɵfac = function ThyRangePickerDirective_Factory(t) { return new (t || ThyRangePickerDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.ThyPopover)); };
ThyRangePickerDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyRangePickerDirective, selectors: [["", "thyRangePicker", ""]], exportAs: ["thyRangePicker"], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => ThyRangePickerDirective)
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });
ThyRangePickerDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: ChangeDetectorRef },
    { type: ThyPopover }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyRangePickerDirective, [{
        type: Directive,
        args: [{
                selector: '[thyRangePicker]',
                exportAs: 'thyRangePicker',
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => ThyRangePickerDirective)
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc8.ThyPopover }]; }, null); })();

registerLocaleData(localeZhHans, 'zh-Hans');
class ThyDatePickerModule {
}
ThyDatePickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyDatePickerModule });
ThyDatePickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyDatePickerModule_Factory(t) { return new (t || ThyDatePickerModule)(); }, imports: [[CommonModule, OverlayModule, LibPackerModule, ThyIconModule, ThyInputModule, ThyPopoverModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyDatePickerModule, { declarations: function () { return [HeaderPickerComponent, BasePickerComponent, ThyPickerComponent, ThyDatePickerComponent, ThyMonthPickerComponent, ThyYearPickerComponent, ThyWeekPickerComponent, ThyRangePickerComponent, DatePickerRequiredValidator, RangePickerRequiredValidator, ThyDatePickerFormatPipe, ThyDatePickerFormatStringPipe, ThyDatePickerDirective, ThyRangePickerDirective]; }, imports: function () { return [CommonModule, OverlayModule, LibPackerModule, ThyIconModule, ThyInputModule, ThyPopoverModule]; }, exports: function () { return [ThyDatePickerComponent, ThyRangePickerComponent, ThyMonthPickerComponent, ThyYearPickerComponent, ThyWeekPickerComponent, DatePickerRequiredValidator, RangePickerRequiredValidator, ThyDatePickerFormatPipe, ThyDatePickerFormatStringPipe, ThyDatePickerDirective, ThyRangePickerDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDatePickerModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, OverlayModule, LibPackerModule, ThyIconModule, ThyInputModule, ThyPopoverModule],
                exports: [
                    ThyDatePickerComponent,
                    ThyRangePickerComponent,
                    ThyMonthPickerComponent,
                    ThyYearPickerComponent,
                    ThyWeekPickerComponent,
                    DatePickerRequiredValidator,
                    RangePickerRequiredValidator,
                    ThyDatePickerFormatPipe,
                    ThyDatePickerFormatStringPipe,
                    ThyDatePickerDirective,
                    ThyRangePickerDirective
                ],
                declarations: [
                    HeaderPickerComponent,
                    BasePickerComponent,
                    ThyPickerComponent,
                    ThyDatePickerComponent,
                    ThyMonthPickerComponent,
                    ThyYearPickerComponent,
                    ThyWeekPickerComponent,
                    ThyRangePickerComponent,
                    DatePickerRequiredValidator,
                    RangePickerRequiredValidator,
                    ThyDatePickerFormatPipe,
                    ThyDatePickerFormatStringPipe,
                    ThyDatePickerDirective,
                    ThyRangePickerDirective
                ],
                entryComponents: [DatePopupComponent]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { AbstractPickerComponent, BasePickerComponent, CalendarFooterComponent, CalendarHeaderComponent, DATE_HELPER_SERVICE_FACTORY, DateHelperByDatePipe, DateHelperService, DatePickerRequiredValidator, DatePopupComponent, DateTableCellComponent, DateTableComponent, DecadePanelComponent, HeaderPickerComponent, InnerPopupComponent, LibPackerModule, MonthPanelComponent, MonthTableComponent, PickerDirective, RangePickerRequiredValidator, ThyDatePickerComponent, ThyDatePickerDirective, ThyDatePickerFormatPipe, ThyDatePickerFormatStringPipe, ThyDatePickerModule, ThyMonthPickerComponent, ThyPickerComponent, ThyRangePickerComponent, ThyRangePickerDirective, ThyWeekPickerComponent, ThyYearPickerComponent, YearPanelComponent, instanceOfDateEntry, instanceOfRangeEntry };

//# sourceMappingURL=ngx-tethys-date-picker.js.map