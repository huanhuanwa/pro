{"version":3,"file":"list-option.component.d.ts","sources":["list-option.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { Highlightable } from '@angular/cdk/a11y';\nimport { IThyListOptionParentComponent } from '../option.token';\nexport declare type ThyListLayout = 'list' | 'grid';\nexport declare class ThyListOptionComponent implements Highlightable {\n    element: ElementRef<HTMLElement>;\n    private changeDetector;\n    /** @docs-private */\n    parentSelectionList: IThyListOptionParentComponent;\n    get _isListOption(): boolean;\n    get _parentLayout(): boolean;\n    _role: string;\n    _tabIndex: number;\n    id: string;\n    thyValue: any;\n    set thyDisabled(value: boolean);\n    disabled?: boolean;\n    /** Whether the option is selected. */\n    get selected(): boolean;\n    constructor(element: ElementRef<HTMLElement>, changeDetector: ChangeDetectorRef, \n    /** @docs-private */\n    parentSelectionList: IThyListOptionParentComponent);\n    onClick(event: Event): void;\n    /** Allows for programmatic focusing of the option. */\n    setActiveStyles(): void;\n    setInactiveStyles(): void;\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel(): string;\n}\n"]}