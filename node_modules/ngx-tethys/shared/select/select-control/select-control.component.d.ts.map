{"version":3,"file":"select-control.component.d.ts","sources":["select-control.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef, EventEmitter, ElementRef, Renderer2, OnInit } from '@angular/core';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { SelectOptionBase } from '../../option/select-option-base';\nexport declare type SelectControlSize = 'xs' | 'sm' | 'md' | 'lg' | '';\nexport declare class ThySelectControlComponent implements OnInit {\n    private renderer;\n    private element;\n    private updateHostClassService;\n    inputValue: string;\n    isComposing: boolean;\n    panelOpened: boolean;\n    isMultiple: boolean;\n    showSearch: boolean;\n    disabled: boolean;\n    size: SelectControlSize;\n    selectedOptions: SelectOptionBase | SelectOptionBase[];\n    searchInputControlClass: {\n        [key: string]: boolean;\n    };\n    choiceContentClass: {\n        [key: string]: boolean;\n    };\n    get thyPanelOpened(): boolean;\n    set thyPanelOpened(value: boolean);\n    get thyIsMultiple(): boolean;\n    set thyIsMultiple(value: boolean);\n    get thyShowSearch(): boolean;\n    set thyShowSearch(value: boolean);\n    get thySelectedOptions(): SelectOptionBase | SelectOptionBase[];\n    set thySelectedOptions(value: SelectOptionBase | SelectOptionBase[]);\n    get thyDisabled(): boolean;\n    set thyDisabled(value: boolean);\n    customDisplayTemplate: TemplateRef<any>;\n    thyAllowClear: boolean;\n    thyPlaceholder: string;\n    get thySize(): SelectControlSize;\n    set thySize(value: SelectControlSize);\n    thyOnSearch: EventEmitter<string>;\n    thyOnRemove: EventEmitter<{\n        item: SelectOptionBase;\n        $eventOrigin: Event;\n    }>;\n    thyOnClear: EventEmitter<Event>;\n    inputElement: ElementRef;\n    get selectedValueStyle(): {\n        [key: string]: string;\n    };\n    get placeholderStyle(): {\n        [key: string]: string;\n    };\n    get selectedValue(): any;\n    get multipleSelectedValue(): any;\n    get showClearIcon(): boolean;\n    get isSelectedValue(): boolean;\n    constructor(renderer: Renderer2, element: ElementRef<any>, updateHostClassService: UpdateHostClassService);\n    ngOnInit(): void;\n    setSelectControlClass(): void;\n    setInputValue(value: string): void;\n    handleBackspace(event: KeyboardEvent & {\n        isComposing: boolean;\n    }): void;\n    updateWidth(): void;\n    removeHandle(item: SelectOptionBase, $event: Event): void;\n    clearHandle($event: Event): void;\n    trackValue(_index: number, option: SelectOptionBase): any;\n}\n"]}