// Bootstrap functions
//
// Utility mixins and functions for evaluating source code across our variables, maps, and mixins.

// Ascending
// Used to evaluate Sass maps like our grid breakpoints.
@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null or unit($num) == "%" or unit($prev-num) == "%" {
      // Do nothing
    } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}

// Starts at zero
// Used to ensure the min-width of the lowest breakpoint starts at 0.
@mixin _assert-starts-at-zero($map, $map-name: "$grid-breakpoints") {
  @if length($map) > 0 {
    $values: map-values($map);
    $first-value: nth($values, 1);
    @if $first-value != 0 {
      @warn "First breakpoint in #{$map-name} must start at 0, but starts at #{$first-value}.";
    }
  }
}

// Replace `$search` with `$replace` in `$string`
// Used on our SVG icon backgrounds for custom forms.
//
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// See https://codepen.io/kevinweber/pen/dXWoRw
@function escape-svg($string) {
  @if str-index($string, "data:image/svg+xml") {
    @each $char, $encoded in $escaped-characters {
      // Do not escape the url brackets
      @if str-index($string, "url(") == 1 {
        $string: url("#{str-replace(str-slice($string, 6, -3), $char, $encoded)}");
      } @else {
        $string: str-replace($string, $char, $encoded);
      }
    }
  }

  @return $string;
}

// Color contrast
@function color-yiq($color, $dark: $yiq-text-dark, $light: $yiq-text-light) {
  $r: red($color);
  $g: green($color);
  $b: blue($color);

  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;

  @if ($yiq >= $yiq-contrasted-threshold) {
    @return $dark;
  } @else {
    @return $light;
  }
}

// Retrieve color Sass maps
@function color($key: "blue") {
  @return map-get($colors, $key);
}

@function theme-color($key: "primary") {
  @return map-get($theme-colors, $key);
}

@function gray($key: "100") {
  @return map-get($grays, $key);
}

// Request a theme color level
@function theme-color-level($color-name: "primary", $level: 0) {
  $color: theme-color($color-name);
  $color-base: if($level > 0, $black, $white);
  $level: abs($level);

  @return mix($color-base, $color, $level * $theme-color-interval);
}

// Return valid calc
@function add($value1, $value2, $return-calc: true) {
  @if $value1 == null {
    @return $value2;
  }

  @if $value2 == null {
    @return $value1;
  }

  @if type-of($value1) == number and type-of($value2) == number and comparable($value1, $value2) {
    @return $value1 + $value2;
  }

  @return if($return-calc == true, calc(#{$value1} + #{$value2}), $value1 + unquote(" + ") + $value2);
}

@function subtract($value1, $value2, $return-calc: true) {
  @if $value1 == null and $value2 == null {
    @return null;
  }

  @if $value1 == null {
    @return -$value2;
  }

  @if $value2 == null {
    @return $value1;
  }

  @if type-of($value1) == number and type-of($value2) == number and comparable($value1, $value2) {
    @return $value1 - $value2;
  }

  @return if($return-calc == true, calc(#{$value1} - #{$value2}), $value1 + unquote(" - ") + $value2);
}

// gray color
$white: #fff;
// 直接使用 $gray-70 , $gray-99 会在将来的版本移除
$gray-99: #fdfdfd !default; // 内容区域背景色

$gray-70: #fdfdfd !default; // 内容区域背景色，用于整个内容的背景色，sidebar 背景色
$gray-80: #fafafa !default; // 选项鼠标移上去的背景色，主要用于表格 Hover 移上去的颜色 和表格的编号背景色,
$gray-100: #f3f3f3 !default; // 搜索框背景色，消息栏置顶色, 完成任务卡片颜色， Popbox Menu 移上去的背景色
$gray-200: #eee !default; // 模块左侧导航鼠标移上去的阴影, 次分割线，部分控件描边, 消息评论图标使用
$gray-210: #e9e9e9 !default; //整块区域的背景色为 #f3f3f3 后，某个卡片模块的背景色，用于文件详情
$gray-300: #ddd !default; // 主分割线, 进度条背景色，三级图标色
$gray-400: #cacaca !default; // 搜索框默认文字， 禁用图标颜色, 部分图标颜色,
$gray-500: #aaa !default; // 添加参与人,负责人等操作图标的边框颜色,说明文字, 搜索框文字
$gray-600: #888 !default; // 次要文字,如 Tab 切换文字
$gray-700: #666 !default; // 主要文字
$gray-800: #333 !default; // 标题和重点文字
$gray-900: #212529 !default;
$black: #000;
//px to rem
$rem-5px: 0.3125rem;
$rem-10px: 0.625rem;
$rem-14px: 0.875rem;
$rem-15px: 0.9375rem;
$rem-18px: 1.125rem;
$rem-20px: 1.25rem;
$rem-26px: 1.625rem;
// color
$body-color: $gray-800 !default;
$primary: #22d7bb !default;
$primary-active: #18bfa4 !default;
$secondary: $gray-700 !default;
$success: #66c060 !default; // 2dbcff
$info: #2dbcff !default;
$warning: #ffc442 !default;
$danger: #ff5b57 !default;
$pass: #2cccda !default;
$secondary-item-active: rgba($primary, 0.1) !default;
$item-active-bg-color: rgba($primary, 0.1) !default;
$light: $gray-300 !default;
// $light : $gray-100;
// $dark : $gray-800;
// enable-gradients

// font
$font-family-sans-serif: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, PingFang SC, Helvetica Neue, Noto Sans, Noto Sans CJK SC,
    Microsoft Yahei, Arial, Hiragino Sans GB, sans-serif !default;
$font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace !default;
$font-family-base: $font-family-sans-serif !default;
$font-family-statistics-number: $font-family-base !default;
$font-size-base: 0.875rem !default; // 14px
$font-size-lg: 1.25rem !default; // 20px
$font-size-sm: 0.75rem !default; // 12px

// line-height
$line-height-base: 1.5715 !default;
$line-height-lg: 1.5 !default;
$line-height-sm: 1.5715 !default;

$border-radius: 0.25rem !default;
$border-radius-lg: 0.3rem !default;
$border-radius-sm: 0.2rem !default;

$enable-gradients: false !default;
$enable-shadows: true !default;
// transition-duration
$transition-duration-normal: 200ms !default;

// link
$link-color: $primary !default;
$link-decoration: none !default;
$link-hover-color: $primary !default;
$link-hover-decoration: underline !default;
$link-icon-padding-right: 4px !default;
// box shadow
$box-shadow: 0 0 24px rgba(0, 0, 0, 0.18) !default;

// icon
$icon-vertical-align: -0.16em !default;

// 扩展
$font-size-md: 1rem !default; // 16px
$font-size-max-lg: 3.25rem !default; // 补充字体大小 52px
$font-size-xs: 0.625rem !default; // 10px
$font-size-xlg: 1.5rem !default; // 24px
// code
$code-color: $danger !default;
$code-font-size: 0.875rem !default;

// pill style for close(dialog,slide)
$close-pill-enabled: true !default;

// ---input-btn 输入框和按钮复用的变量---

// 按钮和输入框大小, 目前有5种大小, 按钮和输入框都是通过 padding 设置成对应大小的
// 为了方便记录或者在某些场景下使用, 新增了高度的变量
$input-btn-height-lg: 44px !default;
$input-btn-height: 36px !default;
$input-btn-height-md: 32px !default;
$input-btn-height-sm: 28px !default;
$input-btn-height-xs: 24px !default;

$input-btn-line-height: $line-height-base !default;
$input-btn-line-height-md: $line-height-base !default;
$input-btn-line-height-sm: $line-height-base !default;
$input-btn-line-height-lg: $line-height-lg !default;

$input-btn-padding-x: 1.625rem !default;
$input-btn-padding-y: 0.375rem !default; // 36px
$input-btn-padding-x-md: 1rem !default;
$input-btn-padding-y-md: 0.25rem !default; // 32px
$input-btn-padding-x-sm: 0.5rem !default;
$input-btn-padding-y-sm: 0.25rem !default;
$input-btn-padding-x-lg: 1rem !default;
$input-btn-padding-y-lg: 0.656rem !default;

$input-btn-focus-width: 0.0625rem !default; // 1px

// Buttons
$btn-border-radius: 4px !default;
$btn-border-radius-lg: 4px !default;
$btn-border-radius-sm: 4px !default;
$btn-border-radius-xs: 4px !default;
$btn-box-shadow: null !default;

$btn-line-height: $input-btn-line-height;
$btn-line-height-sm: $input-btn-line-height-sm;
$btn-line-height-lg: $input-btn-line-height-lg;
$btn-line-height-md: $input-btn-line-height-md;

$btn-padding-y: $input-btn-padding-y !default; //108*38px
$btn-padding-x: 1.25rem !default;
$btn-padding-y-md: $input-btn-padding-y-md !default;
$btn-padding-x-md: 15px !default; // 1.25rem !default;
$btn-padding-y-sm: 0.125rem !default; // 70*28px
$btn-padding-x-sm: 15px !default;
$btn-padding-y-lg: 0.375rem !default;
$btn-padding-x-lg: 2.215rem !default;
$btn-padding-y-xs: 0.125rem !default;
$btn-padding-x-xs: 15px !default;

$btn-disabled-color: $gray-400 !default;
$btn-disabled-bg-color: $gray-100 !default;
$btn-disabled-border-color: $gray-100 !default;
$btn-outline-disabled-border-color: $gray-300 !default;
$btn-link-color-default: $gray-500 !default;
$btn-link-color-disabled: $gray-400 !default;
$btn-icon-light-color: $gray-300 !default;
$btn-link-disabled-color: $gray-400 !default;
$btn-icon-color: $gray-400 !default; // #cacaca
$btn-icon-thick-dashed-color: $gray-300 !default; // #ddd
$btn-icon-thick-solid-color: $gray-400 !default; // #cacaca
// $btn-icon-circle-padding-lg: 0.8125rem;
// $btn-icon-circle-padding-base: 0.563rem;
// $btn-icon-circle-padding-sm: 0.4375rem;
// $btn-icon-circle-padding-xs: 0.25rem;
$btn-icon-circle-padding-lg: 13px;
$btn-icon-circle-padding-base: 8px;
$btn-icon-circle-padding-sm: 7px;
$btn-icon-circle-padding-xs: 4px;
$btn-icon-circle-padding-difference: 1;

// min-width
$btn-base-min-width: 97px !default;
$btn-md-min-width: 70px !default;
$btn-sm-min-width: 70px !default;
$btn-xs-min-width: 60px !default;
$btn-lg-min-width: 108px !default;
// font-size
$btn-font-size-xs: $font-size-sm !default;
$btn-font-size-sm: $font-size-base !default;
$btn-font-size-md: $font-size-base !default;
$btn-font-size-base: $font-size-base !default;
$btn-font-size-lg: $font-size-lg !default;

// btn-pair
$btn-pair-child-margin-left: 20px !default;
$btn-pair-child-link-margin-left: 10px !default;
$btn-pair-sm-child-margin-left: 4px !default;

// btn-group
$btn-group-btn-padding-y-lg: $btn-padding-y-lg !default;
$btn-group-btn-padding-y-md: $btn-padding-y-md !default;
$btn-group-btn-padding-y-sm: $btn-padding-y-sm !default;
$btn-group-btn-padding-y-xs: $btn-padding-y-xs !default;

$btn-group-btn-padding-x-lg: 25px !default;
$btn-group-btn-padding-x-md: 20px !default;
$btn-group-btn-padding-x-sm: 15px !default;
$btn-group-btn-padding-x-xs: 10px !default;

$btn-group-btn-dropdown-padding-x: 0.801rem !default;
$btn-group-btn-dropdown-padding-x-lg: 0.938rem !default;
$btn-group-btn-dropdown-padding-x-md: 0.676rem !default;
$btn-group-btn-dropdown-padding-x-sm: 0.551rem !default;
$btn-group-btn-dropdown-padding-x-xs: 0.5rem !default;

// Forms
// 输入框左右 padding 和 按钮大小不一致， bootstrap 是一致的
// input-padding-x 之前是 0.875rem, 芳美说太大了，改成了 10px 大小
$input-font-size: $font-size-base !default;
$input-font-size-sm: $font-size-sm !default;
$input-font-size-lg: $font-size-xlg !default;

$input-line-height-xs: $input-btn-line-height-sm !default;
$input-line-height-md: $input-btn-line-height-md !default;
$input-line-height-sm: $input-btn-line-height-sm !default;
$input-line-height-lg: $input-btn-line-height-lg !default;

$input-padding-x-fixed: 0.625rem !default; // input 所有大小左右间距都是固定的
$input-padding-x: $input-padding-x-fixed !default;
$input-padding-y: $input-btn-padding-y !default;
$input-padding-x-md: $input-padding-x-fixed !default;
$input-padding-y-md: $input-btn-padding-y-md !default;
$input-padding-x-sm: $input-padding-x-fixed !default;
$input-padding-y-sm: $input-btn-padding-y-sm !default;
$input-padding-x-lg: $input-padding-x-fixed !default;
$input-padding-y-lg: 0.188rem !default;
$input-padding-x-xs: $input-padding-x-fixed !default;
$input-padding-y-xs: 0.125rem !default;
// input border-radius
$input-border-radius-xs: 0.25rem !default;
$input-border-radius-md: 0.25rem !default;
// input height
$input-height-xs: $input-btn-height-xs !default;
$input-height-sm: $input-btn-height-sm !default;
$input-height-md: $input-btn-height-md !default;
$input-height-lg: $input-btn-height-lg !default;
// others
$input-focus-border-color: $primary !default;
$input-btn-focus-box-shadow: none !default;
$input-box-shadow: none !default;
$input-placeholder-color: $gray-400 !default;
$input-color: $gray-800 !default;
$input-focus-bg: transparent !default;
$input-label-color: $gray-600 !default; // label 文本的颜色，包括 Checkbox 和 Radio Label 的颜色
$input-label-checked-color: $gray-800 !default; // Checkbox 和 Radio Label 选中后的颜色
$input-border-color: $gray-200 !default;
$input-hover-border-color: $primary !default;
$input-disabled-bg: $gray-100 !default;
$input-disabled-color: $gray-600 !default;
$input-icon-color: $gray-500 !default;
$input-group-addon-color: $gray-700 !default;
$input-group-addon-bg: $gray-100 !default;
$form-text-margin-top: 0.5rem !default;
$input-ellipse-radius: 1.25rem !default;
$input-ellipse-background-color: $gray-100 !default;
$input-ellipse-focus-border-color: $primary !default;
$input-ellipse-hover-border-color: $gray-300 !default;
$input-ellipse-hover-focus-background-color: $white !default;
$input-form-check-size: 1rem !default;
$input-form-check-disable-color: $gray-400 !default;
$input-form-check-border-color: $gray-300 !default;
$form-label-color: $gray-700 !default;
$form-check-input-margin-t: 0.3rem !default;
$form-check-input-margin-l: 1.25rem !default;
$form-check-inline-margin-r: 0.75rem !default;
$form-check-inline-input-margin-r: 0.3125rem !default;

// Dropdown
$dropdown-toggle-y-l: 1.25rem !default;
$dropdown-toggle-y-r: 0.938rem !default;
$dropdown-toggle-split-y: 0.625rem !default;

// PopBox
$pop-box-divider: $gray-100 !default;
$pop-box-bg-hover: $gray-100 !default;
$pop-box-text: $gray-700 !default;
$pop-box-text-hover: $gray-900 !default;
$pop-box-body-padding: 15px 20px !default;
$pop-box-footer-padding: 15px 20px !default;
$pop-box-top-margin: 3px !default;
$zindex-pop-box: 1080 !default;

// Layout
$layout-header-background: rgba($gray-99, 0.97) !default;
$layout-header-padding: 0 15px !default;
$layout-header-height: 50px !default;
$layout-header-prefix-icon-size: 20px !default;
$layout-header-separator-color: $gray-500 !default;
$layout-header-icon-link-opacity: 0.85;

$layout-content-background: $gray-200 !default;
$layout-content-padding: 15px 15px 15px 15px !default;
$layout-sidebar-width: 240px !default;
$layout-sidebar-background: rgba($gray-99, 0.97) !default;
$layout-sidebar-border-right: 1px solid $gray-300 !default;
$layout-sidebar-drag-background-hover: $gray-300 !default;
$layout-sidebar-drag-background-active: $primary !default;
$layout-header-height-sm: 38px !default;
$layout-content-section-border-radius: 0px !default;
$layout-content-section-background: $white !default;
$layout-content-section-margin-bottom: 15px !default;
// Tables
$table-cell-padding: 12px 15px !default;
$table-sm-cell-padding: 0.3rem !default;
$table-color: $gray-800;
$table-bg: transparent !default;
$table-accent-bg: rgba($black, 0.05) !default;
$table-hover-bg: rgba($black, 0.075) !default;
$table-active-bg: $table-hover-bg !default;
$table-margin-bottom: 1.25rem;
$table-hover-color: $gray-80;
$table-border-width: 1px !default;
$table-border-color: $gray-200 !default;
$table-head-bg: $gray-200 !default;
$table-head-color: $gray-700 !default;
$table-default-head-color: $gray-600 !default;
$table-default-cell-height: 55px !default;
$table-sm-cell-height: 44px !default;
$table-bordered-padding: 11px 15px !default;
$table-bordered-bg: $gray-100 !default;
$table-bordered-head-color: $gray-700 !default;
$table-draggable-first-th-padding-left: 20px !default;
$table-draggable-first-td-padding-left: 20px !default;
$table-draggable-icon-color: $gray-600 !default;
$table-draggable-icon-left: 2px !default;
$table-draggable-bordered-icon-padding-left: 30px !default;
$table-default-header-cell-padding: 0 15px !default;
$table-default-header-padding: 12px 15px !default;
$table-default-sm-header-padding: 8px 15px !default;
$table-default-header-height: inherit !default;
$table-bordered-cell-height: 50px !default;
$table-group-first-cell-padding-left: 43px !default;
// grid
$table-footer-padding: 0 20px !default;
// action-menu
$action-menu-width: 240px !default;
$action-menu-group-width: 280px !default;
$action-menu-padding-y: 10px;
$action-menu-max-height: 400px !default;
$action-menu-bg: $white !default;
$action-menu-item-padding-x: 20px !default;
$action-menu-item-padding-y: 9px !default;
$action-menu-item-color: $gray-700 !default;
$action-menu-item-hover-color: $gray-800 !default;
$action-menu-item-icon-color: $gray-500 !default;
$action-menu-item-extend-color: $gray-500 !default;
$action-menu-item-hover-bg: $gray-100 !default;
$action-menu-divider-title-color: $gray-400 !default;
$action-menu-divider-border-color: $gray-200 !default;
$action-menu-divider-margin-y: 5px !default;
$action-menu-divider-margin-x: 20px !default;
$action-menu-group-name-color: $gray-400 !default;
$action-menu-group-name-padding-y: 5px;
$action-menu-group-name-padding-x: 20px;
// badges
$badge-font-size: 75% !default;
$badge-font-weight: normal !default;
$badge-padding-y: 0.25em !default;
$badge-padding-x: 7px !default;
$badge-border-radius: 14px !default;
$badge-pill-padding-x: 0.6em !default;
$badge-pill-border-radius: 10rem !default;
$badge-bg: $gray-200 !default; //#eee
$badge-color: $gray-600 !default; //#888
$badge-danger-color: #ff7461 !default;
//label
$label-size-padding: 5px 10px !default;
$label-size-padding-sm: 4px 10px !default;
$label-size-padding-md: 6px 10px !default;
$label-size-padding-lg: 7px 10px !default;
$label-border-radius: 3px !default;
$label-pill-radius: 18px !default;
$label-border-radius: 3px !default;
$label-default-bg: $gray-200 !default;
$label-primary-bg: $primary !default;
$label-success-bg: $success !default;
$label-info-bg: $info !default;
$label-warning-bg: $warning !default;
$label-danger-bg: $danger !default;
//avatar
$avatar-sizes: () !default;
$avatar-sizes: map-merge(
    (
        22: 12,
        24: 12,
        28: 12,
        32: 12,
        36: 12,
        48: 14,
        68: 16,
        110: 45,
        160: 50
    ),
    $avatar-sizes
);
// Navs
$nav-link-disabled-color: $gray-300 !default;
$nav-link-color: $gray-600 !default;
$nav-link-icon-color: $gray-500 !default;
$nav-link-primary-color: $gray-800 !default;
$nav-link-hover-color: $primary !default;
$nav-border-color: $gray-200 !default;
$nav-divider-color: $gray-200 !default;
$nav-border-width: 2px !default;
$nav-border-bottom: $nav-border-width solid $primary !default;
$nav-border-left: $nav-border-width solid $primary !default;
$nav-link-primary-padding-y: 0.813rem !default; // 高度 50px
$nav-link-primary-padding-x: 1rem !default;
$nav-link-primary-right: 20px !default;
$nav-link-primary-min-width: 80px !default;
$nav-link-secondary-padding-y: 0.438rem !default; // 高度 38px
$nav-link-secondary-padding-x: 0rem !default;
$nav-link-secondary-right: 40px !default;
$nav-link-secondary-split-right: 60px !default;
$nav-link-thirdly-padding-y: 0.5rem !default; // 高度 38px
$nav-link-thirdly-padding-x: 0rem !default;
$nav-link-thirdly-right: 40px !default;
$nav-link-thirdly-split-line-height: 15px !default;
$nav-link-thirdly-padding-y-sm: 0.4375rem !default;
$nav-link-thirdly-padding-x-sm: 0rem !default;
$nav-link-thirdly-right-sm: 40px !default;
$nav-link-thirdly-split-line-height-sm: 11px !default;
$nav-vertical-border-left: 4px solid $primary !default;
$nav-vertical-border-left-empty: 4px solid transparent !default;

$icon-nav-link-color: $gray-600 !default;
$icon-nav-link-hover-color: $primary !default;
$icon-nav-link-spacing: 15px !default;
$icon-nav-link-secondary-color: $gray-400 !default;
$icon-nav-link-secondary-spacing: 10px !default;
$icon-nav-link-individual-spacing: 0px !default;

// Modals
// Padding applied to the modal body
$modal-inner-padding: 1.25rem 1.875rem 1.875rem 1.875rem !default; //
$modal-has-footer-inner-padding: 1.25rem 1.875rem 0 1.875rem !default; //
$modal-dialog-margin: 0.5rem !default;
$modal-dialog-margin-y-sm-up: 3.75rem !default; //
$modal-title-line-height: 1.5 !default;
$modal-content-bg: $white !default;
$modal-content-border-color: rgba($black, 0.2) !default;
$modal-content-border-width: 0 !default; //
$modal-content-box-shadow-xs: 0 0 1.5rem rgba($black, 0.4) !default; //
$modal-content-box-shadow-sm-up: 0 0 1.5rem rgba($black, 0.5) !default; //
$modal-backdrop-bg: $black !default;
$modal-backdrop-opacity: 0.3 !default; //
$modal-header-border-color: $gray-200 !default; //
$modal-footer-border-color: $modal-header-border-color !default;
$modal-header-border-width: 1px !default;
$modal-footer-border-width: $modal-header-border-width !default;
$modal-header-padding: 1.875rem !default; //
$modal-lg: 980px !default; //
$modal-blg: 800px !default; //稍微大点，自定义属性
$modal-md: 660px !default; //
$modal-sm: 400px !default; //
$modal-transition: transform 0.3s ease-out !default;

// Dialog
$dialog-border-radius: 4px !default;
$dialog-header-height: 50px !default;
$dialog-header-title-line-height: 1.5rem !default;
$dialog-header-padding: 1.875rem !default;
$dialog-header-padding-lg: 1.25rem !default;

$dialog-header-border-width: 1px !default;
$dialog-header-border-color: $gray-200 !default;
$dialog-box-shadow: 0 0 24px rgba(0, 0, 0, 0.25) !default;
$dialog-body-padding: 1.25rem 1.875rem 1.875rem 1.875rem !default;

// $dialog-footer-padding: 1.25rem 1.875rem 1.875rem 1.875rem !default;
$dialog-footer-padding: 0.9375rem 1.875rem !default;
$dialog-footer-border-width: 1px !default;
$dialog-footer-border-color: $dialog-header-border-color !default;

$dialog-default-max-height: 85vh !default;
$dialog-max-lg: 980px !default; //
$dialog-lg: 800px !default;
$dialog-md: 660px !default; //
$dialog-sm: 400px !default; //
$dialog-supper-lg-max-height: 1000px !default;
$dialog-supper-lg-max-width: 1800px !default;
$dialog-supper-lg-height: 94vh !default;
$dialog-supper-lg-width: 94vw !default;

$btn-dialog-confirm-cancel: $btn-pair-child-link-margin-left !default;

// Card
$card-border-radius: 0 !default;
$card-title-icon-color: $primary !default;
// change from $gray-700(#888) to $gray-800 (#333) by Terry required
$card-title-color: $gray-800 !default;
$card-title-info-color: $gray-500 !default;
$card-header-divider-color: $gray-200 !default;
// divided 分割模式，头部和内容区域的上下间距
$card-divided-spacing-y: 15px;

//Datepicker
$datepicker-z-index: 1100 !default;
// Notify
$notify-width: 320px !default;
$notify-z-index: 1100 !default;
$notify-spacing: 20px !default;
$notify-margin-bottom: 10px !default;
$notify-line-height: 1.5 !default;
$notify-padding: 18px !default;
$notify-border-radius-width: 4px !default;
$notify-bg: $white !default;
$notify-success: $success !default;
$notify-info: $info !default;
$notify-warning: $warning !default;
$notify-danger: $danger !default;
$notify-title-color: $gray-800 !default;
$notify-icon-font-size: 18px !default;
$notify-box-shadow: $box-shadow !default;
$notify-content-color: $gray-500 !default;
$notify-close-color: $gray-400 !default;
$notify-close-hover-color: $gray-600 !default;
$notify-icon-padding-right: 15px !default;
$notify-states: (
    'success': $notify-success,
    'warning': $notify-warning,
    'error': $notify-danger,
    'info': $notify-info
);

//close
$close-font-size: $font-size-md !default;
$close-font-weight: normal !default;
$close-color: $black !default;
$close-text-shadow: 0 1px 0 $white !default;
$close-text-color: $gray-400 !default;

//empty
$empty-icon-size: 3.125rem !default;
$empty-icon-size-lg: 5rem !default;

$empty-icon-color: $gray-200 !default;
$empty-svg-width: 102px !default;
$empty-svg-height: 92px !default;
$empty-svg-width-lg: 148px !default;
$empty-svg-height-lg: 134px !default;
$empty-svg-width-sm: 64px !default;
$empty-svg-height-sm: 58px !default;
$empty-text-color: $gray-400 !default;
$empty-text-color-with-extra: $gray-800 !default;
$empty-text-size: $font-size-base !default;
$empty-text-size-lg: $font-size-md !default;
$empty-text-size-sm: $font-size-base !default;
$empty-text-margin-top: 12px !default;
$empty-text-margin-top-lg: 18px !default;
$empty-text-margin-top-sm: 6px !default;
$empty-description-color: $gray-600 !default;
$empty-description-size: $font-size-base !default;
$empty-description-margin-top: 14px !default;

//util
$operation-link-margin-y: 20px !default;
//switch
// $switch-lg-width: 48px !default;
// $switch-lg-height: 28px !default;
$switch-width: 42px !default;
$switch-height: 24px !default;
$handle-margin: 2px !default;
$switch-sm-width: 36px !default;
$switch-sm-height: 20px !default;
$switch-xs-width: 24px !default;
$switch-xs-height: 16px !default;
$switch-margin-bottom: 0 !default;
//Transfer
$transfer-width: 600px !default;
$transfer-list-header-padding: 10px 0 !default;
$transfer-list-header-font-color: $gray-600 !default;
$transfer-list-header-font-size: $font-size-base !default;
$transfer-list-border-width: 1px !default;
$transfer-list-border-color: $gray-200 !default;
$transfer-list-border-radius: 5px !default;
$transfer-list-width: 270px !default;
$transfer-list-height: 360px !default;
$transfer-list-padding: 10px 0 !default;
$transfer-list-item-padding: 0 15px 0 20px !default;
$transfer-list-item-line-hight: 38px !default;
$transfer-list-item-hover-color: $gray-200 !default;
$transfer-operation-padding: 0 10px !default;
$transfer-operation-font-size: 22px !default;
$transfer-operation-color: $gray-500 !default;
//progress
$progress-height: 10px !default;
$progress-height-lg: 16px !default;
$progress-height-sm: 6px !default;
$progress-height-xs: 4px !default;
$progress-bar-bg: $gray-200 !default;
$progress-split-color: $white !default;
$progress-bar-primary-bg: #73d897;
//Slide
$slide-bg: $white !default;
$slide-height: calc(100vh - #{$layout-header-height} - #{$layout-header-height-sm}) !default;
$slide-z-index: 900 !default;
$slide-header-height: 45px !default;
// $slide-header-padding: 0.75rem 1.25rem !default;
$slide-header-padding: 1.25rem !default;
$slide-header-main-padding: 0 20px !default;
$slide-body-content-padding: 0 1.25rem 0.75rem 1.25rem !default;
$slide-body-section-padding: 20px !default;
$slide-divider: $gray-200 !default;
$slide-footer-padding: 15px 20px 0 !default;
$slide-footer-height: 65px !default;
$slide-border-color: $gray-200 !default;
$slide-box-shadow: 0 16px 24px 2px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 8px 10px -5px rgba(0, 0, 0, 0.12) !default;
//tree
$tree-padding: 10px 20px 10px 10px;
$tree-node-padding: 0 0 0 25px !default;
$tree-node-margin: 0 0 0 20px !default;
$tree-node-wrapper-padding: 0 !default;
$tree-node-wrapper-height: 44px !default;
$tree-node-wrapper-line-height: 44px !default;
$tree-node-wrapper-border-bottom: 1px solid $gray-200 !default;
$tree-node-wrapper-active-border-color: rgba($primary, 0.3) !default;
$tree-node-wrapper-active-background-color: rgba($primary, 0.1) !default;
$tree-node-wrapper-hover-shadow: 0 2px 8px 1px rgba(0, 0, 0, 0.08) !default;
$tree-node-wrapper-height-sm: 42px !default;
// stepper
$stepper-header: 70px !default;
$stepper-padding: 0 50px !default;
$stepper-header-padding: 0 5px !default;
$stepper-number-size: 24px !default;
$stepper-selected-icon-bottom: -24px !default;
$stepper-label-padding: 0 10px !default;
$stepper-line-margin: 0 10px 0 0 !default;
$stepper-line-min-width: 30px !default;

//#region scrollbar
$scrollbar-track-piece: $gray-200 !default;
$scrollbar-thumb: $gray-300 !default;
// #endregion

// breadcrumb

$breadcrumb-icon-color: $gray-500 !default;
$breadcrumb-separator-color: $gray-500 !default;
$breadcrumb-text-color: $gray-600 !default;
$breadcrumb-active-color: $gray-800 !default;

// thyMenu
$menu-height: 42px !default;
$menu-shadow: 0 0 8px 2px $gray-200 !default;
$menu-item-padding: 0 20px !default;
$menu-group-header-padding: 0 1020px !default;
$menu-group-margin-left: 15px !default;
$menu-divider-margin: 10px 20px !default;

// editable
$editable-border-color: $gray-200 !default;
$editable-padding-y: $input-padding-y !default;
$editable-padding-x: $input-padding-x !default;
$editable-padding-y-lg: $input-padding-y-lg !default;
$editable-padding-x-lg: $input-padding-x-lg !default;

// arrow-switcher
$arrow-switcher-btn-size: 30px !default;
$arrow-switcher-sm-btn-size: 24px !default;
$arrow-switcher-btn-bac: $gray-200 !default;
$arrow-switcher-btn-disabled-bac: #fafafa !default;
$arrow-switcher-btn-disabled-color: $gray-300 !default;
$arrow-switcher-btn-hover-bac: $primary !default;
$arrow-switcher-btn-hover-color: $white !default;

// pagination
$pagination-padding-y: 0.282rem !default;
$pagination-padding-x: 0.757rem !default;
$pagination-padding-y-sm: 3px !default;
$pagination-padding-x-sm: 8px !default;
$pagination-padding-y-lg: 0.282rem !default;
$pagination-padding-x-lg: 0.757rem !default;
$pagination-line-height: 1.42 !default;
$pagination-color: $gray-500 !default;
$pagination-font-size: 12px !default;
$pagination-bg: $white !default;
$pagination-border-width: 1px !default;
$pagination-border-color: $gray-200 !default;
$pagination-focus-box-shadow: none !default;
$pagination-hover-color: $link-hover-color !default;
$pagination-hover-bg: $white !default;
$pagination-hover-border-color: $gray-200 !default;
$pagination-active-color: $white !default;
$pagination-active-bg: $primary !default;
$pagination-active-border-color: $primary !default;
$pagination-disabled-color: $gray-400 !default;
$pagination-disabled-bg: $white !default;
$pagination-disabled-border-color: $gray-200 !default;
$pagination-total-pages-color: $gray-700;
$pagination-jumper-margin: 0 12px !default;
$pagination-jumper-input-width: 38px;
$pagination-jumper-input-color: $gray-700;
$pagination-jumper-button-color: $gray-700;

// tooltip
$tooltip-font-size: $font-size-base !default;
$tooltip-max-width: 350px !default;
$tooltip-color: $white !default;
$tooltip-bg: rgba(0, 0, 0, 0.75) !default;
$tooltip-border-radius: $border-radius !default;
$tooltip-opacity: 0.9 !default;
$tooltip-padding-y: 0.375rem !default;
$tooltip-padding-x: 0.75rem !default;
$tooltip-margin: 0 !default;
$tooltip-box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.15) !default;
$tooltip-content-min-height: 34px !default;

$tooltip-arrow-width: 0.75rem !default;
$tooltip-arrow-height: 0.375rem !default;
$tooltip-arrow-color: $tooltip-bg !default;

// alert
$alert-padding-y: 0.625rem !default;
$alert-padding-x: 1.125rem !default;
$thy-alert-weak-colors: (
    'primary-week': $primary,
    'success-week': $success,
    'warning-week': $warning,
    'danger-week': $danger,
    'primary-weak': $primary,
    'success-weak': $success,
    'warning-weak': $warning,
    'danger-weak': $danger
) !default;
$alert-operation-margin-left: 40px !default;

// list
$list-item-padding: 0.554rem 10px !default;
$list-grid-option-margin: 0 25px 25px 0 !default;
$list-grid-option-width: 150px !default;
$list-grid-option-height: 120px !default;
$list-grid-option-sm: 95px !default;
$list-grid-option-margin-sm: 0 10px 10px 0 !default;
$list-grid-option-icon-size: 32px;
$list-grid-option-name-margin-top: 15px;
$list-grid-option-sm-name-margin-top: 7px;

// list-item-meta
$thy-list-item-border-bottom: 1px solid $gray-200 !default;
$list-item-meta-padding: 15px 0 !default;
$thy-list-item-meta-content-margin-left: 20px !default;
$thy-list-item-meta-title-font-size: 18px !default;
$thy-list-item-meta-description-margin-top: 10px !default;

// vote
$vote-layout-vertical-sm: 36px;
$vote-layout-vertical-default: 48px;
$vote-layout-vertical-padding-sm: 5px;
$vote-layout-vertical-padding-default: 7px;
$vote-layout-vertical-icon-margin-bottom: 4px;
$vote-layout-horizontal-padding: 4px 7px;
$vote-layout-horizontal-icon-margin-right: 5px;

// statistic
$statistic-size-default: 30px;
$statistic-suffix-size-default: $font-size-base;
$statistic-title-size-default: $font-size-base;

// result
$result-padding: 30px !default;
$result-title-font-size: $font-size-xlg !default;
$result-subtitle-font-size: $font-size-base !default;
$result-subtitle-color: $gray-600 !default;
$result-extra-margin-top: 17px !default;
$result-extra-item-margin: 6px !default;
$result-title-margin-top: 30px !default;
$result-subtitle-margin-top: 8px !default;

// markdown
$markdown-color-width: $rem-14px !default;
$markdown-color-height: $rem-14px !default;
$markdown-color-border-color: $gray-200 !default;

// mention
$mention-suggestions-width: 280px !default;
$mention-suggestions-height: 315px !default;

// Popover
$popover-divider: $gray-100 !default;
$popover-header-padding: 12px 20px !default;
$popover-body-padding: 15px 20px !default;

// divider
$divider-orientation-margin: 5% !default;
$divider-text-padding: 1em !default;
$divider-color: $gray-200 !default;
$divider-width: 1px !default;

// Variables
//
// Variables should follow the `$component-state-property-size` formula for
// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.

// Color system

$white:    #fff !default;
$gray-100: #f8f9fa !default;
$gray-200: #e9ecef !default;
$gray-300: #dee2e6 !default;
$gray-400: #ced4da !default;
$gray-500: #adb5bd !default;
$gray-600: #6c757d !default;
$gray-700: #495057 !default;
$gray-800: #343a40 !default;
$gray-900: #212529 !default;
$black:    #000 !default;

$grays: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$grays: map-merge(
  (
    "100": $gray-100,
    "200": $gray-200,
    "300": $gray-300,
    "400": $gray-400,
    "500": $gray-500,
    "600": $gray-600,
    "700": $gray-700,
    "800": $gray-800,
    "900": $gray-900
  ),
  $grays
);

$blue:    #007bff !default;
$indigo:  #6610f2 !default;
$purple:  #6f42c1 !default;
$pink:    #e83e8c !default;
$red:     #dc3545 !default;
$orange:  #fd7e14 !default;
$yellow:  #ffc107 !default;
$green:   #28a745 !default;
$teal:    #20c997 !default;
$cyan:    #17a2b8 !default;

$colors: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$colors: map-merge(
  (
    "blue":       $blue,
    "indigo":     $indigo,
    "purple":     $purple,
    "pink":       $pink,
    "red":        $red,
    "orange":     $orange,
    "yellow":     $yellow,
    "green":      $green,
    "teal":       $teal,
    "cyan":       $cyan,
    "white":      $white,
    "gray":       $gray-600,
    "gray-dark":  $gray-800
  ),
  $colors
);

$primary:       $blue !default;
$secondary:     $gray-600 !default;
$success:       $green !default;
$info:          $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-800 !default;

$theme-colors: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$theme-colors: map-merge(
  (
    "primary":    $primary,
    "secondary":  $secondary,
    "success":    $success,
    "info":       $info,
    "warning":    $warning,
    "danger":     $danger,
    "light":      $light,
    "dark":       $dark
  ),
  $theme-colors
);

// Set a specific jump point for requesting color jumps
$theme-color-interval:      8% !default;

// The yiq lightness value that determines when the lightness of color changes from "dark" to "light". Acceptable values are between 0 and 255.
$yiq-contrasted-threshold:  150 !default;

// Customize the light and dark text colors for use in our YIQ color contrast function.
$yiq-text-dark:             $gray-900 !default;
$yiq-text-light:            $white !default;

// Characters which are escaped by the escape-svg function
$escaped-characters: (
  ("<","%3c"),
  (">","%3e"),
  ("#","%23"),
  ("(","%28"),
  (")","%29"),
) !default;


// Options
//
// Quickly modify global styling by enabling or disabling optional features.

$enable-caret:                                true !default;
$enable-rounded:                              true !default;
$enable-shadows:                              false !default;
$enable-gradients:                            false !default;
$enable-transitions:                          true !default;
$enable-prefers-reduced-motion-media-query:   true !default;
$enable-hover-media-query:                    false !default; // Deprecated, no longer affects any compiled CSS
$enable-grid-classes:                         true !default;
$enable-pointer-cursor-for-buttons:           true !default;
$enable-print-styles:                         true !default;
$enable-responsive-font-sizes:                false !default;
$enable-validation-icons:                     true !default;
$enable-deprecation-messages:                 true !default;


// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer: 1rem !default;
$spacers: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$spacers: map-merge(
  (
    0: 0,
    1: ($spacer * .25),
    2: ($spacer * .5),
    3: $spacer,
    4: ($spacer * 1.5),
    5: ($spacer * 3)
  ),
  $spacers
);

// This variable affects the `.h-*` and `.w-*` classes.
$sizes: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$sizes: map-merge(
  (
    25: 25%,
    50: 50%,
    75: 75%,
    100: 100%,
    auto: auto
  ),
  $sizes
);


// Body
//
// Settings for the `<body>` element.

$body-bg:                   $white !default;
$body-color:                $gray-900 !default;


// Links
//
// Style anchor elements.

$link-color:                              theme-color("primary") !default;
$link-decoration:                         none !default;
$link-hover-color:                        darken($link-color, 15%) !default;
$link-hover-decoration:                   underline !default;
// Darken percentage for links with `.text-*` class (e.g. `.text-success`)
$emphasized-link-hover-darken-percentage: 15% !default;

// Paragraphs
//
// Style p element.

$paragraph-margin-bottom:   1rem !default;


// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.

$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
) !default;

@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints, "$grid-breakpoints");


// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

$container-max-widths: (
  sm: 540px,
  md: 720px,
  lg: 960px,
  xl: 1140px
) !default;

@include _assert-ascending($container-max-widths, "$container-max-widths");


// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns:                12 !default;
$grid-gutter-width:           30px !default;
$grid-row-columns:            6 !default;


// Components
//
// Define common padding and border radius sizes and more.

$line-height-lg:              1.5 !default;
$line-height-sm:              1.5 !default;

$border-width:                1px !default;
$border-color:                $gray-300 !default;

$border-radius:               .25rem !default;
$border-radius-lg:            .3rem !default;
$border-radius-sm:            .2rem !default;

$rounded-pill:                50rem !default;

$box-shadow-sm:               0 .125rem .25rem rgba($black, .075) !default;
$box-shadow:                  0 .5rem 1rem rgba($black, .15) !default;
$box-shadow-lg:               0 1rem 3rem rgba($black, .175) !default;

$component-active-color:      $white !default;
$component-active-bg:         theme-color("primary") !default;

$caret-width:                 .3em !default;
$caret-vertical-align:        $caret-width * .85 !default;
$caret-spacing:               $caret-width * .85 !default;

$transition-base:             all .2s ease-in-out !default;
$transition-fade:             opacity .15s linear !default;
$transition-collapse:         height .35s ease !default;

$embed-responsive-aspect-ratios: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$embed-responsive-aspect-ratios: join(
  (
    (21 9),
    (16 9),
    (4 3),
    (1 1),
  ),
  $embed-responsive-aspect-ratios
);

// Typography
//
// Font, line-height, and color for body text, headings, and more.

// stylelint-disable value-keyword-case
$font-family-sans-serif:      -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" !default;
$font-family-monospace:       SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace !default;
$font-family-base:            $font-family-sans-serif !default;
// stylelint-enable value-keyword-case

$font-size-base:              1rem !default; // Assumes the browser default, typically `16px`
$font-size-lg:                $font-size-base * 1.25 !default;
$font-size-sm:                $font-size-base * .875 !default;

$font-weight-lighter:         lighter !default;
$font-weight-light:           300 !default;
$font-weight-normal:          400 !default;
$font-weight-bold:            700 !default;
$font-weight-bolder:          bolder !default;

$font-weight-base:            $font-weight-normal !default;
$line-height-base:            1.5 !default;

$h1-font-size:                $font-size-base * 2.5 !default;
$h2-font-size:                $font-size-base * 2 !default;
$h3-font-size:                $font-size-base * 1.75 !default;
$h4-font-size:                $font-size-base * 1.5 !default;
$h5-font-size:                $font-size-base * 1.25 !default;
$h6-font-size:                $font-size-base !default;

$headings-margin-bottom:      $spacer / 2 !default;
$headings-font-family:        null !default;
$headings-font-weight:        500 !default;
$headings-line-height:        1.2 !default;
$headings-color:              null !default;

$display1-size:               6rem !default;
$display2-size:               5.5rem !default;
$display3-size:               4.5rem !default;
$display4-size:               3.5rem !default;

$display1-weight:             300 !default;
$display2-weight:             300 !default;
$display3-weight:             300 !default;
$display4-weight:             300 !default;
$display-line-height:         $headings-line-height !default;

$lead-font-size:              $font-size-base * 1.25 !default;
$lead-font-weight:            300 !default;

$small-font-size:             80% !default;

$text-muted:                  $gray-600 !default;

$blockquote-small-color:      $gray-600 !default;
$blockquote-small-font-size:  $small-font-size !default;
$blockquote-font-size:        $font-size-base * 1.25 !default;

$hr-border-color:             rgba($black, .1) !default;
$hr-border-width:             $border-width !default;

$mark-padding:                .2em !default;

$dt-font-weight:              $font-weight-bold !default;

$kbd-box-shadow:              inset 0 -.1rem 0 rgba($black, .25) !default;
$nested-kbd-font-weight:      $font-weight-bold !default;

$list-inline-padding:         .5rem !default;

$mark-bg:                     #fcf8e3 !default;

$hr-margin-y:                 $spacer !default;


// Tables
//
// Customizes the `.table` component with basic values, each used across all table variations.

$table-cell-padding:          .75rem !default;
$table-cell-padding-sm:       .3rem !default;

$table-color:                 $body-color !default;
$table-bg:                    null !default;
$table-accent-bg:             rgba($black, .05) !default;
$table-hover-color:           $table-color !default;
$table-hover-bg:              rgba($black, .075) !default;
$table-active-bg:             $table-hover-bg !default;

$table-border-width:          $border-width !default;
$table-border-color:          $border-color !default;

$table-head-bg:               $gray-200 !default;
$table-head-color:            $gray-700 !default;

$table-dark-color:            $white !default;
$table-dark-bg:               $gray-800 !default;
$table-dark-accent-bg:        rgba($white, .05) !default;
$table-dark-hover-color:      $table-dark-color !default;
$table-dark-hover-bg:         rgba($white, .075) !default;
$table-dark-border-color:     lighten($table-dark-bg, 7.5%) !default;

$table-striped-order:         odd !default;

$table-caption-color:         $text-muted !default;

$table-bg-level:              -9 !default;
$table-border-level:          -6 !default;


// Buttons + Forms
//
// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.

$input-btn-padding-y:         .375rem !default;
$input-btn-padding-x:         .75rem !default;
$input-btn-font-family:       null !default;
$input-btn-font-size:         $font-size-base !default;
$input-btn-line-height:       $line-height-base !default;

$input-btn-focus-width:       .2rem !default;
$input-btn-focus-color:       rgba($component-active-bg, .25) !default;
$input-btn-focus-box-shadow:  0 0 0 $input-btn-focus-width $input-btn-focus-color !default;

$input-btn-padding-y-sm:      .25rem !default;
$input-btn-padding-x-sm:      .5rem !default;
$input-btn-font-size-sm:      $font-size-sm !default;
$input-btn-line-height-sm:    $line-height-sm !default;

$input-btn-padding-y-lg:      .5rem !default;
$input-btn-padding-x-lg:      1rem !default;
$input-btn-font-size-lg:      $font-size-lg !default;
$input-btn-line-height-lg:    $line-height-lg !default;

$input-btn-border-width:      $border-width !default;


// Buttons
//
// For each of Bootstrap's buttons, define text, background, and border color.

$btn-padding-y:               $input-btn-padding-y !default;
$btn-padding-x:               $input-btn-padding-x !default;
$btn-font-family:             $input-btn-font-family !default;
$btn-font-size:               $input-btn-font-size !default;
$btn-line-height:             $input-btn-line-height !default;
$btn-white-space:             null !default; // Set to `nowrap` to prevent text wrapping

$btn-padding-y-sm:            $input-btn-padding-y-sm !default;
$btn-padding-x-sm:            $input-btn-padding-x-sm !default;
$btn-font-size-sm:            $input-btn-font-size-sm !default;
$btn-line-height-sm:          $input-btn-line-height-sm !default;

$btn-padding-y-lg:            $input-btn-padding-y-lg !default;
$btn-padding-x-lg:            $input-btn-padding-x-lg !default;
$btn-font-size-lg:            $input-btn-font-size-lg !default;
$btn-line-height-lg:          $input-btn-line-height-lg !default;

$btn-border-width:            $input-btn-border-width !default;

$btn-font-weight:             $font-weight-normal !default;
$btn-box-shadow:              inset 0 1px 0 rgba($white, .15), 0 1px 1px rgba($black, .075) !default;
$btn-focus-width:             $input-btn-focus-width !default;
$btn-focus-box-shadow:        $input-btn-focus-box-shadow !default;
$btn-disabled-opacity:        .65 !default;
$btn-active-box-shadow:       inset 0 3px 5px rgba($black, .125) !default;

$btn-link-disabled-color:     $gray-600 !default;

$btn-block-spacing-y:         .5rem !default;

// Allows for customizing button radius independently from global border radius
$btn-border-radius:           $border-radius !default;
$btn-border-radius-lg:        $border-radius-lg !default;
$btn-border-radius-sm:        $border-radius-sm !default;

$btn-transition:              color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;


// Forms

$label-margin-bottom:                   .5rem !default;

$input-padding-y:                       $input-btn-padding-y !default;
$input-padding-x:                       $input-btn-padding-x !default;
$input-font-family:                     $input-btn-font-family !default;
$input-font-size:                       $input-btn-font-size !default;
$input-font-weight:                     $font-weight-base !default;
$input-line-height:                     $input-btn-line-height !default;

$input-padding-y-sm:                    $input-btn-padding-y-sm !default;
$input-padding-x-sm:                    $input-btn-padding-x-sm !default;
$input-font-size-sm:                    $input-btn-font-size-sm !default;
$input-line-height-sm:                  $input-btn-line-height-sm !default;

$input-padding-y-lg:                    $input-btn-padding-y-lg !default;
$input-padding-x-lg:                    $input-btn-padding-x-lg !default;
$input-font-size-lg:                    $input-btn-font-size-lg !default;
$input-line-height-lg:                  $input-btn-line-height-lg !default;

$input-bg:                              $white !default;
$input-disabled-bg:                     $gray-200 !default;

$input-color:                           $gray-700 !default;
$input-border-color:                    $gray-400 !default;
$input-border-width:                    $input-btn-border-width !default;
$input-box-shadow:                      inset 0 1px 1px rgba($black, .075) !default;

$input-border-radius:                   $border-radius !default;
$input-border-radius-lg:                $border-radius-lg !default;
$input-border-radius-sm:                $border-radius-sm !default;

$input-focus-bg:                        $input-bg !default;
$input-focus-border-color:              lighten($component-active-bg, 25%) !default;
$input-focus-color:                     $input-color !default;
$input-focus-width:                     $input-btn-focus-width !default;
$input-focus-box-shadow:                $input-btn-focus-box-shadow !default;

$input-placeholder-color:               $gray-600 !default;
$input-plaintext-color:                 $body-color !default;

$input-height-border:                   $input-border-width * 2 !default;

$input-height-inner:                    add($input-line-height * 1em, $input-padding-y * 2) !default;
$input-height-inner-half:               add($input-line-height * .5em, $input-padding-y) !default;
$input-height-inner-quarter:            add($input-line-height * .25em, $input-padding-y / 2) !default;

$input-height:                          add($input-line-height * 1em, add($input-padding-y * 2, $input-height-border, false)) !default;
$input-height-sm:                       add($input-line-height-sm * 1em, add($input-padding-y-sm * 2, $input-height-border, false)) !default;
$input-height-lg:                       add($input-line-height-lg * 1em, add($input-padding-y-lg * 2, $input-height-border, false)) !default;

$input-transition:                      border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;

$form-text-margin-top:                  .25rem !default;

$form-check-input-gutter:               1.25rem !default;
$form-check-input-margin-y:             .3rem !default;
$form-check-input-margin-x:             .25rem !default;

$form-check-inline-margin-x:            .75rem !default;
$form-check-inline-input-margin-x:      .3125rem !default;

$form-grid-gutter-width:                10px !default;
$form-group-margin-bottom:              1rem !default;

$input-group-addon-color:               $input-color !default;
$input-group-addon-bg:                  $gray-200 !default;
$input-group-addon-border-color:        $input-border-color !default;

$custom-forms-transition:               background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;

$custom-control-gutter:                 .5rem !default;
$custom-control-spacer-x:               1rem !default;
$custom-control-cursor:                 null !default;

$custom-control-indicator-size:         1rem !default;
$custom-control-indicator-bg:           $input-bg !default;

$custom-control-indicator-bg-size:      50% 50% !default;
$custom-control-indicator-box-shadow:   $input-box-shadow !default;
$custom-control-indicator-border-color: $gray-500 !default;
$custom-control-indicator-border-width: $input-border-width !default;

$custom-control-label-color:            null !default;

$custom-control-indicator-disabled-bg:          $input-disabled-bg !default;
$custom-control-label-disabled-color:           $gray-600 !default;

$custom-control-indicator-checked-color:        $component-active-color !default;
$custom-control-indicator-checked-bg:           $component-active-bg !default;
$custom-control-indicator-checked-disabled-bg:  rgba(theme-color("primary"), .5) !default;
$custom-control-indicator-checked-box-shadow:   none !default;
$custom-control-indicator-checked-border-color: $custom-control-indicator-checked-bg !default;

$custom-control-indicator-focus-box-shadow:     $input-focus-box-shadow !default;
$custom-control-indicator-focus-border-color:   $input-focus-border-color !default;

$custom-control-indicator-active-color:         $component-active-color !default;
$custom-control-indicator-active-bg:            lighten($component-active-bg, 35%) !default;
$custom-control-indicator-active-box-shadow:    none !default;
$custom-control-indicator-active-border-color:  $custom-control-indicator-active-bg !default;

$custom-checkbox-indicator-border-radius:       $border-radius !default;
$custom-checkbox-indicator-icon-checked:        url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'><path fill='#{$custom-control-indicator-checked-color}' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z'/></svg>") !default;

$custom-checkbox-indicator-indeterminate-bg:           $component-active-bg !default;
$custom-checkbox-indicator-indeterminate-color:        $custom-control-indicator-checked-color !default;
$custom-checkbox-indicator-icon-indeterminate:         url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'><path stroke='#{$custom-checkbox-indicator-indeterminate-color}' d='M0 2h4'/></svg>") !default;
$custom-checkbox-indicator-indeterminate-box-shadow:   none !default;
$custom-checkbox-indicator-indeterminate-border-color: $custom-checkbox-indicator-indeterminate-bg !default;

$custom-radio-indicator-border-radius:          50% !default;
$custom-radio-indicator-icon-checked:           url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='-4 -4 8 8'><circle r='3' fill='#{$custom-control-indicator-checked-color}'/></svg>") !default;

$custom-switch-width:                           $custom-control-indicator-size * 1.75 !default;
$custom-switch-indicator-border-radius:         $custom-control-indicator-size / 2 !default;
$custom-switch-indicator-size:                  subtract($custom-control-indicator-size, $custom-control-indicator-border-width * 4) !default;

$custom-select-padding-y:           $input-padding-y !default;
$custom-select-padding-x:           $input-padding-x !default;
$custom-select-font-family:         $input-font-family !default;
$custom-select-font-size:           $input-font-size !default;
$custom-select-height:              $input-height !default;
$custom-select-indicator-padding:   1rem !default; // Extra padding to account for the presence of the background-image based indicator
$custom-select-font-weight:         $input-font-weight !default;
$custom-select-line-height:         $input-line-height !default;
$custom-select-color:               $input-color !default;
$custom-select-disabled-color:      $gray-600 !default;
$custom-select-bg:                  $input-bg !default;
$custom-select-disabled-bg:         $gray-200 !default;
$custom-select-bg-size:             8px 10px !default; // In pixels because image dimensions
$custom-select-indicator-color:     $gray-800 !default;
$custom-select-indicator:           url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'><path fill='#{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/></svg>") !default;
$custom-select-background:          escape-svg($custom-select-indicator) no-repeat right $custom-select-padding-x center / $custom-select-bg-size !default; // Used so we can have multiple background elements (e.g., arrow and feedback icon)

$custom-select-feedback-icon-padding-right: add(1em * .75, (2 * $custom-select-padding-y * .75) + $custom-select-padding-x + $custom-select-indicator-padding) !default;
$custom-select-feedback-icon-position:      center right ($custom-select-padding-x + $custom-select-indicator-padding) !default;
$custom-select-feedback-icon-size:          $input-height-inner-half $input-height-inner-half !default;

$custom-select-border-width:        $input-border-width !default;
$custom-select-border-color:        $input-border-color !default;
$custom-select-border-radius:       $border-radius !default;
$custom-select-box-shadow:          inset 0 1px 2px rgba($black, .075) !default;

$custom-select-focus-border-color:  $input-focus-border-color !default;
$custom-select-focus-width:         $input-focus-width !default;
$custom-select-focus-box-shadow:    0 0 0 $custom-select-focus-width $input-btn-focus-color !default;

$custom-select-padding-y-sm:        $input-padding-y-sm !default;
$custom-select-padding-x-sm:        $input-padding-x-sm !default;
$custom-select-font-size-sm:        $input-font-size-sm !default;
$custom-select-height-sm:           $input-height-sm !default;

$custom-select-padding-y-lg:        $input-padding-y-lg !default;
$custom-select-padding-x-lg:        $input-padding-x-lg !default;
$custom-select-font-size-lg:        $input-font-size-lg !default;
$custom-select-height-lg:           $input-height-lg !default;

$custom-range-track-width:          100% !default;
$custom-range-track-height:         .5rem !default;
$custom-range-track-cursor:         pointer !default;
$custom-range-track-bg:             $gray-300 !default;
$custom-range-track-border-radius:  1rem !default;
$custom-range-track-box-shadow:     inset 0 .25rem .25rem rgba($black, .1) !default;

$custom-range-thumb-width:                   1rem !default;
$custom-range-thumb-height:                  $custom-range-thumb-width !default;
$custom-range-thumb-bg:                      $component-active-bg !default;
$custom-range-thumb-border:                  0 !default;
$custom-range-thumb-border-radius:           1rem !default;
$custom-range-thumb-box-shadow:              0 .1rem .25rem rgba($black, .1) !default;
$custom-range-thumb-focus-box-shadow:        0 0 0 1px $body-bg, $input-focus-box-shadow !default;
$custom-range-thumb-focus-box-shadow-width:  $input-focus-width !default; // For focus box shadow issue in IE/Edge
$custom-range-thumb-active-bg:               lighten($component-active-bg, 35%) !default;
$custom-range-thumb-disabled-bg:             $gray-500 !default;

$custom-file-height:                $input-height !default;
$custom-file-height-inner:          $input-height-inner !default;
$custom-file-focus-border-color:    $input-focus-border-color !default;
$custom-file-focus-box-shadow:      $input-focus-box-shadow !default;
$custom-file-disabled-bg:           $input-disabled-bg !default;

$custom-file-padding-y:             $input-padding-y !default;
$custom-file-padding-x:             $input-padding-x !default;
$custom-file-line-height:           $input-line-height !default;
$custom-file-font-family:           $input-font-family !default;
$custom-file-font-weight:           $input-font-weight !default;
$custom-file-color:                 $input-color !default;
$custom-file-bg:                    $input-bg !default;
$custom-file-border-width:          $input-border-width !default;
$custom-file-border-color:          $input-border-color !default;
$custom-file-border-radius:         $input-border-radius !default;
$custom-file-box-shadow:            $input-box-shadow !default;
$custom-file-button-color:          $custom-file-color !default;
$custom-file-button-bg:             $input-group-addon-bg !default;
$custom-file-text: (
  en: "Browse"
) !default;


// Form validation

$form-feedback-margin-top:          $form-text-margin-top !default;
$form-feedback-font-size:           $small-font-size !default;
$form-feedback-valid-color:         theme-color("success") !default;
$form-feedback-invalid-color:       theme-color("danger") !default;

$form-feedback-icon-valid-color:    $form-feedback-valid-color !default;
$form-feedback-icon-valid:          url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'><path fill='#{$form-feedback-icon-valid-color}' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/></svg>") !default;
$form-feedback-icon-invalid-color:  $form-feedback-invalid-color !default;
$form-feedback-icon-invalid:        url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='#{$form-feedback-icon-invalid-color}' viewBox='0 0 12 12'><circle cx='6' cy='6' r='4.5'/><path stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/><circle cx='6' cy='8.2' r='.6' fill='#{$form-feedback-icon-invalid-color}' stroke='none'/></svg>") !default;

$form-validation-states: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$form-validation-states: map-merge(
  (
    "valid": (
      "color": $form-feedback-valid-color,
      "icon": $form-feedback-icon-valid
    ),
    "invalid": (
      "color": $form-feedback-invalid-color,
      "icon": $form-feedback-icon-invalid
    ),
  ),
  $form-validation-states
);

// Z-index master list
//
// Warning: Avoid customizing these values. They're used for a bird's eye view
// of components dependent on the z-axis and are designed to all work together.

$zindex-dropdown:                   1000 !default;
$zindex-sticky:                     1020 !default;
$zindex-fixed:                      1030 !default;
$zindex-modal-backdrop:             1040 !default;
$zindex-modal:                      1050 !default;
$zindex-popover:                    1060 !default;
$zindex-tooltip:                    1070 !default;


// Navs

$nav-link-padding-y:                .5rem !default;
$nav-link-padding-x:                1rem !default;
$nav-link-disabled-color:           $gray-600 !default;

$nav-tabs-border-color:             $gray-300 !default;
$nav-tabs-border-width:             $border-width !default;
$nav-tabs-border-radius:            $border-radius !default;
$nav-tabs-link-hover-border-color:  $gray-200 $gray-200 $nav-tabs-border-color !default;
$nav-tabs-link-active-color:        $gray-700 !default;
$nav-tabs-link-active-bg:           $body-bg !default;
$nav-tabs-link-active-border-color: $gray-300 $gray-300 $nav-tabs-link-active-bg !default;

$nav-pills-border-radius:           $border-radius !default;
$nav-pills-link-active-color:       $component-active-color !default;
$nav-pills-link-active-bg:          $component-active-bg !default;

$nav-divider-color:                 $gray-200 !default;
$nav-divider-margin-y:              $spacer / 2 !default;


// Navbar

$navbar-padding-y:                  $spacer / 2 !default;
$navbar-padding-x:                  $spacer !default;

$navbar-nav-link-padding-x:         .5rem !default;

$navbar-brand-font-size:            $font-size-lg !default;
// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link
$nav-link-height:                   $font-size-base * $line-height-base + $nav-link-padding-y * 2 !default;
$navbar-brand-height:               $navbar-brand-font-size * $line-height-base !default;
$navbar-brand-padding-y:            ($nav-link-height - $navbar-brand-height) / 2 !default;

$navbar-toggler-padding-y:          .25rem !default;
$navbar-toggler-padding-x:          .75rem !default;
$navbar-toggler-font-size:          $font-size-lg !default;
$navbar-toggler-border-radius:      $btn-border-radius !default;

$navbar-dark-color:                 rgba($white, .5) !default;
$navbar-dark-hover-color:           rgba($white, .75) !default;
$navbar-dark-active-color:          $white !default;
$navbar-dark-disabled-color:        rgba($white, .25) !default;
$navbar-dark-toggler-icon-bg:       url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'><path stroke='#{$navbar-dark-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>") !default;
$navbar-dark-toggler-border-color:  rgba($white, .1) !default;

$navbar-light-color:                rgba($black, .5) !default;
$navbar-light-hover-color:          rgba($black, .7) !default;
$navbar-light-active-color:         rgba($black, .9) !default;
$navbar-light-disabled-color:       rgba($black, .3) !default;
$navbar-light-toggler-icon-bg:      url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'><path stroke='#{$navbar-light-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>") !default;
$navbar-light-toggler-border-color: rgba($black, .1) !default;

$navbar-light-brand-color:                $navbar-light-active-color !default;
$navbar-light-brand-hover-color:          $navbar-light-active-color !default;
$navbar-dark-brand-color:                 $navbar-dark-active-color !default;
$navbar-dark-brand-hover-color:           $navbar-dark-active-color !default;


// Dropdowns
//
// Dropdown menu container and contents.

$dropdown-min-width:                10rem !default;
$dropdown-padding-y:                .5rem !default;
$dropdown-spacer:                   .125rem !default;
$dropdown-font-size:                $font-size-base !default;
$dropdown-color:                    $body-color !default;
$dropdown-bg:                       $white !default;
$dropdown-border-color:             rgba($black, .15) !default;
$dropdown-border-radius:            $border-radius !default;
$dropdown-border-width:             $border-width !default;
$dropdown-inner-border-radius:      subtract($dropdown-border-radius, $dropdown-border-width) !default;
$dropdown-divider-bg:               $gray-200 !default;
$dropdown-divider-margin-y:         $nav-divider-margin-y !default;
$dropdown-box-shadow:               0 .5rem 1rem rgba($black, .175) !default;

$dropdown-link-color:               $gray-900 !default;
$dropdown-link-hover-color:         darken($gray-900, 5%) !default;
$dropdown-link-hover-bg:            $gray-100 !default;

$dropdown-link-active-color:        $component-active-color !default;
$dropdown-link-active-bg:           $component-active-bg !default;

$dropdown-link-disabled-color:      $gray-600 !default;

$dropdown-item-padding-y:           .25rem !default;
$dropdown-item-padding-x:           1.5rem !default;

$dropdown-header-color:             $gray-600 !default;
$dropdown-header-padding:           $dropdown-padding-y $dropdown-item-padding-x !default;


// Pagination

$pagination-padding-y:              .5rem !default;
$pagination-padding-x:              .75rem !default;
$pagination-padding-y-sm:           .25rem !default;
$pagination-padding-x-sm:           .5rem !default;
$pagination-padding-y-lg:           .75rem !default;
$pagination-padding-x-lg:           1.5rem !default;
$pagination-line-height:            1.25 !default;

$pagination-color:                  $link-color !default;
$pagination-bg:                     $white !default;
$pagination-border-width:           $border-width !default;
$pagination-border-color:           $gray-300 !default;

$pagination-focus-box-shadow:       $input-btn-focus-box-shadow !default;
$pagination-focus-outline:          0 !default;

$pagination-hover-color:            $link-hover-color !default;
$pagination-hover-bg:               $gray-200 !default;
$pagination-hover-border-color:     $gray-300 !default;

$pagination-active-color:           $component-active-color !default;
$pagination-active-bg:              $component-active-bg !default;
$pagination-active-border-color:    $pagination-active-bg !default;

$pagination-disabled-color:         $gray-600 !default;
$pagination-disabled-bg:            $white !default;
$pagination-disabled-border-color:  $gray-300 !default;


// Jumbotron

$jumbotron-padding:                 2rem !default;
$jumbotron-color:                   null !default;
$jumbotron-bg:                      $gray-200 !default;


// Cards

$card-spacer-y:                     .75rem !default;
$card-spacer-x:                     1.25rem !default;
$card-border-width:                 $border-width !default;
$card-border-radius:                $border-radius !default;
$card-border-color:                 rgba($black, .125) !default;
$card-inner-border-radius:          subtract($card-border-radius, $card-border-width) !default;
$card-cap-bg:                       rgba($black, .03) !default;
$card-cap-color:                    null !default;
$card-height:                       null !default;
$card-color:                        null !default;
$card-bg:                           $white !default;

$card-img-overlay-padding:          1.25rem !default;

$card-group-margin:                 $grid-gutter-width / 2 !default;
$card-deck-margin:                  $card-group-margin !default;

$card-columns-count:                3 !default;
$card-columns-gap:                  1.25rem !default;
$card-columns-margin:               $card-spacer-y !default;


// Tooltips

$tooltip-font-size:                 $font-size-sm !default;
$tooltip-max-width:                 200px !default;
$tooltip-color:                     $white !default;
$tooltip-bg:                        $black !default;
$tooltip-border-radius:             $border-radius !default;
$tooltip-opacity:                   .9 !default;
$tooltip-padding-y:                 .25rem !default;
$tooltip-padding-x:                 .5rem !default;
$tooltip-margin:                    0 !default;

$tooltip-arrow-width:               .8rem !default;
$tooltip-arrow-height:              .4rem !default;
$tooltip-arrow-color:               $tooltip-bg !default;

// Form tooltips must come after regular tooltips
$form-feedback-tooltip-padding-y:     $tooltip-padding-y !default;
$form-feedback-tooltip-padding-x:     $tooltip-padding-x !default;
$form-feedback-tooltip-font-size:     $tooltip-font-size !default;
$form-feedback-tooltip-line-height:   $line-height-base !default;
$form-feedback-tooltip-opacity:       $tooltip-opacity !default;
$form-feedback-tooltip-border-radius: $tooltip-border-radius !default;


// Popovers

$popover-font-size:                 $font-size-sm !default;
$popover-bg:                        $white !default;
$popover-max-width:                 276px !default;
$popover-border-width:              $border-width !default;
$popover-border-color:              rgba($black, .2) !default;
$popover-border-radius:             $border-radius-lg !default;
$popover-inner-border-radius:       subtract($popover-border-radius, $popover-border-width) !default;
$popover-box-shadow:                0 .25rem .5rem rgba($black, .2) !default;

$popover-header-bg:                 darken($popover-bg, 3%) !default;
$popover-header-color:              $headings-color !default;
$popover-header-padding-y:          .5rem !default;
$popover-header-padding-x:          .75rem !default;

$popover-body-color:                $body-color !default;
$popover-body-padding-y:            $popover-header-padding-y !default;
$popover-body-padding-x:            $popover-header-padding-x !default;

$popover-arrow-width:               1rem !default;
$popover-arrow-height:              .5rem !default;
$popover-arrow-color:               $popover-bg !default;

$popover-arrow-outer-color:         fade-in($popover-border-color, .05) !default;


// Toasts

$toast-max-width:                   350px !default;
$toast-padding-x:                   .75rem !default;
$toast-padding-y:                   .25rem !default;
$toast-font-size:                   .875rem !default;
$toast-color:                       null !default;
$toast-background-color:            rgba($white, .85) !default;
$toast-border-width:                1px !default;
$toast-border-color:                rgba(0, 0, 0, .1) !default;
$toast-border-radius:               .25rem !default;
$toast-box-shadow:                  0 .25rem .75rem rgba($black, .1) !default;

$toast-header-color:                $gray-600 !default;
$toast-header-background-color:     rgba($white, .85) !default;
$toast-header-border-color:         rgba(0, 0, 0, .05) !default;


// Badges

$badge-font-size:                   75% !default;
$badge-font-weight:                 $font-weight-bold !default;
$badge-padding-y:                   .25em !default;
$badge-padding-x:                   .4em !default;
$badge-border-radius:               $border-radius !default;

$badge-transition:                  $btn-transition !default;
$badge-focus-width:                 $input-btn-focus-width !default;

$badge-pill-padding-x:              .6em !default;
// Use a higher than normal value to ensure completely rounded edges when
// customizing padding or font-size on labels.
$badge-pill-border-radius:          10rem !default;


// Modals

// Padding applied to the modal body
$modal-inner-padding:               1rem !default;

// Margin between elements in footer, must be lower than or equal to 2 * $modal-inner-padding
$modal-footer-margin-between:       .5rem !default;

$modal-dialog-margin:               .5rem !default;
$modal-dialog-margin-y-sm-up:       1.75rem !default;

$modal-title-line-height:           $line-height-base !default;

$modal-content-color:               null !default;
$modal-content-bg:                  $white !default;
$modal-content-border-color:        rgba($black, .2) !default;
$modal-content-border-width:        $border-width !default;
$modal-content-border-radius:       $border-radius-lg !default;
$modal-content-inner-border-radius: subtract($modal-content-border-radius, $modal-content-border-width) !default;
$modal-content-box-shadow-xs:       0 .25rem .5rem rgba($black, .5) !default;
$modal-content-box-shadow-sm-up:    0 .5rem 1rem rgba($black, .5) !default;

$modal-backdrop-bg:                 $black !default;
$modal-backdrop-opacity:            .5 !default;
$modal-header-border-color:         $border-color !default;
$modal-footer-border-color:         $modal-header-border-color !default;
$modal-header-border-width:         $modal-content-border-width !default;
$modal-footer-border-width:         $modal-header-border-width !default;
$modal-header-padding-y:            1rem !default;
$modal-header-padding-x:            1rem !default;
$modal-header-padding:              $modal-header-padding-y $modal-header-padding-x !default; // Keep this for backwards compatibility

$modal-xl:                          1140px !default;
$modal-lg:                          800px !default;
$modal-md:                          500px !default;
$modal-sm:                          300px !default;

$modal-fade-transform:              translate(0, -50px) !default;
$modal-show-transform:              none !default;
$modal-transition:                  transform .3s ease-out !default;
$modal-scale-transform:             scale(1.02) !default;


// Alerts
//
// Define alert colors, border radius, and padding.

$alert-padding-y:                   .75rem !default;
$alert-padding-x:                   1.25rem !default;
$alert-margin-bottom:               1rem !default;
$alert-border-radius:               $border-radius !default;
$alert-link-font-weight:            $font-weight-bold !default;
$alert-border-width:                $border-width !default;

$alert-bg-level:                    -10 !default;
$alert-border-level:                -9 !default;
$alert-color-level:                 6 !default;


// Progress bars

$progress-height:                   1rem !default;
$progress-font-size:                $font-size-base * .75 !default;
$progress-bg:                       $gray-200 !default;
$progress-border-radius:            $border-radius !default;
$progress-box-shadow:               inset 0 .1rem .1rem rgba($black, .1) !default;
$progress-bar-color:                $white !default;
$progress-bar-bg:                   theme-color("primary") !default;
$progress-bar-animation-timing:     1s linear infinite !default;
$progress-bar-transition:           width .6s ease !default;


// List group

$list-group-color:                  null !default;
$list-group-bg:                     $white !default;
$list-group-border-color:           rgba($black, .125) !default;
$list-group-border-width:           $border-width !default;
$list-group-border-radius:          $border-radius !default;

$list-group-item-padding-y:         .75rem !default;
$list-group-item-padding-x:         1.25rem !default;

$list-group-hover-bg:               $gray-100 !default;
$list-group-active-color:           $component-active-color !default;
$list-group-active-bg:              $component-active-bg !default;
$list-group-active-border-color:    $list-group-active-bg !default;

$list-group-disabled-color:         $gray-600 !default;
$list-group-disabled-bg:            $list-group-bg !default;

$list-group-action-color:           $gray-700 !default;
$list-group-action-hover-color:     $list-group-action-color !default;

$list-group-action-active-color:    $body-color !default;
$list-group-action-active-bg:       $gray-200 !default;


// Image thumbnails

$thumbnail-padding:                 .25rem !default;
$thumbnail-bg:                      $body-bg !default;
$thumbnail-border-width:            $border-width !default;
$thumbnail-border-color:            $gray-300 !default;
$thumbnail-border-radius:           $border-radius !default;
$thumbnail-box-shadow:              0 1px 2px rgba($black, .075) !default;


// Figures

$figure-caption-font-size:          90% !default;
$figure-caption-color:              $gray-600 !default;


// Breadcrumbs

$breadcrumb-font-size:              null !default;

$breadcrumb-padding-y:              .75rem !default;
$breadcrumb-padding-x:              1rem !default;
$breadcrumb-item-padding:           .5rem !default;

$breadcrumb-margin-bottom:          1rem !default;

$breadcrumb-bg:                     $gray-200 !default;
$breadcrumb-divider-color:          $gray-600 !default;
$breadcrumb-active-color:           $gray-600 !default;
$breadcrumb-divider:                quote("/") !default;

$breadcrumb-border-radius:          $border-radius !default;


// Carousel

$carousel-control-color:             $white !default;
$carousel-control-width:             15% !default;
$carousel-control-opacity:           .5 !default;
$carousel-control-hover-opacity:     .9 !default;
$carousel-control-transition:        opacity .15s ease !default;

$carousel-indicator-width:           30px !default;
$carousel-indicator-height:          3px !default;
$carousel-indicator-hit-area-height: 10px !default;
$carousel-indicator-spacer:          3px !default;
$carousel-indicator-active-bg:       $white !default;
$carousel-indicator-transition:      opacity .6s ease !default;

$carousel-caption-width:             70% !default;
$carousel-caption-color:             $white !default;

$carousel-control-icon-width:        20px !default;

$carousel-control-prev-icon-bg:      url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' width='8' height='8' viewBox='0 0 8 8'><path d='M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z'/></svg>") !default;
$carousel-control-next-icon-bg:      url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' width='8' height='8' viewBox='0 0 8 8'><path d='M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z'/></svg>") !default;

$carousel-transition-duration:       .6s !default;
$carousel-transition:                transform $carousel-transition-duration ease-in-out !default; // Define transform transition first if using multiple transitions (e.g., `transform 2s ease, opacity .5s ease-out`)


// Spinners

$spinner-width:         2rem !default;
$spinner-height:        $spinner-width !default;
$spinner-border-width:  .25em !default;

$spinner-width-sm:        1rem !default;
$spinner-height-sm:       $spinner-width-sm !default;
$spinner-border-width-sm: .2em !default;


// Close

$close-font-size:                   $font-size-base * 1.5 !default;
$close-font-weight:                 $font-weight-bold !default;
$close-color:                       $black !default;
$close-text-shadow:                 0 1px 0 $white !default;


// Code

$code-font-size:                    87.5% !default;
$code-color:                        $pink !default;

$kbd-padding-y:                     .2rem !default;
$kbd-padding-x:                     .4rem !default;
$kbd-font-size:                     $code-font-size !default;
$kbd-color:                         $white !default;
$kbd-bg:                            $gray-900 !default;

$pre-color:                         $gray-900 !default;
$pre-scrollable-max-height:         340px !default;


// Utilities

$displays: none, inline, inline-block, block, table, table-row, table-cell, flex, inline-flex !default;
$overflows: auto, hidden !default;
$positions: static, relative, absolute, fixed, sticky !default;
$user-selects: all, auto, none !default;


// Printing

$print-page-size:                   a3 !default;
$print-body-min-width:              map-get($grid-breakpoints, "lg") !default;

// Toggles
//
// Used in conjunction with global variables to enable certain theme features.

// Vendor
// stylelint-disable property-blacklist, scss/dollar-variable-default

// SCSS RFS mixin
//
// Automated font-resizing
//
// See https://github.com/twbs/rfs

// Configuration

// Base font size
$rfs-base-font-size: 1.25rem !default;
$rfs-font-size-unit: rem !default;

// Breakpoint at where font-size starts decreasing if screen width is smaller
$rfs-breakpoint: 1200px !default;
$rfs-breakpoint-unit: px !default;

// Resize font-size based on screen height and width
$rfs-two-dimensional: false !default;

// Factor of decrease
$rfs-factor: 10 !default;

@if type-of($rfs-factor) != "number" or $rfs-factor <= 1 {
  @error "`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.";
}

// Generate enable or disable classes. Possibilities: false, "enable" or "disable"
$rfs-class: false !default;

// 1 rem = $rfs-rem-value px
$rfs-rem-value: 16 !default;

// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14
$rfs-safari-iframe-resize-bug-fix: false !default;

// Disable RFS by setting $enable-responsive-font-sizes to false
$enable-responsive-font-sizes: true !default;

// Cache $rfs-base-font-size unit
$rfs-base-font-size-unit: unit($rfs-base-font-size);

// Remove px-unit from $rfs-base-font-size for calculations
@if $rfs-base-font-size-unit == "px" {
  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);
}
@else if $rfs-base-font-size-unit == "rem" {
  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);
}

// Cache $rfs-breakpoint unit to prevent multiple calls
$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);

// Remove unit from $rfs-breakpoint for calculations
@if $rfs-breakpoint-unit-cache == "px" {
  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);
}
@else if $rfs-breakpoint-unit-cache == "rem" or $rfs-breakpoint-unit-cache == "em" {
  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);
}

// Responsive font-size mixin
@mixin rfs($fs, $important: false) {
  // Cache $fs unit
  $fs-unit: if(type-of($fs) == "number", unit($fs), false);

  // Add !important suffix if needed
  $rfs-suffix: if($important, " !important", "");

  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value
  @if not $fs-unit or $fs-unit != "" and $fs-unit != "px" and $fs-unit != "rem" or $fs == 0 {
    font-size: #{$fs}#{$rfs-suffix};
  }
  @else {
    // Variables for storing static and fluid rescaling
    $rfs-static: null;
    $rfs-fluid: null;

    // Remove px-unit from $fs for calculations
    @if $fs-unit == "px" {
      $fs: $fs / ($fs * 0 + 1);
    }
    @else if $fs-unit == "rem" {
      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);
    }

    // Set default font-size
    @if $rfs-font-size-unit == rem {
      $rfs-static: #{$fs / $rfs-rem-value}rem#{$rfs-suffix};
    }
    @else if $rfs-font-size-unit == px {
      $rfs-static: #{$fs}px#{$rfs-suffix};
    }
    @else {
      @error "`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.";
    }

    // Only add media query if font-size is bigger as the minimum font-size
    // If $rfs-factor == 1, no rescaling will take place
    @if $fs > $rfs-base-font-size and $enable-responsive-font-sizes {
      $min-width: null;
      $variable-unit: null;

      // Calculate minimum font-size for given font-size
      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;

      // Calculate difference between given font-size and minimum font-size for given font-size
      $fs-diff: $fs - $fs-min;

      // Base font-size formatting
      // No need to check if the unit is valid, because we did that before
      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);

      // If two-dimensional, use smallest of screen width and height
      $variable-unit: if($rfs-two-dimensional, vmin, vw);

      // Calculate the variable width between 0 and $rfs-breakpoint
      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};

      // Set the calculated font-size.
      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};
    }

    // Rendering
    @if $rfs-fluid == null {
      // Only render static font-size if no fluid font-size is available
      font-size: $rfs-static;
    }
    @else {
      $mq-value: null;

      // RFS breakpoint formatting
      @if $rfs-breakpoint-unit == em or $rfs-breakpoint-unit == rem {
        $mq-value: #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit};
      }
      @else if $rfs-breakpoint-unit == px {
        $mq-value: #{$rfs-breakpoint}px;
      }
      @else {
        @error "`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.";
      }

      @if $rfs-class == "disable" {
        // Adding an extra class increases specificity,
        // which prevents the media query to override the font size
        &,
        .disable-responsive-font-size &,
        &.disable-responsive-font-size {
          font-size: $rfs-static;
        }
      }
      @else {
        font-size: $rfs-static;
      }

      @if $rfs-two-dimensional {
        @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {
          @if $rfs-class == "enable" {
            .enable-responsive-font-size &,
            &.enable-responsive-font-size {
              font-size: $rfs-fluid;
            }
          }
          @else {
            font-size: $rfs-fluid;
          }

          @if $rfs-safari-iframe-resize-bug-fix {
            // stylelint-disable-next-line length-zero-no-unit
            min-width: 0vw;
          }
        }
      }
      @else {
        @media (max-width: #{$mq-value}) {
          @if $rfs-class == "enable" {
            .enable-responsive-font-size &,
            &.enable-responsive-font-size {
              font-size: $rfs-fluid;
            }
          }
          @else {
            font-size: $rfs-fluid;
          }

          @if $rfs-safari-iframe-resize-bug-fix {
            // stylelint-disable-next-line length-zero-no-unit
            min-width: 0vw;
          }
        }
      }
    }
  }
}

// The font-size & responsive-font-size mixin uses RFS to rescale font sizes
@mixin font-size($fs, $important: false) {
  @include rfs($fs, $important);
}

@mixin responsive-font-size($fs, $important: false) {
  @include rfs($fs, $important);
}


// Deprecate
// Deprecate mixin
//
// This mixin can be used to deprecate mixins or functions.
// `$enable-deprecation-messages` is a global variable, `$ignore-warning` is a variable that can be passed to
// some deprecated mixins to suppress the warning (for example if the mixin is still be used in the current version of Bootstrap)
@mixin deprecate($name, $deprecate-version, $remove-version, $ignore-warning: false) {
  @if ($enable-deprecation-messages != false and $ignore-warning != true) {
    @warn "#{$name} has been deprecated as of #{$deprecate-version}. It will be removed entirely in #{$remove-version}.";
  }
}


// Utilities
// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.02px
// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($lower, $breakpoints);
  $max: breakpoint-max($upper, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($lower, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($upper, $breakpoints) {
      @content;
    }
  }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  $max: breakpoint-max($name, $breakpoints);

  @if $min != null and $max != null {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else if $max == null {
    @include media-breakpoint-up($name, $breakpoints) {
      @content;
    }
  } @else if $min == null {
    @include media-breakpoint-down($name, $breakpoints) {
      @content;
    }
  }
}

// Hover mixin and `$enable-hover-media-query` are deprecated.
//
// Originally added during our alphas and maintained during betas, this mixin was
// designed to prevent `:hover` stickiness on iOS-an issue where hover styles
// would persist after initial touch.
//
// For backward compatibility, we've kept these mixins and updated them to
// always return their regular pseudo-classes instead of a shimmed media query.
//
// Issue: https://github.com/twbs/bootstrap/issues/25195

@mixin hover() {
  &:hover { @content; }
}

@mixin hover-focus() {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin plain-hover-focus() {
  &,
  &:hover,
  &:focus {
    @content;
  }
}

@mixin hover-focus-active() {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}

// Image Mixins
// - Responsive image
// - Retina image


// Responsive image
//
// Keep images from scaling beyond the width of their parents.

@mixin img-fluid() {
  // Part 1: Set a maximum relative to the parent
  max-width: 100%;
  // Part 2: Override the height to auto, otherwise images will be stretched
  // when setting a width and height attribute on the img element.
  height: auto;
}


// Retina image
//
// Short retina mixin for setting background-image and -size.

@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url($file-1x);

  // Autoprefixer takes care of adding -webkit-min-device-pixel-ratio and -o-min-device-pixel-ratio,
  // but doesn't convert dppx=>dpi.
  // There's no such thing as unprefixed min-device-pixel-ratio since it's nonstandard.
  // Compatibility info: https://caniuse.com/#feat=css-media-resolution
  @media only screen and (min-resolution: 192dpi), // IE9-11 don't support dppx
    only screen and (min-resolution: 2dppx) { // Standardized
    background-image: url($file-2x);
    background-size: $width-1x $height-1x;
  }
  @include deprecate("`img-retina()`", "v4.3.0", "v5");
}

@mixin badge-variant($bg) {
  color: color-yiq($bg);
  background-color: $bg;

  @at-root a#{&} {
    @include hover-focus() {
      color: color-yiq($bg);
      background-color: darken($bg, 10%);
    }

    &:focus,
    &.focus {
      outline: 0;
      box-shadow: 0 0 0 $badge-focus-width rgba($bg, .5);
    }
  }
}

// Resize anything

@mixin resizable($direction) {
  overflow: auto; // Per CSS3 UI, `resize` only applies when `overflow` isn't `visible`
  resize: $direction; // Options: horizontal, vertical, both
}

// Only display content to screen readers
//
// See: https://a11yproject.com/posts/how-to-hide-content/
// See: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/

@mixin sr-only() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px; // Fix for https://github.com/twbs/bootstrap/issues/25686
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Use in conjunction with .sr-only to only display content when it's focused.
//
// Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
//
// Credit: HTML5 Boilerplate

@mixin sr-only-focusable() {
  &:active,
  &:focus {
    position: static;
    width: auto;
    height: auto;
    overflow: visible;
    clip: auto;
    white-space: normal;
  }
}

// Sizing shortcuts

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
  @include deprecate("`size()`", "v4.3.0", "v5");
}

@mixin reset-text() {
  font-family: $font-family-base;
  // We deliberately do NOT reset font-size or word-wrap.
  font-style: normal;
  font-weight: $font-weight-normal;
  line-height: $line-height-base;
  text-align: left; // Fallback for where `start` is not supported
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  word-spacing: normal;
  white-space: normal;
  line-break: auto;
}

// stylelint-disable declaration-no-important

// Typography

@mixin text-emphasis-variant($parent, $color, $ignore-warning: false) {
  #{$parent} {
    color: $color !important;
  }
  @if $emphasized-link-hover-darken-percentage != 0 {
    a#{$parent} {
      @include hover-focus() {
        color: darken($color, $emphasized-link-hover-darken-percentage) !important;
      }
    }
  }
  @include deprecate("`text-emphasis-variant()`", "v4.4.0", "v5", $ignore-warning);
}

// CSS image replacement
@mixin text-hide($ignore-warning: false) {
  // stylelint-disable-next-line font-family-no-missing-generic-family-keyword
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;

  @include deprecate("`text-hide()`", "v4.1.0", "v5", $ignore-warning);
}

// Text truncate
// Requires inline-block or block for proper styling

@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// stylelint-disable declaration-no-important

// Visibility

@mixin invisible($visibility) {
  visibility: $visibility !important;
  @include deprecate("`invisible()`", "v4.3.0", "v5");
}


// Components
@mixin alert-variant($background, $border, $color) {
  color: $color;
  @include gradient-bg($background);
  border-color: $border;

  hr {
    border-top-color: darken($border, 5%);
  }

  .alert-link {
    color: darken($color, 10%);
  }
}

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
  color: color-yiq($background);
  @include gradient-bg($background);
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover() {
    color: color-yiq($hover-background);
    @include gradient-bg($hover-background);
    border-color: $hover-border;
  }

  &:focus,
  &.focus {
    color: color-yiq($hover-background);
    @include gradient-bg($hover-background);
    border-color: $hover-border;
    @if $enable-shadows {
      @include box-shadow($btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5));
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
    }
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;
    // Remove CSS gradients if they're enabled
    @if $enable-gradients {
      background-image: none;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    @if $enable-gradients {
      background-image: none; // Remove the gradient for the pressed/active state
    }
    border-color: $active-border;

    &:focus {
      @if $enable-shadows and $btn-active-box-shadow != none {
        @include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5));
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($background), $border, 15%), .5);
      }
    }
  }
}

@mixin button-outline-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
  color: $color;
  border-color: $color;

  @include hover() {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: color-yiq($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      @if $enable-shadows and $btn-active-box-shadow != none {
        @include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5));
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
      }
    }
  }
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  @include font-size($font-size);
  line-height: $line-height;
  // Manually declare to provide an override to the browser default
  @include border-radius($border-radius, 0);
}

@mixin caret-down() {
  border-top: $caret-width solid;
  border-right: $caret-width solid transparent;
  border-bottom: 0;
  border-left: $caret-width solid transparent;
}

@mixin caret-up() {
  border-top: 0;
  border-right: $caret-width solid transparent;
  border-bottom: $caret-width solid;
  border-left: $caret-width solid transparent;
}

@mixin caret-right() {
  border-top: $caret-width solid transparent;
  border-right: 0;
  border-bottom: $caret-width solid transparent;
  border-left: $caret-width solid;
}

@mixin caret-left() {
  border-top: $caret-width solid transparent;
  border-right: $caret-width solid;
  border-bottom: $caret-width solid transparent;
}

@mixin caret($direction: down) {
  @if $enable-caret {
    &::after {
      display: inline-block;
      margin-left: $caret-spacing;
      vertical-align: $caret-vertical-align;
      content: "";
      @if $direction == down {
        @include caret-down();
      } @else if $direction == up {
        @include caret-up();
      } @else if $direction == right {
        @include caret-right();
      }
    }

    @if $direction == left {
      &::after {
        display: none;
      }

      &::before {
        display: inline-block;
        margin-right: $caret-spacing;
        vertical-align: $caret-vertical-align;
        content: "";
        @include caret-left();
      }
    }

    &:empty::after {
      margin-left: 0;
    }
  }
}

// Pagination

@mixin pagination-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  .page-link {
    padding: $padding-y $padding-x;
    @include font-size($font-size);
    line-height: $line-height;
  }

  .page-item {
    &:first-child {
      .page-link {
        @include border-left-radius($border-radius);
      }
    }
    &:last-child {
      .page-link {
        @include border-right-radius($border-radius);
      }
    }
  }
}

// Lists

// Unstyled keeps list items block level, just removes default browser padding and list-style
@mixin list-unstyled() {
  padding-left: 0;
  list-style: none;
}

// List Groups

@mixin list-group-item-variant($state, $background, $color) {
  .list-group-item-#{$state} {
    color: $color;
    background-color: $background;

    &.list-group-item-action {
      @include hover-focus() {
        color: $color;
        background-color: darken($background, 5%);
      }

      &.active {
        color: $white;
        background-color: $color;
        border-color: $color;
      }
    }
  }
}

// Horizontal dividers
//
// Dividers (basically an hr) within dropdowns and nav lists

@mixin nav-divider($color: $nav-divider-color, $margin-y: $nav-divider-margin-y, $ignore-warning: false) {
  height: 0;
  margin: $margin-y 0;
  overflow: hidden;
  border-top: 1px solid $color;
  @include deprecate("The `nav-divider()` mixin", "v4.4.0", "v5", $ignore-warning);
}

// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `$input-focus-border-color` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
@mixin form-control-focus($ignore-warning: false) {
  &:focus {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    @if $enable-shadows {
      @include box-shadow($input-box-shadow, $input-focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: $input-focus-box-shadow;
    }
  }
  @include deprecate("The `form-control-focus()` mixin", "v4.4.0", "v5", $ignore-warning);
}

// This mixin uses an `if()` technique to be compatible with Dart Sass
// See https://github.com/sass/sass/issues/1873#issuecomment-152293725 for more details
@mixin form-validation-state-selector($state) {
  @if ($state == "valid" or $state == "invalid") {
    .was-validated #{if(&, "&", "")}:#{$state},
    #{if(&, "&", "")}.is-#{$state} {
      @content;
    }
  } @else {
    #{if(&, "&", "")}.is-#{$state} {
      @content;
    }
  }
}

@mixin form-validation-state($state, $color, $icon) {
  .#{$state}-feedback {
    display: none;
    width: 100%;
    margin-top: $form-feedback-margin-top;
    @include font-size($form-feedback-font-size);
    color: $color;
  }

  .#{$state}-tooltip {
    position: absolute;
    top: 100%;
    z-index: 5;
    display: none;
    max-width: 100%; // Contain to parent when possible
    padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;
    margin-top: .1rem;
    @include font-size($form-feedback-tooltip-font-size);
    line-height: $form-feedback-tooltip-line-height;
    color: color-yiq($color);
    background-color: rgba($color, $form-feedback-tooltip-opacity);
    @include border-radius($form-feedback-tooltip-border-radius);
  }

  @include form-validation-state-selector($state) {
    ~ .#{$state}-feedback,
    ~ .#{$state}-tooltip {
      display: block;
    }
  }

  .form-control {
    @include form-validation-state-selector($state) {
      border-color: $color;

      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-image: escape-svg($icon);
        background-repeat: no-repeat;
        background-position: right $input-height-inner-quarter center;
        background-size: $input-height-inner-half $input-height-inner-half;
      }

      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
      }
    }
  }

  // stylelint-disable-next-line selector-no-qualifying-type
  textarea.form-control {
    @include form-validation-state-selector($state) {
      @if $enable-validation-icons {
        padding-right: $input-height-inner;
        background-position: top $input-height-inner-quarter right $input-height-inner-quarter;
      }
    }
  }

  .custom-select {
    @include form-validation-state-selector($state) {
      border-color: $color;

      @if $enable-validation-icons {
        padding-right: $custom-select-feedback-icon-padding-right;
        background: $custom-select-background, escape-svg($icon) $custom-select-bg no-repeat $custom-select-feedback-icon-position / $custom-select-feedback-icon-size;
      }

      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
      }
    }
  }

  .form-check-input {
    @include form-validation-state-selector($state) {
      ~ .form-check-label {
        color: $color;
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;
      }
    }
  }

  .custom-control-input {
    @include form-validation-state-selector($state) {
      ~ .custom-control-label {
        color: $color;

        &::before {
          border-color: $color;
        }
      }

      &:checked {
        ~ .custom-control-label::before {
          border-color: lighten($color, 10%);
          @include gradient-bg(lighten($color, 10%));
        }
      }

      &:focus {
        ~ .custom-control-label::before {
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }

        &:not(:checked) ~ .custom-control-label::before {
          border-color: $color;
        }
      }
    }
  }

  // custom file
  .custom-file-input {
    @include form-validation-state-selector($state) {
      ~ .custom-file-label {
        border-color: $color;
      }

      &:focus {
        ~ .custom-file-label {
          border-color: $color;
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }
  }
}

// Tables

@mixin table-row-variant($state, $background, $border: null) {
  // Exact selectors below required to override `.table-striped` and prevent
  // inheritance to nested tables.
  .table-#{$state} {
    &,
    > th,
    > td {
      background-color: $background;
    }

    @if $border != null {
      th,
      td,
      thead th,
      tbody + tbody {
        border-color: $border;
      }
    }
  }

  // Hover states for `.table-hover`
  // Note: this is not available for cells or rows within `thead` or `tfoot`.
  .table-hover {
    $hover-background: darken($background, 5%);

    .table-#{$state} {
      @include hover() {
        background-color: $hover-background;

        > td,
        > th {
          background-color: $hover-background;
        }
      }
    }
  }
}


// Skins
// stylelint-disable declaration-no-important

// Contextual backgrounds

@mixin bg-variant($parent, $color, $ignore-warning: false) {
  #{$parent} {
    background-color: $color !important;
  }
  a#{$parent},
  button#{$parent} {
    @include hover-focus() {
      background-color: darken($color, 10%) !important;
    }
  }
  @include deprecate("The `bg-variant` mixin", "v4.4.0", "v5", $ignore-warning);
}

@mixin bg-gradient-variant($parent, $color, $ignore-warning: false) {
  #{$parent} {
    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x !important;
  }
  @include deprecate("The `bg-gradient-variant` mixin", "v4.5.0", "v5", $ignore-warning);
}

// stylelint-disable property-blacklist
// Single side border-radius

// Helper function to replace negative values with 0
@function valid-radius($radius) {
  $return: ();
  @each $value in $radius {
    @if type-of($value) == number {
      $return: append($return, max($value, 0));
    } @else {
      $return: append($return, $value);
    }
  }
  @return $return;
}

@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {
  @if $enable-rounded {
    border-radius: valid-radius($radius);
  }
  @else if $fallback-border-radius != false {
    border-radius: $fallback-border-radius;
  }
}

@mixin border-top-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: valid-radius($radius);
    border-top-right-radius: valid-radius($radius);
  }
}

@mixin border-right-radius($radius) {
  @if $enable-rounded {
    border-top-right-radius: valid-radius($radius);
    border-bottom-right-radius: valid-radius($radius);
  }
}

@mixin border-bottom-radius($radius) {
  @if $enable-rounded {
    border-bottom-right-radius: valid-radius($radius);
    border-bottom-left-radius: valid-radius($radius);
  }
}

@mixin border-left-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: valid-radius($radius);
    border-bottom-left-radius: valid-radius($radius);
  }
}

@mixin border-top-left-radius($radius) {
  @if $enable-rounded {
    border-top-left-radius: valid-radius($radius);
  }
}

@mixin border-top-right-radius($radius) {
  @if $enable-rounded {
    border-top-right-radius: valid-radius($radius);
  }
}

@mixin border-bottom-right-radius($radius) {
  @if $enable-rounded {
    border-bottom-right-radius: valid-radius($radius);
  }
}

@mixin border-bottom-left-radius($radius) {
  @if $enable-rounded {
    border-bottom-left-radius: valid-radius($radius);
  }
}

@mixin box-shadow($shadow...) {
  @if $enable-shadows {
    $result: ();

    @if (length($shadow) == 1) {
      // We can pass `@include box-shadow(none);`
      $result: $shadow;
    } @else {
      // Filter to avoid invalid properties for example `box-shadow: none, 1px 1px black;`
      @for $i from 1 through length($shadow) {
        @if nth($shadow, $i) != "none" {
          $result: append($result, nth($shadow, $i), "comma");
        }
      }
    }
    @if (length($result) > 0) {
      box-shadow: $result;
    }
  }
}

// Gradients

@mixin gradient-bg($color) {
  @if $enable-gradients {
    background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x;
  } @else {
    background-color: $color;
  }
}

// Horizontal gradient, from left to right
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin gradient-x($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);
  background-repeat: repeat-x;
}

// Vertical gradient, from top to bottom
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin gradient-y($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);
  background-repeat: repeat-x;
}

@mixin gradient-directional($start-color: $gray-700, $end-color: $gray-800, $deg: 45deg) {
  background-image: linear-gradient($deg, $start-color, $end-color);
  background-repeat: repeat-x;
}
@mixin gradient-x-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {
  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
}
@mixin gradient-y-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {
  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
  background-repeat: no-repeat;
}
@mixin gradient-radial($inner-color: $gray-700, $outer-color: $gray-800) {
  background-image: radial-gradient(circle, $inner-color, $outer-color);
  background-repeat: no-repeat;
}
@mixin gradient-striped($color: rgba($white, .15), $angle: 45deg) {
  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}

// stylelint-disable property-blacklist
@mixin transition($transition...) {
  @if length($transition) == 0 {
    $transition: $transition-base;
  }

  @if length($transition) > 1 {
    @each $value in $transition {
      @if $value == null or $value == none {
        @warn "The keyword 'none' or 'null' must be used as a single argument.";
      }
    }
  }

  @if $enable-transitions {
    @if nth($transition, 1) != null {
      transition: $transition;
    }

    @if $enable-prefers-reduced-motion-media-query and nth($transition, 1) != null and nth($transition, 1) != none {
      @media (prefers-reduced-motion: reduce) {
        transition: none;
      }
    }
  }
}


// Layout
@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: "";
  }
}

// Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `$grid-columns`.

@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
  // Common properties for all breakpoints
  %grid-column {
    position: relative;
    width: 100%;
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
  }

  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @if $columns > 0 {
      // Allow columns to stretch full width below their breakpoints
      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
          @extend %grid-column;
        }
      }
    }

    .col#{$infix},
    .col#{$infix}-auto {
      @extend %grid-column;
    }

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      // Provide basic `.col-{bp}` classes for equal-width flexbox columns
      .col#{$infix} {
        flex-basis: 0;
        flex-grow: 1;
        min-width: 0; // See https://github.com/twbs/bootstrap/issues/25410
        max-width: 100%;
      }

      @if $grid-row-columns > 0 {
        @for $i from 1 through $grid-row-columns {
          .row-cols#{$infix}-#{$i} {
            @include row-cols($i);
          }
        }
      }

      .col#{$infix}-auto {
        @include make-col-auto();
      }

      @if $columns > 0 {
        @for $i from 1 through $columns {
          .col#{$infix}-#{$i} {
            @include make-col($i, $columns);
          }
        }
      }

      .order#{$infix}-first { order: -1; }

      .order#{$infix}-last { order: $columns + 1; }

      @for $i from 0 through $columns {
        .order#{$infix}-#{$i} { order: $i; }
      }

      @if $columns > 0 {
        // `$columns - 1` because offsetting by the width of an entire row isn't possible
        @for $i from 0 through ($columns - 1) {
          @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
            .offset#{$infix}-#{$i} {
              @include make-col-offset($i, $columns);
            }
          }
        }
      }
    }
  }
}

/// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-container($gutter: $grid-gutter-width) {
  width: 100%;
  padding-right: $gutter / 2;
  padding-left: $gutter / 2;
  margin-right: auto;
  margin-left: auto;
}


// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: $container-max-width;
    }
  }
}

@mixin make-row($gutter: $grid-gutter-width) {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$gutter / 2;
  margin-left: -$gutter / 2;
}

@mixin make-col-ready($gutter: $grid-gutter-width) {
  position: relative;
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
  padding-right: $gutter / 2;
  padding-left: $gutter / 2;
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);
}

@mixin make-col-auto() {
  flex: 0 0 auto;
  width: auto;
  max-width: 100%; // Reset earlier grid tiers
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}

// Row columns
//
// Specify on a parent element(e.g., .row) to force immediate children into NN
// numberof columns. Supports wrapping to new lines, but does not do a Masonry
// style grid.
@mixin row-cols($count) {
  & > * {
    flex: 0 0 100% / $count;
    max-width: 100% / $count;
  }
}

// stylelint-disable declaration-no-important

@mixin float-left() {
  float: left !important;
  @include deprecate("The `float-left` mixin", "v4.3.0", "v5");
}
@mixin float-right() {
  float: right !important;
  @include deprecate("The `float-right` mixin", "v4.3.0", "v5");
}
@mixin float-none() {
  float: none !important;
  @include deprecate("The `float-none` mixin", "v4.3.0", "v5");
}


@mixin link-variant($link-color, $link-decoration, $link-hover-color, $link-hover-decoration) {
    color: $link-color;
    text-decoration: $link-decoration;
    @include hover {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
    }
}

@mixin link-size($font-size: $font-size-base, $icon-font-size: $font-size-base) {
    font-size: $font-size;
    .thy-icon,
    .wtf {
        font-size: $icon-font-size;
    }
}

// Tables

@mixin table-row-variant($state, $background) {
    // Exact selectors below required to override `.table-striped` and prevent
    // inheritance to nested tables.
    .table-#{$state} {
        &,
        > th,
        > td {
            background-color: $background;
        }
    }

    // Hover states for `.table-hover`
    // Note: this is not available for cells or rows within `thead` or `tfoot`.
    .table-hover {
        $hover-background: darken($background, 5%);

        .table-#{$state} {
            @include hover {
                background-color: $hover-background;

                > td,
                > th {
                    background-color: $hover-background;
                }
            }
        }
    }
}

@mixin table-hover-box-shadow($color) {
    @include box-shadow(0px 0px 8px 2px $color);
}

@mixin table-set-padding-space($first-last-space-width: 20px) {
    $table-first-last-padding: 15 + $first-last-space-width;
    thead {
        tr {
            th {
                &:first-child {
                    padding-left: $table-first-last-padding;
                    position: relative;
                    &:before {
                        @include table-cover-item(-1px, '', 0px, '', $white, $first-last-space-width);
                    }
                }
                &:last-child {
                    padding-right: $table-first-last-padding;
                    position: relative;
                    &:before {
                        @include table-cover-item(-1px, '', '', 0px, $white, $first-last-space-width);
                    }
                }
            }
        }
    }
    tbody {
        tr {
            &:first-child {
                td:first-child {
                    padding-left: $table-first-last-padding;
                    position: relative;
                }
                td:last-child {
                    padding-right: $table-first-last-padding;
                    position: relative;
                }
            }
            &:last-child {
                td {
                    &:first-child {
                        &:after {
                            @include table-cover-item('', -1px, 0, '', $white, $first-last-space-width);
                        }
                    }
                    &:last-child {
                        &:before {
                            @include table-cover-item('', -1px, '', 0, $white, $first-last-space-width);
                        }
                    }
                }
            }
            td {
                &:first-child {
                    padding-left: $table-first-last-padding;
                    position: relative;
                    &:before {
                        @include table-cover-item(-1px, '', 0, '', $white, $first-last-space-width);
                    }
                }
                &:last-child {
                    padding-right: $table-first-last-padding;
                    position: relative;
                    &:after {
                        @include table-cover-item(-1px, '', '', 0, $white, $first-last-space-width);
                    }
                }
            }
        }
    }
}

@mixin table-cover-item($top, $bottom, $left, $right, $color: $color-white, $width: 20px) {
    content: '';
    width: $width;
    position: absolute;
    top: $top;
    bottom: $bottom;
    left: $left;
    right: $right;
    background: $color;
    height: 1px;
}

@mixin table-hover-set-space-none() {
    tbody {
        tr {
            //   &:first-child {
            //     &.active,
            //     &:hover {
            //       td {
            //         &:first-child,
            //         &:last-child {
            //           &:before,
            //           &:after {
            //             display: block;
            //           }
            //         }
            //       }
            //     }
            //   }
            &:hover,
            &.active {
                td {
                    &:first-child,
                    &:last-child {
                        &:before,
                        &:after {
                            display: none;
                        }
                    }
                }
                & + tr {
                    td {
                        &:first-child {
                            &:before {
                                display: none;
                            }
                        }
                        &:last-child {
                            &:after {
                                display: none;
                            }
                        }
                    }
                }
            }
        }
    }
}

@mixin table-set-header(
    $thead-tr-height,
    $thead-text-align,
    $thead-vertical-align,
    $thead-font-weight,
    $thead-border-bottom-width,
    $thead-bg,
    $thead-border-color,
    $thead-color,
    $thead-padding
) {
    thead {
        tr {
            height: $thead-tr-height;
        }
        th,
        td {
            text-align: $thead-text-align;
            vertical-align: $thead-vertical-align;
            background-color: $thead-bg;
            font-weight: $thead-font-weight;
            border-bottom: $thead-border-bottom-width solid $thead-border-color;
            color: $thead-color;
            padding: $thead-padding;
        }
    }
}

@mixin table-size($table-thead-tr-height, $table-tr-height) {
    thead {
        tr {
            height: $table-thead-tr-height;
        }
    }
    tbody {
        tr {
            height: $table-tr-height;
        }
    }
}

@mixin set-close-link-variant($color: $gray-300, $hover-color: $primary) {
    color: $color;
    text-decoration: none;
    cursor: pointer;
    &:hover {
        color: $hover-color;
        text-decoration: none;
        opacity: 1;
    }
    &:active {
        text-decoration: none;
    }
}

@mixin set-close-link-size($size: $font-size-base) {
    font-size: $size !important;
    i {
        font-size: $size;
    }
}

@mixin text-emphasis-variant($parent, $color, $ignore-warning: false) {
    #{$parent} {
        color: $color !important;
    }
    @if $emphasized-link-hover-darken-percentage != 0 {
        a#{$parent} {
            @include hover-focus() {
                color: darken($color, $emphasized-link-hover-darken-percentage) !important;
            }
        }
    }
    // @include deprecate("`text-emphasis-variant()`", "v4.4.0", "v5", $ignore-warning);
}

@mixin absolute-vertical-align-middle($clearLeft) {
    position: absolute;
    @if $clearLeft == true {
        left: 0;
    }
    top: 50%;
    transform: translateY(-50%);
}

@mixin box-shadow($value) {
    box-shadow: $value;
}

@mixin item-box-shadow($color: rgba(0, 0, 0, 0.08)) {
    @include box-shadow(0px 0px 8px 2px $color);
}
@mixin hover-active {
    &:hover,
    &:active {
        @content;
    }
}

// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
@mixin button-variant(
    $color,
    $hover-color,
    $background,
    $hover-background,
    $border,
    $hover-border: darken($border, 10%),
    $active-background: darken($background, 10%),
    $active-border: darken($border, 12.5%)
) {
    // color: color-yiq($background);
    color: $color;
    @include gradient-bg($background);
    border-color: $border;
    @include hover {
        // color: color-yiq($hover-background);
        color: $hover-color;
        @include gradient-bg($hover-background);
        border-color: $hover-border;
        @include box-shadow($btn-box-shadow);
    }
    &:focus,
    &.focus {
        // Avoid using mixin so we can pass custom focus shadow properly
        // @if $enable-shadows {
        //     box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
        // }
        // @else {
        //     box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
        // }
    } // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
        &:hover {
            @include button-disabled($btn-disabled-border-color);
        }
        @include button-disabled($btn-disabled-border-color);
    }
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
        // color: color-yiq($active-background);
        // background-color: $active-background;
        // @if $enable-gradients {
        //     background-image: none; // Remove the gradient for the pressed/active state
        // }
        // border-color: $active-border;
        &:focus {
            // Avoid using mixin so we can pass custom focus shadow properly
            // @if $enable-shadows {
            //     box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($border, .5);
            // }
            // @else {
            //     box-shadow: 0 0 0 $btn-focus-width rgba($border, .5);
            // }
        }
    }
}

@mixin button-outline-variant($color, $border-color, $hover-color, $hover-background, $hover-border, $active-background, $active-border) {
    color: $color;
    background-color: transparent;
    background-image: none;
    border-color: $border-color;
    &:hover {
        color: $hover-color;
        background-color: $hover-background;
        border-color: $hover-border;
    }
    &:focus,
    &.focus {
        // box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
    }
    &.disabled,
    &:disabled {
        &:hover {
            @include button-disabled($btn-outline-disabled-border-color);
        }
        @include button-disabled($btn-outline-disabled-border-color);
    }
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active,
    .show > &.dropdown-toggle {
        color: $hover-color;
        background-color: $active-background;
        border-color: $active-border;
        &:focus {
            // Avoid using mixin so we can pass custom focus shadow properly
            // @if $enable-shadows and $btn-active-box-shadow !=none {
            //     box-shadow: $btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, .5);
            // }
            // @else {
            //     box-shadow: 0 0 0 $btn-focus-width rgba($color, .5);
            // }
        }
    }
}

// Button sizes
@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius, $min-width) {
    padding: $padding-y $padding-x;
    font-size: $font-size;
    line-height: $line-height; // Manually declare to provide an override to the browser default
    @if $min-width {
        min-width: $min-width;
    }
    @if $enable-rounded {
        border-radius: $border-radius;
    } @else {
        border-radius: 0;
    }
    &.btn-link {
        padding: $padding-y 10px;
    }
}

@mixin button-hover-box-shadow($color) {
    &:hover {
        // lighten($primary-active-theme, 15%)
        @include box-shadow(0px 2px 5px 1px rgba($color, 0.6));
    }
}

@mixin button-disabled($color) {
    color: $btn-disabled-color;
    background-color: $btn-disabled-bg-color;
    border-color: $color;
    // border-color: $btn-disabled-border-color;
    // border: none;
    @include box-shadow(none);
}

@mixin button-icon-margin($right) {
    margin-right: $right;
}

@mixin btn-link-variant($link-color, $link-hover-color, $link-hover-decoration) {
    color: $link-color;
    background-color: transparent;
    @include hover {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
    }
    &:focus,
    &.focus {
        text-decoration: $link-hover-decoration;
    }
    &:disabled,
    &.disabled {
        color: $btn-link-disabled-color;
        @include hover {
            color: $btn-link-disabled-color;
        }
    } // No need for an active state here
}

@mixin btn-link-theme-variant($link-hover-color) {
    @include hover {
        color: $link-hover-color;
    }
}

@mixin btn-square-radius {
    // 设置大小也不影响 border-radius
    border-radius: $border-radius;
    &.btn-lg,
    &.btn-md,
    &.btn-sm,
    &.btn-xs {
        border-radius: $border-radius;
    }
}

@mixin btn-icon-circle-hover-variant($round-padding, $btn-icon-circle-font-size, $diameter) {
    &.btn-icon-circle {
        i,
        .wtf,
        .thy-icon {
            padding: $round-padding;
            font-size: $btn-icon-circle-font-size;
            width: $diameter;
            height: $diameter;
        }
        &.border-thick {
            i,
            .wtf,
            .thy-icon {
                padding: $round-padding - $btn-icon-circle-padding-difference;
            }
            @include hover-focus {
                i,
                .wtf {
                    padding: $round-padding - $btn-icon-circle-padding-difference;
                }
            }
        }
        @include hover-focus {
            i,
            .wtf,
            .thy-icon {
                border-width: 2px;
                padding: $round-padding - $btn-icon-circle-padding-difference;
            }
        }
    }
}

@mixin btn-icon-size-variant($font-size, $round-padding, $btn-icon-circle-font-size, $diameter) {
    i,
    .wtf,
    .thy-icon {
        font-size: $font-size;
    }

    @include btn-icon-circle-hover-variant($round-padding, $btn-icon-circle-font-size, $diameter);
}

@mixin thy-alert-inner($color) {
    hr {
        border-top-color: darken($color, 5%);
    }
    .alert-link {
        color: darken($color, 10%);
    }
    .thy-alert-icon {
        color: $color;
    }
}

@mixin thy-alert-variant($color) {
    color: rgba($black, 0.7);
    @include gradient-bg(rgba($color, 0.1));
    border-color: $color;
    @include thy-alert-inner($color);
}

@mixin thy-alert-weak-variant($color) {
    color: $gray-600;
    background: $white;
    border-color: $gray-200 $gray-200 $gray-200 $color;
    border-left-width: 2px;
    @include thy-alert-inner($color);
}

@mixin set-badge-color($color, $badge-bg) {
    color: $color;
    background-color: $badge-bg;
    border-color: $badge-bg;
    .nav-pills>.active>a>& {
        color: $color;
        background-color: $badge-bg;
    }
}

@mixin set-badge-size($font-size, $padding-horizontal, $padding-vertical) {
    font-size: $font-size;
    padding: $padding-horizontal $padding-vertical;
}

// bootstrap 4
@mixin badge-variant($bg) {
    color: color-yiq($bg);
    background-color: $bg;
    &[href] {
        @include hover-focus {
            color: color-yiq($bg);
            text-decoration: none;
            background-color: darken($bg, 10%);
        }
    }
}

@mixin avatarSize($size, $font-size: 12px) {
    img,
    .avatar-default {
        width: #{$size}px;
        height: #{$size}px;
        border-radius: 50%;
        line-height: #{$size}px;
        font-size: #{$font-size}px;
        vertical-align: middle;
        div {
            display: inline-block;
            @if $size == 24 {
                transform: scale(0.9);
            }
        }
    }
    .thy-avatar-disabled {
        width: #{$size}px;
        height: #{$size}px;
        &-icon {
            font-size: #{$size - ($size * 0.25)}px;
        }
    }
}

@mixin label-variant($bg-color) {
    background-color: $bg-color;
    &.label-has-hover {
        &:focus,
        &:hover {
            background-color: darken($bg-color, 10%);
            cursor: pointer;
        }
    }
}

@mixin label-color-variant($color, $hover-color) {
    color: $color;
    &.label-has-hover {
        thy-icon.thy-icon-close,
        i.wtf-times {
            display: none;
        }
        &:focus,
        &:hover {
            color: $hover-color;
            cursor: pointer;
            thy-icon.thy-icon-close,
            i.wtf-times {
                display: inline-block;
            }
        }
    }
}

@mixin nav-link-variant($color, $hover-color, $border-bottom) {
    color: $color;
    > i,
    > .thy-icon {
        color: $nav-link-icon-color;
    }

    &.active {
        color: $hover-color;
        @if $border-bottom {
            border-bottom: $border-bottom;
        }
        > i,
        > .thy-icon {
            color: $hover-color;
        }
    }
    @include hover-active {
        color: $hover-color;
        text-decoration: none;
        @if $border-bottom {
            border-bottom: $border-bottom;
        }
        > i,
        > .thy-icon {
            color: $hover-color;
        }
    }
    // Disabled state lightens text
    &.disabled {
        color: $nav-link-disabled-color;
        border-bottom: none;
    }
}

@mixin nav-link-size($padding, $margin-right) {
    padding: $padding;
    margin-right: $margin-right;
    &:last-child {
        margin-right: 0;
    }
}

@mixin nav-link-clear-margin-right() {
    &:last-child {
        margin-right: 0;
    }
}

@mixin nav-link-divider-variant($nav-link-hover-color, $divider-height, $nav-link-padding-right) {
    position: relative;
    &:after {
        display: block;
        position: absolute;
        width: 0;
        content: '';
        border-right: 1px solid $nav-divider-color;
        top: calc(50% - #{$divider-height} / 2);
        right: ($nav-link-padding-right / 2) * -1;
        height: $divider-height;
    }
    &:last-child {
        &:after {
            display: none;
        }
    }
    @include hover-active {
        color: $nav-link-hover-color;
        text-decoration: none;
    }
    .thy-icon,
    i {
        margin-right: $rem-5px;
    }
}

@mixin clear-nav-link-bottom {
    border-bottom: none;
    &.active {
        border-bottom: none;
    }
    @include hover-focus-active {
        border-bottom: none;
    }
}

// @deprecated remove in v11
@mixin card-head-title-icon($card-title-icon-color) {
    border-left: solid 3px $card-title-icon-color;
}

@mixin thy-notify-state($state, $color) {
    .thy-notify-#{$state} {
        border-left: $notify-border-radius-width solid $color;
        .thy-notify-icon-container {
            .thy-icon {
                color: $color;
            }
        }
    }
}

@mixin action-menu-item-type-hover($color) {
    &:not(.action-menu-item--disabled).active,
    &:not(.action-menu-item--disabled):hover {
        background-color: $action-menu-item-hover-bg;
        &:not(.info),
        &:not(.action-menu-sub-item) {
            color: $color;
        }
        & > .icon {
            color: $color;
        }
    }
}

@mixin action-menu-item-hover-sub-item-display($display: block) {
    &:not(.action-menu-item--disabled):hover {
        > .action-menu-sub-item {
            display: $display;
        }
    }
}

@mixin set-empty-state-size($icon-size, $text-size: $font-size-md) {
    .empty-icon {
        i {
            font-size: $icon-size;
        }
    }

    .empty-text {
        font-size: $text-size;
    }
}

@mixin set-empty-state-style($text-size, $text-margin-top, $svg-size-width, $svg-size-height) {
    .thy-empty-icon {
        height: $svg-size-height;
        .empty-icon {
            svg {
                width: $svg-size-width;
                height: $svg-size-height;
            }
        }
        svg {
            width: $svg-size-width;
            height: $svg-size-height;
        }

        .empty-img {
            width: $svg-size-width;
            height: $svg-size-height;
        }
    }

    .thy-empty-text,
    .thy-empty-text-with-extra {
        font-size: $text-size;
        margin-top: $text-margin-top;
    }
}

@mixin thy-switch-size($width, $height, $handle-margin) {
    width: $width;
    height: $height;
    .thy-switch-handle {
        width: $height - $handle-margin * 2;
        height: $height - $handle-margin * 2;
        top: $handle-margin + px;
    }
    .thy-switch-input:checked~.thy-switch-handle {
        left: $width - $height + $handle-margin;
    }
}

@mixin thy-switch($width, $height, $handle-margin) {
    position: relative;
    display: inline-block;
    vertical-align: top;
    width: $width;
    height: $height;
    background-color: transparent;
    cursor: pointer;
    .thy-switch-input {
        position: absolute!important;
        top: 0;
        left: 0;
        opacity: 0;
    }
    .thy-switch-label {
        position: relative;
        display: block;
        height: inherit;
        font-weight: 600;
        text-transform: uppercase;
        background-color: $gray-400;
        // border: 1px solid $border-color;
        border-radius: 2px;
        transition: opacity background .15s ease-out;
    }
    .thy-switch-input:checked~.thy-switch-label {
        //background: $gray-lightest;
    }
    .thy-switch-input:checked~.thy-switch-label::before {
        opacity: 0;
    }
    .thy-switch-input:checked~.thy-switch-label::after {
        opacity: 1;
    }
    .thy-switch-handle {
        position: absolute;
        top: $handle-margin + px;
        left: $handle-margin + px;
        width: $height - $handle-margin * 2;
        height: $height - $handle-margin * 2;
        background: #fff;
        // border: 1px solid $border-color;
        border-radius: 1px;
        transition: left .15s ease-out;
        border: 0;
        // box-shadow: 0 2px 5px rgba(0, 0, 0, .3);
    }
    .thy-switch-input:checked~.thy-switch-handle {
        left: $width - $height + $handle-margin;
    }
    @extend .thy-switch-pill;
    // &.thy-switch-lg {
    //     @include thy-switch-size($switch-lg-width, $switch-lg-height, 0);
    // }
    &.thy-switch-sm {
        @include thy-switch-size($switch-sm-width, $switch-sm-height, 2);
    }
    &.thy-switch-xs {
        @include thy-switch-size($switch-xs-width, $switch-xs-height, 0);
    }
}

@mixin thy-switch-variant($color) {
    >.thy-switch-input:checked~.thy-switch-label {
        background: $color !important;
        // border-color: darken($color, 10%);
    }
    >.thy-switch-input:checked~.thy-switch-handle {
        // border-color: darken($color, 10%);
    }
}
// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `$input-focus-border-color` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
@mixin form-control-focus() {
    &:focus {
        color: $input-focus-color;
        background-color: $input-focus-bg;
        border-color: $input-focus-border-color;
        outline: 0;
        // Avoid using mixin so we can pass custom focus shadow properly
        @if $enable-shadows {
            box-shadow: $input-box-shadow, $input-focus-box-shadow;
        } @else {
            box-shadow: $input-focus-box-shadow;
        }
    }
}

@mixin thy-form-validation-state($state, $color) {
    .form-control {
        &.thy-invalid {
            border-color: $color;
        }
    }
}

@mixin form-validation-state($state, $color) {
    .#{$state}-feedback {
        display: none;
        width: 100%;
        margin-top: $form-feedback-margin-top;
        // font-size: $form-feedback-font-size;
        color: $color;
    }

    .#{$state}-tooltip {
        position: absolute;
        top: 100%;
        z-index: 5;
        display: none;
        max-width: 100%; // Contain to parent when possible
        padding: 0.5rem;
        margin-top: 0.1rem;
        font-size: 0.875rem;
        line-height: 1;
        color: #fff;
        background-color: rgba($color, 0.8);
        border-radius: 0.2rem;
    }

    // custom select
    .is-#{$state} {
        .form-control {
            border-color: $color !important;
            &:hover {
                border-color: $color;
            }
        }
    }

    .form-control,
    .thy-select,
    .thy-radio-group,
    .custom-select,
    .thy-cascader,
    .thy-date-picker,
    .input-label-container {
        .was-validated &:#{$state},
        &.is-#{$state} {
            border-color: $color;

            ~ .#{$state}-feedback,
            ~ .#{$state}-tooltip {
                display: block;
            }
        }
    }

    .form-check-input {
        .was-validated &:#{$state},
        &.is-#{$state} {
            ~ .form-check-label {
                color: $color;
            }

            ~ .#{$state}-feedback,
            ~ .#{$state}-tooltip {
                display: block;
            }
        }
    }

    .custom-control-input {
        .was-validated &:#{$state},
        &.is-#{$state} {
            ~ .custom-control-label {
                color: $color;

                &::before {
                    background-color: lighten($color, 25%);
                }
            }

            ~ .#{$state}-feedback,
            ~ .#{$state}-tooltip {
                display: block;
            }

            &:checked {
                ~ .custom-control-label::before {
                    @include gradient-bg(lighten($color, 10%));
                }
            }

            &:focus {
                ~ .custom-control-label::before {
                    box-shadow: 0 0 0 1px $body-bg, 0 0 0 $input-focus-width rgba($color, 0.25);
                }
            }
        }
    }

    // custom file
    .custom-file-input {
        .was-validated &:#{$state},
        &.is-#{$state} {
            ~ .custom-file-label {
                border-color: $color;

                &::before {
                    border-color: inherit;
                }
            }

            ~ .#{$state}-feedback,
            ~ .#{$state}-tooltip {
                display: block;
            }

            &:focus {
                ~ .custom-file-label {
                    box-shadow: 0 0 0 $input-focus-width rgba($color, 0.25);
                }
            }
        }
    }
}

@mixin set-input-hover-border($border-color: $input-hover-border) {
    &:not([disabled]):not(.disabled):not(.is-invalid) {
        @include hover {
            border-color: $border-color;
        }
    }
}

@mixin set-select-arrow() {
    content: '\e6b8'; //"\f078";
    font: normal normal normal 14px/1 wtf;
    position: absolute;
    right: 12px;
    bottom: $input-padding-y + ($font-size-base * $line-height-base - $font-size-md) / 2;
    font-size: $font-size-md;
    pointer-events: none;
    color: $gray-500;
    z-index: 10;
}

@mixin select-arrow-icon-font-variant() {
    content: '\e6b8'; //"\f078";
    font: normal normal normal 14px/1 wtf;
    right: 12px;
    font-size: $font-size-md;
    pointer-events: none;
    color: $gray-500;
    z-index: 10;
    @include absolute-vertical-align-middle(false);
}

@mixin select-arrow-variant() {
    right: 12px;
    font-size: $font-size-md;
    pointer-events: none;
    color: $gray-400;
    z-index: 10;
    @include absolute-vertical-align-middle(false);
}

@mixin select-custom-variant($padding-x, $padding-y, $height, $font-size) {
    padding: $padding-y $padding-x;
    height: $height;
    border: 1px solid $input-border-color;
    border-radius: $input-border-radius-md;
    font-size: $font-size;
    cursor: pointer;

    &:hover {
        border-color: $input-hover-border-color;
    }
}

$option-hover-active-bg-color: $gray-100 !default;
$option-disabled-color: $gray-400 !default;

@mixin thy-option-common-layout {
    display: flex;
    align-items: center;
    // justify-content: space-between;
    width: 100%;
    position: relative;
}

@mixin thy-option($hover-bg-color: $gray-100, $color: $secondary) {
    @include thy-option-common-layout();
    min-height: 40px;
    color: $color;
    cursor: pointer;
    outline-style: none;

    padding: {
        left: 20px;
        right: 20px;
    }

    // use in tree-select
    .prefix-icon {
        color: $gray-300;
        vertical-align: -1px;
    }

    &:not(.disabled) {
        &.hover,
        &:hover {
            background: $hover-bg-color;
            color: $body-color;
        }

        &.active {
            background: rgba($primary, 0.1);
            color: $primary;

            // &.hover,
            // &:hover {
            // background: $hover-bg-color;
            // color: $body-color;

            // .prefix-icon {
            //     color: $gray-300;
            // }
            // }

            .prefix-icon {
                color: $primary;
            }
        }
    }

    // 禁用状态没有背景色, 字体颜色为禁用
    &.disabled {
        background: none;
        color: $option-disabled-color;
        cursor: default; // not-allowed;
    }
}

@mixin thy-option-theme($hover-bg-color: $gray-100, $color: $secondary) {
    color: $color;

    &:not(.disabled) {
        &.hover,
        &:hover {
            background: $hover-bg-color;
            color: $body-color;
        }

        &.active {
            background: rgba($primary, 0.1);
            color: $primary;

            // &.hover,
            // &:hover {
            //     background: $hover-active-bg-color;
            //     color: $body-color;
            // }

            .prefix-icon {
                color: $primary;
            }
        }
    }
}

@mixin thy-multiple-option($hover-active-bg-color: $gray-100) {
    padding: {
        left: 20px;
        right: 35px;
    }

    .checked-icon {
        visibility: hidden;
        position: absolute;
        right: 20px;
    }

    &:not(.disabled) {
        &.hover,
        &:hover {
            background: $hover-active-bg-color;
        }

        &.active {
            background: transparent;
            color: $body-color;

            .checked-icon {
                visibility: visible;
                color: $primary;
            }

            &.hover,
            &:hover {
                background: $hover-active-bg-color;
                color: $body-color;
            }
        }
    }

    &.disabled {
        background: none;
        color: $option-disabled-color;
    }
}

@mixin thy-multiple-option-theme($hover-active-bg-color: $gray-100) {
    &:not(.disabled) {
        &.hover,
        &:hover {
            background: $hover-active-bg-color;
        }

        &.active {
            background: transparent;
            color: $body-color;

            .checked-icon {
                color: $primary;
            }

            &.hover,
            &:hover {
                background: $hover-active-bg-color;
                color: $body-color;
            }
        }
    }
}

@mixin thy-grid-option {
    .thy-grid-option {
        @include thy-option-common-layout();
        flex-direction: column;
        vertical-align: middle;
        justify-content: center;
        position: relative;
        margin: $list-grid-option-margin;
        width: $list-grid-option-width;
        height: $list-grid-option-height;
        background: $white;
        border-radius: $border-radius;
        border: solid 1px $gray-200;
        cursor: pointer;
        outline-style: none;

        .checked-icon {
            visibility: hidden;
            position: absolute;
            right: 10px;
            top: 10px;
            color: $primary;
            text-align: center;
            .thy-icon {
                font-size: 20px;
            }
        }

        &:not(.disabled) {
            &.hover,
            &:hover {
                border: solid 1px $primary;
            }

            &.active {
                background: rgba($primary, 0.1);
                color: $body-color;
                border: solid 1px $primary;

                .checked-icon {
                    visibility: visible;
                }

                &.hover,
                &:hover {
                    // background: $white;
                    border-color: $primary;
                }
            }
        }

        &.disabled {
            color: $gray-400;
            cursor: not-allowed;
            background-color: $gray-80;

            &.active {
                .checked-icon {
                    visibility: visible;
                    color: $gray-400;
                }
            }
        }

        .thy-grid-option-icon {
            font-size: $list-grid-option-icon-size;
        }

        img.thy-grid-option-icon {
            width: $list-grid-option-icon-size;
        }

        .thy-grid-option-name {
            margin-top: $list-grid-option-name-margin-top;
        }
    }
}

@mixin thy-grid-option-sm {
    .thy-grid-option {
        width: $list-grid-option-sm;
        height: $list-grid-option-sm;
        margin: $list-grid-option-margin-sm;

        .checked-icon {
            right: 5px;
            top: 5px;
            height: 15px;
            width: 15px;
            line-height: 15px;

            > .thy-icon,
            .wtf {
                font-size: 14px;
            }
        }

        .thy-grid-option-name {
            margin-top: $list-grid-option-sm-name-margin-top;
        }
    }
}

@mixin thy-grid-option-theme {
    .checked-icon {
        background: $primary;
    }

    &:not(.disabled) {
        &.hover,
        &:hover {
            border: solid 1px $primary;
        }

        &.active {
            background: rgba($primary, 0.1);
            color: $body-color;
            border: solid 1px $primary;

            &.hover,
            &:hover {
                border-color: $primary;
            }
        }
    }
}

@mixin stepper-size ($height, $padding, $header-padding, $step-number-size, $selected-icon-bottom) {
  .thy-stepper-header-container {
    height: $height;
    padding: $padding;
    .thy-stepper-header {
      padding: $header-padding;
      .thy-step-number {
        width: $step-number-size;
        height: $step-number-size;
        line-height: $step-number-size;
      }
      &.thy-stepper-header-selected {
        &::before {
          bottom: $selected-icon-bottom+1;
        }
        &::after {
          bottom: $selected-icon-bottom;
        }
      }
    }
  }
}
// Pagination

@mixin pagination-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
    font-size: $font-size;
    .thy-page-link {
        padding: $padding-y $padding-x;
        @include font-size($font-size);
        line-height: $line-height;
    }

    .thy-page-item {
        &:first-child {
            .thy-page-link {
                @include border-left-radius($border-radius);
            }
        }

        &:last-child {
            .thy-page-link {
                @include border-right-radius($border-radius);
            }
        }
    }
}

@mixin select-control-size($input-height, $input-padding-y) {
    // min-height: $input-height;
    .select-control-rendered {
        margin-top: $input-padding-y;
        .text-placeholder,
        .selected-value {
            margin-bottom: $input-padding-y;
        }
        .choice,
        .select-control-search {
            margin-bottom: $input-padding-y;
        }
    }
}

@mixin thy-select-options-dropdown {
    box-shadow: 0 2px 20px rgba(0, 0, 0, 0.14);
    background: $white;
    width: 100%;
}

@mixin thy-select-options-container {
    max-height: 300px;
    overflow-y: auto;
    padding: 10px 0;
}

$has-value-margin-base: -0.03175rem;
$has-value-margin-md: -0.2815rem;
$thy-label-spacing: 0.3125rem;

@mixin thy-select-multiple-control {
    .multiple-value-wrapper {
        margin: {
            top: $has-value-margin-base;
            bottom: $has-value-margin-base - $thy-label-spacing;
            right: 15px;
        }
        .thy-label {
            margin-bottom: $thy-label-spacing;
        }
    }
}

// stylelint-disable declaration-no-important

// Contextual backgrounds

@mixin bg-variant($parent, $color, $ignore-warning: false) {
    #{$parent} {
        background-color: $color !important;
    }
    a#{$parent},
    button#{$parent} {
        @include hover-focus() {
            background-color: darken($color, 10%) !important;
        }
    }
    // @include deprecate("The `bg-variant` mixin", "v4.4.0", "v5", $ignore-warning);
}

@mixin bg-gradient-variant($parent, $color) {
    #{$parent} {
        background: $color linear-gradient(180deg, mix($body-bg, $color, 15%), $color) repeat-x !important;
    }
}


