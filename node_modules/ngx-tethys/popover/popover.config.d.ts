import { ThyPlacement, ThyAbstractOverlayConfig } from 'ngx-tethys/core';
import { Overlay, ScrollStrategy } from '@angular/cdk/overlay';
import { ElementRef, InjectionToken } from '@angular/core';
export declare class ThyPopoverConfig<TData = any> extends ThyAbstractOverlayConfig<TData> {
    /** Origin Element, for overlay flexible connected to */
    origin: ElementRef<any> | HTMLElement;
    /** Origin point, default use origin's boundingClientRect*/
    originPosition?: {
        x: number;
        y: number;
    } & {
        width?: number;
        height?: number;
    };
    /** Placement be relative to origin, topCenter, topLeft, topRight, bottomCenter, bottomLeft, bottomRight ...*/
    placement?: ThyPlacement;
    /** Click inside can been close */
    insideClosable?: boolean;
    /** Offset be relative to origin, default is 4*/
    offset?: number;
    /** Manually close it, default rules is which auto close last popover when open a new unless set manualClosure as true */
    manualClosure?: boolean;
    /** Origin active class when popover is opened */
    originActiveClass?: string | string[];
    /**
     * 滚动策略
     */
    scrollStrategy?: ScrollStrategy;
    /** Click outside can been close */
    outsideClosable?: boolean;
}
export declare const THY_POPOVER_DEFAULT_CONFIG: InjectionToken<ThyPopoverConfig<any>>;
export declare const THY_POPOVER_DEFAULT_CONFIG_VALUE: {
    hasBackdrop: boolean;
    backdropClass: string;
    panelClass: string;
    offset: number;
    backdropClosable: boolean;
    closeOnNavigation: boolean;
    placement: ThyPlacement;
    insideClosable: boolean;
    manualClosure: boolean;
    originActiveClass: string;
};
export declare const THY_POPOVER_DEFAULT_CONFIG_PROVIDER: {
    provide: InjectionToken<ThyPopoverConfig<any>>;
    useValue: {
        hasBackdrop: boolean;
        backdropClass: string;
        panelClass: string;
        offset: number;
        backdropClosable: boolean;
        closeOnNavigation: boolean;
        placement: ThyPlacement;
        insideClosable: boolean;
        manualClosure: boolean;
        originActiveClass: string;
    };
};
export declare const THY_POPOVER_SCROLL_STRATEGY: InjectionToken<() => ScrollStrategy>;
export declare const THY_POPOVER_SCROLL_STRATEGY_FACTORY: (overlay: Overlay) => () => import("@angular/cdk/overlay").BlockScrollStrategy;
export declare const THY_POPOVER_SCROLL_STRATEGY_PROVIDER: {
    provide: InjectionToken<() => ScrollStrategy>;
    deps: (typeof Overlay)[];
    useFactory: (overlay: Overlay) => () => import("@angular/cdk/overlay").BlockScrollStrategy;
};
