import { ElementRef, NgZone, OnDestroy, TemplateRef, OnInit, ViewContainerRef } from '@angular/core';
import { Platform } from '@angular/cdk/platform';
import { OverlayRef } from '@angular/cdk/overlay';
import { FocusMonitor } from '@angular/cdk/a11y';
import { ThyOverlayDirectiveBase, ThyOverlayTrigger, ThyPlacement } from 'ngx-tethys/core';
import { ThyPopover } from './popover.service';
import { ComponentType } from '@angular/cdk/portal';
import { ThyPopoverConfig } from './popover.config';
import * as ɵngcc0 from '@angular/core';
export declare class ThyPopoverDirective extends ThyOverlayDirectiveBase implements OnInit, OnDestroy {
    private popover;
    private viewContainerRef;
    popoverOpened: boolean;
    content: ComponentType<any> | TemplateRef<any>;
    set thyTrigger(trigger: ThyOverlayTrigger);
    thyPlacement: ThyPlacement;
    thyOffset: number;
    thyConfig: ThyPopoverConfig;
    showDelay: number;
    hideDelay: number;
    private popoverRef;
    tooltipPin: boolean;
    constructor(elementRef: ElementRef, platform: Platform, focusMonitor: FocusMonitor, ngZone: NgZone, popover: ThyPopover, viewContainerRef: ViewContainerRef);
    ngOnInit(): void;
    createOverlay(): OverlayRef;
    show(delay?: number): void;
    hide(delay?: number): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyPopoverDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ThyPopoverDirective, "[thyPopover]", never, { "showDelay": "thyShowDelay"; "hideDelay": "thyHideDelay"; "thyTrigger": "thyTrigger"; "content": "thyPopover"; "thyPlacement": "thyPlacement"; "thyOffset": "thyOffset"; "thyConfig": "thyConfig"; }, {}, never>;
}

//# sourceMappingURL=popover.directive.d.ts.map