import { ThyTreeNodeData, ThyTreeNodeCheckState } from './tree.class';
import { ThyTreeService } from './tree.service';
export declare class ThyTreeNode<T = any> {
    key?: number | string;
    title?: string;
    children: ThyTreeNode[];
    parentNode: ThyTreeNode;
    level: number;
    origin: ThyTreeNodeData<T>;
    isExpanded: boolean;
    isChecked: ThyTreeNodeCheckState;
    isLoading: boolean;
    isDisabled: boolean;
    private readonly service;
    get treeService(): ThyTreeService;
    constructor(node: ThyTreeNodeData, parent?: ThyTreeNode, service?: ThyTreeService);
    setKey(key: string): void;
    setTitle(title: string): void;
    setExpanded(expanded: boolean, propagate?: boolean): void;
    setLoading(loading: boolean): void;
    setChecked(checked: boolean, propagateUp?: boolean, propagateDown?: boolean): void;
    syncNodeCheckState(): void;
    getParentNode(): ThyTreeNode;
    getChildren(): ThyTreeNode[];
    addChildren(children: ThyTreeNodeData | ThyTreeNodeData[], index?: number): void;
}
