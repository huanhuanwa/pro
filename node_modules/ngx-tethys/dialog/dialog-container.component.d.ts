import { ElementRef, EventEmitter, ChangeDetectorRef, OnDestroy } from '@angular/core';
import { CdkPortalOutlet } from '@angular/cdk/portal';
import { AnimationEvent } from '@angular/animations';
import { ThyDialogConfig } from './dialog.config';
import { ThyClickPositioner } from 'ngx-tethys/core';
import { FocusTrapFactory } from '@angular/cdk/a11y';
import { ThyAbstractOverlayContainer } from 'ngx-tethys/core';
import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class ThyDialogContainerComponent extends ThyAbstractOverlayContainer implements OnDestroy {
    private elementRef;
    private document;
    config: ThyDialogConfig;
    private clickPositioner;
    private focusTrapFactory;
    animationOpeningDone: Observable<AnimationEvent>;
    animationClosingDone: Observable<AnimationEvent>;
    portalOutlet: CdkPortalOutlet;
    id: string;
    /** State of the dialog animation. */
    animationState: 'void' | 'enter' | 'exit';
    /** Emits when an animation state changes. */
    animationStateChanged: EventEmitter<AnimationEvent>;
    /** ID of the element that should be considered as the dialog's label. */
    ariaLabelledBy: string | null;
    /** Element that was focused before the dialog was opened. Save this to restore upon close. */
    private elementFocusedBeforeDialogWasOpened;
    /** The class that traps and manages focus within the dialog. */
    private focusTrap;
    private savePreviouslyFocusedElement;
    /** Moves the focus inside the focus trap. */
    private trapFocus;
    private restoreFocus;
    private setTransformOrigin;
    constructor(elementRef: ElementRef, document: any, config: ThyDialogConfig, changeDetectorRef: ChangeDetectorRef, clickPositioner: ThyClickPositioner, focusTrapFactory: FocusTrapFactory);
    beforeAttachPortal(): void;
    /** Callback, invoked whenever an animation on the host completes. */
    onAnimationDone(event: AnimationEvent): void;
    /** Callback, invoked when an animation on the host starts. */
    onAnimationStart(event: AnimationEvent): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyDialogContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ThyDialogContainerComponent, "thy-dialog-container", never, {}, {}, never, never>;
}

//# sourceMappingURL=dialog-container.component.d.ts.map