{"version":3,"file":"uploader.service.d.ts","sources":["uploader.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Observable } from 'rxjs';\nimport { HttpClient, XhrFactory } from '@angular/common/http';\nexport declare enum ThyUploadStatus {\n    pending = \"pending\",\n    started = \"started\",\n    uploading = \"uploading\",\n    done = \"done\"\n}\nexport interface ThyUploadResponse {\n    status: ThyUploadStatus;\n    uploadFile?: ThyUploadFile;\n}\nexport interface ThyUploadFile {\n    identifier?: string;\n    method: string;\n    url: string;\n    withCredentials?: boolean;\n    nativeFile: File;\n    fileField?: string;\n    fileName?: string;\n    headers?: {\n        [key: string]: string;\n    };\n    data?: {\n        [key: string]: string;\n    };\n    responseStatus?: any;\n    response?: any;\n    responseHeaders?: any;\n    progress?: {\n        status: ThyUploadStatus;\n        percentage: number;\n        speed?: number;\n        speedHuman?: string;\n        startTime: number | null;\n        endTime?: number | null;\n        estimatedTime?: number | null;\n        estimatedTimeHuman?: string | null;\n    };\n}\nexport interface ThyUploadFilesOptions {\n    onStarted?: (item: ThyUploadFile) => void;\n    onDone?: (item: ThyUploadFile) => void;\n}\nexport declare class ThyUploaderService {\n    private http;\n    private xhrFactory;\n    constructor(http: HttpClient, xhrFactory: XhrFactory);\n    private secondsToHuman;\n    private humanizeBytes;\n    private normalizeUploadFiles;\n    private uploadByXhr;\n    private ensureFileName;\n    /**\n     * 上传单个文件\n     * @param uploadFile 上传文件对象\n     */\n    upload(uploadFile: ThyUploadFile): Observable<ThyUploadResponse>;\n    /**\n     * 并发上传多个文件\n     * @param uploadFiles 上传文件列表\n     * @param concurrent 并发上传数, 默认 5\n     * @param options onStared, onDone 回调\n     */\n    uploadBulk(uploadFiles: ThyUploadFile[], concurrent?: number, options?: ThyUploadFilesOptions): Observable<ThyUploadResponse>;\n}\n"]}