import { EventEmitter, ElementRef, OnInit } from '@angular/core';
import { UpdateHostClassService } from 'ngx-tethys/core';
import { ThyAvatarService } from './avatar.service';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import * as ɵngcc0 from '@angular/core';
export declare const thyAvatarSizeMap: {
    xxs: number;
    xs: number;
    sm: number;
    md: number;
    lg: number;
};
export declare class ThyAvatarComponent implements OnInit {
    private updateHostClassService;
    private elementRef;
    private thyAvatarService;
    private domSanitizer;
    _src: string;
    _name: string;
    _size: number;
    _showRemove: boolean;
    avatarSrc: string;
    avatarName?: string;
    avatarNameSafeHtml?: SafeHtml;
    _isAvatar: boolean;
    thyOnRemove: EventEmitter<any>;
    thyError: EventEmitter<Event>;
    thyShowName: boolean;
    set thySrc(value: string);
    set thyName(value: string);
    set thySize(value: number | string);
    set thyShowRemove(value: boolean);
    thyImgClass: string;
    thyDisabled: boolean;
    private _setAvatarSize;
    private findClosestSize;
    private _setAvatarSrc;
    private _setAvatarName;
    constructor(updateHostClassService: UpdateHostClassService, elementRef: ElementRef, thyAvatarService: ThyAvatarService, domSanitizer: DomSanitizer);
    ngOnInit(): void;
    remove($event: Event): void;
    avatarImgError($event: Event): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyAvatarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ThyAvatarComponent, "thy-avatar", never, { "thySrc": "thySrc"; "thyName": "thyName"; "thySize": "thySize"; "thyShowRemove": "thyShowRemove"; "thyShowName": "thyShowName"; "thyImgClass": "thyImgClass"; "thyDisabled": "thyDisabled"; }, { "thyOnRemove": "thyOnRemove"; "thyError": "thyError"; }, never, never>;
}

//# sourceMappingURL=avatar.component.d.ts.map