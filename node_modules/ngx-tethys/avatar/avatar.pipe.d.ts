import { PipeTransform } from '@angular/core';
import { ThyAvatarService } from './avatar.service';
import * as ɵngcc0 from '@angular/core';
export declare class AvatarShortNamePipe implements PipeTransform {
    transform(name: string): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AvatarShortNamePipe, never>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<AvatarShortNamePipe, "avatarShortName">;
}
export declare class AvatarBgColorPipe implements PipeTransform {
    transform(name: string): {
        'background-color': string;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AvatarBgColorPipe, never>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<AvatarBgColorPipe, "avatarBgColor">;
}
export declare class AvatarSrcPipe implements PipeTransform {
    private thyAvatarService;
    constructor(thyAvatarService: ThyAvatarService);
    transform(src: string, size: number): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AvatarSrcPipe, never>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<AvatarSrcPipe, "thyAvatarSrc">;
}
export declare const AvatarPipes: (typeof AvatarShortNamePipe | typeof AvatarBgColorPipe | typeof AvatarSrcPipe)[];

//# sourceMappingURL=avatar.pipe.d.ts.map