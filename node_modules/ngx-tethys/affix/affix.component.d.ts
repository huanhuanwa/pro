import { Platform } from '@angular/cdk/platform';
import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';
import { ThyScrollService } from 'ngx-tethys/core';
import { SimpleRect } from 'ngx-tethys/util';
import * as ɵngcc0 from '@angular/core';
export declare class ThyAffixComponent implements AfterViewInit, OnChanges, OnDestroy {
    private scrollService;
    private ngZone;
    private platform;
    private renderer;
    private fixedElement;
    thyContainer?: string | Element | Window;
    thyOffsetTop?: null | number;
    thyOffsetBottom?: null | number;
    readonly thyChange: EventEmitter<boolean>;
    private readonly placeholderNode;
    private affixStyle?;
    private placeholderStyle?;
    private positionChangeSubscription;
    private offsetChanged$;
    private destroy$;
    private timeout?;
    private document;
    private get container();
    constructor(el: ElementRef, document: any, scrollService: ThyScrollService, ngZone: NgZone, platform: Platform, renderer: Renderer2);
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private registerListeners;
    private removeListeners;
    getOffset(element: Element, target: Element | Window | undefined): SimpleRect;
    private setAffixStyle;
    private setPlaceholderStyle;
    private syncPlaceholderStyle;
    updatePosition(e: Event): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyAffixComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ThyAffixComponent, "thy-affix", ["thyAffix"], { "thyContainer": "thyContainer"; "thyOffsetTop": "thyOffsetTop"; "thyOffsetBottom": "thyOffsetBottom"; }, { "thyChange": "thyChange"; }, never, ["*"]>;
}

//# sourceMappingURL=affix.component.d.ts.map