import { EventEmitter, OnInit, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare class ThySwitchComponent implements OnInit, ControlValueAccessor, OnChanges {
    model: boolean;
    type?: String;
    size?: String;
    disabled?: Boolean;
    classNames: string[];
    typeArray: string[];
    sizeArray: string[];
    private initialized;
    switchElementRef: ElementRef;
    set thyType(value: string);
    set thySize(value: string);
    thyDisabled: boolean;
    thyChange: EventEmitter<Event>;
    constructor();
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    onModelChange: Function;
    onModelTouched: Function;
    writeValue(value: boolean): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    setDisabledState(isDisabled: Boolean): void;
    toggle(event: Event): void;
    setClassNames(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThySwitchComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ThySwitchComponent, "thy-switch", never, { "thyType": "thyType"; "thySize": "thySize"; "thyDisabled": "thyDisabled"; }, { "thyChange": "thyChange"; }, never, never>;
}

//# sourceMappingURL=switch.component.d.ts.map