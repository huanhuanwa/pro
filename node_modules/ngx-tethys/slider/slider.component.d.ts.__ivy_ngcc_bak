import { OnInit, OnChanges, OnDestroy, AfterViewInit, SimpleChanges, EventEmitter, ChangeDetectorRef, ElementRef, NgZone } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { UpdateHostClassService } from 'ngx-tethys/core';
export declare type ThySliderType = 'primary' | 'success' | 'info' | 'warning' | 'danger';
export declare class ThySliderComponent implements OnInit, AfterViewInit, OnDestroy, OnChanges, ControlValueAccessor {
    private cdr;
    private ngZone;
    private ref;
    private updateHostClassService;
    thyVertical: boolean;
    thyDisabled: boolean;
    _thySlider: boolean;
    _pointer: boolean;
    sliderRail: ElementRef;
    sliderTrack: ElementRef;
    sliderPointer: ElementRef;
    thyMax: number;
    thyMin: number;
    thyStep: number;
    set thyType(type: ThySliderType);
    thyColor: string;
    thyAfterChange: EventEmitter<{
        value: number;
    }>;
    value: number;
    private dragStartListener;
    private dragMoveListener;
    private dragEndListener;
    private dragStartHandler;
    private dragMoveHandler;
    private dragEndHandler;
    private onChangeCallback;
    private onTouchedCallback;
    constructor(cdr: ChangeDetectorRef, ngZone: NgZone, ref: ElementRef, updateHostClassService: UpdateHostClassService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    writeValue(newValue: number): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private verificationValues;
    private verificationStepValue;
    private toggleDisabled;
    private setValue;
    private ensureValueInRange;
    private valueMustBeValid;
    private updateTrackAndPointer;
    private valueToOffset;
    private updateStyle;
    private unsubscribeMouseListeners;
    private subscribeMouseListeners;
    private mouseStartMoving;
    private mouseMoving;
    private mouseStopMoving;
    private pointerController;
    private registerMouseEventsListeners;
    private mousePositionToAdaptiveValue;
    private getSliderPagePosition;
    private getRailLength;
    private convertPointerPositionToRatio;
    private ratioToValue;
    private getDecimals;
}
