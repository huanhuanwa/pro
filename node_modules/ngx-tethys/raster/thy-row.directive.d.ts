import { Renderer2, OnChanges, OnInit, AfterViewInit, OnDestroy, ElementRef } from '@angular/core';
import { ReplaySubject } from 'rxjs';
import { MixinBase, Constructor, ThyUnsubscribe } from 'ngx-tethys/core';
import * as ɵngcc0 from '@angular/core';
export declare type ThyRowJustify = 'start' | 'end' | 'center' | 'space-around' | 'space-between';
export declare type ThyRowAlign = 'top' | 'middle' | 'bottom';
declare const _MixinBase: Constructor<ThyUnsubscribe> & typeof MixinBase;
export declare class ThyRowDirective extends _MixinBase implements OnInit, OnChanges, AfterViewInit, OnDestroy {
    private renderer;
    private elementRef;
    thyGutter: number | {
        xs?: number;
        sm?: number;
        md?: number;
        lg?: number;
        xl?: number;
        xxl?: number;
    };
    thyAlign: ThyRowAlign | null;
    thyJustify: ThyRowJustify | null;
    actualGutter$: ReplaySubject<[number, number]>;
    constructor(renderer: Renderer2, elementRef: ElementRef);
    ngOnInit(): void;
    ngOnChanges(): void;
    ngAfterViewInit(): void;
    private _setGutterStyle;
    private _getGutter;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyRowDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ThyRowDirective, "[thyRow]", never, { "thyAlign": "thyAlign"; "thyJustify": "thyJustify"; "thyGutter": "thyGutter"; }, {}, never>;
}
export {};

//# sourceMappingURL=thy-row.directive.d.ts.map