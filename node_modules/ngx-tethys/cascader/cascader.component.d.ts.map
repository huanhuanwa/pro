{"version":3,"file":"cascader.component.d.ts","sources":["cascader.component.d.ts"],"names":[],"mappingssourcesContent":["import { OnInit, ChangeDetectorRef, EventEmitter, TemplateRef, ElementRef } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { ConnectedOverlayPositionChange, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nexport declare type ThyCascaderTriggerType = 'click' | 'hover';\nexport declare type ThyCascaderExpandTrigger = 'click' | 'hover';\nexport interface CascaderOption {\n    value?: any;\n    label?: string;\n    title?: string;\n    disabled?: boolean;\n    loading?: boolean;\n    isLeaf?: boolean;\n    parent?: CascaderOption;\n    children?: CascaderOption[];\n    [key: string]: any;\n}\nexport declare class ThyCascaderComponent implements OnInit, ControlValueAccessor {\n    private cdr;\n    private elementRef;\n    private updateHostClassService;\n    private changeOnSelect;\n    private showInput;\n    prefixCls: string;\n    private menuClassName;\n    private columnClassName;\n    private _menuColumnCls;\n    private defaultValue;\n    dropDownPosition: string;\n    menuVisible: boolean;\n    isLoading: boolean;\n    isOpening: boolean;\n    showSearch: boolean;\n    private _thySize;\n    private _arrowCls;\n    private _menuCls;\n    private _labelCls;\n    private _clearCls;\n    private _inputCls;\n    private labelRenderTpl;\n    isLabelRenderTemplate: boolean;\n    labelRenderText: string;\n    labelRenderContext: any;\n    onChange: any;\n    onTouched: any;\n    private cascaderPositon;\n    positions: ConnectionPositionPair[];\n    set thyLabelRender(value: TemplateRef<any>);\n    get thyLabelRender(): TemplateRef<any>;\n    private value;\n    private selectedOptions;\n    private activatedOptions;\n    thyColumns: CascaderOption[][];\n    thyValueProperty: string;\n    thyLabelProperty: string;\n    thyPlaceHolder: string;\n    private _inputValue;\n    get inputValue(): string;\n    set inputValue(inputValue: string);\n    thyLoadData: (node: CascaderOption, index?: number) => PromiseLike<any>;\n    set thyChangeOnSelect(value: boolean);\n    get thyChangeOnSelect(): boolean;\n    set thyShowInput(value: boolean);\n    get thyShowInput(): boolean;\n    searchWidthStyle: string;\n    private oldColumnsHolder;\n    private oldActivatedOptions;\n    inSearch: boolean;\n    thyTriggerAction: ThyCascaderTriggerType | ThyCascaderTriggerType[];\n    thyExpandTriggerAction: ThyCascaderExpandTrigger | ThyCascaderExpandTrigger[];\n    thyMenuStyle: {\n        [key: string]: string;\n    };\n    set thyOptions(options: CascaderOption[] | null);\n    set thyMenuClassName(value: string);\n    get thyMenuClassName(): string;\n    set thyColumnClassName(value: string);\n    get thyColumnClassName(): string;\n    disabled: boolean;\n    set thySize(v: string);\n    get thySize(): string;\n    thyChange: EventEmitter<any[]>;\n    thySelectionChange: EventEmitter<CascaderOption[]>;\n    thySelect: EventEmitter<{\n        option: CascaderOption;\n        index: number;\n    }>;\n    thyChangeOn: (option: CascaderOption, level: number) => boolean;\n    thyClear: EventEmitter<void>;\n    input: ElementRef;\n    menu: ElementRef;\n    ngOnInit(): void;\n    private initPosition;\n    private initOptions;\n    private activateOnInit;\n    writeValue(value: any): void;\n    afterWriteValue(): void;\n    registerOnChange(fn: (_: any) => {}): void;\n    registerOnTouched(fn: () => {}): void;\n    onPositionChange(position: ConnectedOverlayPositionChange): void;\n    private isLoaded;\n    getOptionLabel(option: CascaderOption): any;\n    getOptionValue(option: CascaderOption): any;\n    private hasInput;\n    private hasValue;\n    get showPlaceholder(): boolean;\n    isActivedOption(option: CascaderOption, index: number): boolean;\n    private findOption;\n    private buildDisplayLabel;\n    isMenuVisible(): boolean;\n    setMenuVisible(menuVisible: boolean): void;\n    get menuCls(): any;\n    private setMenuClass;\n    get menuColumnCls(): any;\n    private setMenuColumnClass;\n    get arrowCls(): any;\n    private setArrowClass;\n    get clearCls(): any;\n    private setClearClass;\n    get labelCls(): any;\n    private setLabelClass;\n    get inputCls(): any;\n    private setInputClass;\n    private setClassMap;\n    private isClickTriggerAction;\n    private isHoverTriggerAction;\n    private isHoverExpandTriggerAction;\n    trggleClick($event: Event): void;\n    trggleHover($event: Event): void;\n    onOptionClick(option: CascaderOption, index: number, event: Event): void;\n    onOptionMouseover(option: CascaderOption, index: number, event: Event): void;\n    onMenuMouseleave(event: Event): void;\n    closeMenu(): void;\n    setActiveOption(option: CascaderOption, index: number, select: boolean, loadChildren?: boolean): void;\n    private onSelectOption;\n    private shouldPerformSelection;\n    private onValueChange;\n    clearSelection($event: Event): void;\n    focus(): void;\n    private loadChildren;\n    private setColumnData;\n    getSubmitValue(): any[];\n    constructor(cdr: ChangeDetectorRef, elementRef: ElementRef, updateHostClassService: UpdateHostClassService);\n}\n"]}