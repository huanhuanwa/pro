import { QueryList, EventEmitter } from '@angular/core';
import { ThyStepComponent, IThyStepperComponent } from './step.component';
import { ThyStepHeaderComponent } from './step-header.component';
import * as ɵngcc0 from '@angular/core';
export declare class ThyStepperComponent implements IThyStepperComponent {
    set thySelectedIndex(value: number);
    set thySelected(value: ThyStepComponent);
    thyShowStepHeader: boolean;
    private _selectedIndex;
    set selected(step: ThyStepComponent);
    get selected(): ThyStepComponent;
    set selectedIndex(index: number);
    get selectedIndex(): number;
    selectionChange: EventEmitter<any>;
    stepHeaders: QueryList<ThyStepHeaderComponent>;
    steps: QueryList<ThyStepComponent>;
    thyStepper: boolean;
    private _updateSelectedItemIndex;
    to(index: number): void;
    next(): void;
    /** Selects and focuses the previous step in list. */
    previous(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyStepperComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ThyStepperComponent, "thy-stepper", never, { "thyShowStepHeader": "thyShowStepHeader"; "thySelectedIndex": "thySelectedIndex"; "thySelected": "thySelected"; }, { "selectionChange": "selectionChange"; }, ["steps"], never>;
}

//# sourceMappingURL=stepper.component.d.ts.map