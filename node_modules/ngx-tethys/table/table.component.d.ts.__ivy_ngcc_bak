import { Constructor, MixinBase, ThyUnsubscribe, UpdateHostClassService } from 'ngx-tethys/core';
import { Dictionary } from 'ngx-tethys/types';
import { CdkDragDrop } from '@angular/cdk/drag-drop';
import { ViewportRuler } from '@angular/cdk/overlay';
import { TemplateRef, OnInit, OnChanges, EventEmitter, DoCheck, ElementRef, IterableDiffers, OnDestroy, QueryList, SimpleChanges } from '@angular/core';
import { IThyTableColumnParentComponent, ThyTableColumnComponent } from './table-column.component';
import { PageChangedEvent, ThyTableColumn, ThyTableDraggableEvent, ThyTableEmptyOptions, ThyTableEvent, ThyTableRowEvent, ThyMultiSelectEvent, ThyPage, ThyRadioSelectEvent, ThySwitchEvent } from './table.interface';
export declare type ThyTableTheme = 'default' | 'bordered';
/**
 * @deprecated ThyGridTheme is deprecated, please use ThyTableTheme
 */
export declare type ThyGridTheme = ThyTableTheme;
export declare type ThyTableMode = 'list' | 'group' | 'tree';
/**
 * @deprecated ThyGridMode is deprecated, please use ThyTableMode
 */
export declare type ThyGridMode = ThyTableMode;
export declare type ThyTableSize = 'default' | 'sm';
/**
 * @deprecated ThyGridSize is deprecated, please use ThyTableSize
 */
export declare type ThyGridSize = ThyTableSize;
interface ThyTableGroup<T = unknown> {
    id?: string;
    expand?: boolean;
    children?: object[];
    origin?: T;
}
declare const _MixinBase: Constructor<ThyUnsubscribe> & typeof MixinBase;
export declare class ThyTableComponent extends _MixinBase implements OnInit, OnChanges, OnDestroy, DoCheck, IThyTableColumnParentComponent {
    elementRef: ElementRef;
    private _differs;
    private viewportRuler;
    private updateHostClassService;
    private document;
    customType: {
        index: string;
        checkbox: string;
        radio: string;
        switch: string;
    };
    model: object[];
    groups: ThyTableGroup[];
    rowKey: string;
    groupBy: string;
    mode: ThyTableMode;
    columns: ThyTableColumn[];
    theme: ThyTableTheme;
    className: string;
    size: ThyTableSize;
    rowClassName: string | Function;
    loadingDone: boolean;
    loadingText: string;
    emptyOptions: ThyTableEmptyOptions;
    draggable: boolean;
    selectedRadioRow: any;
    pagination: ThyPage;
    trackByFn: any;
    wholeRowSelect: boolean;
    private _filter;
    private _diff;
    private _draggableModel;
    private _listOfColumnComponents;
    private initialized;
    private _oldThyClassName;
    emptyTemplate: TemplateRef<any>;
    tableElementRef: ElementRef<any>;
    set thyMode(value: ThyTableMode);
    set thyGroupBy(value: string);
    set thyRowKey(value: any);
    set thyGroups(value: any);
    set thyModel(value: any);
    set thyTheme(value: ThyTableTheme);
    set thySize(value: ThyTableSize);
    set thyClassName(value: string);
    set thyRowClassName(value: string | Function);
    set thyLoadingDone(value: boolean);
    set thyLoadingText(value: string);
    set thyEmptyOptions(value: ThyTableEmptyOptions);
    set thyDraggable(value: boolean);
    set thyFilter(value: any);
    set thyPageIndex(value: number);
    set thyPageSize(value: number);
    set thyPageTotal(value: number);
    set thyWholeRowSelect(value: boolean);
    thyShowHeader: boolean;
    showTotal: boolean;
    thyIndent: number;
    thyChildrenKey: string;
    thyHoverDisplayOperation: boolean;
    thyOnSwitchChange: EventEmitter<ThySwitchEvent>;
    thyOnPageChange: EventEmitter<PageChangedEvent>;
    thyOnPageIndexChange: EventEmitter<number>;
    thyOnMultiSelectChange: EventEmitter<ThyMultiSelectEvent>;
    thyOnRadioSelectChange: EventEmitter<ThyRadioSelectEvent>;
    thyOnDraggableChange: EventEmitter<ThyTableDraggableEvent>;
    thyOnRowClick: EventEmitter<ThyTableRowEvent>;
    thyOnRowContextMenu: EventEmitter<ThyTableEvent>;
    groupTemplate: TemplateRef<any>;
    set listOfColumnComponents(components: QueryList<ThyTableColumnComponent>);
    isTableClass: boolean;
    expandStatusMap: Dictionary<boolean>;
    constructor(elementRef: ElementRef, _differs: IterableDiffers, viewportRuler: ViewportRuler, updateHostClassService: UpdateHostClassService, document: any);
    private _getSelectionKeys;
    private _initializeColumns;
    private _initializeDataModel;
    private _initialSelections;
    private _initialCustomModelValue;
    private _refreshCustomModelValue;
    private _applyDiffChanges;
    private _bindTrackFn;
    private _destroyInvalidAttribute;
    private _setClass;
    private _filterModel;
    updateColumnSelections(key: string, selections: any): void;
    isTemplateRef(ref: any): boolean;
    getModelValue(row: any, path: string): any;
    renderRowClassName(row: any, index: number): any;
    onModelChange(row: any, column: ThyTableColumn): void;
    onStopPropagation(event: Event): void;
    onPageChange(event: PageChangedEvent): void;
    onPageIndexChange(event: number): void;
    onCheckboxChange(row: any, column: ThyTableColumn): void;
    onMultiSelectChange(event: Event, row: any, column: ThyTableColumn): void;
    onRadioSelectChange(event: Event, row: any): void;
    onSwitchChange(event: Event, row: any, column: any): void;
    showExpand(row: any): boolean;
    isExpanded(row: any): boolean;
    iconIndentComputed(level: number): number;
    tdIndentComputed(level: number): {
        position: string;
        paddingLeft: string;
    };
    expandChildren(event: Event, row: any): void;
    onDragStarted(): void;
    onDragDropped(event: CdkDragDrop<unknown>): void;
    onRowClick(event: Event, row: any): void;
    onRowContextMenu(event: Event, row: any): void;
    draggableStopPropagation(event: Event): void;
    private _refreshColumns;
    private buildGroups;
    private buildModel;
    expandGroup(group: ThyTableGroup): void;
    ngOnInit(): void;
    ngOnChanges(simpleChangs: SimpleChanges): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
}
/**
 * @deprecated ThyGridComponent is deprecated, please use ThyTableComponent
 */
export declare const ThyGridComponent: typeof ThyTableComponent;
export {};
