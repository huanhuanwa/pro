import { QueryList, AfterContentInit, OnChanges, OnDestroy, OnInit, SimpleChanges, ChangeDetectorRef } from '@angular/core';
import { ThyTimelineItemComponent } from './timeline-item.component';
import { ThyTimelineService } from './timeline.service';
import * as ɵngcc0 from '@angular/core';
export declare type ThyTimeMode = 'left' | 'right' | 'center';
export declare enum ThyTimeModes {
    left = "left",
    right = "right",
    center = "center"
}
export declare type ThyTimeDirection = 'horizontal' | 'vertical';
export declare class ThyTimelineComponent implements OnInit, AfterContentInit, OnChanges, OnDestroy {
    private cdr;
    private timelineService;
    thyReverse: Boolean;
    thyMode: ThyTimeMode;
    thyDirection: ThyTimeDirection;
    timelineItems: ThyTimelineItemComponent[];
    private destroy$;
    isTimeline: boolean;
    rightTimeline: boolean;
    centerTimeline: boolean;
    templateTimeline: boolean;
    horizontal: boolean;
    listOfItems: QueryList<ThyTimelineItemComponent>;
    constructor(cdr: ChangeDetectorRef, timelineService: ThyTimelineService);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    private updateChildren;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyTimelineComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ThyTimelineComponent, "thy-timeline", never, { "thyDirection": "thyDirection"; "thyReverse": "thyReverse"; "thyMode": "thyMode"; }, {}, ["listOfItems"], ["*"]>;
}

//# sourceMappingURL=timeline.component.d.ts.map