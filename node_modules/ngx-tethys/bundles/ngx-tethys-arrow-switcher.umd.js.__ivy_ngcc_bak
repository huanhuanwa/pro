(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('ngx-tethys/button'), require('@angular/forms')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/arrow-switcher', ['exports', '@angular/core', '@angular/common', 'ngx-tethys/button', '@angular/forms'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys']['arrow-switcher'] = {}), global.ng.core, global.ng.common, global['ngx-tethys'].button, global.ng.forms));
}(this, (function (exports, core, common, button, forms) { 'use strict';

    var ThyArrowSwitcherComponent = /** @class */ (function () {
        function ThyArrowSwitcherComponent(cd) {
            this.cd = cd;
            this._isArrowSwitcher = true;
            this._isSmallSize = false;
            this.thyPrevious = new core.EventEmitter();
            this.thyNext = new core.EventEmitter();
            this.index = 0;
            this.disabled = false;
            this.previousDisabled = false;
            this.nextDisabled = false;
        }
        Object.defineProperty(ThyArrowSwitcherComponent.prototype, "thyTotal", {
            set: function (value) {
                if (value) {
                    this.total = value;
                    this.getDisabled();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyArrowSwitcherComponent.prototype, "thySize", {
            set: function (size) {
                if (size === 'sm') {
                    this._isSmallSize = true;
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyArrowSwitcherComponent.prototype.ngOnInit = function () { };
        ThyArrowSwitcherComponent.prototype.writeValue = function (value) {
            if (value >= 0) {
                this.index = value;
                this.getDisabled();
            }
            this.cd.markForCheck();
        };
        ThyArrowSwitcherComponent.prototype.registerOnChange = function (fn) {
            this.onModelChange = fn;
        };
        ThyArrowSwitcherComponent.prototype.registerOnTouched = function (fn) {
            this.onModelTouched = fn;
        };
        ThyArrowSwitcherComponent.prototype.setDisabledState = function (isDisable) {
            this.disabled = isDisable;
        };
        ThyArrowSwitcherComponent.prototype.getDisabled = function () {
            this.previousDisabled = this.index <= 0 || this.disabled;
            this.nextDisabled = this.index >= this.total - 1 || this.disabled;
        };
        ThyArrowSwitcherComponent.prototype.onPreviousClick = function (event) {
            this.index--;
            this.onModelChange(this.index);
            this.getDisabled();
            this.thyPrevious.emit({ index: this.index, event: event });
        };
        ThyArrowSwitcherComponent.prototype.onNextClick = function (event) {
            this.index++;
            this.onModelChange(this.index);
            this.getDisabled();
            this.thyNext.emit({ index: this.index, event: event });
        };
        return ThyArrowSwitcherComponent;
    }());
    ThyArrowSwitcherComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-arrow-switcher',
                    template: "<div class=\"switcher-wrapper\">\n  <button thyButtonIcon=\"angle-left\" [disabled]=\"previousDisabled\" (click)=\"onPreviousClick($event)\"></button>\n  <span>{{ index + 1 }} / {{ total }}</span>\n  <button thyButtonIcon=\"angle-right\" [disabled]=\"nextDisabled\" (click)=\"onNextClick($event)\"></button>\n</div>\n",
                    changeDetection: core.ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: forms.NG_VALUE_ACCESSOR,
                            useExisting: core.forwardRef(function () { return ThyArrowSwitcherComponent; }),
                            multi: true
                        }
                    ]
                },] }
    ];
    ThyArrowSwitcherComponent.ctorParameters = function () { return [
        { type: core.ChangeDetectorRef }
    ]; };
    ThyArrowSwitcherComponent.propDecorators = {
        _isArrowSwitcher: [{ type: core.HostBinding, args: ['class.thy-arrow-switcher',] }],
        _isSmallSize: [{ type: core.HostBinding, args: ['class.thy-arrow-switcher-small',] }],
        thyPrevious: [{ type: core.Output }],
        thyNext: [{ type: core.Output }],
        thyTotal: [{ type: core.Input }],
        thySize: [{ type: core.Input }]
    };

    var ThyArrowSwitcherModule = /** @class */ (function () {
        function ThyArrowSwitcherModule() {
        }
        return ThyArrowSwitcherModule;
    }());
    ThyArrowSwitcherModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [ThyArrowSwitcherComponent],
                    imports: [common.CommonModule, button.ThyButtonModule],
                    exports: [ThyArrowSwitcherComponent]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ThyArrowSwitcherComponent = ThyArrowSwitcherComponent;
    exports.ThyArrowSwitcherModule = ThyArrowSwitcherModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-tethys-arrow-switcher.umd.js.map
