(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/animations'), require('ngx-tethys/popover'), require('ngx-tethys/icon')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/menu', ['exports', '@angular/core', '@angular/common', '@angular/animations', 'ngx-tethys/popover', 'ngx-tethys/icon'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].menu = {}), global.ng.core, global.ng.common, global.ng.animations, global['ngx-tethys'].popover, global['ngx-tethys'].icon));
}(this, (function (exports, core, common, animations, popover, icon) { 'use strict';

    var ThyMenuComponent = /** @class */ (function () {
        function ThyMenuComponent() {
            this.isThyMenu = true;
        }
        ThyMenuComponent.prototype.ngOnInit = function () { };
        return ThyMenuComponent;
    }());
    ThyMenuComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-menu,[thy-menu],[thyMenu]',
                    template: "<ng-content></ng-content>"
                },] }
    ];
    ThyMenuComponent.ctorParameters = function () { return []; };
    ThyMenuComponent.propDecorators = {
        isThyMenu: [{ type: core.HostBinding, args: ['class.thy-menu',] }]
    };

    var ThyMenuItemComponent = /** @class */ (function () {
        function ThyMenuItemComponent() {
            this.isThyMenuItem = true;
        }
        ThyMenuItemComponent.prototype.ngOnInit = function () { };
        return ThyMenuItemComponent;
    }());
    ThyMenuItemComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-menu-item,[thy-menu-item],[thyMenuItem]',
                    template: "<div class=\"thy-menu-item-content\">\n  <ng-content></ng-content>\n</div>\n"
                },] }
    ];
    ThyMenuItemComponent.ctorParameters = function () { return []; };
    ThyMenuItemComponent.propDecorators = {
        isThyMenuItem: [{ type: core.HostBinding, args: ['class.thy-menu-item',] }]
    };

    var ThyMenuGroupComponent = /** @class */ (function () {
        function ThyMenuGroupComponent(popover) {
            this.popover = popover;
            this.rightIconClass = 'more';
            this.iconClass = 'folder-bold';
            this.groupHeaderPaddingLeft = 0;
            this.isThyMenuGroup = true;
            this.showIcon = false;
            this.isCollapsed = true;
            this.thyTitle = '';
            this.thyShowAction = false;
            this.thyActionStopPropagation = true;
            this.thyOnActionClick = new core.EventEmitter();
        }
        Object.defineProperty(ThyMenuGroupComponent.prototype, "thyExpand", {
            set: function (value) {
                this.isCollapsed = !!!value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyMenuGroupComponent.prototype, "thyShowIcon", {
            set: function (value) {
                this.showIcon = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyMenuGroupComponent.prototype, "thyIcon", {
            set: function (value) {
                this.iconClass = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyMenuGroupComponent.prototype, "thyActionIcon", {
            set: function (value) {
                this.rightIconClass = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyMenuGroupComponent.prototype, "thyActionMenu", {
            set: function (value) {
                this._actionMenu = value;
            },
            enumerable: false,
            configurable: true
        });
        ThyMenuGroupComponent.prototype.ngOnInit = function () { };
        ThyMenuGroupComponent.prototype.collapseGroup = function () {
            this.isCollapsed = !this.isCollapsed;
        };
        ThyMenuGroupComponent.prototype.onActionClick = function (event) {
            if (this.thyActionStopPropagation) {
                event.stopPropagation();
            }
            if (this._actionMenu) {
                this.popover.open(this._actionMenu, {
                    origin: event.currentTarget,
                    insideClosable: true,
                    placement: 'bottom'
                });
            }
            else {
                this.thyOnActionClick.emit(event);
            }
        };
        return ThyMenuGroupComponent;
    }());
    ThyMenuGroupComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-menu-group, [thy-menu-group],[thyMenuGroup]',
                    template: "<div class=\"thy-menu-group-header\" (click)=\"collapseGroup()\">\n  <thy-icon thyIconName=\"caret-right-down\" class=\"thy-menu-group-arrow\"></thy-icon>\n  <thy-icon *ngIf=\"showIcon\" class=\"thy-menu-group-folder\" [thyIconName]=\"iconClass\"></thy-icon>\n  <span class=\"thy-menu-group-title\" [title]=\"thyTitle\">{{ thyTitle }}</span>\n  <thy-icon\n    *ngIf=\"thyShowAction\"\n    class=\"thy-menu-group-more\"\n    [thyIconName]=\"rightIconClass\"\n    (click)=\"onActionClick($event)\"\n  ></thy-icon>\n</div>\n<div class=\"thy-menu-group-body\" #thyMenuGroup [@detailsContentAnimation]=\"isCollapsed\">\n  <ng-content></ng-content>\n</div>\n",
                    animations: [
                        animations.trigger('detailsContentAnimation', [
                            animations.state('void', animations.style({
                                height: '*'
                            })),
                            animations.state('1', animations.style({
                                height: 0,
                                overflow: 'hidden'
                            })),
                            animations.state('0', animations.style({
                                height: '*'
                            })),
                            animations.transition('* => *', animations.animate('0ms ease-out'))
                        ])
                    ]
                },] }
    ];
    ThyMenuGroupComponent.ctorParameters = function () { return [
        { type: popover.ThyPopover }
    ]; };
    ThyMenuGroupComponent.propDecorators = {
        _thyMenuGroup: [{ type: core.ViewChild, args: ['thyMenuGroup', { static: true },] }],
        isThyMenuGroup: [{ type: core.HostBinding, args: ['class.thy-menu-group',] }],
        showIcon: [{ type: core.HostBinding, args: ['class.has-icon',] }],
        isCollapsed: [{ type: core.HostBinding, args: ['class.collapsed',] }],
        thyTitle: [{ type: core.Input }],
        thyExpand: [{ type: core.Input, args: ['thyExpand',] }],
        thyShowIcon: [{ type: core.Input, args: ['thyShowIcon',] }],
        thyIcon: [{ type: core.Input, args: ['thyIcon',] }],
        thyActionIcon: [{ type: core.Input, args: ['thyActionIcon',] }],
        thyShowAction: [{ type: core.Input }],
        thyActionStopPropagation: [{ type: core.Input }],
        thyOnActionClick: [{ type: core.Output }],
        thyActionMenu: [{ type: core.Input }]
    };

    var ThyMenuItemNameComponent = /** @class */ (function () {
        function ThyMenuItemNameComponent() {
            this.isThyMenuItemName = true;
            this.thyOverflowEllipsis = true;
        }
        ThyMenuItemNameComponent.prototype.ngOnInit = function () { };
        return ThyMenuItemNameComponent;
    }());
    ThyMenuItemNameComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-menu-item-name,[thy-menu-item-name],[thyMenuItemName]',
                    template: "<ng-content></ng-content>"
                },] }
    ];
    ThyMenuItemNameComponent.ctorParameters = function () { return []; };
    ThyMenuItemNameComponent.propDecorators = {
        isThyMenuItemName: [{ type: core.HostBinding, args: ['class.thy-menu-item-name',] }],
        thyOverflowEllipsis: [{ type: core.HostBinding, args: ['class.thy-menu-item-name-ellipsis',] }, { type: core.Input }]
    };

    var ThyMenuItemIconComponent = /** @class */ (function () {
        function ThyMenuItemIconComponent(elementRef, renderer) {
            this.elementRef = elementRef;
            this.renderer = renderer;
            this.isThyMenuItemIcon = true;
        }
        Object.defineProperty(ThyMenuItemIconComponent.prototype, "thyColor", {
            set: function (value) {
                if (value) {
                    this.renderer.setStyle(this.elementRef.nativeElement, 'color', value);
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyMenuItemIconComponent.prototype.ngOnInit = function () { };
        return ThyMenuItemIconComponent;
    }());
    ThyMenuItemIconComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-menu-item-icon,[thy-menu-item-icon],[thyMenuItemIcon]',
                    template: "<ng-content></ng-content>"
                },] }
    ];
    ThyMenuItemIconComponent.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.Renderer2 }
    ]; };
    ThyMenuItemIconComponent.propDecorators = {
        isThyMenuItemIcon: [{ type: core.HostBinding, args: ['class.thy-menu-item-icon',] }],
        thyColor: [{ type: core.Input }]
    };

    var ThyMenuItemActionComponent = /** @class */ (function () {
        function ThyMenuItemActionComponent(popover, renderer, elementRef) {
            this.popover = popover;
            this.renderer = renderer;
            this.elementRef = elementRef;
            this._boundEvent = false;
            this.isThyMenuItemIconMore = true;
            this.thyStopPropagation = true;
        }
        Object.defineProperty(ThyMenuItemActionComponent.prototype, "thyActionMenu", {
            set: function (value) {
                this._actionMenu = value;
                if (this._actionMenu) {
                    this.bindClickEvent();
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyMenuItemActionComponent.prototype.bindClickEvent = function () {
            var _this = this;
            if (this._boundEvent) {
                return;
            }
            this._boundEvent = true;
            this.renderer.listen(this.elementRef.nativeElement, 'click', function (event) {
                if (_this.thyStopPropagation) {
                    event.stopPropagation();
                }
                if (_this._actionMenu) {
                    _this.popover.open(_this._actionMenu, {
                        origin: event.currentTarget,
                        insideClosable: true,
                        placement: 'bottom'
                    });
                }
            });
        };
        ThyMenuItemActionComponent.prototype.ngOnInit = function () { };
        return ThyMenuItemActionComponent;
    }());
    ThyMenuItemActionComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-menu-item-action,[thy-menu-item-action],[thyMenuItemAction]',
                    template: "<ng-content></ng-content>"
                },] }
    ];
    ThyMenuItemActionComponent.ctorParameters = function () { return [
        { type: popover.ThyPopover },
        { type: core.Renderer2 },
        { type: core.ElementRef }
    ]; };
    ThyMenuItemActionComponent.propDecorators = {
        isThyMenuItemIconMore: [{ type: core.HostBinding, args: ['class.thy-menu-item-action',] }],
        thyActionMenu: [{ type: core.Input }],
        thyStopPropagation: [{ type: core.Input }]
    };

    var ThyMenuDividerComponent = /** @class */ (function () {
        function ThyMenuDividerComponent() {
            this.isThyMenuDivider = true;
        }
        ThyMenuDividerComponent.prototype.ngOnInit = function () { };
        return ThyMenuDividerComponent;
    }());
    ThyMenuDividerComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-menu-divider,[thy-menu-divider],[thyMenuDivider]',
                    template: "<ng-content></ng-content>"
                },] }
    ];
    ThyMenuDividerComponent.ctorParameters = function () { return []; };
    ThyMenuDividerComponent.propDecorators = {
        isThyMenuDivider: [{ type: core.HostBinding, args: ['class.thy-menu-divider',] }]
    };

    var ThyMenuModule = /** @class */ (function () {
        function ThyMenuModule() {
        }
        return ThyMenuModule;
    }());
    ThyMenuModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [
                        ThyMenuComponent,
                        ThyMenuGroupComponent,
                        ThyMenuItemComponent,
                        ThyMenuItemNameComponent,
                        ThyMenuItemIconComponent,
                        ThyMenuItemActionComponent,
                        ThyMenuDividerComponent
                    ],
                    imports: [common.CommonModule, icon.ThyIconModule, popover.ThyPopoverModule],
                    exports: [
                        ThyMenuComponent,
                        ThyMenuGroupComponent,
                        ThyMenuItemComponent,
                        ThyMenuItemNameComponent,
                        ThyMenuItemIconComponent,
                        ThyMenuItemActionComponent,
                        ThyMenuDividerComponent
                    ]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ThyMenuComponent = ThyMenuComponent;
    exports.ThyMenuDividerComponent = ThyMenuDividerComponent;
    exports.ThyMenuGroupComponent = ThyMenuGroupComponent;
    exports.ThyMenuItemActionComponent = ThyMenuItemActionComponent;
    exports.ThyMenuItemComponent = ThyMenuItemComponent;
    exports.ThyMenuItemIconComponent = ThyMenuItemIconComponent;
    exports.ThyMenuItemNameComponent = ThyMenuItemNameComponent;
    exports.ThyMenuModule = ThyMenuModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-tethys-menu.umd.js.map
