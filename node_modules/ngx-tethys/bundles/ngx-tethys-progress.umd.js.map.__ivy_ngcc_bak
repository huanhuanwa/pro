{"version":3,"file":"ngx-tethys-progress.umd.js","sources":["../../src/progress/bar/progress-bar.component.ts","../../src/progress/progress.component.ts","../../src/progress/progress.module.ts","../../src/progress/ngx-tethys-progress.ts"],"sourcesContent":["import { Component, Input, HostBinding, ElementRef, ViewEncapsulation, InjectionToken, Inject, Host, TemplateRef } from '@angular/core';\nimport { ThyProgressTypes } from '../interfaces';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\n\nexport interface ThyParentProgress {\n    max: number;\n    bars: ThyProgressBarComponent[];\n}\nexport const THY_PROGRESS_COMPONENT = new InjectionToken<ThyParentProgress>('THY_PROGRESS_COMPONENT');\n\n@Component({\n    selector: 'thy-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    encapsulation: ViewEncapsulation.None,\n    providers: [UpdateHostClassService]\n})\nexport class ThyProgressBarComponent {\n    // private type: ProgressTypes;\n\n    private value: number;\n\n    @HostBinding(`class.progress-bar`) isProgressBar = true;\n\n    @HostBinding('style.width.%') percent = 0;\n\n    @HostBinding('style.background-color') color = '';\n\n    @Input() thyTips: string | TemplateRef<HTMLElement>;\n\n    @Input() set thyType(type: ThyProgressTypes) {\n        // this.type = type;\n        this.updateHostClassService.updateClass(type ? [`progress-bar-${type}`, `bg-${type}`] : []);\n    }\n\n    @Input() set thyValue(value: number) {\n        if (!value && value !== 0) {\n            return;\n        }\n        this.value = value;\n        this.recalculatePercentage();\n    }\n\n    @Input() set thyColor(color: string) {\n        this.color = color || '';\n    }\n\n    constructor(\n        private updateHostClassService: UpdateHostClassService,\n        elementRef: ElementRef,\n        @Inject(THY_PROGRESS_COMPONENT) private progress: ThyParentProgress\n    ) {\n        updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n\n    recalculatePercentage(): void {\n        this.percent = +((this.value / this.progress.max) * 100).toFixed(2);\n\n        // if (this.progress && this.progress.bars) {\n        //     const totalPercentage = this.progress.bars.reduce(function(total: number, bar): number {\n        //         return total + bar.percent;\n        //     }, 0);\n\n        //     if (totalPercentage > 100) {\n        //         this.percent -= totalPercentage - 100;\n        //     }\n        // }\n    }\n}\n","import {\n    Component,\n    Input,\n    HostBinding,\n    ChangeDetectionStrategy,\n    ElementRef,\n    ViewEncapsulation,\n    ViewChildren,\n    QueryList,\n    TemplateRef\n} from '@angular/core';\nimport { ThyProgressTypes, ThyStackedValue } from './interfaces';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { THY_PROGRESS_COMPONENT, ThyProgressBarComponent, ThyParentProgress } from './bar/progress-bar.component';\n\n@Component({\n    selector: 'thy-progress',\n    templateUrl: './progress.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [\n        UpdateHostClassService,\n        {\n            provide: THY_PROGRESS_COMPONENT,\n            useExisting: ThyProgressComponent\n        }\n    ]\n})\nexport class ThyProgressComponent implements ThyParentProgress {\n    value: number | ThyStackedValue[];\n\n    bars: ThyProgressBarComponent[] = [];\n\n    @HostBinding('attr.max') max = 100;\n\n    @HostBinding(`class.progress-stacked`) isStacked = false;\n\n    @HostBinding(`class.progress`) isProgress = true;\n\n    @ViewChildren(ThyProgressBarComponent)\n    set barsQueryList(value: QueryList<ThyProgressBarComponent>) {\n        this.bars = value.toArray();\n    }\n\n    @Input() thyType: ThyProgressTypes;\n\n    @Input() thyTips: string | TemplateRef<HTMLElement>;\n\n    @Input() set thyValue(value: number | ThyStackedValue[]) {\n        this.isStacked = Array.isArray(value);\n        this.value = value;\n\n        // 自动求和计算 max\n        if (this.isStacked) {\n            this.thyMax = (value as ThyStackedValue[]).reduce((total, item) => {\n                return total + item.value;\n            }, 0);\n        }\n    }\n\n    @Input() set thySize(size: string) {\n        this.updateHostClassService.updateClass(size ? [`progress-${size}`] : []);\n    }\n\n    @Input() set thyMax(max: number) {\n        this.max = max;\n        this.bars.forEach(bar => {\n            bar.recalculatePercentage();\n        });\n    }\n\n    constructor(private updateHostClassService: UpdateHostClassService, elementRef: ElementRef) {\n        this.updateHostClassService.initializeElement(elementRef);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ThyTooltipModule } from 'ngx-tethys/tooltip';\nimport { ThyProgressBarComponent } from './bar/progress-bar.component';\nimport { ThyProgressComponent } from './progress.component';\n\n@NgModule({\n    declarations: [ThyProgressComponent, ThyProgressBarComponent],\n    imports: [CommonModule, ThyTooltipModule],\n    exports: [ThyProgressComponent]\n})\nexport class ThyProgressModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["InjectionToken","Component","ViewEncapsulation","UpdateHostClassService","ElementRef","Inject","HostBinding","Input","ChangeDetectionStrategy","ViewChildren","NgModule","CommonModule","ThyTooltipModule"],"mappings":"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"}