!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("ngx-tethys/tooltip"),require("ngx-tethys/core"),require("@angular/cdk/observers"),require("rxjs/operators"),require("ngx-tethys/util")):"function"==typeof define&&define.amd?define("ngx-tethys/flexible-text",["exports","@angular/core","@angular/common","ngx-tethys/tooltip","ngx-tethys/core","@angular/cdk/observers","rxjs/operators","ngx-tethys/util"],e):e(((t="undefined"!=typeof globalThis?globalThis:t||self)["ngx-tethys"]=t["ngx-tethys"]||{},t["ngx-tethys"]["flexible-text"]={}),t.ng.core,t.ng.common,t["ngx-tethys"].tooltip,t["ngx-tethys"].core,t.ng.cdk.observers,t.rxjs.operators,t["ngx-tethys"].util)}(this,(function(t,e,i,o,n,r,s,l){"use strict";var p=function(){function t(t,e,i,o,n){this.elementRef=t,this.viewContainerRef=e,this.tooltipService=i,this.updateHostClassService=o,this.contentObserver=n,this.isOverflow=!1,this.subscription=null,this.updateHostClassService.initializeElement(this.elementRef)}return Object.defineProperty(t.prototype,"thyContainerClass",{get:function(){return this.containerClass},set:function(t){this.containerClass=t,this.updateContainerClass()},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"thyContent",{set:function(t){this.content=t,this.tooltipService.thyTooltipDirective&&(this.tooltipService.thyTooltipDirective.content=this.content)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"thyPlacement",{set:function(t){this.placement=t,this.tooltipService.thyTooltipDirective&&(this.tooltipService.thyTooltipDirective.placement=this.placement)},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){this.updateContainerClass(),this.tooltipService.attach(this.elementRef,this.viewContainerRef,this.trigger),this.placement&&(this.tooltipService.thyTooltipDirective.placement=this.placement),this.tooltipService.thyTooltipDirective.content=this.content,this.tooltipService.thyTooltipDirective.thyTooltipDisabled=!0},t.prototype.ngAfterContentInit=function(){var t=this;this.applyOverflow(),this.subscription=this.contentObserver.observe(this.elementRef).pipe(s.debounceTime(100)).subscribe((function(e){t.applyOverflow()}))},t.prototype.ngOnDestroy=function(){this.tooltipService.detach(),this.subscription&&this.subscription.unsubscribe()},t.prototype.applyOverflow=function(){var t=this.elementRef.nativeElement;t.clientWidth<t.scrollWidth?this.isOverflow=!0:this.isOverflow=!1,this.tooltipService.thyTooltipDirective.thyTooltipDisabled=!this.isOverflow},t.prototype.updateContainerClass=function(){var t,e=l.isUndefinedOrNull(this.containerClass)?"flexible-text-container":this.containerClass,i=((t={"text-truncate":!0})[e]=""!==e,t);this.updateHostClassService.updateClassByMap(i)},t}();p.decorators=[{type:e.Component,args:[{selector:"thy-flexible-text,[thyFlexibleText]",exportAs:"thyFlexibleText",template:"<ng-content></ng-content>\n",providers:[o.TooltipService,n.UpdateHostClassService]}]}],p.ctorParameters=function(){return[{type:e.ElementRef},{type:e.ViewContainerRef},{type:o.TooltipService},{type:n.UpdateHostClassService},{type:r.ContentObserver}]},p.propDecorators={trigger:[{type:e.Input,args:["thyTooltipTrigger"]}],thyContainerClass:[{type:e.Input,args:["thyContainerClass"]}],thyContent:[{type:e.Input,args:["thyTooltipContent"]}],thyPlacement:[{type:e.Input,args:["thyTooltipPlacement"]}]};var c=function(){};c.decorators=[{type:e.NgModule,args:[{declarations:[p],imports:[i.CommonModule,o.ThyTooltipModule,r.ObserversModule],exports:[p]}]}],t.ThyFlexibleTextComponent=p,t.ThyFlexibleTextModule=c,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-tethys-flexible-text.umd.min.js.map