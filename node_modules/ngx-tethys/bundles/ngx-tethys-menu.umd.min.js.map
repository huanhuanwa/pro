{"version":3,"sources":["../../src/menu/menu.component.ts","../../src/menu/item/menu-item.component.ts","../../src/menu/group/menu-group.component.ts","../../src/menu/item/name/menu-item-name.component.ts","../../src/menu/item/icon/menu-item-icon.component.ts","../../src/menu/item/action/menu-item-action.component.ts","../../src/menu/divider/menu-divider.component.ts","../../src/menu/menu.module.ts"],"names":["ThyMenuComponent","this","isThyMenu","prototype","ngOnInit","Component","args","selector","template","HostBinding","ThyMenuItemComponent","isThyMenuItem","ThyMenuGroupComponent","popover","rightIconClass","iconClass","groupHeaderPaddingLeft","isThyMenuGroup","showIcon","isCollapsed","thyTitle","thyShowAction","thyActionStopPropagation","thyOnActionClick","EventEmitter","Object","defineProperty","value","_actionMenu","collapseGroup","onActionClick","event","stopPropagation","open","origin","currentTarget","insideClosable","placement","emit","animations","trigger","state","style","height","overflow","transition","animate","ThyPopover","ViewChild","static","Input","Output","ThyMenuItemNameComponent","isThyMenuItemName","thyOverflowEllipsis","type","ThyMenuItemIconComponent","elementRef","renderer","isThyMenuItemIcon","setStyle","nativeElement","ElementRef","Renderer2","ThyMenuItemActionComponent","_boundEvent","isThyMenuItemIconMore","thyStopPropagation","bindClickEvent","_this","listen","ThyMenuDividerComponent","isThyMenuDivider","NgModule","declarations","imports","CommonModule","ThyIconModule","ThyPopoverModule","exports"],"mappings":"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","sourcesContent":["import { Component, OnInit, HostBinding, ElementRef } from '@angular/core';\n\n@Component({\n    selector: 'thy-menu,[thy-menu],[thyMenu]',\n    templateUrl: './menu.component.html'\n})\nexport class ThyMenuComponent implements OnInit {\n    @HostBinding('class.thy-menu') isThyMenu = true;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\n\n@Component({\n    selector: 'thy-menu-item,[thy-menu-item],[thyMenuItem]',\n    templateUrl: './menu-item.component.html'\n})\nexport class ThyMenuItemComponent implements OnInit {\n    @HostBinding('class.thy-menu-item') isThyMenuItem = true;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","import { Component, OnInit, HostBinding, Input, Output, EventEmitter, ElementRef, ViewChild, TemplateRef } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { ThyPopover } from 'ngx-tethys/popover';\n\n@Component({\n    selector: 'thy-menu-group, [thy-menu-group],[thyMenuGroup]',\n    templateUrl: './menu-group.component.html',\n    animations: [\n        trigger('detailsContentAnimation', [\n            state(\n                'void',\n                style({\n                    height: '*'\n                })\n            ),\n            state(\n                '1',\n                style({\n                    height: 0,\n                    overflow: 'hidden'\n                })\n            ),\n            state(\n                '0',\n                style({\n                    height: '*'\n                })\n            ),\n            transition('* => *', animate('0ms ease-out'))\n        ])\n    ]\n})\nexport class ThyMenuGroupComponent implements OnInit {\n    public _actionMenu: ComponentType<any> | TemplateRef<any>;\n\n    public rightIconClass = 'more';\n\n    public iconClass = 'folder-bold';\n\n    public groupHeaderPaddingLeft = 0;\n\n    @ViewChild('thyMenuGroup', { static: true }) _thyMenuGroup: ElementRef;\n\n    @HostBinding('class.thy-menu-group') isThyMenuGroup = true;\n\n    @HostBinding('class.has-icon') showIcon = false;\n\n    @HostBinding('class.collapsed') isCollapsed = true;\n\n    @Input() thyTitle = '';\n\n    @Input('thyExpand')\n    set thyExpand(value: boolean) {\n        this.isCollapsed = !!!value;\n    }\n\n    @Input('thyShowIcon')\n    set thyShowIcon(value: boolean) {\n        this.showIcon = value;\n    }\n\n    @Input('thyIcon')\n    set thyIcon(value: string) {\n        this.iconClass = value;\n    }\n\n    @Input('thyActionIcon')\n    set thyActionIcon(value: string) {\n        this.rightIconClass = value;\n    }\n\n    @Input() thyShowAction = false;\n\n    @Input() thyActionStopPropagation = true;\n\n    @Output() thyOnActionClick: EventEmitter<Event> = new EventEmitter<Event>();\n\n    @Input()\n    set thyActionMenu(value: ComponentType<any> | TemplateRef<any>) {\n        this._actionMenu = value;\n    }\n\n    constructor(private popover: ThyPopover) {}\n\n    ngOnInit(): void {}\n\n    collapseGroup(): void {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    onActionClick(event: Event): void {\n        if (this.thyActionStopPropagation) {\n            event.stopPropagation();\n        }\n        if (this._actionMenu) {\n            this.popover.open(this._actionMenu, {\n                origin: event.currentTarget as HTMLElement,\n                insideClosable: true,\n                placement: 'bottom'\n            });\n        } else {\n            this.thyOnActionClick.emit(event);\n        }\n    }\n}\n","import { Component, OnInit, HostBinding, Input } from '@angular/core';\n\n@Component({\n    selector: 'thy-menu-item-name,[thy-menu-item-name],[thyMenuItemName]',\n    templateUrl: './menu-item-name.component.html'\n})\nexport class ThyMenuItemNameComponent implements OnInit {\n    @HostBinding('class.thy-menu-item-name') isThyMenuItemName = true;\n\n    @HostBinding('class.thy-menu-item-name-ellipsis')\n    @Input()\n    thyOverflowEllipsis = true;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","import { Component, OnInit, HostBinding, Input, ElementRef, Renderer2 } from '@angular/core';\n\n@Component({\n    selector: 'thy-menu-item-icon,[thy-menu-item-icon],[thyMenuItemIcon]',\n    templateUrl: './menu-item-icon.component.html'\n})\nexport class ThyMenuItemIconComponent implements OnInit {\n    @HostBinding('class.thy-menu-item-icon') isThyMenuItemIcon = true;\n\n    @Input()\n    set thyColor(value: string) {\n        if (value) {\n            this.renderer.setStyle(this.elementRef.nativeElement, 'color', value);\n        }\n    }\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n    ngOnInit(): void {}\n}\n","import { Component, OnInit, HostBinding, ElementRef, Input, Renderer2, TemplateRef } from '@angular/core';\nimport { ComponentType } from '@angular/cdk/portal';\nimport { ThyPopover } from 'ngx-tethys/popover';\n\n@Component({\n    selector: 'thy-menu-item-action,[thy-menu-item-action],[thyMenuItemAction]',\n    templateUrl: './menu-item-action.component.html'\n})\nexport class ThyMenuItemActionComponent implements OnInit {\n    _boundEvent = false;\n\n    _actionMenu: ComponentType<any> | TemplateRef<any>;\n\n    @HostBinding('class.thy-menu-item-action') isThyMenuItemIconMore = true;\n\n    @Input()\n    set thyActionMenu(value: ComponentType<any> | TemplateRef<any>) {\n        this._actionMenu = value;\n        if (this._actionMenu) {\n            this.bindClickEvent();\n        }\n    }\n\n    @Input() thyStopPropagation = true;\n\n    private bindClickEvent() {\n        if (this._boundEvent) {\n            return;\n        }\n        this._boundEvent = true;\n        this.renderer.listen(this.elementRef.nativeElement, 'click', event => {\n            if (this.thyStopPropagation) {\n                event.stopPropagation();\n            }\n            if (this._actionMenu) {\n                this.popover.open(this._actionMenu, {\n                    origin: event.currentTarget as HTMLElement,\n                    insideClosable: true,\n                    placement: 'bottom'\n                });\n            }\n        });\n    }\n\n    constructor(private popover: ThyPopover, private renderer: Renderer2, private elementRef: ElementRef) {}\n\n    ngOnInit(): void {}\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\n\n@Component({\n    selector: 'thy-menu-divider,[thy-menu-divider],[thyMenuDivider]',\n    templateUrl: './menu-divider.component.html'\n})\nexport class ThyMenuDividerComponent implements OnInit {\n    @HostBinding('class.thy-menu-divider') isThyMenuDivider = true;\n\n    constructor() {}\n\n    ngOnInit(): void {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyMenuComponent } from './menu.component';\nimport { ThyMenuItemComponent } from './item/menu-item.component';\nimport { ThyMenuGroupComponent } from './group/menu-group.component';\nimport { ThyMenuItemNameComponent } from './item/name/menu-item-name.component';\nimport { ThyMenuItemIconComponent } from './item/icon/menu-item-icon.component';\nimport { ThyMenuItemActionComponent } from './item/action/menu-item-action.component';\nimport { ThyMenuDividerComponent } from './divider/menu-divider.component';\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyPopoverModule } from 'ngx-tethys/popover';\n\n@NgModule({\n    declarations: [\n        ThyMenuComponent,\n        ThyMenuGroupComponent,\n        ThyMenuItemComponent,\n        ThyMenuItemNameComponent,\n        ThyMenuItemIconComponent,\n        ThyMenuItemActionComponent,\n        ThyMenuDividerComponent\n    ],\n    imports: [CommonModule, ThyIconModule, ThyPopoverModule],\n    exports: [\n        ThyMenuComponent,\n        ThyMenuGroupComponent,\n        ThyMenuItemComponent,\n        ThyMenuItemNameComponent,\n        ThyMenuItemIconComponent,\n        ThyMenuItemActionComponent,\n        ThyMenuDividerComponent\n    ]\n})\nexport class ThyMenuModule {}\n"]}