(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('ngx-tethys/util'), require('@angular/cdk/drag-drop'), require('ngx-tethys/icon')) :
  typeof define === 'function' && define.amd ? define('ngx-tethys/layout', ['exports', '@angular/core', '@angular/common', 'ngx-tethys/util', '@angular/cdk/drag-drop', 'ngx-tethys/icon'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].layout = {}), global.ng.core, global.ng.common, global['ngx-tethys'].util, global.ng.cdk.dragDrop, global['ngx-tethys'].icon));
}(this, (function (exports, core, common, util, dragDrop, icon) { 'use strict';

  var ThyLayoutComponent = /** @class */ (function () {
      function ThyLayoutComponent() {
          this.thyLayoutClass = true;
          this.hasSidebar = false;
      }
      return ThyLayoutComponent;
  }());
  ThyLayoutComponent.decorators = [
      { type: core.Component, args: [{
                  selector: 'thy-layout',
                  template: "\n    <ng-content></ng-content>\n  "
              },] }
  ];
  ThyLayoutComponent.propDecorators = {
      thyLayoutClass: [{ type: core.HostBinding, args: ['class.thy-layout',] }],
      hasSidebar: [{ type: core.HostBinding, args: ['class.thy-layout--has-sidebar',] }]
  };

  var ThyHeaderComponent = /** @class */ (function () {
      function ThyHeaderComponent() {
          this.thyLayoutHeaderClass = true;
          this._thyHasBorder = false;
          this._thySizeSm = false;
          this.thyIconPrefix = 'wtf';
      }
      Object.defineProperty(ThyHeaderComponent.prototype, "thyHasBorder", {
          set: function (value) {
              this._thyHasBorder = util.coerceBooleanProperty(value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(ThyHeaderComponent.prototype, "thySize", {
          set: function (value) {
              this._thySizeSm = value === 'sm';
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(ThyHeaderComponent.prototype, "thyIcon", {
          set: function (value) {
              if (value) {
                  if (value.includes('wtf')) {
                      this.iconClass = this.thyIconPrefix + " " + value;
                  }
                  else {
                      this.svgIconName = value;
                  }
              }
              else {
                  this.iconClass = null;
                  this.svgIconName = null;
              }
          },
          enumerable: false,
          configurable: true
      });
      ThyHeaderComponent.prototype.ngOnInit = function () { };
      return ThyHeaderComponent;
  }());
  ThyHeaderComponent.decorators = [
      { type: core.Component, args: [{
                  selector: 'thy-header',
                  preserveWhitespaces: false,
                  template: "<div class=\"layout-header-title\">\n  <ng-template [ngTemplateOutlet]=\"titleTemplateRef\"></ng-template>\n  <ng-container *ngIf=\"!titleTemplateRef\">\n    <thy-icon *ngIf=\"svgIconName; else iconFont\" class=\"prefix-icon\" [thyIconName]=\"svgIconName\"></thy-icon>\n    <ng-template #iconFont>\n      <i *ngIf=\"iconClass\" class=\"prefix-icon\" [ngClass]=\"iconClass\"></i>\n    </ng-template>\n    <span class=\"title-name\">{{ thyTitle }}</span></ng-container\n  >\n</div>\n<div class=\"layout-header-content\">\n  <ng-template [ngTemplateOutlet]=\"contentTemplateRef\"></ng-template>\n</div>\n<div class=\"layout-header-operation\">\n  <ng-template [ngTemplateOutlet]=\"operationTemplateRef\"></ng-template>\n</div>\n"
              },] }
  ];
  ThyHeaderComponent.ctorParameters = function () { return []; };
  ThyHeaderComponent.propDecorators = {
      thyLayoutHeaderClass: [{ type: core.HostBinding, args: ['class.thy-layout-header',] }],
      _thyHasBorder: [{ type: core.HostBinding, args: ['class.header-has-border',] }],
      _thySizeSm: [{ type: core.HostBinding, args: ['class.thy-layout-header-sm',] }],
      thyHasBorder: [{ type: core.Input, args: ['thyHasBorder',] }],
      thySize: [{ type: core.Input, args: ['thySize',] }],
      thyTitle: [{ type: core.Input }],
      thyIconPrefix: [{ type: core.Input }],
      thyIcon: [{ type: core.Input, args: ['thyIcon',] }],
      titleTemplateRef: [{ type: core.ContentChild, args: ['headerTitle',] }],
      contentTemplateRef: [{ type: core.ContentChild, args: ['headerContent',] }],
      operationTemplateRef: [{ type: core.ContentChild, args: ['headerOperation',] }]
  };

  var ThyContentComponent = /** @class */ (function () {
      function ThyContentComponent() {
          this._isLayoutContent = true;
      }
      return ThyContentComponent;
  }());
  ThyContentComponent.decorators = [
      { type: core.Component, args: [{
                  selector: 'thy-content',
                  preserveWhitespaces: false,
                  template: "\n    <ng-content></ng-content>\n    "
              },] }
  ];
  ThyContentComponent.propDecorators = {
      _isLayoutContent: [{ type: core.HostBinding, args: ['class.thy-layout-content',] }]
  };

  var LG_WIDTH = 300;
  var ThySidebarComponent = /** @class */ (function () {
      function ThySidebarComponent(thyLayoutComponent, renderer, elementRef, ngZone) {
          this.thyLayoutComponent = thyLayoutComponent;
          this.renderer = renderer;
          this.elementRef = elementRef;
          this.ngZone = ngZone;
          this.thyLayoutSidebarClass = true;
          this.thyLayoutSidebarClearBorderRightClass = false;
          this.sidebarIsolated = false;
      }
      Object.defineProperty(ThySidebarComponent.prototype, "thyWidth", {
          set: function (value) {
              if (value === 'lg') {
                  value = LG_WIDTH;
              }
              this.thyLayoutSidebarWidth = value;
              this.widthPassive = value;
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(ThySidebarComponent.prototype, "thyHasBorderRight", {
          set: function (value) {
              this.thyLayoutSidebarClearBorderRightClass = !util.coerceBooleanProperty(value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(ThySidebarComponent.prototype, "thyIsolated", {
          set: function (value) {
              this.sidebarIsolated = util.coerceBooleanProperty(value);
          },
          enumerable: false,
          configurable: true
      });
      Object.defineProperty(ThySidebarComponent.prototype, "thyIsDraggableWidth", {
          set: function (value) {
              if (util.coerceBooleanProperty(value)) {
                  this.thyLayoutSidebarPointerEvents = 'all';
              }
          },
          enumerable: false,
          configurable: true
      });
      ThySidebarComponent.prototype.ngOnInit = function () {
          var _this = this;
          if (this.thyLayoutComponent) {
              this.thyLayoutComponent.hasSidebar = true;
          }
          this.ngZone.runOutsideAngular(function () {
              setTimeout(function () {
                  _this.widthPassive = _this.elementRef.nativeElement.clientWidth;
                  _this.renderer.setStyle(_this.dragRef.nativeElement, 'left', _this.numberConvertToFloor(_this.widthPassive) + 'px');
              }, 0);
          });
      };
      ThySidebarComponent.prototype.dragStartedHandler = function () {
          this.dragStartedX = this.dragRef.nativeElement.getBoundingClientRect().x;
      };
      ThySidebarComponent.prototype.dragEndedHandler = function () {
          var x = this.dragRef.nativeElement.getBoundingClientRect().x;
          this.widthPassive = this.numberConvertToFloor(this.widthPassive * 1 + (x - this.dragStartedX));
          this.thyLayoutSidebarWidth = this.widthPassive;
      };
      ThySidebarComponent.prototype.numberConvertToFloor = function (value) {
          var result = Math.floor(value * 1);
          if (result < 1) {
              result = 1;
          }
          return result;
      };
      return ThySidebarComponent;
  }());
  ThySidebarComponent.decorators = [
      { type: core.Component, args: [{
                  selector: 'thy-sidebar',
                  preserveWhitespaces: false,
                  template: "\n        <ng-content></ng-content>\n        <div\n            class=\"sidebar-drag\"\n            #dragRef\n            cdkDrag\n            cdkDragLockAxis=\"x\"\n            cdkDragBoundary=\".thy-layout\"\n            (cdkDragStarted)=\"dragStartedHandler()\"\n            (cdkDragEnded)=\"dragEndedHandler()\"\n        ></div>\n    "
              },] }
  ];
  ThySidebarComponent.ctorParameters = function () { return [
      { type: ThyLayoutComponent, decorators: [{ type: core.Optional }, { type: core.Host }] },
      { type: core.Renderer2 },
      { type: core.ElementRef },
      { type: core.NgZone }
  ]; };
  ThySidebarComponent.propDecorators = {
      thyLayoutSidebarClass: [{ type: core.HostBinding, args: ['class.thy-layout-sidebar',] }],
      thyLayoutSidebarClearBorderRightClass: [{ type: core.HostBinding, args: ['class.thy-layout-sidebar--clear-border-right',] }],
      thyLayoutSidebarWidth: [{ type: core.HostBinding, args: ['style.width.px',] }],
      thyLayoutSidebarPointerEvents: [{ type: core.HostBinding, args: ['style.pointer-events',] }],
      sidebarIsolated: [{ type: core.HostBinding, args: ['class.thy-layout-sidebar-isolated',] }],
      thyWidth: [{ type: core.Input, args: ['thyWidth',] }],
      thyHasBorderRight: [{ type: core.Input, args: ['thyHasBorderRight',] }],
      thyIsolated: [{ type: core.Input, args: ['thyIsolated',] }],
      thyIsDraggableWidth: [{ type: core.Input, args: ['thyIsDraggableWidth',] }],
      dragRef: [{ type: core.ViewChild, args: ['dragRef', { static: true },] }]
  };

  var ThyContentSectionComponent = /** @class */ (function () {
      function ThyContentSectionComponent() {
          this.thyLayoutContentSectionClass = true;
      }
      return ThyContentSectionComponent;
  }());
  ThyContentSectionComponent.decorators = [
      { type: core.Component, args: [{
                  selector: 'thy-content-section',
                  preserveWhitespaces: false,
                  template: "\n    <ng-content></ng-content>\n    "
              },] }
  ];
  ThyContentSectionComponent.propDecorators = {
      thyLayoutContentSectionClass: [{ type: core.HostBinding, args: ['class.thy-layout-content-section',] }]
  };

  var ThyContentMainComponent = /** @class */ (function () {
      function ThyContentMainComponent() {
          this.thyLayoutContentClass = true;
      }
      return ThyContentMainComponent;
  }());
  ThyContentMainComponent.decorators = [
      { type: core.Component, args: [{
                  selector: 'thy-content-main',
                  preserveWhitespaces: false,
                  template: "\n    <ng-content></ng-content>\n    "
              },] }
  ];
  ThyContentMainComponent.propDecorators = {
      thyLayoutContentClass: [{ type: core.HostBinding, args: ['class.thy-layout-content-main',] }]
  };

  var ThyLayoutModule = /** @class */ (function () {
      function ThyLayoutModule() {
      }
      return ThyLayoutModule;
  }());
  ThyLayoutModule.decorators = [
      { type: core.NgModule, args: [{
                  declarations: [
                      ThyLayoutComponent,
                      ThyHeaderComponent,
                      ThyContentComponent,
                      ThySidebarComponent,
                      ThyContentSectionComponent,
                      ThyContentMainComponent
                  ],
                  imports: [common.CommonModule, dragDrop.DragDropModule, icon.ThyIconModule],
                  exports: [
                      ThyLayoutComponent,
                      ThyHeaderComponent,
                      ThyContentComponent,
                      ThySidebarComponent,
                      ThyContentSectionComponent,
                      ThyContentMainComponent
                  ]
              },] }
  ];

  /**
   * Generated bundle index. Do not edit.
   */

  exports.ThyContentComponent = ThyContentComponent;
  exports.ThyContentMainComponent = ThyContentMainComponent;
  exports.ThyContentSectionComponent = ThyContentSectionComponent;
  exports.ThyHeaderComponent = ThyHeaderComponent;
  exports.ThyLayoutComponent = ThyLayoutComponent;
  exports.ThyLayoutModule = ThyLayoutModule;
  exports.ThySidebarComponent = ThySidebarComponent;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-tethys-layout.umd.js.map
