(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),exports, require('@angular/core'), require('@angular/cdk/coercion'), require('rxjs'), require('rxjs/operators'), require('ngx-tethys/util'), require('@angular/common'), require('ngx-tethys/core')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/drag-drop', ['@angular/core','exports', '@angular/core', '@angular/cdk/coercion', 'rxjs', 'rxjs/operators', 'ngx-tethys/util', '@angular/common', 'ngx-tethys/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,(global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys']['drag-drop'] = {}), global.ng.core, global.ng.cdk.coercion, global.rxjs, global.rxjs.operators, global['ngx-tethys'].util, global.ng.common, global['ngx-tethys'].core));
}(this, (function (Éµngcc0,exports, i0, coercion, rxjs, operators, util, common, core) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    exports.ThyDropPosition = void 0;
    (function (ThyDropPosition) {
        ThyDropPosition["in"] = "in";
        ThyDropPosition["before"] = "before";
        ThyDropPosition["after"] = "after";
    })(exports.ThyDropPosition || (exports.ThyDropPosition = {}));

    var _a;
    var dropPositionClass = (_a = {},
        _a[exports.ThyDropPosition.in] = 'thy-drop-position-in',
        _a[exports.ThyDropPosition.before] = 'thy-drop-position-before',
        _a[exports.ThyDropPosition.after] = 'thy-drop-position-after',
        _a);
    var DragRef = /** @class */ (function () {
        function DragRef(element, drag, container, dragDropService, document, ngZone) {
            this.drag = drag;
            this.container = container;
            this.dragDropService = dragDropService;
            this.document = document;
            this.ngZone = ngZone;
            this.ngUnsubscribe$ = new rxjs.Subject();
            this.started = new rxjs.Subject();
            this.ended = new rxjs.Subject();
            this.overed = new rxjs.Subject();
            this.dropped = new rxjs.Subject();
            this.entered = new rxjs.Subject();
            this.leaved = new rxjs.Subject();
            this._disabled = false;
            this.withRootElement(element);
        }
        Object.defineProperty(DragRef.prototype, "disabled", {
            get: function () {
                return (this.container && this.container.disabled) || this._disabled;
            },
            set: function (value) {
                this._disabled = value;
            },
            enumerable: false,
            configurable: true
        });
        DragRef.prototype.withRootElement = function (rootElement) {
            var element = coercion.coerceElement(rootElement);
            this.rootElement = element;
            this.registerDragDropEvents();
            return this;
        };
        DragRef.prototype.withContentElement = function (contentElement) {
            this.contentElement = coercion.coerceElement(contentElement);
            return this;
        };
        DragRef.prototype.withHandles = function (handleOrHandles) {
            this.handles = util.coerceArray(handleOrHandles);
            return this;
        };
        DragRef.prototype.registerDragDropEvents = function () {
            var _this = this;
            var events = {
                dragstart: this.dragStart,
                dragover: this.dragOver,
                dragend: this.dragEnd,
                drop: this.dragDrop,
                dragleave: this.dragLeave,
                dragenter: function (event) {
                    _this.entered.next(event);
                },
                mouseover: function (event) {
                    _this.target = event.target;
                }
            };
            this.ngZone.runOutsideAngular(function () {
                for (var name in events) {
                    if (events.hasOwnProperty(name)) {
                        rxjs.fromEvent(_this.rootElement, name)
                            .pipe(operators.takeUntil(_this.ngUnsubscribe$))
                            .subscribe(events[name].bind(_this));
                    }
                }
            });
        };
        DragRef.prototype.dragStart = function (event) {
            var _this = this;
            event.stopPropagation();
            var dragStartEvent = {
                event: event,
                item: this.drag.data,
                containerItems: this.container.data,
                currentIndex: this.container.data.indexOf(this.drag.data)
            };
            if (this.disabled || !this.isTriggerHandle() || (this.container.beforeStart && !this.container.beforeStart(dragStartEvent))) {
                event.preventDefault();
                return false;
            }
            this.dragDropService.previousDrag = this.drag;
            this.ngZone.run(function () {
                _this.started.next(dragStartEvent);
            });
        };
        DragRef.prototype.isTriggerHandle = function () {
            var _this = this;
            if (this.handles && this.handles.length > 0) {
                var targetHandle = this.handles.find(function (handle) {
                    return (!handle.disabled && (handle.element.nativeElement === _this.target || handle.element.nativeElement.contains(_this.target)));
                });
                return !!targetHandle;
            }
            else {
                return true;
            }
        };
        DragRef.prototype.getPreviousEventData = function () {
            var previousItem = this.dragDropService.previousDrag.data;
            var previousContainerItems = this.dragDropService.previousDrag.container.data;
            return {
                previousItem: previousItem,
                previousContainerItems: this.dragDropService.previousDrag.container.data,
                previousIndex: previousContainerItems.indexOf(previousItem)
            };
        };
        DragRef.prototype.isContinueDragOver = function (event, container) {
            if (event.item === event.previousItem && event.position === exports.ThyDropPosition.in) {
                return false;
            }
            if (container && container.beforeOver) {
                return container.beforeOver(event);
            }
            return true;
        };
        DragRef.prototype.dragOver = function (event) {
            event.stopPropagation();
            event.preventDefault();
            var dropPosition = this.calcDropPosition(event);
            var dragOverEvent = Object.assign({ event: event, item: this.drag.data, containerItems: this.drag.container.data, currentIndex: this.container.data.indexOf(this.drag.data), position: dropPosition }, this.getPreviousEventData());
            if (this.isContinueDragOver(dragOverEvent, this.container)) {
                this.dragOverHandler(dropPosition);
                this.overed.next(dragOverEvent);
            }
        };
        DragRef.prototype.dragOverHandler = function (position) {
            var element = this.contentElement || this.rootElement;
            if (this.dragDropService.dropPosition !== position) {
                this.clearDragPositionClass();
            }
            element.classList.add(dropPositionClass[position]);
            this.dragDropService.dropPosition = position;
        };
        DragRef.prototype.dragDrop = function (event) {
            var _this = this;
            event.stopPropagation();
            this.clearDragPositionClass();
            var dragDropEvent = Object.assign({ event: event, item: this.drag.data, containerItems: this.drag.container.data, currentIndex: this.container.data.indexOf(this.drag.data), position: this.calcDropPosition(event) }, this.getPreviousEventData());
            if (this.dragDropService.previousDrag === this.drag || (this.container.beforeDrop && !this.container.beforeDrop(dragDropEvent))) {
                event.preventDefault();
                return;
            }
            this.ngZone.run(function () {
                _this.dropped.next(dragDropEvent);
            });
        };
        DragRef.prototype.dragEnd = function (event) {
            var _this = this;
            this.ngZone.run(function () {
                _this.ended.next({
                    event: event,
                    item: _this.drag.data,
                    containerItems: _this.container.data
                });
            });
        };
        DragRef.prototype.dragLeave = function (event) {
            event.stopPropagation();
            this.clearDragPositionClass();
            this.leaved.next(event);
        };
        DragRef.prototype.clearDragPositionClass = function () {
            var element = this.contentElement || this.rootElement;
            for (var key in dropPositionClass) {
                if (dropPositionClass[key]) {
                    element.classList.remove(dropPositionClass[key]);
                }
            }
        };
        DragRef.prototype.calcDropPosition = function (event) {
            var sideRange = 0.25;
            var minGap = 2;
            var clientY = event.clientY;
            var _a = event.srcElement
                ? event.srcElement.getBoundingClientRect()
                : event.target.getBoundingClientRect(), top = _a.top, bottom = _a.bottom, height = _a.height;
            var des = Math.max(height * sideRange, minGap);
            if (clientY <= top + des) {
                return exports.ThyDropPosition.before;
            }
            else if (clientY >= bottom - des) {
                return exports.ThyDropPosition.after;
            }
            return exports.ThyDropPosition.in;
        };
        DragRef.prototype.dispose = function () {
            this.ngUnsubscribe$.complete();
        };
        return DragRef;
    }());

    var ThyDragDropService = /** @class */ (function () {
        function ThyDragDropService() {
        }
ThyDragDropService.Éµfac = function ThyDragDropService_Factory(t) { return new (t || ThyDragDropService)(); };
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(ThyDragDropService, [{
        type: i0.Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, null); })();
        return ThyDragDropService;
    }());
    ThyDragDropService.Éµprov = i0__namespace.ÉµÉµdefineInjectable({ factory: function ThyDragDropService_Factory() { return new ThyDragDropService(); }, token: ThyDragDropService, providedIn: "root" });
    ThyDragDropService.ctorParameters = function () { return []; };

    /**
     * Injection token used to provide the container directive to drag.
     */
    var THY_DROP_CONTAINER_DIRECTIVE = new i0.InjectionToken('THY_DROP_CONTAINER_DIRECTIVE');

    var _MixinBase$1 = core.mixinUnsubscribe(core.MixinBase);
    var ThyDragDirective = /** @class */ (function (_super) {
        __extends(ThyDragDirective, _super);
        function ThyDragDirective(document, container, ngZone, elementRef, service) {
            var _this = _super.call(this) || this;
            _this.container = container;
            _this.elementRef = elementRef;
            _this.isDraggable = true;
            _this._disabled = false;
            _this.dragRef = new DragRef(elementRef, _this, container, service, document, ngZone);
            return _this;
        }
        Object.defineProperty(ThyDragDirective.prototype, "dragData", {
            set: function (data) {
                this.data = data;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyDragDirective.prototype, "disabled", {
            get: function () {
                return this._disabled;
            },
            set: function (isDisabled) {
                this._disabled = isDisabled;
                if (isDisabled) {
                    this.isDraggable = false;
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyDragDirective.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
            this.dragRef.dispose();
        };
ThyDragDirective.Éµfac = function ThyDragDirective_Factory(t) { return new (t || ThyDragDirective)(Éµngcc0.ÉµÉµdirectiveInject(common.DOCUMENT), Éµngcc0.ÉµÉµdirectiveInject(THY_DROP_CONTAINER_DIRECTIVE, 8), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone), Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(ThyDragDropService)); };
ThyDragDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({ type: ThyDragDirective, selectors: [["thy-drag"], ["", "thyDrag", ""]], hostVars: 1, hostBindings: function ThyDragDirective_HostBindings(rf, ctx) { if (rf & 2) {
        Éµngcc0.ÉµÉµattribute("draggable", ctx.isDraggable);
    } }, inputs: { dragData: ["thyDrag", "dragData"], disabled: ["thyDragDisabled", "disabled"], data: ["thyDragData", "data"] }, features: [Éµngcc0.ÉµÉµInheritDefinitionFeature] });
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(ThyDragDirective, [{
        type: i0.Directive,
        args: [{ selector: 'thy-drag,[thyDrag]' }]
    }], function () { return [{ type: undefined, decorators: [{
                type: i0.Inject,
                args: [common.DOCUMENT]
            }] }, { type: undefined, decorators: [{
                type: i0.Optional
            }, {
                type: i0.Inject,
                args: [THY_DROP_CONTAINER_DIRECTIVE]
            }] }, { type: Éµngcc0.NgZone }, { type: Éµngcc0.ElementRef }, { type: ThyDragDropService }]; }, { dragData: [{
            type: i0.Input,
            args: ['thyDrag']
        }], disabled: [{
            type: i0.Input,
            args: ['thyDragDisabled']
        }], data: [{
            type: i0.Input,
            args: ['thyDragData']
        }], isDraggable: [{
            type: i0.HostBinding,
            args: ['attr.draggable']
        }] }); })();
        return ThyDragDirective;
    }(_MixinBase$1));
    ThyDragDirective.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [common.DOCUMENT,] }] },
        { type: undefined, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [THY_DROP_CONTAINER_DIRECTIVE,] }] },
        { type: i0.NgZone },
        { type: i0.ElementRef },
        { type: ThyDragDropService }
    ]; };
    ThyDragDirective.propDecorators = {
        dragData: [{ type: i0.Input, args: ['thyDrag',] }],
        data: [{ type: i0.Input, args: ['thyDragData',] }],
        isDraggable: [{ type: i0.HostBinding, args: ['attr.draggable',] }],
        disabled: [{ type: i0.Input, args: ['thyDragDisabled',] }]
    };

    var ThyDragHandleDirective = /** @class */ (function () {
        function ThyDragHandleDirective(element, drag) {
            this.element = element;
            this._disabled = false;
            if (drag) {
                drag.dragRef.withHandles(this);
            }
        }
        Object.defineProperty(ThyDragHandleDirective.prototype, "disabled", {
            get: function () {
                return this._disabled;
            },
            set: function (value) {
                this._disabled = coercion.coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
ThyDragHandleDirective.Éµfac = function ThyDragHandleDirective_Factory(t) { return new (t || ThyDragHandleDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(ThyDragDirective, 8)); };
ThyDragHandleDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({ type: ThyDragHandleDirective, selectors: [["thy-drag-handle"], ["", "thyDragHandle", ""]], inputs: { disabled: ["thyDisabled", "disabled"] } });
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(ThyDragHandleDirective, [{
        type: i0.Directive,
        args: [{
                selector: 'thy-drag-handle,[thyDragHandle]'
            }]
    }], function () { return [{ type: Éµngcc0.ElementRef }, { type: ThyDragDirective, decorators: [{
                type: i0.Optional
            }] }]; }, { disabled: [{
            type: i0.Input,
            args: ['thyDisabled']
        }] }); })();
        return ThyDragHandleDirective;
    }());
    ThyDragHandleDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: ThyDragDirective, decorators: [{ type: i0.Optional }] }
    ]; };
    ThyDragHandleDirective.propDecorators = {
        disabled: [{ type: i0.Input, args: ['thyDisabled',] }]
    };

    var ThyDragContentDirective = /** @class */ (function () {
        function ThyDragContentDirective(element, drag) {
            this.element = element;
            this.contentClass = true;
            if (drag) {
                drag.dragRef.withContentElement(this.element);
            }
        }
ThyDragContentDirective.Éµfac = function ThyDragContentDirective_Factory(t) { return new (t || ThyDragContentDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.ElementRef), Éµngcc0.ÉµÉµdirectiveInject(ThyDragDirective, 8)); };
ThyDragContentDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({ type: ThyDragContentDirective, selectors: [["thy-drag-content"], ["", "thyDragContent", ""]], hostVars: 2, hostBindings: function ThyDragContentDirective_HostBindings(rf, ctx) { if (rf & 2) {
        Éµngcc0.ÉµÉµclassProp("thy-drag-content", ctx.contentClass);
    } } });
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(ThyDragContentDirective, [{
        type: i0.Directive,
        args: [{
                selector: 'thy-drag-content,[thyDragContent]'
            }]
    }], function () { return [{ type: Éµngcc0.ElementRef }, { type: ThyDragDirective, decorators: [{
                type: i0.Optional
            }] }]; }, { contentClass: [{
            type: i0.HostBinding,
            args: ['class.thy-drag-content']
        }] }); })();
        return ThyDragContentDirective;
    }());
    ThyDragContentDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: ThyDragDirective, decorators: [{ type: i0.Optional }] }
    ]; };
    ThyDragContentDirective.propDecorators = {
        contentClass: [{ type: i0.HostBinding, args: ['class.thy-drag-content',] }]
    };

    var _MixinBase = core.mixinUnsubscribe(core.MixinBase);
    var ThyDropContainerDirective = /** @class */ (function (_super) {
        __extends(ThyDropContainerDirective, _super);
        function ThyDropContainerDirective(ngZone) {
            var _this = _super.call(this) || this;
            _this.ngZone = ngZone;
            _this.started = new i0.EventEmitter();
            _this.ended = new i0.EventEmitter();
            _this.overed = new i0.EventEmitter();
            _this.dropped = new i0.EventEmitter();
            return _this;
        }
        Object.defineProperty(ThyDropContainerDirective.prototype, "dragContainer", {
            set: function (data) {
                this.data = data;
            },
            enumerable: false,
            configurable: true
        });
        ThyDropContainerDirective.prototype.ngOnInit = function () { };
        ThyDropContainerDirective.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.draggables.changes.pipe(operators.startWith(null), operators.takeUntil(this.ngUnsubscribe$)).subscribe(function () {
                _this.draggableChanges();
            });
        };
        ThyDropContainerDirective.prototype.draggableChanges = function () {
            var _this = this;
            this.resetDraggableChanges(function (item) { return item.dragRef.started; }).subscribe(function (event) {
                _this.started.emit(event);
            });
            this.resetDraggableChanges(function (item) { return item.dragRef.ended; }).subscribe(function (event) {
                _this.ended.emit(event);
            });
            this.resetDraggableChanges(function (item) { return item.dragRef.overed; }).subscribe(function (event) {
                _this.overed.emit(event);
            });
            this.resetDraggableChanges(function (item) { return item.dragRef.dropped; }).subscribe(function (event) {
                _this.dropped.emit(event);
            });
        };
        ThyDropContainerDirective.prototype.resetDraggableChanges = function (fn) {
            var _this = this;
            return rxjs.defer(function () {
                if (_this.draggables) {
                    return rxjs.merge.apply(void 0, __spread(_this.draggables.map(fn)));
                }
                return _this.ngZone.onStable.asObservable().pipe(operators.take(1), operators.switchMap(function () { return _this.resetDraggableChanges.bind(_this, fn); }));
            }).pipe(operators.takeUntil(rxjs.merge(this.ngUnsubscribe$, this.draggables.changes)));
        };
ThyDropContainerDirective.Éµfac = function ThyDropContainerDirective_Factory(t) { return new (t || ThyDropContainerDirective)(Éµngcc0.ÉµÉµdirectiveInject(Éµngcc0.NgZone)); };
ThyDropContainerDirective.Éµdir = Éµngcc0.ÉµÉµdefineDirective({ type: ThyDropContainerDirective, selectors: [["thy-drop-container"], ["", "thyDropContainer", ""]], contentQueries: function ThyDropContainerDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        Éµngcc0.ÉµÉµcontentQuery(dirIndex, ThyDragDirective, false);
    } if (rf & 2) {
        var _t;
        Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx.draggables = _t);
    } }, inputs: { dragContainer: ["thyDropContainer", "dragContainer"], data: ["thyDropContainerData", "data"], disabled: ["thyDropContainerDisabled", "disabled"], beforeStart: ["thyBeforeDragStart", "beforeStart"], beforeOver: ["thyBeforeDragOver", "beforeOver"], beforeDrop: ["thyBeforeDragDrop", "beforeDrop"] }, outputs: { started: "thyDragStarted", ended: "thyDragEnded", overed: "thyDragOvered", dropped: "thyDragDropped" }, features: [Éµngcc0.ÉµÉµProvidersFeature([
            {
                provide: THY_DROP_CONTAINER_DIRECTIVE,
                useExisting: ThyDropContainerDirective
            }
        ]), Éµngcc0.ÉµÉµInheritDefinitionFeature] });
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(ThyDropContainerDirective, [{
        type: i0.Directive,
        args: [{
                selector: 'thy-drop-container,[thyDropContainer]',
                providers: [
                    {
                        provide: THY_DROP_CONTAINER_DIRECTIVE,
                        useExisting: ThyDropContainerDirective
                    }
                ]
            }]
    }], function () { return [{ type: Éµngcc0.NgZone }]; }, { dragContainer: [{
            type: i0.Input,
            args: ['thyDropContainer']
        }], data: [{
            type: i0.Input,
            args: ['thyDropContainerData']
        }], disabled: [{
            type: i0.Input,
            args: ['thyDropContainerDisabled']
        }], beforeStart: [{
            type: i0.Input,
            args: ['thyBeforeDragStart']
        }], beforeOver: [{
            type: i0.Input,
            args: ['thyBeforeDragOver']
        }], beforeDrop: [{
            type: i0.Input,
            args: ['thyBeforeDragDrop']
        }], started: [{
            type: i0.Output,
            args: ['thyDragStarted']
        }], ended: [{
            type: i0.Output,
            args: ['thyDragEnded']
        }], overed: [{
            type: i0.Output,
            args: ['thyDragOvered']
        }], dropped: [{
            type: i0.Output,
            args: ['thyDragDropped']
        }], draggables: [{
            type: i0.ContentChildren,
            args: [ThyDragDirective, {
                    descendants: false
                }]
        }] }); })();
        return ThyDropContainerDirective;
    }(_MixinBase));
    ThyDropContainerDirective.ctorParameters = function () { return [
        { type: i0.NgZone }
    ]; };
    ThyDropContainerDirective.propDecorators = {
        dragContainer: [{ type: i0.Input, args: ['thyDropContainer',] }],
        data: [{ type: i0.Input, args: ['thyDropContainerData',] }],
        disabled: [{ type: i0.Input, args: ['thyDropContainerDisabled',] }],
        beforeStart: [{ type: i0.Input, args: ['thyBeforeDragStart',] }],
        beforeOver: [{ type: i0.Input, args: ['thyBeforeDragOver',] }],
        beforeDrop: [{ type: i0.Input, args: ['thyBeforeDragDrop',] }],
        started: [{ type: i0.Output, args: ['thyDragStarted',] }],
        ended: [{ type: i0.Output, args: ['thyDragEnded',] }],
        overed: [{ type: i0.Output, args: ['thyDragOvered',] }],
        dropped: [{ type: i0.Output, args: ['thyDragDropped',] }],
        draggables: [{ type: i0.ContentChildren, args: [ThyDragDirective, {
                        descendants: false
                    },] }]
    };

    var ThyDragDropModule = /** @class */ (function () {
        function ThyDragDropModule() {
        }
ThyDragDropModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({ type: ThyDragDropModule });
ThyDragDropModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({ factory: function ThyDragDropModule_Factory(t) { return new (t || ThyDragDropModule)(); }, providers: [], imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(ThyDragDropModule, { declarations: [ThyDropContainerDirective, ThyDragDirective, ThyDragHandleDirective, ThyDragContentDirective], exports: [ThyDropContainerDirective, ThyDragDirective, ThyDragHandleDirective, ThyDragContentDirective] }); })();
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(ThyDragDropModule, [{
        type: i0.NgModule,
        args: [{
                imports: [],
                exports: [ThyDropContainerDirective, ThyDragDirective, ThyDragHandleDirective, ThyDragContentDirective],
                declarations: [ThyDropContainerDirective, ThyDragDirective, ThyDragHandleDirective, ThyDragContentDirective],
                providers: []
            }]
    }], function () { return []; }, null); })();
        return ThyDragDropModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.DragRef = DragRef;
    exports.THY_DROP_CONTAINER_DIRECTIVE = THY_DROP_CONTAINER_DIRECTIVE;
    exports.ThyDragContentDirective = ThyDragContentDirective;
    exports.ThyDragDirective = ThyDragDirective;
    exports.ThyDragDropModule = ThyDragDropModule;
    exports.ThyDragDropService = ThyDragDropService;
    exports.ThyDragHandleDirective = ThyDragHandleDirective;
    exports.ThyDropContainerDirective = ThyDropContainerDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-tethys-drag-drop.umd.js.map