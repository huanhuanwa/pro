!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/core"),require("ngx-tethys/tooltip"),require("ngx-tethys/core")):"function"==typeof define&&define.amd?define("ngx-tethys/progress",["exports","@angular/common","@angular/core","ngx-tethys/tooltip","ngx-tethys/core"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self)["ngx-tethys"]=e["ngx-tethys"]||{},e["ngx-tethys"].progress={}),e.ng.common,e.ng.core,e["ngx-tethys"].tooltip,e["ngx-tethys"].core)}(this,(function(e,t,r,n,o){"use strict";var s=new r.InjectionToken("THY_PROGRESS_COMPONENT"),i=function(){function e(e,t,r){this.updateHostClassService=e,this.progress=r,this.isProgressBar=!0,this.percent=0,this.color="",e.initializeElement(t.nativeElement)}return Object.defineProperty(e.prototype,"thyType",{set:function(e){this.updateHostClassService.updateClass(e?["progress-bar-"+e,"bg-"+e]:[])},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyValue",{set:function(e){(e||0===e)&&(this.value=e,this.recalculatePercentage())},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyColor",{set:function(e){this.color=e||""},enumerable:!1,configurable:!0}),e.prototype.recalculatePercentage=function(){this.percent=+(this.value/this.progress.max*100).toFixed(2)},e}();i.decorators=[{type:r.Component,args:[{selector:"thy-progress-bar",template:"<ng-content></ng-content>\n",encapsulation:r.ViewEncapsulation.None,providers:[o.UpdateHostClassService]}]}],i.ctorParameters=function(){return[{type:o.UpdateHostClassService},{type:r.ElementRef},{type:void 0,decorators:[{type:r.Inject,args:[s]}]}]},i.propDecorators={isProgressBar:[{type:r.HostBinding,args:["class.progress-bar"]}],percent:[{type:r.HostBinding,args:["style.width.%"]}],color:[{type:r.HostBinding,args:["style.background-color"]}],thyTips:[{type:r.Input}],thyType:[{type:r.Input}],thyValue:[{type:r.Input}],thyColor:[{type:r.Input}]};var a=function(){function e(e,t){this.updateHostClassService=e,this.bars=[],this.max=100,this.isStacked=!1,this.isProgress=!0,this.updateHostClassService.initializeElement(t)}return Object.defineProperty(e.prototype,"barsQueryList",{set:function(e){this.bars=e.toArray()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyValue",{set:function(e){this.isStacked=Array.isArray(e),this.value=e,this.isStacked&&(this.thyMax=e.reduce((function(e,t){return e+t.value}),0))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thySize",{set:function(e){this.updateHostClassService.updateClass(e?["progress-"+e]:[])},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyMax",{set:function(e){this.max=e,this.bars.forEach((function(e){e.recalculatePercentage()}))},enumerable:!1,configurable:!0}),e}();a.decorators=[{type:r.Component,args:[{selector:"thy-progress",template:'<ng-container *ngIf="isStacked; else general">\n  <thy-progress-bar\n    *ngFor="let item of value"\n    [thyType]="item.type"\n    [ngClass]="{ \'cursor-pointer\': item.tips || thyTips }"\n    [thyTooltip]="item.tips || thyTips"\n    [thyTooltipTemplateContext]="item"\n    [thyTooltipDisabled]="!thyTips && !item.tips"\n    [thyColor]="item.color"\n    [thyValue]="item.value"\n    >{{ item.label }}\n  </thy-progress-bar>\n</ng-container>\n\n<ng-template #general>\n  <thy-progress-bar\n    *ngIf="value"\n    [thyType]="thyType"\n    [ngClass]="{ \'cursor-pointer\': thyTips }"\n    [thyTooltip]="thyTips"\n    [thyTooltipTemplateContext]="value"\n    [thyTooltipDisabled]="!thyTips"\n    [thyValue]="value"\n  >\n    <ng-content></ng-content>\n  </thy-progress-bar>\n</ng-template>\n',changeDetection:r.ChangeDetectionStrategy.OnPush,encapsulation:r.ViewEncapsulation.None,providers:[o.UpdateHostClassService,{provide:s,useExisting:a}]}]}],a.ctorParameters=function(){return[{type:o.UpdateHostClassService},{type:r.ElementRef}]},a.propDecorators={max:[{type:r.HostBinding,args:["attr.max"]}],isStacked:[{type:r.HostBinding,args:["class.progress-stacked"]}],isProgress:[{type:r.HostBinding,args:["class.progress"]}],barsQueryList:[{type:r.ViewChildren,args:[i]}],thyType:[{type:r.Input}],thyTips:[{type:r.Input}],thyValue:[{type:r.Input}],thySize:[{type:r.Input}],thyMax:[{type:r.Input}]};var p=function(){};p.decorators=[{type:r.NgModule,args:[{declarations:[a,i],imports:[t.CommonModule,n.ThyTooltipModule],exports:[a]}]}],e.THY_PROGRESS_COMPONENT=s,e.ThyProgressBarComponent=i,e.ThyProgressComponent=a,e.ThyProgressModule=p,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-tethys-progress.umd.min.js.map