{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../src/tooltip/interface.ts","../../src/tooltip/tooltip-animations.ts","../../src/tooltip/tooltip.component.ts","../../src/tooltip/tooltip.config.ts","../../src/tooltip/tooltip.directive.ts","../../src/tooltip/tooltip.module.ts","../../src/tooltip/tooltip.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","create","DEFAULT_TOOLTIP_OPTIONS","showDelay","hideDelay","touchendHideDelay","CUBIC_BEZIER","thyTooltipAnimations","tooltipState","trigger","state","style","opacity","transform","transition","animate","keyframes","offset","ThyTooltipComponent","changeDetectorRef","updateHostClassService","elementRef","this","addTooltipContainerClass","onHide","Subject","closeOnInteraction","visibility","tooltipClasses","isTemplateRef","initializeElement","defineProperty","_content","value","TemplateRef","updateClasses","classes","concat","updateClass","ngOnInit","markForCheck","isVisible","show","delay","_this","hideTimeoutId","clearTimeout","showTimeoutId","setTimeout","hide","animationStart","animationDone","event","toState","next","afterHidden","asObservable","setTooltipClass","coerceArray","Component","args","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","animations","host","[@state]","(@state.start)","(@state.done)","providers","UpdateHostClassService","ChangeDetectorRef","ElementRef","HostBinding","THY_TOOLTIP_DEFAULT_CONFIG_TOKEN","InjectionToken","thyTooltipDefaultConfig","tooltipPin","scrollThrottleSeconds","tooltipPanelClass","THY_TOOLTIP_DEFAULT_CONFIG_PROVIDER","provide","useValue","ThyTooltipDirective","overlay","scrollDispatcher","viewContainerRef","ngZone","platform","focusMonitor","thyTooltipConfig","_super","options","panelClassPrefix","placement","_trigger","scrollStrategy","scrollStrategies","reposition","scrollThrottle","__","constructor","__extends","isString","trim","isTooltipVisible","updateTooltipContent","tooltipClass","tooltipInstance","disabled","coerceBooleanProperty","detach","overlayRef","hasAttached","createOverlay","scrollableAncestors","getAncestorScrollContainers","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","pipe","takeUntil","ngUnsubscribe$","subscribe","change","scrollableViewProperties","isOverlayClipped","run","positionStrategy","panelClass","hasBackdrop","backdropClass","updatePosition","detachments","backdropClick","detachBackdrop","content","data","onMicrotaskEmpty","take","getConfig","connectionPositions","getFlexiblePositions","tooltipOffset","withPositions","initialize","portal","ComponentPortal","attach","instance","ngOnDestroy","dispose","ThyOverlayDirectiveBase","Directive","exportAs","Overlay","ScrollDispatcher","ViewContainerRef","NgZone","Platform","FocusMonitor","ThyTooltipConfig","decorators","type","Inject","Input","NgModule","imports","A11yModule","CommonModule","OverlayModule","exports","declarations","entryComponents","TooltipService","thyTooltipDirective","Injectable"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export type ThyTooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\nexport type ThyTooltipVisibility = 'initial' | 'visible' | 'hidden';\n\nexport interface ThyTooltipOptions {\n    showDelay: number;\n    hideDelay: number;\n    touchendHideDelay: number;\n    // position?: ThyTooltipPosition;\n}\n\nexport const DEFAULT_TOOLTIP_OPTIONS: ThyTooltipOptions = {\n    showDelay: 200,\n    hideDelay: 100,\n    touchendHideDelay: 1500\n};\n","import { animate, AnimationTriggerMetadata, keyframes, state, style, transition, trigger } from '@angular/animations';\n\n// 'cubic-bezier(0, 0, 0.2, 1)';\n// cubic-bezier(.17, .86, .73, .14)\nconst CUBIC_BEZIER = 'cubic-bezier(0.08, 0.82, 0.17, 1)';\n\n/**\n * Animations used by ThyTooltip.\n * @docs-private\n */\nexport const thyTooltipAnimations: {\n    readonly tooltipState: AnimationTriggerMetadata;\n} = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition(\n            '* => visible',\n            animate(\n                `200ms ${CUBIC_BEZIER}`,\n                keyframes([\n                    style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n                    style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n                    style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n                ])\n            )\n        ),\n        transition('* => hidden', animate(`100ms ${CUBIC_BEZIER}`, style({ opacity: 0 })))\n    ])\n};\n","import {\n    Component,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    HostBinding,\n    ElementRef,\n    TemplateRef,\n    OnInit\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { AnimationEvent } from '@angular/animations';\n\nimport { ThyTooltipVisibility } from './interface';\nimport { thyTooltipAnimations } from './tooltip-animations';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { coerceArray } from 'ngx-tethys/util';\n\n@Component({\n    selector: 'thy-tooltip',\n    templateUrl: './tooltip.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [thyTooltipAnimations.tooltipState],\n    host: {\n        '[@state]': 'visibility',\n        '(@state.start)': 'animationStart()',\n        '(@state.done)': 'animationDone($event)'\n    },\n    providers: [UpdateHostClassService]\n})\nexport class ThyTooltipComponent implements OnInit {\n    @HostBinding(`class.thy-tooltip`) addTooltipContainerClass = true;\n\n    _content: string | TemplateRef<HTMLElement>;\n\n    data: any;\n\n    private readonly onHide: Subject<void> = new Subject();\n\n    private closeOnInteraction = false;\n\n    visibility: ThyTooltipVisibility = 'initial';\n\n    showTimeoutId: number | null | any;\n\n    hideTimeoutId: number | null | any;\n\n    tooltipClasses: string[] = [];\n\n    isTemplateRef = false;\n\n    get content() {\n        return this._content;\n    }\n\n    set content(value: string | TemplateRef<HTMLElement>) {\n        this._content = value;\n        this.isTemplateRef = value instanceof TemplateRef;\n    }\n\n    private updateClasses() {\n        let classes: string[] = [];\n\n        if (this.tooltipClasses) {\n            classes = classes.concat(this.tooltipClasses);\n        }\n\n        this.updateHostClassService.updateClass(classes);\n    }\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        private updateHostClassService: UpdateHostClassService,\n        elementRef: ElementRef<HTMLElement>\n    ) {\n        this.updateHostClassService.initializeElement(elementRef);\n    }\n\n    ngOnInit() {}\n\n    markForCheck(): void {\n        this.changeDetectorRef.markForCheck();\n    }\n\n    isVisible() {\n        return this.visibility === 'visible';\n    }\n\n    show(delay: number): void {\n        // Cancel the delayed hide if it is scheduled\n        if (this.hideTimeoutId) {\n            clearTimeout(this.hideTimeoutId);\n            this.hideTimeoutId = null;\n        }\n\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this.closeOnInteraction = true;\n        this.showTimeoutId = setTimeout(() => {\n            this.visibility = 'visible';\n            this.showTimeoutId = null;\n            this.markForCheck();\n        }, delay);\n    }\n\n    hide(delay: number): void {\n        // Cancel the delayed show if it is scheduled\n        if (this.showTimeoutId) {\n            clearTimeout(this.showTimeoutId);\n            this.showTimeoutId = null;\n        }\n\n        this.hideTimeoutId = setTimeout(() => {\n            this.visibility = 'hidden';\n            this.hideTimeoutId = null;\n            this.markForCheck();\n        }, delay);\n    }\n\n    animationStart() {\n        this.closeOnInteraction = false;\n    }\n\n    animationDone(event: AnimationEvent): void {\n        const toState = event.toState as ThyTooltipVisibility;\n        if (toState === 'hidden' && !this.isVisible()) {\n            this.onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this.closeOnInteraction = true;\n        }\n    }\n\n    afterHidden(): Observable<void> {\n        return this.onHide.asObservable();\n    }\n\n    setTooltipClass(classes: string | string[]) {\n        this.tooltipClasses = coerceArray(classes);\n        this.updateClasses();\n        // this.markForCheck();\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport class ThyTooltipConfig {\n    offset: number;\n    tooltipPin: boolean;\n    scrollThrottleSeconds: number;\n    tooltipPanelClass: string;\n}\n\nexport const THY_TOOLTIP_DEFAULT_CONFIG_TOKEN = new InjectionToken<ThyTooltipConfig>('thy-tooltip-default-config');\n\nexport const thyTooltipDefaultConfig: ThyTooltipConfig = {\n    offset: 4,\n    tooltipPin: false,\n    scrollThrottleSeconds: 20,\n    tooltipPanelClass: 'thy-tooltip-panel'\n};\n\nexport const THY_TOOLTIP_DEFAULT_CONFIG_PROVIDER = {\n    provide: THY_TOOLTIP_DEFAULT_CONFIG_TOKEN,\n    useValue: thyTooltipDefaultConfig\n};\n","import { Directive, ElementRef, ViewContainerRef, NgZone, Input, OnInit, OnDestroy, TemplateRef, Inject } from '@angular/core';\nimport { Overlay, ScrollDispatcher, OverlayRef, ScrollStrategy, FlexibleConnectedPositionStrategy } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { takeUntil, take } from 'rxjs/operators';\n\nimport { ThyTooltipOptions, DEFAULT_TOOLTIP_OPTIONS } from './interface';\nimport { coerceBooleanProperty, isString } from 'ngx-tethys/util';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ThyTooltipComponent } from './tooltip.component';\nimport { getFlexiblePositions, ThyPlacement, ThyOverlayDirectiveBase, ThyOverlayTrigger } from 'ngx-tethys/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { THY_TOOLTIP_DEFAULT_CONFIG_TOKEN, ThyTooltipConfig } from './tooltip.config';\n\n@Directive({\n    selector: '[thyTooltip],[thy-tooltip]',\n    exportAs: 'thyTooltip'\n})\nexport class ThyTooltipDirective extends ThyOverlayDirectiveBase implements OnInit, OnDestroy {\n    private options: ThyTooltipOptions = DEFAULT_TOOLTIP_OPTIONS;\n    private portal: ComponentPortal<ThyTooltipComponent>;\n    private scrollStrategy: ScrollStrategy;\n    private tooltipClass: string | string[];\n\n    tooltipInstance: ThyTooltipComponent;\n\n    panelClassPrefix = 'thy-tooltip';\n\n    touchendHideDelay = this.options.touchendHideDelay;\n\n    private _content: string | TemplateRef<HTMLElement>;\n\n    get content() {\n        return this._content;\n    }\n\n    @Input('thyTooltip') set content(value: string | TemplateRef<HTMLElement>) {\n        // If the content is not a string (e.g. number), convert it to a string and trim it.\n        this._content = value && isString(value) ? `${value}`.trim() : value;\n\n        if (!this._content && this.isTooltipVisible()) {\n            this.hide(0);\n        } else {\n            this.updateTooltipContent();\n        }\n    }\n\n    // tslint:disable-next-line:no-input-rename\n    @Input('thyTooltipPlacement') placement: ThyPlacement = 'top';\n\n    @Input('thyTooltipClass')\n    set thyTooltipClass(value: string | string[]) {\n        this.tooltipClass = value;\n        if (this.tooltipInstance) {\n            this.setTooltipClass(this.tooltipClass);\n        }\n    }\n\n    // tslint:disable-next-line:no-input-rename\n    @Input('thyTooltipShowDelay') showDelay = this.options.showDelay;\n\n    // tslint:disable-next-line:no-input-rename\n    @Input('thyTooltipHideDelay') hideDelay = this.options.hideDelay;\n\n    _trigger: ThyOverlayTrigger = 'hover';\n    // tslint:disable-next-line:no-input-rename\n    @Input('thyTooltipTrigger') set thyTooltipTrigger(value: ThyOverlayTrigger) {\n        this.trigger = value;\n    }\n\n    /** Disables the display of the tooltip. */\n    @Input('thyTooltipDisabled')\n    set thyTooltipDisabled(value: boolean) {\n        this.disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this.disabled) {\n            this.hide(0);\n        }\n    }\n\n    @Input('thyTooltipTemplateContext') data: any;\n\n    @Input('thyTooltipOffset') tooltipOffset: number;\n\n    @Input('thyTooltipPin') tooltipPin: boolean;\n\n    private detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltipInstance = null;\n    }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        const scrollableAncestors = this.scrollDispatcher.getAncestorScrollContainers(this.elementRef);\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay\n            .position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.thy-tooltip-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.ngUnsubscribe$)).subscribe(change => {\n            if (this.tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            positionStrategy: strategy,\n            panelClass: this.thyTooltipConfig.tooltipPanelClass,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.trigger === 'click',\n            backdropClass: 'thy-tooltip-backdrop'\n        });\n\n        this.updatePosition();\n\n        this.overlayRef\n            .detachments()\n            .pipe(takeUntil(this.ngUnsubscribe$))\n            .subscribe(() => this.detach());\n\n        this.overlayRef.backdropClick().subscribe(() => {\n            this.overlayRef.detachBackdrop();\n            this.hide();\n        });\n\n        return this.overlayRef;\n    }\n\n    private updateTooltipContent() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this.tooltipInstance) {\n            this.tooltipInstance.content = this.content;\n            this.tooltipInstance.data = this.data;\n            this.tooltipInstance.markForCheck();\n\n            this.ngZone.onMicrotaskEmpty\n                .asObservable()\n                .pipe(take(1), takeUntil(this.ngUnsubscribe$))\n                .subscribe(() => {\n                    if (this.tooltipInstance) {\n                        this.overlayRef.updatePosition();\n                    }\n                });\n        }\n    }\n\n    /** Returns true if the tooltip is currently visible to the user */\n    public isTooltipVisible(): boolean {\n        return !!this.tooltipInstance && this.tooltipInstance.isVisible();\n    }\n\n    /** Updates the position of the current tooltip. */\n    private updatePosition() {\n        const position = this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const connectionPositions = getFlexiblePositions(\n            this.placement,\n            this.tooltipOffset || this.thyTooltipConfig.offset,\n            this.panelClassPrefix\n        );\n        position.withPositions(connectionPositions);\n    }\n\n    private setTooltipClass(tooltipClass: string | string[]) {\n        if (this.tooltipInstance) {\n            this.tooltipInstance.setTooltipClass(tooltipClass);\n        }\n    }\n\n    constructor(\n        private overlay: Overlay,\n        elementRef: ElementRef<HTMLElement>,\n        private scrollDispatcher: ScrollDispatcher,\n        private viewContainerRef: ViewContainerRef,\n        ngZone: NgZone,\n        platform: Platform,\n        focusMonitor: FocusMonitor,\n        @Inject(THY_TOOLTIP_DEFAULT_CONFIG_TOKEN)\n        private thyTooltipConfig: ThyTooltipConfig\n    ) {\n        super(elementRef, platform, focusMonitor, ngZone);\n        this.tooltipPin = this.thyTooltipConfig.tooltipPin;\n        this.options = DEFAULT_TOOLTIP_OPTIONS;\n        this.scrollStrategy = overlay.scrollStrategies.reposition({\n            scrollThrottle: this.thyTooltipConfig.scrollThrottleSeconds\n        });\n    }\n\n    ngOnInit() {\n        this.initialize();\n    }\n\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show 200ms */\n    show(delay: number = this.showDelay): void {\n        if (\n            this.disabled ||\n            !this.content ||\n            (this.isTooltipVisible() && !this.tooltipInstance.showTimeoutId && !this.tooltipInstance.hideTimeoutId)\n        ) {\n            return;\n        }\n\n        const overlayRef = this.createOverlay();\n\n        this.detach();\n        this.portal = this.portal || new ComponentPortal(ThyTooltipComponent, this.viewContainerRef);\n        this.tooltipInstance = overlayRef.attach(this.portal).instance;\n        this.tooltipInstance\n            .afterHidden()\n            .pipe(takeUntil(this.ngUnsubscribe$))\n            .subscribe(() => this.detach());\n        this.setTooltipClass(this.tooltipClass);\n        this.updateTooltipContent();\n        this.tooltipInstance.show(delay);\n    }\n\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide 100ms */\n    hide(delay: number = this.hideDelay): void {\n        if (this.tooltipInstance) {\n            this.tooltipInstance.hide(delay);\n        }\n    }\n\n    ngOnDestroy() {\n        this.hide(0);\n        this.dispose();\n        if (this.overlayRef) {\n            this.tooltipInstance = null;\n        }\n    }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { ThyTooltipDirective } from './tooltip.directive';\nimport { ThyTooltipComponent } from './tooltip.component';\nimport { THY_TOOLTIP_DEFAULT_CONFIG_PROVIDER } from './tooltip.config';\n\n@NgModule({\n    imports: [A11yModule, CommonModule, OverlayModule],\n    exports: [ThyTooltipDirective],\n    declarations: [ThyTooltipDirective, ThyTooltipComponent],\n    entryComponents: [ThyTooltipComponent],\n    providers: [THY_TOOLTIP_DEFAULT_CONFIG_PROVIDER]\n})\nexport class ThyTooltipModule {}\n","import {\n    Directive,\n    ElementRef,\n    ViewContainerRef,\n    NgZone,\n    Input,\n    OnInit,\n    OnDestroy,\n    TemplateRef,\n    Injectable,\n    Inject\n} from '@angular/core';\nimport { Overlay, ScrollDispatcher } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ThyTooltipDirective } from './tooltip.directive';\nimport { ThyTooltipConfig, THY_TOOLTIP_DEFAULT_CONFIG_TOKEN } from './tooltip.config';\n\n@Injectable()\nexport class TooltipService {\n    thyTooltipDirective: ThyTooltipDirective;\n\n    constructor(\n        private overlay: Overlay,\n        private scrollDispatcher: ScrollDispatcher,\n        private ngZone: NgZone,\n        private platform: Platform,\n        private focusMonitor: FocusMonitor,\n        @Inject(THY_TOOLTIP_DEFAULT_CONFIG_TOKEN)\n        private thyTooltipConfig: ThyTooltipConfig\n    ) {}\n\n    attach(elementRef: ElementRef, viewContainerRef: ViewContainerRef, trigger?: 'hover' | 'focus' | 'click') {\n        this.thyTooltipDirective = new ThyTooltipDirective(\n            this.overlay,\n            elementRef,\n            this.scrollDispatcher,\n            viewContainerRef,\n            this.ngZone,\n            this.platform,\n            this.focusMonitor,\n            this.thyTooltipConfig\n        );\n        if (trigger) {\n            this.thyTooltipDirective.trigger = trigger;\n        }\n\n        this.thyTooltipDirective.ngOnInit();\n    }\n\n    detach() {\n        this.thyTooltipDirective.ngOnDestroy();\n    }\n}\n"]}