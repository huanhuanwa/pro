{"version":3,"file":"ngx-tethys-skeleton.umd.js","sources":["../../src/skeleton/skeleton.component.ts","../../src/skeleton/stylized/list.component.ts","../../src/skeleton/stylized/bullet-list.component.ts","../../src/skeleton/stylized/title.component.ts","../../src/skeleton/stylized/avatar.component.ts","../../src/skeleton/stylized/paragraph.component.ts","../../src/skeleton/module.ts","../../src/skeleton/ngx-tethys-skeleton.ts"],"sourcesContent":["import {\n    Component,\n    OnInit,\n    Input,\n    Inject,\n    PLATFORM_ID,\n    SimpleChanges,\n    OnChanges,\n    HostBinding,\n    TemplateRef,\n    ContentChild\n} from '@angular/core';\nimport { generateRandomStr } from 'ngx-tethys/util';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n    selector: 'thy-skeleton',\n    templateUrl: './skeleton.component.html'\n})\nexport class ThySkeletonComponent implements OnInit, OnChanges {\n    @HostBinding('class.thy-skeleton') addSkeletonClass = true;\n\n    @Input() thyAnimate = true;\n\n    @Input() thyBaseUrl = '';\n\n    @Input() thyWidth: string | number = '100%';\n\n    @Input() thyHeight: string | number = '100%';\n\n    @Input() thyViewBoxWidth: string | number = 400;\n\n    @Input() thyViewBoxHeight: string | number = 130;\n\n    @Input() thySpeed = 2;\n\n    @Input() thyPreserveAspectRatio = 'none'; // xMidYMid meet\n\n    @Input() thyPrimaryColor = '#f0f0f0';\n\n    @Input() thySecondaryColor = '#e0e0e0';\n\n    @Input() thyPrimaryOpacity = 1;\n\n    @Input() thySecondaryOpacity = 1;\n\n    @Input() thyUniqueKey: string;\n\n    @Input() thyRtl: string;\n\n    @Input() thyStyle: { [key: string]: string };\n\n    @Input() thyIgnoreBaseUrl = false;\n\n    @Input() thyLoadingDone = false;\n\n    @ContentChild('content')\n    customTemplate: TemplateRef<any>;\n\n    contentTemplates: TemplateRef<any>[] = [];\n\n    idClip = generateRandomStr();\n\n    idGradient = generateRandomStr();\n\n    defaultAnimation = ['-3; 1', '-2; 2', '-1; 3'];\n\n    rtlAnimation = ['1; -3', '2; -2', '3; -1'];\n\n    animationValues: string[];\n\n    fillStyle: { fill: string };\n\n    clipPath: string;\n\n    constructor(@Inject(PLATFORM_ID) private platformId: string) {}\n\n    ngOnInit() {\n        this.animationValues = this.thyRtl ? this.rtlAnimation : this.defaultAnimation;\n\n        if (this.thyBaseUrl === '' && !this.thyIgnoreBaseUrl && isPlatformBrowser(this.platformId)) {\n            this.thyBaseUrl = window.location.pathname;\n        }\n\n        this.setFillStyle();\n        this.setClipPath();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['thyBaseUrl']) {\n            if (changes['thyBaseUrl'].previousValue !== changes['thyBaseUrl'].currentValue) {\n                this.setFillStyle();\n                this.setClipPath();\n            }\n        }\n    }\n\n    setFillStyle() {\n        this.fillStyle = {\n            fill: `url(${this.thyBaseUrl}#${this.idGradient})`\n        };\n    }\n\n    setClipPath() {\n        this.clipPath = `url(${this.thyBaseUrl}#${this.idClip})`;\n    }\n\n    assignInputProperties(input: ThySkeletonComponent) {\n        this.thyAnimate = input.thyAnimate;\n        this.thyBaseUrl = input.thyBaseUrl;\n        this.thyHeight = input.thyHeight;\n        this.thyWidth = input.thyWidth;\n        this.thyViewBoxHeight = input.thyViewBoxHeight;\n        this.thyViewBoxWidth = input.thyViewBoxWidth;\n        this.thyPreserveAspectRatio = input.thyPreserveAspectRatio;\n        this.thyPrimaryColor = input.thyPrimaryColor;\n        this.thyPrimaryOpacity = input.thyPrimaryOpacity;\n        this.thySecondaryColor = input.thySecondaryColor;\n        this.thySecondaryOpacity = input.thySecondaryOpacity;\n        this.thyRtl = this.thyRtl;\n        this.thySpeed = this.thySpeed;\n        this.thyUniqueKey = this.thyUniqueKey;\n    }\n\n    addTemplate(template: TemplateRef<any>) {\n        if (template) {\n            this.contentTemplates.push(template);\n        }\n    }\n}\n","import { Component, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-list-template',\n    template: `\n        <ng-template #content>\n            <svg:rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"20\" rx=\"3\" ry=\"3\" width=\"220\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"40\" rx=\"3\" ry=\"3\" width=\"170\" height=\"10\" />\n            <svg:rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"80\" rx=\"3\" ry=\"3\" width=\"200\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"100\" rx=\"3\" ry=\"3\" width=\"80\" height=\"10\" />\n        </ng-template>\n    `\n})\nexport class ThySkeletonListComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, Input, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\ninterface BulletListItem {\n    circle: { cx: number; cy: number; r: number };\n    rect: { x: number; y: number; rx: number; ry: number; width: number | string; height: number | string };\n}\n\n@Component({\n    selector: 'thy-skeleton-bullet-list-template',\n    template: `\n        <ng-template #content>\n            <ng-container *ngFor=\"let item of items\">\n                <svg:circle [attr.cx]=\"item.circle.cx\" [attr.cy]=\"item.circle.cy\" r=\"8\" />\n                <svg:rect [attr.x]=\"item.rect.x\" [attr.y]=\"item.rect.y\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\n            </ng-container>\n        </ng-template>\n    `\n})\nexport class ThySkeletonBulletListComponent implements OnInit {\n    @Input() thyCount = 5;\n\n    items: BulletListItem[] = [];\n\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit() {\n        for (let i = 0; i <= this.thyCount; i++) {\n            this.items.push({\n                circle: {\n                    cx: 10,\n                    cy: i * 30 + 20,\n                    r: 8\n                },\n                rect: {\n                    x: 25,\n                    y: i * 2 * 15 + 15,\n                    rx: 5,\n                    ry: 5,\n                    width: '90%',\n                    height: 10\n                }\n            });\n        }\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, OnInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-title-template,[thySkeletonTitleTemplate]',\n    template: `\n        <ng-template #content>\n            <svg:rect x=\"15\" y=\"13\" rx=\"4\" ry=\"4\" [attr.width]=\"width\" [attr.height]=\"height\" />\n        </ng-template>\n    `,\n    exportAs: 'thySkeletonTitleTemplate'\n})\nexport class ThySkeletonTitleComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    width = 100;\n\n    height = 10;\n\n    @Input() set thyWidth(value: number) {\n        if (value) {\n            this.width = value;\n        }\n    }\n\n    @Input() set thyHeight(value: number) {\n        if (value) {\n            this.height = value;\n        }\n    }\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-avatar-template,[thySkeletonAvatarTemplate]',\n    template: `\n        <ng-template #content>\n            <svg:circle cx=\"30\" cy=\"30\" r=\"30\" />\n        </ng-template>\n    `\n})\nexport class ThySkeletonAvatarComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-paragraph-template,[thySkeletonParagraphTemplate]',\n    template: `\n        <ng-template #content>\n            <svg:rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"38%\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"20\" rx=\"2\" ry=\"2\" width=\"92%\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"40\" rx=\"2\" ry=\"2\" width=\"92%\" height=\"10\" />\n            <svg:rect x=\"0\" y=\"60\" rx=\"2\" ry=\"2\" width=\"61%\" height=\"10\" />\n        </ng-template>\n    `,\n    exportAs: 'thySkeletonParagraphTemplate'\n})\nexport class ThySkeletonParagraphComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { ThySkeletonComponent } from './skeleton.component';\nimport { ThySkeletonListComponent } from './stylized/list.component';\nimport { ThySkeletonBulletListComponent } from './stylized/bullet-list.component';\nimport { ThySkeletonTitleComponent } from './stylized/title.component';\nimport { ThySkeletonAvatarComponent } from './stylized/avatar.component';\nimport { ThySkeletonParagraphComponent } from './stylized/paragraph.component';\n\n@NgModule({\n    declarations: [\n        ThySkeletonComponent,\n        ThySkeletonListComponent,\n        ThySkeletonBulletListComponent,\n        ThySkeletonAvatarComponent,\n        ThySkeletonTitleComponent,\n        ThySkeletonParagraphComponent\n    ],\n    imports: [CommonModule, PortalModule],\n    entryComponents: [ThySkeletonComponent],\n    exports: [\n        ThySkeletonComponent,\n        ThySkeletonListComponent,\n        ThySkeletonBulletListComponent,\n        ThySkeletonTitleComponent,\n        ThySkeletonAvatarComponent,\n        ThySkeletonParagraphComponent\n    ],\n    providers: []\n})\nexport class ThySkeletonModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["generateRandomStr","isPlatformBrowser","Component","Inject","PLATFORM_ID","HostBinding","Input","ContentChild","ViewChild","NgModule","CommonModule","PortalModule"],"mappings":";;;;;;;QA2EI,8BAAyC,UAAkB;YAAlB,eAAU,GAAV,UAAU,CAAQ;YAvDxB,qBAAgB,GAAG,IAAI,CAAC;YAElD,eAAU,GAAG,IAAI,CAAC;YAElB,eAAU,GAAG,EAAE,CAAC;YAEhB,aAAQ,GAAoB,MAAM,CAAC;YAEnC,cAAS,GAAoB,MAAM,CAAC;YAEpC,oBAAe,GAAoB,GAAG,CAAC;YAEvC,qBAAgB,GAAoB,GAAG,CAAC;YAExC,aAAQ,GAAG,CAAC,CAAC;YAEb,2BAAsB,GAAG,MAAM,CAAC;YAEhC,oBAAe,GAAG,SAAS,CAAC;YAE5B,sBAAiB,GAAG,SAAS,CAAC;YAE9B,sBAAiB,GAAG,CAAC,CAAC;YAEtB,wBAAmB,GAAG,CAAC,CAAC;YAQxB,qBAAgB,GAAG,KAAK,CAAC;YAEzB,mBAAc,GAAG,KAAK,CAAC;YAKhC,qBAAgB,GAAuB,EAAE,CAAC;YAE1C,WAAM,GAAGA,sBAAiB,EAAE,CAAC;YAE7B,eAAU,GAAGA,sBAAiB,EAAE,CAAC;YAEjC,qBAAgB,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;YAE/C,iBAAY,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;SAQoB;QAE/D,uCAAQ,GAAR;YACI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;YAE/E,IAAI,IAAI,CAAC,UAAU,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,IAAIC,wBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;gBACxF,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;aAC9C;YAED,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;QAED,0CAAW,GAAX,UAAY,OAAsB;YAC9B,IAAI,OAAO,CAAC,YAAY,CAAC,EAAE;gBACvB,IAAI,OAAO,CAAC,YAAY,CAAC,CAAC,aAAa,KAAK,OAAO,CAAC,YAAY,CAAC,CAAC,YAAY,EAAE;oBAC5E,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,IAAI,CAAC,WAAW,EAAE,CAAC;iBACtB;aACJ;SACJ;QAED,2CAAY,GAAZ;YACI,IAAI,CAAC,SAAS,GAAG;gBACb,IAAI,EAAE,SAAO,IAAI,CAAC,UAAU,SAAI,IAAI,CAAC,UAAU,MAAG;aACrD,CAAC;SACL;QAED,0CAAW,GAAX;YACI,IAAI,CAAC,QAAQ,GAAG,SAAO,IAAI,CAAC,UAAU,SAAI,IAAI,CAAC,MAAM,MAAG,CAAC;SAC5D;QAED,oDAAqB,GAArB,UAAsB,KAA2B;YAC7C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;YACnC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;YACnC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;YACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAC/B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;YAC/C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;YAC7C,IAAI,CAAC,sBAAsB,GAAG,KAAK,CAAC,sBAAsB,CAAC;YAC3D,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;YAC7C,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC;YACjD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC;YACrD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;SACzC;QAED,0CAAW,GAAX,UAAY,QAA0B;YAClC,IAAI,QAAQ,EAAE;gBACV,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACxC;SACJ;;;;gBAjHJC,cAAS,SAAC;oBACP,QAAQ,EAAE,cAAc;oBACxB,itEAAwC;iBAC3C;;;6CAyDgBC,WAAM,SAACC,gBAAW;;;mCAvD9BC,gBAAW,SAAC,oBAAoB;6BAEhCC,UAAK;6BAELA,UAAK;2BAELA,UAAK;4BAELA,UAAK;kCAELA,UAAK;mCAELA,UAAK;2BAELA,UAAK;yCAELA,UAAK;kCAELA,UAAK;oCAELA,UAAK;oCAELA,UAAK;sCAELA,UAAK;+BAELA,UAAK;yBAELA,UAAK;2BAELA,UAAK;mCAELA,UAAK;iCAELA,UAAK;iCAELC,iBAAY,SAAC,SAAS;;;;QCrCvB,kCAAoB,iBAAuC;YAAvC,sBAAiB,GAAjB,iBAAiB,CAAsB;SAAI;QAE/D,2CAAQ,GAAR;YACI,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC/D;;;;gBApBJL,cAAS,SAAC;oBACP,QAAQ,EAAE,4BAA4B;oBACtC,QAAQ,EAAE,ylBAST;iBACJ;;;gBAdQ,oBAAoB;;;qCAgBxBM,cAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;QCStC,wCAAoB,iBAAuC;YAAvC,sBAAiB,GAAjB,iBAAiB,CAAsB;YANlD,aAAQ,GAAG,CAAC,CAAC;YAEtB,UAAK,GAAqB,EAAE,CAAC;SAIkC;QAE/D,iDAAQ,GAAR;YACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;oBACZ,MAAM,EAAE;wBACJ,EAAE,EAAE,EAAE;wBACN,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE;wBACf,CAAC,EAAE,CAAC;qBACP;oBACD,IAAI,EAAE;wBACF,CAAC,EAAE,EAAE;wBACL,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE;wBAClB,EAAE,EAAE,CAAC;wBACL,EAAE,EAAE,CAAC;wBACL,KAAK,EAAE,KAAK;wBACZ,MAAM,EAAE,EAAE;qBACb;iBACJ,CAAC,CAAC;aACN;YACD,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC/D;;;;gBAvCJN,cAAS,SAAC;oBACP,QAAQ,EAAE,mCAAmC;oBAC7C,QAAQ,EAAE,sXAOT;iBACJ;;;gBAjBQ,oBAAoB;;;2BAmBxBI,UAAK;qCAILE,cAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;QCOtC,mCAAoB,iBAAuC;YAAvC,sBAAiB,GAAjB,iBAAiB,CAAsB;YAhB3D,UAAK,GAAG,GAAG,CAAC;YAEZ,WAAM,GAAG,EAAE,CAAC;SAcmD;QAZ/D,sBAAa,+CAAQ;iBAArB,UAAsB,KAAa;gBAC/B,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;iBACtB;aACJ;;;WAAA;QAED,sBAAa,gDAAS;iBAAtB,UAAuB,KAAa;gBAChC,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;iBACvB;aACJ;;;WAAA;QAID,4CAAQ,GAAR;YACI,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC/D;;;;gBAhCJN,cAAS,SAAC;oBACP,QAAQ,EAAE,wDAAwD;oBAClE,QAAQ,EAAE,8KAIT;oBACD,QAAQ,EAAE,0BAA0B;iBACvC;;;gBAVQ,oBAAoB;;;qCAYxBM,cAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;2BAMrCF,UAAK;4BAMLA,UAAK;;;;QCXN,oCAAoB,iBAAuC;YAAvC,sBAAiB,GAAjB,iBAAiB,CAAsB;SAAI;QAE/D,6CAAQ,GAAR;YACI,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC/D;;;;gBAfJJ,cAAS,SAAC;oBACP,QAAQ,EAAE,0DAA0D;oBACpE,QAAQ,EAAE,yHAIT;iBACJ;;;gBATQ,oBAAoB;;;qCAWxBM,cAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;QCMtC,uCAAoB,iBAAuC;YAAvC,sBAAiB,GAAjB,iBAAiB,CAAsB;SAAI;QAE/D,gDAAQ,GAAR;YACI,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAC/D;;;;gBAnBJN,cAAS,SAAC;oBACP,QAAQ,EAAE,gEAAgE;oBAC1E,QAAQ,EAAE,qaAOT;oBACD,QAAQ,EAAE,8BAA8B;iBAC3C;;;gBAbQ,oBAAoB;;;qCAexBM,cAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;;;;QCgB1C;;;;;gBArBCC,aAAQ,SAAC;oBACN,YAAY,EAAE;wBACV,oBAAoB;wBACpB,wBAAwB;wBACxB,8BAA8B;wBAC9B,0BAA0B;wBAC1B,yBAAyB;wBACzB,6BAA6B;qBAChC;oBACD,OAAO,EAAE,CAACC,mBAAY,EAAEC,mBAAY,CAAC;oBACrC,eAAe,EAAE,CAAC,oBAAoB,CAAC;oBACvC,OAAO,EAAE;wBACL,oBAAoB;wBACpB,wBAAwB;wBACxB,8BAA8B;wBAC9B,yBAAyB;wBACzB,0BAA0B;wBAC1B,6BAA6B;qBAChC;oBACD,SAAS,EAAE,EAAE;iBAChB;;;IC/BD;;;;;;;;;;;;;;;;;;"}