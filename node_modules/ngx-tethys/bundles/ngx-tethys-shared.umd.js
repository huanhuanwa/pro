(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('ngx-tethys/core'),require('@angular/common'),require('ngx-tethys/icon'),require('@angular/forms'),exports, require('@angular/core'), require('ngx-tethys/util'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/drag-drop'), require('ngx-tethys/core'), require('@angular/common'), require('@angular/forms'), require('ngx-tethys/icon')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/shared', ['@angular/core','ngx-tethys/core','@angular/common','ngx-tethys/icon','@angular/forms','exports', '@angular/core', 'ngx-tethys/util', 'rxjs', 'rxjs/operators', '@angular/cdk/drag-drop', 'ngx-tethys/core', '@angular/common', '@angular/forms', 'ngx-tethys/icon'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ngxTethys.core,global.ng.common,global.ngxTethys.icon,global.ng.forms,(global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].shared = {}), global.ng.core, global['ngx-tethys'].util, global.rxjs, global.rxjs.operators, global.ng.cdk.dragDrop, global['ngx-tethys'].core, global.ng.common, global.ng.forms, global['ngx-tethys'].icon));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,exports, core, util, rxjs, operators, dragDrop, core$1, common, forms, icon) { 
var _c0 = ["inputElement"];
function ThySelectControlComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 8, 9);
    ɵngcc0.ɵɵlistener("compositionstart", function ThySelectControlComponent_ng_template_0_Template_input_compositionstart_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.isComposing = true; })("compositionend", function ThySelectControlComponent_ng_template_0_Template_input_compositionend_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.isComposing = false; })("input", function ThySelectControlComponent_ng_template_0_Template_input_input_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.updateWidth(); })("ngModelChange", function ThySelectControlComponent_ng_template_0_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.setInputValue($event); })("keydown.backspace", function ThySelectControlComponent_ng_template_0_Template_input_keydown_backspace_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.handleBackspace($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.searchInputControlClass)("ngModel", ctx_r1.inputValue)("disabled", ctx_r1.thyDisabled);
} }
function ThySelectControlComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r2.placeholderStyle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.thyPlaceholder, " ");
} }
function ThySelectControlComponent_ng_container_4_li_2_ng_template_2_Template(rf, ctx) { }
function ThySelectControlComponent_ng_container_4_li_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r16 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r16.thyLabelText, " ");
} }
var _c1 = function (a0) { return { $implicit: a0 }; };
function ThySelectControlComponent_ng_container_4_li_2_Template(rf, ctx) { if (rf & 1) {
    var _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 14);
    ɵngcc0.ɵɵelementStart(1, "div", 15);
    ɵngcc0.ɵɵtemplate(2, ThySelectControlComponent_ng_container_4_li_2_ng_template_2_Template, 0, 0, "ng-template", 16, 17, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(4, ThySelectControlComponent_ng_container_4_li_2_ng_container_4_Template, 2, 1, "ng-container", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "span", 18);
    ɵngcc0.ɵɵlistener("click", function ThySelectControlComponent_ng_container_4_li_2_Template_span_click_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); var item_r16 = ctx.$implicit; var ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.removeHandle(item_r16, $event); });
    ɵngcc0.ɵɵelement(6, "thy-icon", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r16 = ctx.$implicit;
    var _r17 = ɵngcc0.ɵɵreference(3);
    var ctx_r14 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r14.choiceContentClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r14.customDisplayTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(5, _c1, item_r16.thyRawValue || item_r16.thyValue || item_r16));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r14.customDisplayTemplate)("ngIfElse", _r17);
} }
function ThySelectControlComponent_ng_container_4_ng_template_4_Template(rf, ctx) { }
function ThySelectControlComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "ul");
    ɵngcc0.ɵɵtemplate(2, ThySelectControlComponent_ng_container_4_li_2_Template, 7, 7, "li", 11);
    ɵngcc0.ɵɵelementStart(3, "li", 12);
    ɵngcc0.ɵɵtemplate(4, ThySelectControlComponent_ng_container_4_ng_template_4_Template, 0, 0, "ng-template", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    var _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.multipleSelectedValue)("ngForTrackBy", ctx_r3.trackValue);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
function ThySelectControlComponent_ng_template_5_ng_container_0_ng_template_2_Template(rf, ctx) { }
function ThySelectControlComponent_ng_template_5_ng_container_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r27 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r27.selectedValue == null ? null : ctx_r27.selectedValue.thyLabelText, " ");
} }
function ThySelectControlComponent_ng_template_5_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 21);
    ɵngcc0.ɵɵtemplate(2, ThySelectControlComponent_ng_template_5_ng_container_0_ng_template_2_Template, 0, 0, "ng-template", 16, 17, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(4, ThySelectControlComponent_ng_template_5_ng_container_0_ng_container_4_Template, 2, 1, "ng-container", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var _r25 = ɵngcc0.ɵɵreference(3);
    var ctx_r23 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r23.selectedValueStyle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r23.customDisplayTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(5, _c1, ctx_r23.selectedValue.thyRawValue || ctx_r23.selectedValue.thyValue || ctx_r23.selectedValue));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r23.customDisplayTemplate)("ngIfElse", _r25);
} }
function ThySelectControlComponent_ng_template_5_ng_template_2_Template(rf, ctx) { }
function ThySelectControlComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThySelectControlComponent_ng_template_5_ng_container_0_Template, 5, 7, "ng-container", 20);
    ɵngcc0.ɵɵelementStart(1, "div", 12);
    ɵngcc0.ɵɵtemplate(2, ThySelectControlComponent_ng_template_5_ng_template_2_Template, 0, 0, "ng-template", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    var _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.isSelectedValue);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
function ThySelectControlComponent_span_9_Template(rf, ctx) { if (rf & 1) {
    var _r29 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 22);
    ɵngcc0.ɵɵlistener("click", function ThySelectControlComponent_span_9_Template_span_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); var ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28.clearHandle($event); });
    ɵngcc0.ɵɵelement(1, "thy-icon", 23);
    ɵngcc0.ɵɵelementEnd();
} }
function ThyListOptionComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 1);
    ɵngcc0.ɵɵelement(1, "thy-icon", 2);
    ɵngcc0.ɵɵelementEnd();
} }
function ThyListOptionComponent_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 1);
    ɵngcc0.ɵɵelement(1, "thy-icon", 3);
    ɵngcc0.ɵɵelementEnd();
} }
var _c2 = ["*"];
function ThyOptionComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementStart(2, "span", 2);
    ɵngcc0.ɵɵelement(3, "i", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ThyOptionComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "span", 2);
    ɵngcc0.ɵɵelement(3, "i", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.thyLabelText);
} }
'use strict';

    var ThyTranscludeDirective = /** @class */ (function () {
        function ThyTranscludeDirective(viewRef) {
            this.viewRef = viewRef;
        }
        Object.defineProperty(ThyTranscludeDirective.prototype, "thyTransclude", {
            get: function () {
                return this._ngTransclude;
            },
            set: function (templateRef) {
                this._ngTransclude = templateRef;
                if (templateRef) {
                    this.viewRef.createEmbeddedView(templateRef);
                }
            },
            enumerable: false,
            configurable: true
        });
ThyTranscludeDirective.ɵfac = function ThyTranscludeDirective_Factory(t) { return new (t || ThyTranscludeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };
ThyTranscludeDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyTranscludeDirective, selectors: [["", "thyTransclude", ""]], inputs: { thyTransclude: "thyTransclude" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyTranscludeDirective, [{
        type: core.Directive,
        args: [{
                selector: '[thyTransclude]'
            }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, { thyTransclude: [{
            type: core.Input
        }] }); })();
        return ThyTranscludeDirective;
    }());
    ThyTranscludeDirective.ctorParameters = function () { return [
        { type: core.ViewContainerRef }
    ]; };
    ThyTranscludeDirective.propDecorators = {
        thyTransclude: [{ type: core.Input }]
    };

    var ThyAutofocusDirective = /** @class */ (function () {
        function ThyAutofocusDirective(elementRef) {
            this.elementRef = elementRef;
            // 自动选择，用于只读的 input 输入框，方便复制粘贴
            this._autoSelect = false;
        }
        Object.defineProperty(ThyAutofocusDirective.prototype, "thyAutoSelect", {
            set: function (value) {
                this._autoSelect = util.coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyAutofocusDirective.prototype, "thyAutofocus", {
            // auto focus current element
            set: function (value) {
                var _this = this;
                if (util.coerceBooleanProperty(value) !== false) {
                    setTimeout(function () {
                        _this.elementRef.nativeElement.focus();
                        if (_this._autoSelect && _this.elementRef.nativeElement.select) {
                            _this.elementRef.nativeElement.select();
                        }
                    });
                }
            },
            enumerable: false,
            configurable: true
        });
ThyAutofocusDirective.ɵfac = function ThyAutofocusDirective_Factory(t) { return new (t || ThyAutofocusDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyAutofocusDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyAutofocusDirective, selectors: [["input", "thyAutofocus", ""], ["textarea", "thyAutofocus", ""]], inputs: { thyAutoSelect: "thyAutoSelect", thyAutofocus: "thyAutofocus" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyAutofocusDirective, [{
        type: core.Directive,
        args: [{
                selector: 'input[thyAutofocus],textarea[thyAutofocus]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { thyAutoSelect: [{
            type: core.Input
        }], thyAutofocus: [{
            type: core.Input
        }] }); })();
        return ThyAutofocusDirective;
    }());
    ThyAutofocusDirective.ctorParameters = function () { return [
        { type: core.ElementRef }
    ]; };
    ThyAutofocusDirective.propDecorators = {
        thyAutoSelect: [{ type: core.Input }],
        thyAutofocus: [{ type: core.Input }]
    };

    /**
     * 与 (keydown.enter) 区别是支持组合键，当按 Ctrl + Enter 或者 Command + Enter 也会触发
     */
    var ThyEnterDirective = /** @class */ (function () {
        function ThyEnterDirective(ngZone, elementRef, renderer) {
            this.ngZone = ngZone;
            this.elementRef = elementRef;
            this.renderer = renderer;
            this.thyEnter = new core.EventEmitter();
        }
        ThyEnterDirective.prototype.onKeydown = function (event) {
            var _this = this;
            var keyCode = event.which || event.keyCode;
            if (keyCode === util.keycodes.ENTER) {
                this.ngZone.run(function () {
                    _this.thyEnter.emit(event);
                });
            }
        };
        ThyEnterDirective.prototype.ngOnInit = function () {
            var _this = this;
            this.ngZone.runOutsideAngular(function () {
                _this.renderer.listen(_this.elementRef.nativeElement, 'keydown', _this.onKeydown.bind(_this));
            });
        };
ThyEnterDirective.ɵfac = function ThyEnterDirective_Factory(t) { return new (t || ThyEnterDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ThyEnterDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyEnterDirective, selectors: [["", "thyEnter", ""]], outputs: { thyEnter: "thyEnter" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyEnterDirective, [{
        type: core.Directive,
        args: [{
                selector: '[thyEnter]'
            }]
    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { thyEnter: [{
            type: core.Output
        }] }); })();
        return ThyEnterDirective;
    }());
    ThyEnterDirective.ctorParameters = function () { return [
        { type: core.NgZone },
        { type: core.ElementRef },
        { type: core.Renderer2 }
    ]; };
    ThyEnterDirective.propDecorators = {
        thyEnter: [{ type: core.Output }]
    };

    var ThyCtrlEnterDirective = /** @class */ (function () {
        function ThyCtrlEnterDirective(ngZone, elementRef, renderer) {
            this.ngZone = ngZone;
            this.elementRef = elementRef;
            this.renderer = renderer;
            this.thyCtrlEnter = new core.EventEmitter();
        }
        ThyCtrlEnterDirective.prototype.onKeydown = function (event) {
            var _this = this;
            var keyCode = event.which || event.keyCode;
            if ((event.ctrlKey || event.metaKey) && keyCode === util.keycodes.ENTER) {
                event.preventDefault();
                this.ngZone.run(function () {
                    _this.thyCtrlEnter.emit(event);
                });
            }
        };
        ThyCtrlEnterDirective.prototype.ngOnInit = function () {
            var _this = this;
            this.ngZone.runOutsideAngular(function () {
                _this.renderer.listen(_this.elementRef.nativeElement, 'keydown', _this.onKeydown.bind(_this));
            });
        };
ThyCtrlEnterDirective.ɵfac = function ThyCtrlEnterDirective_Factory(t) { return new (t || ThyCtrlEnterDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ThyCtrlEnterDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyCtrlEnterDirective, selectors: [["", "thyCtrlEnter", ""]], outputs: { thyCtrlEnter: "thyCtrlEnter" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyCtrlEnterDirective, [{
        type: core.Directive,
        args: [{
                selector: '[thyCtrlEnter]'
            }]
    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { thyCtrlEnter: [{
            type: core.Output
        }] }); })();
        return ThyCtrlEnterDirective;
    }());
    ThyCtrlEnterDirective.ctorParameters = function () { return [
        { type: core.NgZone },
        { type: core.ElementRef },
        { type: core.Renderer2 }
    ]; };
    ThyCtrlEnterDirective.propDecorators = {
        thyCtrlEnter: [{ type: core.Output }]
    };

    var ThyShowDirective = /** @class */ (function () {
        function ThyShowDirective(elementRef, renderer) {
            this.elementRef = elementRef;
            this.renderer = renderer;
            this.thyShowChange = new core.EventEmitter();
        }
        ThyShowDirective.prototype.unListenDocument = function () {
            if (this.unListenEvent) {
                this.unListenEvent();
                this.unListenEvent = null;
            }
        };
        Object.defineProperty(ThyShowDirective.prototype, "thyShow", {
            set: function (condition) {
                var _this = this;
                if (condition) {
                    this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'block');
                    setTimeout(function () {
                        _this.unListenDocument = _this.renderer.listen('document', 'click', function (event) {
                            if (!_this.elementRef.nativeElement.contains(event.target)) {
                                _this.thyShowChange.emit(false);
                                _this.unListenDocument();
                            }
                        });
                    });
                }
                else {
                    this.renderer.setStyle(this.elementRef.nativeElement, 'display', 'none');
                    this.unListenDocument();
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyShowDirective.prototype.ngOnDestroy = function () {
            this.unListenDocument();
        };
ThyShowDirective.ɵfac = function ThyShowDirective_Factory(t) { return new (t || ThyShowDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ThyShowDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyShowDirective, selectors: [["", "thyShow", ""]], inputs: { thyShow: "thyShow" }, outputs: { thyShowChange: "thyShowChange" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyShowDirective, [{
        type: core.Directive,
        args: [{ selector: '[thyShow]' }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { thyShowChange: [{
            type: core.Output
        }], thyShow: [{
            type: core.Input
        }] }); })();
        return ThyShowDirective;
    }());
    ThyShowDirective.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.Renderer2 }
    ]; };
    ThyShowDirective.propDecorators = {
        thyShowChange: [{ type: core.Output }],
        thyShow: [{ type: core.Input }]
    };

    /**
     * 将来会移动到 thy 组件库中
     */
    var ThyStopPropagationDirective = /** @class */ (function () {
        function ThyStopPropagationDirective(_elementRef, _renderer) {
            this._elementRef = _elementRef;
            this._renderer = _renderer;
            this._eventName = 'click';
            this.isStopPropagation = true;
        }
        Object.defineProperty(ThyStopPropagationDirective.prototype, "thyStopPropagation", {
            set: function (value) {
                if (value === false || value === 'false') {
                    this.isStopPropagation = false;
                }
                else {
                    this.isStopPropagation = true;
                    this._eventName = value || 'click';
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyStopPropagationDirective.prototype.ngOnInit = function () {
            if (this.isStopPropagation) {
                this._listener = this._renderer.listen(this._elementRef.nativeElement, this._eventName, function ($event) {
                    $event.stopPropagation();
                });
            }
        };
        ThyStopPropagationDirective.prototype.ngOnDestroy = function () {
            if (this._listener) {
                this._listener();
            }
        };
ThyStopPropagationDirective.ɵfac = function ThyStopPropagationDirective_Factory(t) { return new (t || ThyStopPropagationDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ThyStopPropagationDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyStopPropagationDirective, selectors: [["", "thyStopPropagation", ""]], inputs: { thyStopPropagation: "thyStopPropagation" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyStopPropagationDirective, [{
        type: core.Directive,
        args: [{
                selector: '[thyStopPropagation]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { thyStopPropagation: [{
            type: core.Input
        }] }); })();
        return ThyStopPropagationDirective;
    }());
    ThyStopPropagationDirective.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.Renderer2 }
    ]; };
    ThyStopPropagationDirective.propDecorators = {
        thyStopPropagation: [{ type: core.Input }]
    };

    var ThyContextMenuDirective = /** @class */ (function () {
        function ThyContextMenuDirective(ngZone, elementRef, renderer) {
            this.ngZone = ngZone;
            this.elementRef = elementRef;
            this.renderer = renderer;
            this.thyContextMenu = new core.EventEmitter();
        }
        ThyContextMenuDirective.prototype.rightClick = function (event) {
            var _this = this;
            event.preventDefault();
            this.ngZone.run(function () {
                _this.thyContextMenu.emit(event);
            });
        };
        ThyContextMenuDirective.prototype.ngOnInit = function () {
            var _this = this;
            this.ngZone.runOutsideAngular(function () {
                _this.renderer.listen(_this.elementRef.nativeElement, 'contextmenu', _this.rightClick.bind(_this));
            });
        };
ThyContextMenuDirective.ɵfac = function ThyContextMenuDirective_Factory(t) { return new (t || ThyContextMenuDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ThyContextMenuDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyContextMenuDirective, selectors: [["", "thyContextMenu", ""]], outputs: { thyContextMenu: "thyContextMenu" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyContextMenuDirective, [{
        type: core.Directive,
        args: [{
                selector: '[thyContextMenu]'
            }]
    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { thyContextMenu: [{
            type: core.Output
        }] }); })();
        return ThyContextMenuDirective;
    }());
    ThyContextMenuDirective.ctorParameters = function () { return [
        { type: core.NgZone },
        { type: core.ElementRef },
        { type: core.Renderer2 }
    ]; };
    ThyContextMenuDirective.propDecorators = {
        thyContextMenu: [{ type: core.Output }]
    };

    var ThyScrollDirective = /** @class */ (function () {
        function ThyScrollDirective(elementRef, ngZone) {
            var _this = this;
            this.elementRef = elementRef;
            this.ngZone = ngZone;
            this._destroyed = new rxjs.Subject();
            this._enable = true;
            this._initialled = false;
            this._elementScrolled = new rxjs.Observable(function (observer) { return _this.ngZone.runOutsideAngular(function () { return rxjs.fromEvent(_this.elementRef.nativeElement, 'scroll')
                .pipe(operators.takeUntil(_this._destroyed))
                .subscribe(observer); }); });
            this.thyOnScrolled = new core.EventEmitter();
        }
        Object.defineProperty(ThyScrollDirective.prototype, "thyEnable", {
            set: function (value) {
                var _this = this;
                this._enable = util.coerceBooleanProperty(value);
                if (this._initialled) {
                    if (this._enable && this._subscription === null) {
                        this._subscription = this._elementScrolled.subscribe(function () { return _this.thyOnScrolled.emit(_this.elementRef); });
                    }
                    else {
                        if (this._subscription) {
                            this._subscription.unsubscribe();
                            this._subscription = null;
                        }
                    }
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyScrollDirective.prototype.ngOnInit = function () {
            var _this = this;
            if (this._enable) {
                this._subscription = this._elementScrolled.subscribe(function () { return _this.thyOnScrolled.emit(_this.elementRef); });
            }
            this._initialled = true;
        };
        ThyScrollDirective.prototype.ngOnDestroy = function () {
            this._destroyed.next();
            this._destroyed.complete();
        };
        ThyScrollDirective.prototype.getElementRef = function () {
            return this.elementRef;
        };
ThyScrollDirective.ɵfac = function ThyScrollDirective_Factory(t) { return new (t || ThyScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ThyScrollDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyScrollDirective, selectors: [["", "thyScroll", ""]], inputs: { thyEnable: "thyEnable" }, outputs: { thyOnScrolled: "thyOnScrolled" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyScrollDirective, [{
        type: core.Directive,
        args: [{
                selector: '[thyScroll]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { thyOnScrolled: [{
            type: core.Output
        }], thyEnable: [{
            type: core.Input
        }] }); })();
        return ThyScrollDirective;
    }());
    ThyScrollDirective.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.NgZone }
    ]; };
    ThyScrollDirective.propDecorators = {
        thyEnable: [{ type: core.Input }],
        thyOnScrolled: [{ type: core.Output }]
    };

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var _MixinBase$1 = core$1.mixinUnsubscribe(core$1.MixinBase);
    var ThyDragDropDirective = /** @class */ (function (_super) {
        __extends(ThyDragDropDirective, _super);
        function ThyDragDropDirective() {
            return _super.call(this) || this;
        }
        ThyDragDropDirective.prototype.ngAfterContentInit = function () {
            var _this = this;
            if (this.draggables) {
                this.draggables.changes.pipe(operators.startWith(this.draggables)).subscribe(function () {
                    _super.prototype.ngOnDestroy.call(_this);
                    _this.ngUnsubscribe$ = new rxjs.Subject();
                    rxjs.merge.apply(void 0, __spread(_this.draggables.toArray().map(function (dragRef) {
                        return dragRef.started;
                    }))).pipe(operators.takeUntil(_this.ngUnsubscribe$))
                        .subscribe(function () {
                        document.body.classList.add('thy-dragging-body');
                    });
                    rxjs.merge.apply(void 0, __spread(_this.draggables.toArray().map(function (dragRef) { return dragRef.released; }))).pipe(operators.takeUntil(_this.ngUnsubscribe$))
                        .subscribe(function () {
                        document.body.classList.remove('thy-dragging-body');
                    });
                });
            }
        };
        ThyDragDropDirective.prototype.ngOnDestroy = function () {
            _super.prototype.ngOnDestroy.call(this);
        };
ThyDragDropDirective.ɵfac = function ThyDragDropDirective_Factory(t) { return new (t || ThyDragDropDirective)(); };
ThyDragDropDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyDragDropDirective, selectors: [["", "thyDragDrop", ""]], contentQueries: function ThyDragDropDirective_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, dragDrop.CdkDrag, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.draggables = _t);
    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDragDropDirective, [{
        type: core.Directive,
        args: [{
                selector: '[thyDragDrop]'
            }]
    }], function () { return []; }, { draggables: [{
            type: core.ContentChildren,
            args: [dragDrop.CdkDrag, { descendants: true }]
        }] }); })();
        return ThyDragDropDirective;
    }(_MixinBase$1));
    ThyDragDropDirective.ctorParameters = function () { return []; };
    ThyDragDropDirective.propDecorators = {
        draggables: [{ type: core.ContentChildren, args: [dragDrop.CdkDrag, { descendants: true },] }]
    };

    var ThySharedModule = /** @class */ (function () {
        function ThySharedModule() {
        }
ThySharedModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThySharedModule });
ThySharedModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThySharedModule_Factory(t) { return new (t || ThySharedModule)(); }, providers: [] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThySharedModule, { declarations: [ThyTranscludeDirective, ThyAutofocusDirective, ThyEnterDirective, ThyCtrlEnterDirective, ThyShowDirective, ThyStopPropagationDirective, ThyContextMenuDirective, ThyScrollDirective, ThyDragDropDirective], exports: [ThyTranscludeDirective, ThyAutofocusDirective, ThyEnterDirective, ThyCtrlEnterDirective, ThyShowDirective, ThyStopPropagationDirective, ThyContextMenuDirective, ThyScrollDirective, ThyDragDropDirective] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThySharedModule, [{
        type: core.NgModule,
        args: [{
                declarations: [
                    ThyTranscludeDirective,
                    ThyAutofocusDirective,
                    ThyEnterDirective,
                    ThyCtrlEnterDirective,
                    ThyShowDirective,
                    ThyStopPropagationDirective,
                    ThyContextMenuDirective,
                    ThyScrollDirective,
                    ThyDragDropDirective
                ],
                exports: [
                    ThyTranscludeDirective,
                    ThyAutofocusDirective,
                    ThyEnterDirective,
                    ThyCtrlEnterDirective,
                    ThyShowDirective,
                    ThyStopPropagationDirective,
                    ThyContextMenuDirective,
                    ThyScrollDirective,
                    ThyDragDropDirective
                ],
                providers: []
            }]
    }], function () { return []; }, null); })();
        return ThySharedModule;
    }());

    var noop = function () { };
    var ɵ0 = noop;
    var ThyFormCheckBaseComponent = /** @class */ (function () {
        function ThyFormCheckBaseComponent(thyTranslate, changeDetectorRef) {
            this.thyTranslate = thyTranslate;
            this.changeDetectorRef = changeDetectorRef;
            // The internal data model
            this._innerValue = null;
            this._disabled = false;
            this.onTouchedCallback = noop;
            this.onChangeCallback = noop;
            this._isFormCheck = true;
            this._isFormCheckInline = false;
            this._isChecked = false;
        }
        Object.defineProperty(ThyFormCheckBaseComponent.prototype, "_isNoText", {
            get: function () {
                return this._isFormCheckInline && !this._labelText;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyFormCheckBaseComponent.prototype, "thyInline", {
            set: function (value) {
                this._isFormCheckInline = util.coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyFormCheckBaseComponent.prototype, "thyLabelText", {
            set: function (value) {
                this._labelText = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyFormCheckBaseComponent.prototype, "thyLabelTextTranslateKey", {
            set: function (value) {
                if (value) {
                    this._labelText = this.thyTranslate.instant(value);
                }
                else {
                    this._labelText = '';
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyFormCheckBaseComponent.prototype, "thyDisabled", {
            set: function (value) {
                this.setDisabledState(util.coerceBooleanProperty(value));
            },
            enumerable: false,
            configurable: true
        });
        ThyFormCheckBaseComponent.prototype.writeValue = function (obj) {
            if (obj !== this._innerValue) {
                this._innerValue = obj;
                this._isChecked = !!this._innerValue;
            }
        };
        ThyFormCheckBaseComponent.prototype.registerOnChange = function (fn) {
            this.onChangeCallback = fn;
        };
        ThyFormCheckBaseComponent.prototype.registerOnTouched = function (fn) {
            this.onTouchedCallback = fn;
        };
        ThyFormCheckBaseComponent.prototype.setDisabledState = function (isDisabled) {
            this._disabled = isDisabled;
            this.markForCheck();
        };
        ThyFormCheckBaseComponent.prototype.updateValue = function (value) {
            this._innerValue = value;
            this._isChecked = !!this._innerValue;
            this.onChangeCallback(value);
            this.markForCheck();
        };
        ThyFormCheckBaseComponent.prototype.change = function () {
            this.updateValue(!this._innerValue);
        };
        ThyFormCheckBaseComponent.prototype.markForCheck = function () {
            if (this.changeDetectorRef) {
                this.changeDetectorRef.markForCheck();
            }
        };
ThyFormCheckBaseComponent.ɵfac = function ThyFormCheckBaseComponent_Factory(t) { return new (t || ThyFormCheckBaseComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyTranslate), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ThyFormCheckBaseComponent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyFormCheckBaseComponent, hostVars: 8, hostBindings: function ThyFormCheckBaseComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("form-check", ctx._isFormCheck)("form-check-inline", ctx._isFormCheckInline)("form-check-checked", ctx._isChecked)("form-check-inline-no-label-text", ctx._isNoText);
    } }, inputs: { thyInline: "thyInline", thyLabelText: "thyLabelText", thyLabelTextTranslateKey: "thyLabelTextTranslateKey", thyDisabled: "thyDisabled" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyFormCheckBaseComponent, [{
        type: core.Directive
    }], function () { return [{ type: ɵngcc1.ThyTranslate }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _isFormCheck: [{
            type: core.HostBinding,
            args: ['class.form-check']
        }], _isFormCheckInline: [{
            type: core.HostBinding,
            args: ['class.form-check-inline']
        }], _isChecked: [{
            type: core.HostBinding,
            args: ['class.form-check-checked']
        }], _isNoText: [{
            type: core.HostBinding,
            args: ['class.form-check-inline-no-label-text']
        }], thyInline: [{
            type: core.Input
        }], thyLabelText: [{
            type: core.Input
        }], thyLabelTextTranslateKey: [{
            type: core.Input
        }], thyDisabled: [{
            type: core.Input
        }] }); })();
        return ThyFormCheckBaseComponent;
    }());
    ThyFormCheckBaseComponent.ctorParameters = function () { return [
        { type: core$1.ThyTranslate },
        { type: core.ChangeDetectorRef }
    ]; };
    ThyFormCheckBaseComponent.propDecorators = {
        _isFormCheck: [{ type: core.HostBinding, args: ['class.form-check',] }],
        _isFormCheckInline: [{ type: core.HostBinding, args: ['class.form-check-inline',] }],
        _isChecked: [{ type: core.HostBinding, args: ['class.form-check-checked',] }],
        _isNoText: [{ type: core.HostBinding, args: ['class.form-check-inline-no-label-text',] }],
        thyInline: [{ type: core.Input }],
        thyLabelText: [{ type: core.Input }],
        thyLabelTextTranslateKey: [{ type: core.Input }],
        thyDisabled: [{ type: core.Input }]
    };

    var ThySelectControlComponent = /** @class */ (function () {
        function ThySelectControlComponent(renderer, element, updateHostClassService) {
            this.renderer = renderer;
            this.element = element;
            this.updateHostClassService = updateHostClassService;
            this.inputValue = '';
            this.isComposing = false;
            this.panelOpened = false;
            this.isMultiple = false;
            this.showSearch = false;
            this.disabled = false;
            this.thyAllowClear = false;
            this.thyPlaceholder = '';
            this.thyOnSearch = new core.EventEmitter();
            this.thyOnRemove = new core.EventEmitter();
            this.thyOnClear = new core.EventEmitter();
            this.updateHostClassService.initializeElement(this.element.nativeElement);
        }
        Object.defineProperty(ThySelectControlComponent.prototype, "thyPanelOpened", {
            get: function () {
                return this.panelOpened;
            },
            set: function (value) {
                var _this = this;
                this.panelOpened = value;
                if (this.panelOpened && this.thyShowSearch) {
                    Promise.resolve(null).then(function () {
                        _this.inputElement.nativeElement.focus();
                    });
                }
                if (!this.panelOpened && this.thyShowSearch) {
                    Promise.resolve(null).then(function () {
                        _this.setInputValue('');
                    });
                }
                this.setSelectControlClass();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "thyIsMultiple", {
            get: function () {
                return this.isMultiple;
            },
            set: function (value) {
                this.isMultiple = value;
                this.setSelectControlClass();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "thyShowSearch", {
            get: function () {
                return this.showSearch;
            },
            set: function (value) {
                this.showSearch = value;
                this.setSelectControlClass();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "thySelectedOptions", {
            get: function () {
                return this.selectedOptions;
            },
            set: function (value) {
                var _this = this;
                var sameValue = false;
                var oldValue = this.selectedOptions;
                if (this.isMultiple) {
                    if (oldValue instanceof Array && value instanceof Array && oldValue.length === value.length) {
                        sameValue = value.every(function (option, index) { return option.thyValue === oldValue[index].thyValue; });
                    }
                }
                else {
                    if (oldValue && value) {
                        sameValue = oldValue.thyValue === value.thyValue;
                    }
                }
                this.selectedOptions = value;
                if (this.panelOpened && this.thyShowSearch) {
                    if (!sameValue) {
                        Promise.resolve(null).then(function () {
                            _this.setInputValue('');
                        });
                    }
                    this.inputElement.nativeElement.focus();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "thyDisabled", {
            get: function () {
                return this.disabled;
            },
            set: function (value) {
                this.disabled = value;
                this.setSelectControlClass();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "thySize", {
            get: function () {
                return this.size;
            },
            set: function (value) {
                this.size = value;
                this.setSelectControlClass();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "selectedValueStyle", {
            get: function () {
                var showSelectedValue = false;
                if (this.showSearch) {
                    if (this.panelOpened) {
                        showSelectedValue = !(this.isComposing || this.inputValue);
                    }
                    else {
                        showSelectedValue = true;
                    }
                }
                else {
                    showSelectedValue = true;
                }
                return { display: showSelectedValue ? 'block' : 'none' };
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "placeholderStyle", {
            get: function () {
                var placeholder = true;
                if (this.isSelectedValue) {
                    placeholder = false;
                }
                if (!this.thyPlaceholder) {
                    placeholder = false;
                }
                if (this.isComposing || this.inputValue) {
                    placeholder = false;
                }
                return { display: placeholder ? 'block' : 'none' };
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "selectedValue", {
            get: function () {
                return this.thySelectedOptions;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "multipleSelectedValue", {
            get: function () {
                return this.thySelectedOptions;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "showClearIcon", {
            get: function () {
                return this.thyAllowClear && this.isSelectedValue;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectControlComponent.prototype, "isSelectedValue", {
            get: function () {
                return ((!this.isMultiple && !util.isUndefinedOrNull(this.thySelectedOptions)) ||
                    (this.isMultiple && this.thySelectedOptions.length > 0));
            },
            enumerable: false,
            configurable: true
        });
        ThySelectControlComponent.prototype.ngOnInit = function () {
            this.setSelectControlClass();
        };
        ThySelectControlComponent.prototype.setSelectControlClass = function () {
            var _a, _b, _c;
            var modeType = this.isMultiple ? 'multiple' : 'single';
            var selectControlClass = (_a = {},
                _a["form-control"] = true,
                _a["form-control-" + this.thySize] = !!this.thySize,
                _a["form-control-custom"] = true,
                _a["select-control"] = true,
                _a["select-control-" + modeType] = true,
                _a["select-control-show-search"] = this.showSearch,
                _a["panel-is-opened"] = this.panelOpened,
                _a["disabled"] = this.disabled,
                _a);
            this.updateHostClassService.updateClassByMap(selectControlClass);
            this.searchInputControlClass = (_b = {},
                _b["form-control"] = true,
                _b["form-control-" + this.thySize] = !!this.thySize,
                _b["search-input-field"] = true,
                _b["hidden"] = !this.thyShowSearch,
                _b);
            this.choiceContentClass = (_c = {},
                _c["choice-content"] = true,
                _c["text-truncate"] = true,
                _c["font-size-" + this.thySize] = !!this.thySize,
                _c);
        };
        ThySelectControlComponent.prototype.setInputValue = function (value) {
            if (value !== this.inputValue) {
                this.inputValue = value;
                this.updateWidth();
                this.thyOnSearch.emit(this.inputValue);
            }
        };
        ThySelectControlComponent.prototype.handleBackspace = function (event) {
            if (event.isComposing) {
                return;
            }
            if (this.inputValue.length === 0 && this.selectedOptions instanceof Array) {
                if (this.selectedOptions.length > 0) {
                    this.removeHandle(this.selectedOptions[this.selectedOptions.length - 1], event);
                }
            }
        };
        ThySelectControlComponent.prototype.updateWidth = function () {
            if (this.isMultiple && this.thyShowSearch) {
                if (this.inputValue || this.isComposing) {
                    this.renderer.setStyle(this.inputElement.nativeElement, 'width', this.inputElement.nativeElement.scrollWidth + "px");
                }
                else {
                    this.renderer.removeStyle(this.inputElement.nativeElement, 'width');
                }
            }
        };
        ThySelectControlComponent.prototype.removeHandle = function (item, $event) {
            this.thyOnRemove.emit({ item: item, $eventOrigin: $event });
        };
        ThySelectControlComponent.prototype.clearHandle = function ($event) {
            this.thyOnClear.emit($event);
        };
        ThySelectControlComponent.prototype.trackValue = function (_index, option) {
            return option.thyValue;
        };
ThySelectControlComponent.ɵfac = function ThySelectControlComponent_Factory(t) { return new (t || ThySelectControlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UpdateHostClassService)); };
ThySelectControlComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThySelectControlComponent, selectors: [["thy-select-control"], ["", "thySelectControl", ""]], viewQuery: function ThySelectControlComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);
    } }, inputs: { thyAllowClear: "thyAllowClear", thyPlaceholder: "thyPlaceholder", thyPanelOpened: "thyPanelOpened", thyIsMultiple: "thyIsMultiple", thyShowSearch: "thyShowSearch", thySelectedOptions: "thySelectedOptions", thyDisabled: "thyDisabled", thySize: "thySize", customDisplayTemplate: "customDisplayTemplate" }, outputs: { thyOnSearch: "thyOnSearch", thyOnRemove: "thyOnRemove", thyOnClear: "thyOnClear" }, features: [ɵngcc0.ɵɵProvidersFeature([core$1.UpdateHostClassService])], decls: 10, vars: 4, consts: [["inputTemplate", ""], [1, "select-control-rendered"], ["class", "text-placeholder text-truncate", 3, "ngStyle", 4, "ngIf"], [4, "ngIf", "ngIfElse"], ["single", ""], [1, "select-control-arrow"], ["thyIconName", "angle-down", 1, "font-size-base"], ["class", "select-control-clear remove-link", 3, "click", 4, "ngIf"], ["autocomplete", "something-new", 3, "ngClass", "ngModel", "disabled", "compositionstart", "compositionend", "input", "ngModelChange", "keydown.backspace"], ["inputElement", ""], [1, "text-placeholder", "text-truncate", 3, "ngStyle"], ["class", "choice", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "select-control-search"], [3, "ngTemplateOutlet"], [1, "choice"], [3, "ngClass"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["customDisplay", ""], [1, "choice-remove", "font-size-base", 3, "click"], ["thyIconName", "close", 1, "font-size-sm"], [4, "ngIf"], [1, "selected-value", "text-truncate", 3, "ngStyle"], [1, "select-control-clear", "remove-link", 3, "click"], ["thyIconName", "close-circle-bold-fill", 1, "remove-link-icon", "font-size-base"]], template: function ThySelectControlComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ThySelectControlComponent_ng_template_0_Template, 2, 3, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵtemplate(3, ThySelectControlComponent_div_3_Template, 2, 2, "div", 2);
        ɵngcc0.ɵɵtemplate(4, ThySelectControlComponent_ng_container_4_Template, 5, 3, "ng-container", 3);
        ɵngcc0.ɵɵtemplate(5, ThySelectControlComponent_ng_template_5_Template, 3, 2, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "span", 5);
        ɵngcc0.ɵɵelement(8, "thy-icon", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, ThySelectControlComponent_span_9_Template, 2, 0, "span", 7);
    } if (rf & 2) {
        var _r4 = ɵngcc0.ɵɵreference(6);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isSelectedValue);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isMultiple)("ngIfElse", _r4);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showClearIcon);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.ThyIconComponent, ɵngcc4.DefaultValueAccessor, ɵngcc2.NgClass, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc2.NgStyle, ɵngcc2.NgForOf, ɵngcc2.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThySelectControlComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-select-control,[thySelectControl]',
                template: "<ng-template #inputTemplate>\n  <input\n    #inputElement\n    (compositionstart)=\"isComposing = true\"\n    (compositionend)=\"isComposing = false\"\n    autocomplete=\"something-new\"\n    [ngClass]=\"searchInputControlClass\"\n    (input)=\"updateWidth()\"\n    [ngModel]=\"inputValue\"\n    (ngModelChange)=\"setInputValue($event)\"\n    (keydown.backspace)=\"handleBackspace($event)\"\n    [disabled]=\"thyDisabled\"\n  />\n</ng-template>\n\n<div class=\"select-control-rendered\">\n  <div class=\"text-placeholder text-truncate\" *ngIf=\"!isSelectedValue\" [ngStyle]=\"placeholderStyle\">\n    {{ thyPlaceholder }}\n  </div>\n  <ng-container *ngIf=\"isMultiple; else single\">\n    <ul>\n      <li class=\"choice\" *ngFor=\"let item of multipleSelectedValue; trackBy: trackValue\">\n        <div [ngClass]=\"choiceContentClass\">\n          <ng-template\n            #customDisplay\n            [ngTemplateOutlet]=\"customDisplayTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: item.thyRawValue || item.thyValue || item }\"\n          ></ng-template>\n          <ng-container *ngIf=\"!customDisplayTemplate; else customDisplay\">\n            {{ item.thyLabelText }}\n          </ng-container>\n        </div>\n        <span class=\"choice-remove font-size-base\" (click)=\"removeHandle(item, $event)\">\n          <thy-icon thyIconName=\"close\" class=\"font-size-sm\"></thy-icon>\n        </span>\n      </li>\n      <li class=\"select-control-search\">\n        <ng-template [ngTemplateOutlet]=\"inputTemplate\"></ng-template>\n      </li>\n    </ul>\n  </ng-container>\n  <ng-template #single>\n    <ng-container *ngIf=\"isSelectedValue\">\n      <div class=\"selected-value text-truncate\" [ngStyle]=\"selectedValueStyle\">\n        <ng-template\n          #customDisplay\n          [ngTemplateOutlet]=\"customDisplayTemplate\"\n          [ngTemplateOutletContext]=\"{\n            $implicit: selectedValue.thyRawValue || selectedValue.thyValue || selectedValue\n          }\"\n        ></ng-template>\n        <ng-container *ngIf=\"!customDisplayTemplate; else customDisplay\">\n          {{ selectedValue?.thyLabelText }}\n        </ng-container>\n      </div>\n    </ng-container>\n    <div class=\"select-control-search\">\n      <ng-template [ngTemplateOutlet]=\"inputTemplate\"></ng-template>\n    </div>\n  </ng-template>\n</div>\n<span class=\"select-control-arrow\">\n  <thy-icon thyIconName=\"angle-down\" class=\"font-size-base\"></thy-icon>\n</span>\n<span class=\"select-control-clear remove-link\" *ngIf=\"showClearIcon\" (click)=\"clearHandle($event)\">\n  <thy-icon class=\"remove-link-icon font-size-base\" thyIconName=\"close-circle-bold-fill\"></thy-icon>\n</span>\n",
                providers: [core$1.UpdateHostClassService],
                changeDetection: core.ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.UpdateHostClassService }]; }, { thyAllowClear: [{
            type: core.Input
        }], thyPlaceholder: [{
            type: core.Input
        }], thyOnSearch: [{
            type: core.Output
        }], thyOnRemove: [{
            type: core.Output
        }], thyOnClear: [{
            type: core.Output
        }], thyPanelOpened: [{
            type: core.Input
        }], thyIsMultiple: [{
            type: core.Input
        }], thyShowSearch: [{
            type: core.Input
        }], thySelectedOptions: [{
            type: core.Input
        }], thyDisabled: [{
            type: core.Input
        }], thySize: [{
            type: core.Input
        }], customDisplayTemplate: [{
            type: core.Input
        }], inputElement: [{
            type: core.ViewChild,
            args: ['inputElement']
        }] }); })();
        return ThySelectControlComponent;
    }());
    ThySelectControlComponent.ctorParameters = function () { return [
        { type: core.Renderer2 },
        { type: core.ElementRef },
        { type: core$1.UpdateHostClassService }
    ]; };
    ThySelectControlComponent.propDecorators = {
        thyPanelOpened: [{ type: core.Input }],
        thyIsMultiple: [{ type: core.Input }],
        thyShowSearch: [{ type: core.Input }],
        thySelectedOptions: [{ type: core.Input }],
        thyDisabled: [{ type: core.Input }],
        customDisplayTemplate: [{ type: core.Input }],
        thyAllowClear: [{ type: core.Input }],
        thyPlaceholder: [{ type: core.Input }],
        thySize: [{ type: core.Input }],
        thyOnSearch: [{ type: core.Output }],
        thyOnRemove: [{ type: core.Output }],
        thyOnClear: [{ type: core.Output }],
        inputElement: [{ type: core.ViewChild, args: ['inputElement',] }]
    };

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    var ThySelectCommonModule = /** @class */ (function () {
        function ThySelectCommonModule() {
        }
ThySelectCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThySelectCommonModule });
ThySelectCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThySelectCommonModule_Factory(t) { return new (t || ThySelectCommonModule)(); }, imports: [[common.CommonModule, forms.FormsModule, icon.ThyIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThySelectCommonModule, { declarations: [ThySelectControlComponent], imports: [ɵngcc2.CommonModule, ɵngcc4.FormsModule, ɵngcc3.ThyIconModule], exports: [ThySelectControlComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThySelectCommonModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule, forms.FormsModule, icon.ThyIconModule],
                exports: [ThySelectControlComponent],
                declarations: [ThySelectControlComponent]
            }]
    }], function () { return []; }, null); })();
        return ThySelectCommonModule;
    }());

    /**
     * Injection token used to provide the parent component to options.
     */
    var THY_OPTION_PARENT_COMPONENT = new core.InjectionToken('THY_OPTION_PARENT_COMPONENT');
    /**
     * Injection token used to provide the parent component to options.
     */
    var THY_OPTION_GROUP_COMPONENT = new core.InjectionToken('THY_OPTION_GROUP_COMPONENT');
    /**
     * Injection token used to provide the parent component to options.
     */
    var THY_LIST_OPTION_PARENT_COMPONENT = new core.InjectionToken('THY_LIST_OPTION_PARENT_COMPONENT');

    var _uniqueIdCounter = 0;
    var ThyListOptionComponent = /** @class */ (function () {
        function ThyListOptionComponent(element, changeDetector, 
        /** @docs-private */
        parentSelectionList) {
            this.element = element;
            this.changeDetector = changeDetector;
            this.parentSelectionList = parentSelectionList;
            this._role = 'option';
            this._tabIndex = -1;
            this.id = "thy-list-option-" + _uniqueIdCounter++;
        }
        Object.defineProperty(ThyListOptionComponent.prototype, "_isListOption", {
            get: function () {
                return this.parentSelectionList.layout === 'list';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyListOptionComponent.prototype, "_parentLayout", {
            get: function () {
                return this.parentSelectionList.layout === 'grid';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyListOptionComponent.prototype, "thyDisabled", {
            set: function (value) {
                this.disabled = util.coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyListOptionComponent.prototype, "selected", {
            /** Whether the option is selected. */
            get: function () {
                return this.parentSelectionList.isSelected(this);
            },
            enumerable: false,
            configurable: true
        });
        ThyListOptionComponent.prototype.onClick = function (event) {
            if (this.parentSelectionList.multiple || !this.parentSelectionList.isSelected(this)) {
                this.parentSelectionList.toggleOption(this, event);
                this.parentSelectionList.setActiveOption(this);
            }
        };
        // @HostListener('focus', ['$event'])
        // onFocus(event: Event) {
        //     this.parentSelectionList.setFocusedOption(this, event);
        // }
        /** Allows for programmatic focusing of the option. */
        // focus(origin?: FocusOrigin): void {
        //     this.element.nativeElement.focus();
        // }
        ThyListOptionComponent.prototype.setActiveStyles = function () {
            this.element.nativeElement.classList.add('hover');
            this.parentSelectionList.scrollIntoView(this);
        };
        ThyListOptionComponent.prototype.setInactiveStyles = function () {
            this.element.nativeElement.classList.remove('hover');
        };
        /**
         * Returns the list item's text label. Implemented as a part of the FocusKeyManager.
         * @docs-private
         */
        ThyListOptionComponent.prototype.getLabel = function () {
            return '';
        };
ThyListOptionComponent.ɵfac = function ThyListOptionComponent_Factory(t) { return new (t || ThyListOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(THY_LIST_OPTION_PARENT_COMPONENT, 8)); };
ThyListOptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyListOptionComponent, selectors: [["thy-list-option"], ["", "thy-list-option", ""]], hostVars: 10, hostBindings: function ThyListOptionComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ThyListOptionComponent_click_HostBindingHandler($event) { return ctx.onClick($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("role", ctx._role)("tabindex", ctx._tabIndex);
        ɵngcc0.ɵɵclassProp("thy-list-option", ctx._isListOption)("thy-grid-option", ctx._parentLayout)("active", ctx.selected)("disabled", ctx.disabled);
    } }, inputs: { id: "id", thyDisabled: "thyDisabled", thyValue: "thyValue" }, ngContentSelectors: _c2, decls: 3, vars: 2, consts: [["class", "checked-icon", 4, "ngIf"], [1, "checked-icon"], ["thyIconName", "check"], ["thyIconName", "check-circle-fill"]], template: function ThyListOptionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵtemplate(1, ThyListOptionComponent_span_1_Template, 2, 0, "span", 0);
        ɵngcc0.ɵɵtemplate(2, ThyListOptionComponent_span_2_Template, 2, 0, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.parentSelectionList.multiple && ctx.parentSelectionList.layout === "list");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.parentSelectionList.layout === "grid");
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.ThyIconComponent], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyListOptionComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-list-option,[thy-list-option]',
                template: "<ng-content></ng-content>\n<span class=\"checked-icon\" *ngIf=\"parentSelectionList.multiple && parentSelectionList.layout === 'list'\">\n  <thy-icon thyIconName=\"check\"></thy-icon>\n</span>\n<span *ngIf=\"parentSelectionList.layout === 'grid'\" class=\"checked-icon\">\n  <thy-icon thyIconName=\"check-circle-fill\"></thy-icon>\n</span>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{
                type: core.Optional
            }, {
                type: core.Inject,
                args: [THY_LIST_OPTION_PARENT_COMPONENT]
            }] }]; }, { _role: [{
            type: core.HostBinding,
            args: ["attr.role"]
        }], _tabIndex: [{
            type: core.HostBinding,
            args: ["attr.tabindex"]
        }], id: [{
            type: core.Input
        }], _isListOption: [{
            type: core.HostBinding,
            args: ["class.thy-list-option"]
        }], _parentLayout: [{
            type: core.HostBinding,
            args: ["class.thy-grid-option"]
        }], thyDisabled: [{
            type: core.Input
        }], selected: [{
            type: core.HostBinding,
            args: ["class.active"]
        }], onClick: [{
            type: core.HostListener,
            args: ['click', ['$event']]
        }], thyValue: [{
            type: core.Input
        }], disabled: [{
            type: core.HostBinding,
            args: ["class.disabled"]
        }] }); })();
        return ThyListOptionComponent;
    }());
    ThyListOptionComponent.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.ChangeDetectorRef },
        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [THY_LIST_OPTION_PARENT_COMPONENT,] }] }
    ]; };
    ThyListOptionComponent.propDecorators = {
        _isListOption: [{ type: core.HostBinding, args: ["class.thy-list-option",] }],
        _parentLayout: [{ type: core.HostBinding, args: ["class.thy-grid-option",] }],
        _role: [{ type: core.HostBinding, args: ["attr.role",] }],
        _tabIndex: [{ type: core.HostBinding, args: ["attr.tabindex",] }],
        id: [{ type: core.Input }],
        thyValue: [{ type: core.Input }],
        thyDisabled: [{ type: core.Input }],
        disabled: [{ type: core.HostBinding, args: ["class.disabled",] }],
        selected: [{ type: core.HostBinding, args: ["class.active",] }],
        onClick: [{ type: core.HostListener, args: ['click', ['$event'],] }]
    };

    var _MixinBase = core$1.mixinDisabled(core$1.MixinBase);
    var ThyOptionGroupComponent = /** @class */ (function (_super) {
        __extends(ThyOptionGroupComponent, _super);
        function ThyOptionGroupComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Object.defineProperty(ThyOptionGroupComponent.prototype, "thyDisabled", {
            set: function (value) {
                this.thyDisabled = value;
            },
            enumerable: false,
            configurable: true
        });
ThyOptionGroupComponent.ɵfac = function ThyOptionGroupComponent_Factory(t) { return ɵThyOptionGroupComponent_BaseFactory(t || ThyOptionGroupComponent); };
ThyOptionGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyOptionGroupComponent, selectors: [["thy-list-option-group"], ["", "thy-list-option-group", ""]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 1, vars: 0, template: function ThyOptionGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
var ɵThyOptionGroupComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ThyOptionGroupComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyOptionGroupComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-list-option-group,[thy-list-option-group]',
                template: '<ng-content></ng-content>',
                encapsulation: core.ViewEncapsulation.None,
                changeDetection: core.ChangeDetectionStrategy.OnPush
            }]
    }], null, null); })();
        return ThyOptionGroupComponent;
    }(_MixinBase));

    var SelectOptionBase = /** @class */ (function () {
        function SelectOptionBase() {
        }
        return SelectOptionBase;
    }());

    var ThyOptionSelectionChangeEvent = /** @class */ (function () {
        function ThyOptionSelectionChangeEvent(option, isUserInput) {
            if (isUserInput === void 0) { isUserInput = false; }
            this.option = option;
            this.isUserInput = isUserInput;
        }
        return ThyOptionSelectionChangeEvent;
    }());
    var ThyOptionVisibleChangeEvent = /** @class */ (function () {
        function ThyOptionVisibleChangeEvent() {
        }
        return ThyOptionVisibleChangeEvent;
    }());
    var ThyOptionComponent = /** @class */ (function (_super) {
        __extends(ThyOptionComponent, _super);
        function ThyOptionComponent(element, parent, group, cdr) {
            var _this = _super.call(this) || this;
            _this.element = element;
            _this.parent = parent;
            _this.group = group;
            _this.cdr = cdr;
            _this._selected = false;
            _this._hidden = false;
            _this._disabled = false;
            _this._isOptionItem = true;
            _this.selectionChange = new core.EventEmitter();
            _this.visibleChange = new core.EventEmitter();
            return _this;
        }
        Object.defineProperty(ThyOptionComponent.prototype, "thyDisabled", {
            get: function () {
                return this._disabled;
            },
            set: function (value) {
                this._disabled = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyOptionComponent.prototype, "disabled", {
            get: function () {
                return this.hidden || this._disabled;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyOptionComponent.prototype, "hidden", {
            get: function () {
                return this._hidden;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyOptionComponent.prototype, "tabIndex", {
            get: function () {
                return this.disabled ? '-1' : '0';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyOptionComponent.prototype, "selected", {
            get: function () {
                return this._selected;
            },
            enumerable: false,
            configurable: true
        });
        ThyOptionComponent.prototype.getHostElement = function () {
            return this.element.nativeElement;
        };
        ThyOptionComponent.prototype.onClick = function (event) {
            this.selectViaInteraction();
        };
        ThyOptionComponent.prototype.handleKeydown = function (event) {
            if ((event.keyCode === util.ENTER || event.keyCode === util.SPACE) && !util.hasModifierKey(event)) {
                this.selectViaInteraction();
                event.preventDefault();
            }
        };
        ThyOptionComponent.prototype.selectViaInteraction = function () {
            if (!this.disabled) {
                this._selected = this.parent.isMultiple ? !this._selected : true;
                this.cdr.markForCheck();
                this.emitSelectionChangeEvent(true);
            }
        };
        ThyOptionComponent.prototype.select = function (event) {
            if (!this.disabled) {
                if (!this._selected) {
                    this._selected = true;
                    this.emitSelectionChangeEvent();
                    this.cdr.markForCheck();
                }
            }
        };
        ThyOptionComponent.prototype.deselect = function () {
            if (this._selected) {
                this._selected = false;
                this.emitSelectionChangeEvent();
                this.cdr.markForCheck();
            }
        };
        ThyOptionComponent.prototype.hideOption = function () {
            if (!this._hidden) {
                this._hidden = true;
                this.visibleChange.emit({ option: this });
                this.cdr.markForCheck();
            }
        };
        ThyOptionComponent.prototype.showOption = function () {
            if (this._hidden) {
                this._hidden = false;
                this.visibleChange.emit({ option: this });
                this.cdr.markForCheck();
            }
        };
        ThyOptionComponent.prototype.matchSearchText = function (searchText) {
            if (this.thySearchKey) {
                if (this.thySearchKey.indexOf(searchText) >= 0) {
                    return true;
                }
                else {
                    return false;
                }
            }
            else {
                if (this.thyLabelText.indexOf(searchText) >= 0) {
                    return true;
                }
                else {
                    return false;
                }
            }
        };
        ThyOptionComponent.prototype.setActiveStyles = function () {
            this.getHostElement().classList.add('hover');
            this.cdr.markForCheck();
        };
        ThyOptionComponent.prototype.setInactiveStyles = function () {
            this.getHostElement().classList.remove('hover');
            this.cdr.markForCheck();
        };
        ThyOptionComponent.prototype.getLabel = function () {
            return '';
        };
        ThyOptionComponent.prototype.emitSelectionChangeEvent = function (isUserInput) {
            if (isUserInput === void 0) { isUserInput = false; }
            this.selectionChange.emit(new ThyOptionSelectionChangeEvent(this, isUserInput));
        };
        ThyOptionComponent.prototype.ngOnDestroy = function () { };
ThyOptionComponent.ɵfac = function ThyOptionComponent_Factory(t) { return new (t || ThyOptionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(THY_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(THY_OPTION_GROUP_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ThyOptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyOptionComponent, selectors: [["thy-option"]], viewQuery: function ThyOptionComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(core.TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, hostVars: 9, hostBindings: function ThyOptionComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ThyOptionComponent_click_HostBindingHandler($event) { return ctx.onClick($event); })("keydown", function ThyOptionComponent_keydown_HostBindingHandler($event) { return ctx.handleKeydown($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵattribute("tabindex", ctx.tabIndex);
        ɵngcc0.ɵɵclassProp("disabled", ctx.thyDisabled)("hidden", ctx.hidden)("active", ctx.selected)("thy-option-item", ctx._isOptionItem);
    } }, inputs: { thyDisabled: "thyDisabled", thyValue: "thyValue", thyRawValue: "thyRawValue", thyLabelText: "thyLabelText", thyShowOptionCustom: "thyShowOptionCustom", thySearchKey: "thySearchKey" }, outputs: { selectionChange: "selectionChange", visibleChange: "visibleChange" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 3, vars: 2, consts: [[4, "ngIf", "ngIfElse"], ["defaultOption", ""], [1, "checked-icon"], [1, "wtf", "wtf-checked"], [1, "text-truncate"]], template: function ThyOptionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ThyOptionComponent_ng_container_0_Template, 4, 0, "ng-container", 0);
        ɵngcc0.ɵɵtemplate(1, ThyOptionComponent_ng_template_1_Template, 4, 1, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.thyShowOptionCustom)("ngIfElse", _r1);
    } }, directives: [ɵngcc2.NgIf], encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyOptionComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-option',
                template: "<ng-container *ngIf=\"thyShowOptionCustom; else defaultOption\">\n  <ng-content></ng-content>\n  <span class=\"checked-icon\">\n    <i class=\"wtf wtf-checked\"></i>\n  </span>\n</ng-container>\n<ng-template #defaultOption>\n  <span class=\"text-truncate\">{{ thyLabelText }}</span>\n  <span class=\"checked-icon\">\n    <i class=\"wtf wtf-checked\"></i>\n  </span>\n</ng-template>\n",
                changeDetection: core.ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{
                type: core.Optional
            }, {
                type: core.Inject,
                args: [THY_OPTION_PARENT_COMPONENT]
            }] }, { type: undefined, decorators: [{
                type: core.Optional
            }, {
                type: core.Inject,
                args: [THY_OPTION_GROUP_COMPONENT]
            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { thyDisabled: [{
            type: core.Input
        }, {
            type: core.HostBinding,
            args: ["class.disabled"]
        }], hidden: [{
            type: core.HostBinding,
            args: ['class.hidden']
        }], tabIndex: [{
            type: core.HostBinding,
            args: ['attr.tabindex']
        }], selected: [{
            type: core.HostBinding,
            args: ["class.active"]
        }], onClick: [{
            type: core.HostListener,
            args: ['click', ['$event']]
        }], handleKeydown: [{
            type: core.HostListener,
            args: ['keydown', ['$event']]
        }], thyValue: [{
            type: core.Input
        }], thyRawValue: [{
            type: core.Input
        }], thyLabelText: [{
            type: core.Input
        }], thyShowOptionCustom: [{
            type: core.Input
        }], thySearchKey: [{
            type: core.Input
        }], _isOptionItem: [{
            type: core.HostBinding,
            args: ['class.thy-option-item']
        }], template: [{
            type: core.ViewChild,
            args: [core.TemplateRef, { static: true }]
        }], selectionChange: [{
            type: core.Output
        }], visibleChange: [{
            type: core.Output
        }] }); })();
        return ThyOptionComponent;
    }(SelectOptionBase));
    ThyOptionComponent.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [THY_OPTION_PARENT_COMPONENT,] }] },
        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [THY_OPTION_GROUP_COMPONENT,] }] },
        { type: core.ChangeDetectorRef }
    ]; };
    ThyOptionComponent.propDecorators = {
        thyValue: [{ type: core.Input }],
        thyRawValue: [{ type: core.Input }],
        thyLabelText: [{ type: core.Input }],
        thyShowOptionCustom: [{ type: core.Input }],
        thySearchKey: [{ type: core.Input }],
        _isOptionItem: [{ type: core.HostBinding, args: ['class.thy-option-item',] }],
        template: [{ type: core.ViewChild, args: [core.TemplateRef, { static: true },] }],
        thyDisabled: [{ type: core.Input }, { type: core.HostBinding, args: ["class.disabled",] }],
        hidden: [{ type: core.HostBinding, args: ['class.hidden',] }],
        tabIndex: [{ type: core.HostBinding, args: ['attr.tabindex',] }],
        selected: [{ type: core.HostBinding, args: ["class.active",] }],
        selectionChange: [{ type: core.Output }],
        visibleChange: [{ type: core.Output }],
        onClick: [{ type: core.HostListener, args: ['click', ['$event'],] }],
        handleKeydown: [{ type: core.HostListener, args: ['keydown', ['$event'],] }]
    };

    var ThySelectOptionGroupComponent = /** @class */ (function () {
        function ThySelectOptionGroupComponent(_ngZone) {
            var _this = this;
            this._ngZone = _ngZone;
            this._hidden = false;
            this._isOptionGroup = true;
            this._destroy$ = new rxjs.Subject();
            this.optionVisibleChanges = rxjs.defer(function () {
                if (_this.options) {
                    return rxjs.merge.apply(void 0, __spread(_this.options.map(function (option) { return option.visibleChange; })));
                }
                return _this._ngZone.onStable.asObservable().pipe(operators.take(1), operators.switchMap(function () { return _this.optionVisibleChanges; }));
            });
        }
        Object.defineProperty(ThySelectOptionGroupComponent.prototype, "hidden", {
            get: function () {
                return this._hidden;
            },
            enumerable: false,
            configurable: true
        });
        ThySelectOptionGroupComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.options.changes.pipe(operators.startWith(null), operators.takeUntil(this._destroy$)).subscribe(function () {
                _this._resetOptions();
            });
        };
        ThySelectOptionGroupComponent.prototype._resetOptions = function () {
            var _this = this;
            var changedOrDestroyed$ = rxjs.merge(this.options.changes, this._destroy$);
            rxjs.merge.apply(void 0, __spread(this.options.map(function (option) { return option.visibleChange; }))).pipe(operators.takeUntil(changedOrDestroyed$), operators.debounceTime(10), operators.map(function (event) {
                var hasOption = _this.options.find(function (option) {
                    if (!option.hidden) {
                        return true;
                    }
                });
                if (hasOption) {
                    return false;
                }
                else {
                    return true;
                }
            }))
                .subscribe(function (data) {
                _this._hidden = data;
            });
        };
        ThySelectOptionGroupComponent.prototype.ngOnDestroy = function () {
            this._destroy$.next();
            this._destroy$.complete();
        };
ThySelectOptionGroupComponent.ɵfac = function ThySelectOptionGroupComponent_Factory(t) { return new (t || ThySelectOptionGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ThySelectOptionGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThySelectOptionGroupComponent, selectors: [["thy-option-group"]], contentQueries: function ThySelectOptionGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ThyOptionComponent, false);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);
    } }, hostVars: 6, hostBindings: function ThySelectOptionGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-option-item-group", ctx._isOptionGroup)("thy-select-option-group-hidden", ctx.hidden)("disabled", ctx.thyDisabled);
    } }, inputs: { thyDisabled: "thyDisabled", thyGroupLabel: "thyGroupLabel" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: THY_OPTION_GROUP_COMPONENT,
                useExisting: ThySelectOptionGroupComponent
            }
        ])], ngContentSelectors: _c2, decls: 3, vars: 1, consts: [[1, "group-name", "text-desc"]], template: function ThySelectOptionGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(2);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.thyGroupLabel);
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThySelectOptionGroupComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-option-group',
                template: "<span class=\"group-name text-desc\">{{ thyGroupLabel }}</span>\n<ng-content></ng-content>\n",
                providers: [
                    {
                        provide: THY_OPTION_GROUP_COMPONENT,
                        useExisting: ThySelectOptionGroupComponent
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.NgZone }]; }, { _isOptionGroup: [{
            type: core.HostBinding,
            args: ['class.thy-option-item-group']
        }], hidden: [{
            type: core.HostBinding,
            args: ['class.thy-select-option-group-hidden']
        }], thyDisabled: [{
            type: core.Input
        }, {
            type: core.HostBinding,
            args: ["class.disabled"]
        }], thyGroupLabel: [{
            type: core.Input
        }], options: [{
            type: core.ContentChildren,
            args: [ThyOptionComponent]
        }] }); })();
        return ThySelectOptionGroupComponent;
    }());
    ThySelectOptionGroupComponent.ctorParameters = function () { return [
        { type: core.NgZone }
    ]; };
    ThySelectOptionGroupComponent.propDecorators = {
        thyDisabled: [{ type: core.Input }, { type: core.HostBinding, args: ["class.disabled",] }],
        _isOptionGroup: [{ type: core.HostBinding, args: ['class.thy-option-item-group',] }],
        hidden: [{ type: core.HostBinding, args: ['class.thy-select-option-group-hidden',] }],
        thyGroupLabel: [{ type: core.Input }],
        options: [{ type: core.ContentChildren, args: [ThyOptionComponent,] }]
    };

    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    var ThyOptionModule = /** @class */ (function () {
        function ThyOptionModule() {
        }
ThyOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyOptionModule });
ThyOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyOptionModule_Factory(t) { return new (t || ThyOptionModule)(); }, imports: [[common.CommonModule, icon.ThyIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyOptionModule, { declarations: [ThyListOptionComponent, ThyOptionGroupComponent, ThyOptionComponent, ThySelectOptionGroupComponent], imports: [ɵngcc2.CommonModule, ɵngcc3.ThyIconModule], exports: [ThyListOptionComponent, ThyOptionGroupComponent, ThyOptionComponent, ThySelectOptionGroupComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyOptionModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule, icon.ThyIconModule],
                exports: [ThyListOptionComponent, ThyOptionGroupComponent, ThyOptionComponent, ThySelectOptionGroupComponent],
                declarations: [ThyListOptionComponent, ThyOptionGroupComponent, ThyOptionComponent, ThySelectOptionGroupComponent]
            }]
    }], function () { return []; }, null); })();
        return ThyOptionModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.SelectOptionBase = SelectOptionBase;
    exports.THY_LIST_OPTION_PARENT_COMPONENT = THY_LIST_OPTION_PARENT_COMPONENT;
    exports.THY_OPTION_GROUP_COMPONENT = THY_OPTION_GROUP_COMPONENT;
    exports.THY_OPTION_PARENT_COMPONENT = THY_OPTION_PARENT_COMPONENT;
    exports.ThyAutofocusDirective = ThyAutofocusDirective;
    exports.ThyContextMenuDirective = ThyContextMenuDirective;
    exports.ThyCtrlEnterDirective = ThyCtrlEnterDirective;
    exports.ThyDragDropDirective = ThyDragDropDirective;
    exports.ThyEnterDirective = ThyEnterDirective;
    exports.ThyFormCheckBaseComponent = ThyFormCheckBaseComponent;
    exports.ThyListOptionComponent = ThyListOptionComponent;
    exports.ThyOptionComponent = ThyOptionComponent;
    exports.ThyOptionGroupComponent = ThyOptionGroupComponent;
    exports.ThyOptionModule = ThyOptionModule;
    exports.ThyOptionSelectionChangeEvent = ThyOptionSelectionChangeEvent;
    exports.ThyOptionVisibleChangeEvent = ThyOptionVisibleChangeEvent;
    exports.ThyScrollDirective = ThyScrollDirective;
    exports.ThySelectCommonModule = ThySelectCommonModule;
    exports.ThySelectControlComponent = ThySelectControlComponent;
    exports.ThySelectOptionGroupComponent = ThySelectOptionGroupComponent;
    exports.ThySharedModule = ThySharedModule;
    exports.ThyShowDirective = ThyShowDirective;
    exports.ThyStopPropagationDirective = ThyStopPropagationDirective;
    exports.ThyTranscludeDirective = ThyTranscludeDirective;
    exports.ɵ0 = ɵ0;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-tethys-shared.umd.js.map