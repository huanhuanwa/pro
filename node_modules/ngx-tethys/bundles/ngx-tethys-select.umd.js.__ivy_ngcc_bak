(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('ngx-tethys/empty'), require('ngx-tethys/icon'), require('ngx-tethys/input'), require('ngx-tethys/label'), require('ngx-tethys/loading'), require('ngx-tethys/shared'), require('@angular/cdk/overlay'), require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('ngx-tethys/core'), require('ngx-tethys/util'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk/a11y'), require('@angular/cdk/collections')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/select', ['exports', 'ngx-tethys/empty', 'ngx-tethys/icon', 'ngx-tethys/input', 'ngx-tethys/label', 'ngx-tethys/loading', 'ngx-tethys/shared', '@angular/cdk/overlay', '@angular/common', '@angular/core', '@angular/forms', 'ngx-tethys/core', 'ngx-tethys/util', 'rxjs', 'rxjs/operators', '@angular/cdk/a11y', '@angular/cdk/collections'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].select = {}), global['ngx-tethys'].empty, global['ngx-tethys'].icon, global['ngx-tethys'].input, global['ngx-tethys'].label, global['ngx-tethys'].loading, global['ngx-tethys'].shared, global.ng.cdk.overlay, global.ng.common, global.ng.core, global.ng.forms, global['ngx-tethys'].core, global['ngx-tethys'].util, global.rxjs, global.rxjs.operators, global.ng.cdk.a11y, global.ng.cdk.collections));
}(this, (function (exports, empty, icon, input, label, loading, shared, overlay, common, core, forms, core$1, util, rxjs, operators, a11y, collections) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var THY_SELECT_SCROLL_STRATEGY = new core.InjectionToken('thy-select-scroll-strategy');
    var THY_SELECT_SCROLL_STRATEGY_FACTORY = function (overlay) {
        return function () { return overlay.scrollStrategies.reposition(); };
    };
    var THY_SELECT_SCROLL_STRATEGY_PROVIDER = {
        provide: THY_SELECT_SCROLL_STRATEGY,
        deps: [overlay.Overlay],
        useFactory: THY_SELECT_SCROLL_STRATEGY_FACTORY
    };

    var SELECT_PANEL_MAX_HEIGHT = 300;
    var SELECT_OPTION_MAX_HEIGHT = 40;
    var SELECT_OPTION_GROUP_MAX_HEIGHT = 30;
    var SELECT_PANEL_PADDING_TOP = 10;
    var noop$1 = function () { };
    var ɵ0$1 = noop$1;
    var ThySelectCustomComponent = /** @class */ (function () {
        function ThySelectCustomComponent(ngZone, elementRef, updateHostClassService, viewportRuler, changeDetectorRef, scrollDispatcher, overlay, scrollStrategyFactory) {
            var _this = this;
            this.ngZone = ngZone;
            this.elementRef = elementRef;
            this.updateHostClassService = updateHostClassService;
            this.viewportRuler = viewportRuler;
            this.changeDetectorRef = changeDetectorRef;
            this.scrollDispatcher = scrollDispatcher;
            this.overlay = overlay;
            this.scrollStrategyFactory = scrollStrategyFactory;
            this.disabled = false;
            this.mode = '';
            this.emptyStateText = '无任何选项';
            this.emptySearchMessageText = '没有匹配到任何选项';
            this.scrollTop = 0;
            this.modalValue = null;
            this.defaultOffset = 4;
            this.destroy$ = new rxjs.Subject();
            this.onTouchedCallback = noop$1;
            this.onChangeCallback = noop$1;
            this.optionSelectionChanges = rxjs.defer(function () {
                if (_this.options) {
                    return rxjs.merge.apply(void 0, __spread(_this.options.map(function (option) { return option.selectionChange; })));
                }
                return _this.ngZone.onStable.asObservable().pipe(operators.take(1), operators.switchMap(function () { return _this.optionSelectionChanges; }));
            });
            this.isSelectCustom = true;
            this.isSelect = true;
            this.panelOpen = false;
            this.tabIndex = '0';
            this.thyOnSearch = new core.EventEmitter();
            this.thyOnScrollToBottom = new core.EventEmitter();
            this.thyOnExpandStatusChange = new core.EventEmitter();
            this.thyLoadState = true;
            this.thyEnableScrollLoad = false;
            this.thyAllowClear = false;
            this.thyPlacement = 'bottom';
            this.thyFooterClass = 'thy-custom-select-footer';
            this.thyHasBackdrop = false;
            this.updateHostClassService.initializeElement(elementRef.nativeElement);
            this.buildScrollStrategy();
        }
        Object.defineProperty(ThySelectCustomComponent.prototype, "thyMode", {
            get: function () {
                return this.mode;
            },
            set: function (value) {
                this.mode = value;
                this.instanceSelectionModel();
                this.getPositions();
                this.setDropDownClass();
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectCustomComponent.prototype, "thySize", {
            get: function () {
                return this.size;
            },
            set: function (value) {
                this.size = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectCustomComponent.prototype, "thyEmptyStateText", {
            set: function (value) {
                this.emptyStateText = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectCustomComponent.prototype, "thyEmptySearchMessageText", {
            set: function (value) {
                this.emptySearchMessageText = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectCustomComponent.prototype, "thyDisabled", {
            set: function (value) {
                this.disabled = util.coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        ThySelectCustomComponent.prototype.handleKeydown = function (event) {
            if (!this.disabled) {
                if (event.keyCode === util.ENTER) {
                    event.stopPropagation();
                }
                this.panelOpen ? this.handleOpenKeydown(event) : this.handleClosedKeydown(event);
            }
        };
        ThySelectCustomComponent.prototype.onDocumentClick = function (event) {
            if (!this.elementRef.nativeElement.contains(event.target) && this.panelOpen) {
                this.close();
            }
        };
        Object.defineProperty(ThySelectCustomComponent.prototype, "optionsChanges$", {
            get: function () {
                var _this = this;
                var previousOptions = this.options.toArray();
                return this.options.changes.pipe(operators.map(function (data) {
                    return _this.options.toArray();
                }), operators.filter(function (data) {
                    var res = previousOptions.length !== data.length || previousOptions.some(function (op, index) { return op !== data[index]; });
                    previousOptions = data;
                    return res;
                }));
            },
            enumerable: false,
            configurable: true
        });
        ThySelectCustomComponent.prototype.buildScrollStrategy = function () {
            if (this.scrollStrategyFactory && util.isFunction(this.scrollStrategyFactory)) {
                this.scrollStrategy = this.scrollStrategyFactory();
            }
            else {
                this.scrollStrategy = this.overlay.scrollStrategies.reposition();
            }
        };
        ThySelectCustomComponent.prototype.writeValue = function (value) {
            this.modalValue = value;
            if (this.options && this.options.length > 0) {
                this.setSelectionByModelValue(this.modalValue);
            }
        };
        ThySelectCustomComponent.prototype.registerOnChange = function (fn) {
            this.onChangeCallback = fn;
        };
        ThySelectCustomComponent.prototype.registerOnTouched = function (fn) {
            this.onTouchedCallback = fn;
        };
        ThySelectCustomComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.getPositions();
            this.viewportRuler
                .change()
                .pipe(operators.takeUntil(this.destroy$))
                .subscribe(function () {
                if (_this.panelOpen) {
                    _this.triggerRect = _this.trigger.nativeElement.getBoundingClientRect();
                    _this.changeDetectorRef.markForCheck();
                }
            });
            if (!this.selectionModel) {
                this.instanceSelectionModel();
            }
            this.setDropDownClass();
        };
        ThySelectCustomComponent.prototype.ngAfterContentInit = function () {
            var _this = this;
            this.optionsChanges$.pipe(operators.startWith(null), operators.takeUntil(this.destroy$)).subscribe(function (data) {
                _this.resetOptions();
                _this.initializeSelection();
                _this.initKeyManager();
                _this.highlightCorrectOption(false);
                _this.changeDetectorRef.markForCheck();
            });
            if (this.thyAutoExpand) {
                rxjs.timer().subscribe(function () {
                    _this.changeDetectorRef.markForCheck();
                    _this.open();
                    _this.focus();
                });
            }
        };
        Object.defineProperty(ThySelectCustomComponent.prototype, "isHiddenOptions", {
            get: function () {
                return this.options.toArray().every(function (option) { return option.hidden; });
            },
            enumerable: false,
            configurable: true
        });
        ThySelectCustomComponent.prototype.onAttached = function () {
            var _this = this;
            this.cdkConnectedOverlay.positionChange.pipe(operators.take(1)).subscribe(function () {
                if (_this.panel) {
                    if (_this.keyManager.activeItem) {
                        core$1.ScrollToService.scrollToElement(_this.keyManager.activeItem.element.nativeElement, _this.panel.nativeElement);
                        _this.changeDetectorRef.detectChanges();
                    }
                    else {
                        if (!_this.empty) {
                            core$1.ScrollToService.scrollToElement(_this.selectionModel.selected[0].element.nativeElement, _this.panel.nativeElement);
                            _this.changeDetectorRef.detectChanges();
                        }
                    }
                }
            });
        };
        ThySelectCustomComponent.prototype.dropDownMouseMove = function (event) {
            if (this.keyManager.activeItem) {
                this.keyManager.setActiveItem(-1);
            }
        };
        ThySelectCustomComponent.prototype.onOptionsScrolled = function (elementRef) {
            var _this = this;
            var scroll = this.elementRef.nativeElement.scrollTop, height = this.elementRef.nativeElement.clientHeight, scrollHeight = this.elementRef.nativeElement.scrollHeight;
            if (scroll + height + 10 >= scrollHeight) {
                this.ngZone.run(function () {
                    _this.thyOnScrollToBottom.emit();
                });
            }
        };
        ThySelectCustomComponent.prototype.focus = function (options) {
            this.elementRef.nativeElement.focus(options);
        };
        ThySelectCustomComponent.prototype.onSearchFilter = function (searchText) {
            searchText = searchText.trim();
            if (this.thyServerSearch) {
                this.thyOnSearch.emit(searchText);
            }
            else {
                var options = this.options.toArray();
                options.forEach(function (option) {
                    if (option.matchSearchText(searchText)) {
                        option.showOption();
                    }
                    else {
                        option.hideOption();
                    }
                });
                this.highlightCorrectOption(false);
                this.updateCdkConnectedOverlayPositions();
            }
        };
        ThySelectCustomComponent.prototype.remove = function ($event) {
            $event.$eventOrigin.stopPropagation();
            if (this.disabled) {
                return;
            }
            if (!this.options.find(function (option) { return option === $event.item; })) {
                $event.item.deselect();
                // fix option unselect can not emit changes;
                this.onSelect($event.item, true);
            }
            else {
                $event.item.deselect();
            }
        };
        ThySelectCustomComponent.prototype.clearSelectValue = function (event) {
            if (event) {
                event.stopPropagation();
            }
            if (this.disabled) {
                return;
            }
            this.selectionModel.clear();
            this.changeDetectorRef.markForCheck();
            this.emitModelValueChange();
        };
        ThySelectCustomComponent.prototype.updateCdkConnectedOverlayPositions = function () {
            var _this = this;
            setTimeout(function () {
                if (_this.cdkConnectedOverlay && _this.cdkConnectedOverlay.overlayRef) {
                    _this.cdkConnectedOverlay.overlayRef.updatePosition();
                }
            });
        };
        Object.defineProperty(ThySelectCustomComponent.prototype, "selected", {
            get: function () {
                return this.isMultiple ? this.selectionModel.selected : this.selectionModel.selected[0];
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectCustomComponent.prototype, "isMultiple", {
            get: function () {
                return this.mode === 'multiple';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySelectCustomComponent.prototype, "empty", {
            get: function () {
                return !this.selectionModel || this.selectionModel.isEmpty();
            },
            enumerable: false,
            configurable: true
        });
        ThySelectCustomComponent.prototype.getItemCount = function () {
            return this.options.length + this.optionGroups.length;
        };
        ThySelectCustomComponent.prototype.toggle = function (event) {
            this.panelOpen ? this.close() : this.open();
        };
        ThySelectCustomComponent.prototype.open = function () {
            if (this.disabled || !this.options || this.panelOpen) {
                return;
            }
            this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();
            this.panelOpen = true;
            this.highlightCorrectOption();
            this.thyOnExpandStatusChange.emit(this.panelOpen);
        };
        ThySelectCustomComponent.prototype.close = function () {
            if (this.panelOpen) {
                this.panelOpen = false;
                this.thyOnExpandStatusChange.emit(this.panelOpen);
                this.focus();
                this.changeDetectorRef.markForCheck();
            }
        };
        ThySelectCustomComponent.prototype.emitModelValueChange = function () {
            var selectedValues = this.selectionModel.selected;
            var changeValue = selectedValues.map(function (option) {
                return option.thyValue;
            });
            if (this.isMultiple) {
                this.modalValue = changeValue;
            }
            else {
                if (changeValue.length === 0) {
                    this.modalValue = null;
                }
                else {
                    this.modalValue = changeValue[0];
                }
            }
            this.onChangeCallback(this.modalValue);
            this.updateCdkConnectedOverlayPositions();
        };
        ThySelectCustomComponent.prototype.highlightCorrectOption = function (fromOpenPanel) {
            if (fromOpenPanel === void 0) { fromOpenPanel = true; }
            if (this.keyManager && this.panelOpen) {
                if (fromOpenPanel) {
                    if (this.keyManager.activeItem) {
                        return;
                    }
                    if (this.empty) {
                        this.keyManager.setFirstItemActive();
                    }
                    else {
                        this.keyManager.setActiveItem(this.selectionModel.selected[0]);
                    }
                }
                else {
                    // always set first option active
                    this.keyManager.setFirstItemActive();
                }
            }
        };
        ThySelectCustomComponent.prototype.initKeyManager = function () {
            var _this = this;
            if (this.keyManager && this.keyManager.activeItem) {
                this.keyManager.activeItem.setInactiveStyles();
            }
            this.keyManager = new a11y.ActiveDescendantKeyManager(this.options)
                .withTypeAhead()
                .withWrap()
                .withVerticalOrientation()
                .withAllowedModifierKeys(['shiftKey']);
            this.keyManager.tabOut.pipe(operators.takeUntil(this.destroy$)).subscribe(function () {
                _this.focus();
                _this.close();
            });
            this.keyManager.change.pipe(operators.takeUntil(this.destroy$)).subscribe(function () {
                if (_this.panelOpen && _this.panel) {
                    if (_this.keyManager.activeItem) {
                        core$1.ScrollToService.scrollToElement(_this.keyManager.activeItem.element.nativeElement, _this.panel.nativeElement);
                    }
                }
                else if (!_this.panelOpen && !_this.isMultiple && _this.keyManager.activeItem) {
                    _this.keyManager.activeItem.selectViaInteraction();
                }
            });
        };
        ThySelectCustomComponent.prototype.handleClosedKeydown = function (event) {
            var keyCode = event.keyCode;
            var isArrowKey = keyCode === util.DOWN_ARROW || keyCode === util.UP_ARROW || keyCode === util.LEFT_ARROW || keyCode === util.RIGHT_ARROW;
            var isOpenKey = keyCode === util.ENTER || keyCode === util.SPACE;
            var manager = this.keyManager;
            // Open the select on ALT + arrow key to match the native <select>
            if ((isOpenKey && !util.hasModifierKey(event)) || ((this.isMultiple || event.altKey) && isArrowKey)) {
                event.preventDefault(); // prevents the page from scrolling down when pressing space
                this.open();
            }
            else if (!this.isMultiple) {
                var previouslySelectedOption = this.selected;
                if (keyCode === util.HOME || keyCode === util.END) {
                    keyCode === util.HOME ? manager.setFirstItemActive() : manager.setLastItemActive();
                    event.preventDefault();
                }
                else {
                    manager.onKeydown(event);
                }
            }
        };
        ThySelectCustomComponent.prototype.handleOpenKeydown = function (event) {
            var keyCode = event.keyCode;
            var isArrowKey = keyCode === util.DOWN_ARROW || keyCode === util.UP_ARROW;
            var manager = this.keyManager;
            if (keyCode === util.HOME || keyCode === util.END) {
                event.preventDefault();
                keyCode === util.HOME ? manager.setFirstItemActive() : manager.setLastItemActive();
            }
            else if (isArrowKey && event.altKey) {
                // Close the select on ALT + arrow key to match the native <select>
                event.preventDefault();
                this.close();
            }
            else if ((keyCode === util.ENTER || keyCode === util.SPACE) && (manager.activeItem || !this.empty) && !util.hasModifierKey(event)) {
                event.preventDefault();
                if (!manager.activeItem) {
                    if (manager.activeItemIndex === -1 && !this.empty) {
                        manager.setActiveItem(this.selectionModel.selected[0]);
                    }
                }
                manager.activeItem.selectViaInteraction();
            }
            else if (this.isMultiple && keyCode === util.A && event.ctrlKey) {
                event.preventDefault();
                var hasDeselectedOptions_1 = this.options.some(function (opt) { return !opt.disabled && !opt.selected; });
                this.options.forEach(function (option) {
                    if (!option.disabled) {
                        hasDeselectedOptions_1 ? option.select() : option.deselect();
                    }
                });
            }
            else {
                if (manager.activeItemIndex === -1 && !this.empty) {
                    manager.setActiveItem(this.selectionModel.selected[0]);
                }
                var previouslyFocusedIndex = manager.activeItemIndex;
                manager.onKeydown(event);
                if (this.isMultiple &&
                    isArrowKey &&
                    event.shiftKey &&
                    manager.activeItem &&
                    manager.activeItemIndex !== previouslyFocusedIndex) {
                    manager.activeItem.selectViaInteraction();
                }
            }
        };
        ThySelectCustomComponent.prototype.getPositions = function () {
            this.dropDownPositions = core$1.getFlexiblePositions(this.thyPlacement, this.defaultOffset);
        };
        ThySelectCustomComponent.prototype.instanceSelectionModel = function () {
            if (this.selectionModel) {
                this.selectionModel.clear();
            }
            this.selectionModel = new collections.SelectionModel(this.isMultiple);
            if (this.selectionModelSubscription) {
                this.selectionModelSubscription.unsubscribe();
                this.selectionModelSubscription = null;
            }
            this.selectionModelSubscription = this.selectionModel.changed.pipe(operators.takeUntil(this.destroy$)).subscribe(function (event) {
                event.added.forEach(function (option) { return option.select(); });
                event.removed.forEach(function (option) { return option.deselect(); });
            });
        };
        ThySelectCustomComponent.prototype.resetOptions = function () {
            var _this = this;
            var changedOrDestroyed$ = rxjs.merge(this.optionsChanges$, this.destroy$);
            this.optionSelectionChanges.pipe(operators.takeUntil(changedOrDestroyed$)).subscribe(function (event) {
                _this.onSelect(event.option, event.isUserInput);
                if (event.isUserInput && !_this.isMultiple && _this.panelOpen) {
                    _this.close();
                    _this.focus();
                }
            });
        };
        ThySelectCustomComponent.prototype.initializeSelection = function () {
            var _this = this;
            Promise.resolve().then(function () {
                _this.setSelectionByModelValue(_this.modalValue);
            });
        };
        ThySelectCustomComponent.prototype.setDropDownClass = function () {
            var _a;
            var modeClass = '';
            if (this.isMultiple) {
                modeClass = "thy-select-dropdown-" + this.mode;
            }
            else {
                modeClass = "thy-select-dropdown-single";
            }
            this.dropDownClass = (_a = {},
                _a["thy-select-dropdown"] = true,
                _a[modeClass] = true,
                _a);
        };
        ThySelectCustomComponent.prototype.setSelectionByModelValue = function (modalValue) {
            var _this = this;
            if (util.helpers.isUndefinedOrNull(modalValue)) {
                if (this.selectionModel.selected.length > 0) {
                    this.selectionModel.clear();
                    this.changeDetectorRef.markForCheck();
                }
                return;
            }
            if (this.isMultiple) {
                if (util.isArray(modalValue)) {
                    var selected_1 = __spread(this.selectionModel.selected);
                    this.selectionModel.clear();
                    modalValue.forEach(function (itemValue) {
                        var option = _this.options.find(function (_option) { return _option.thyValue === itemValue; }) ||
                            selected_1.find(function (_option) { return _option.thyValue === itemValue; });
                        if (option) {
                            _this.selectionModel.select(option);
                        }
                    });
                }
            }
            else {
                var selectedOption = this.options.find(function (option) {
                    return option.thyValue === modalValue;
                });
                if (selectedOption) {
                    this.selectionModel.select(selectedOption);
                }
            }
            this.changeDetectorRef.markForCheck();
        };
        ThySelectCustomComponent.prototype.onSelect = function (option, isUserInput) {
            var wasSelected = this.selectionModel.isSelected(option);
            if (option.thyValue == null && !this.isMultiple) {
                option.deselect();
                this.selectionModel.clear();
            }
            else {
                if (wasSelected !== option.selected) {
                    option.selected ? this.selectionModel.select(option) : this.selectionModel.deselect(option);
                }
                if (isUserInput) {
                    this.keyManager.setActiveItem(option);
                }
                if (this.isMultiple) {
                    this.sortValues();
                    if (isUserInput) {
                        this.focus();
                    }
                }
            }
            if (wasSelected !== this.selectionModel.isSelected(option)) {
                this.emitModelValueChange();
            }
            this.changeDetectorRef.markForCheck();
        };
        ThySelectCustomComponent.prototype.sortValues = function () {
            var _this = this;
            if (this.isMultiple) {
                var options_1 = this.options.toArray();
                if (this.thySortComparator) {
                    this.selectionModel.sort(function (a, b) {
                        return _this.thySortComparator(a, b, options_1);
                    });
                }
            }
        };
        ThySelectCustomComponent.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        return ThySelectCustomComponent;
    }());
    ThySelectCustomComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-custom-select',
                    template: "<div\n  cdk-overlay-origin\n  thySelectControl\n  (click)=\"toggle($event)\"\n  #origin=\"cdkOverlayOrigin\"\n  #trigger\n  [thyPanelOpened]=\"panelOpen\"\n  [thySelectedOptions]=\"selected\"\n  [thyIsMultiple]=\"isMultiple\"\n  [thyShowSearch]=\"thyShowSearch\"\n  [thyAllowClear]=\"thyAllowClear\"\n  [thySize]=\"thySize\"\n  [thyPlaceholder]=\"thyPlaceHolder\"\n  [customDisplayTemplate]=\"selectedValueDisplayRef\"\n  [thyDisabled]=\"disabled\"\n  (thyOnClear)=\"clearSelectValue($event)\"\n  (thyOnRemove)=\"remove($event)\"\n  (thyOnSearch)=\"onSearchFilter($event)\"\n></div>\n\n<ng-template\n  cdk-connected-overlay\n  cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n  [cdkConnectedOverlayHasBackdrop]=\"thyHasBackdrop\"\n  [cdkConnectedOverlayPositions]=\"dropDownPositions\"\n  [cdkConnectedOverlayOrigin]=\"origin\"\n  [cdkConnectedOverlayOpen]=\"panelOpen\"\n  [cdkConnectedOverlayWidth]=\"triggerRect?.width\"\n  [cdkConnectedOverlayScrollStrategy]=\"scrollStrategy\"\n  (attach)=\"onAttached()\"\n  (detach)=\"close()\"\n>\n  <div thyStopPropagation [ngClass]=\"dropDownClass\" (mousemove)=\"dropDownMouseMove($event)\">\n    <ng-container *ngIf=\"options.length > 0 || optionGroups.length > 0; else emptyPlaceholder\">\n      <div\n        #panel\n        class=\"thy-select-dropdown-options\"\n        thyScroll\n        (thyOnScrolled)=\"onOptionsScrolled($event)\"\n        [thyEnable]=\"thyEnableScrollLoad\"\n      >\n        <ng-content></ng-content>\n        <ng-container *ngIf=\"isHiddenOptions\">\n          <thy-loading [thyDone]=\"thyLoadState\" thySize=\"sm\"></thy-loading>\n          <div class=\"thy-select-empty-content\">\n            <thy-empty *ngIf=\"thyLoadState\" [thyMessage]=\"emptySearchMessageText\" thySize=\"sm\"></thy-empty>\n          </div>\n        </ng-container>\n      </div>\n    </ng-container>\n    <ng-template #emptyPlaceholder>\n      <thy-loading [thyDone]=\"thyLoadState\" thySize=\"sm\"></thy-loading>\n      <div class=\"thy-select-empty-content\">\n        <thy-empty *ngIf=\"thyLoadState\" [thyMessage]=\"emptyStateText\" thySize=\"sm\"></thy-empty>\n      </div>\n    </ng-template>\n    <div *ngIf=\"thyFooterTemplate\" [class]=\"thyFooterClass ? thyFooterClass : 'thy-custom-select-footer'\">\n      <ng-template *ngIf=\"thyFooterTemplate\" [ngTemplateOutlet]=\"thyFooterTemplate\"></ng-template>\n    </div>\n  </div>\n</ng-template>\n",
                    exportAs: 'thyCustomSelect',
                    providers: [
                        {
                            provide: shared.THY_OPTION_PARENT_COMPONENT,
                            useExisting: ThySelectCustomComponent
                        },
                        {
                            provide: forms.NG_VALUE_ACCESSOR,
                            useExisting: core.forwardRef(function () { return ThySelectCustomComponent; }),
                            multi: true
                        },
                        core$1.UpdateHostClassService
                    ],
                    changeDetection: core.ChangeDetectionStrategy.OnPush
                },] }
    ];
    ThySelectCustomComponent.ctorParameters = function () { return [
        { type: core.NgZone },
        { type: core.ElementRef },
        { type: core$1.UpdateHostClassService },
        { type: overlay.ViewportRuler },
        { type: core.ChangeDetectorRef },
        { type: overlay.ScrollDispatcher },
        { type: overlay.Overlay },
        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [THY_SELECT_SCROLL_STRATEGY,] }] }
    ]; };
    ThySelectCustomComponent.propDecorators = {
        cdkConnectedOverlay: [{ type: core.ViewChild, args: [overlay.CdkConnectedOverlay, { static: true },] }],
        isSelectCustom: [{ type: core.HostBinding, args: ['class.thy-select-custom',] }],
        isSelect: [{ type: core.HostBinding, args: ['class.thy-select',] }],
        panelOpen: [{ type: core.HostBinding, args: ['class.menu-is-opened',] }],
        tabIndex: [{ type: core.HostBinding, args: ['attr.tabindex',] }],
        thyOnSearch: [{ type: core.Output }],
        thyOnScrollToBottom: [{ type: core.Output }],
        thyOnExpandStatusChange: [{ type: core.Output }],
        thyShowSearch: [{ type: core.Input }],
        thyPlaceHolder: [{ type: core.Input }],
        thyServerSearch: [{ type: core.Input }],
        thyLoadState: [{ type: core.Input }],
        thyMode: [{ type: core.Input }],
        thySize: [{ type: core.Input }],
        thyEmptyStateText: [{ type: core.Input }],
        thyEmptySearchMessageText: [{ type: core.Input }],
        thyEnableScrollLoad: [{ type: core.Input }],
        thyAllowClear: [{ type: core.Input }],
        thyDisabled: [{ type: core.Input }],
        thySortComparator: [{ type: core.Input }],
        thyFooterTemplate: [{ type: core.Input }],
        thyPlacement: [{ type: core.Input }],
        thyFooterClass: [{ type: core.Input }],
        selectedValueDisplayRef: [{ type: core.ContentChild, args: ['selectedDisplay',] }],
        thyAutoExpand: [{ type: core.Input }],
        thyHasBackdrop: [{ type: core.Input }],
        trigger: [{ type: core.ViewChild, args: ['trigger', { read: core.ElementRef, static: true },] }],
        panel: [{ type: core.ViewChild, args: ['panel', { read: core.ElementRef },] }],
        options: [{ type: core.ContentChildren, args: [shared.ThyOptionComponent, { descendants: true },] }],
        optionGroups: [{ type: core.ContentChildren, args: [shared.ThySelectOptionGroupComponent,] }],
        handleKeydown: [{ type: core.HostListener, args: ['keydown', ['$event'],] }],
        onDocumentClick: [{ type: core.HostListener, args: ['document:click', ['$event'],] }]
    };
    __decorate([
        core$1.InputBoolean(),
        __metadata("design:type", Object)
    ], ThySelectCustomComponent.prototype, "thyHasBackdrop", void 0);

    var noop = function () { };
    var ɵ0 = noop;
    var ThySelectComponent = /** @class */ (function () {
        function ThySelectComponent(elementRef, updateHostClassService) {
            this.elementRef = elementRef;
            this.updateHostClassService = updateHostClassService;
            // The internal data model
            this._innerValue = null;
            this._disabled = false;
            this._expandOptions = false;
            this.onTouchedCallback = noop;
            this.onChangeCallback = noop;
            this._isSelect = true;
            this.thyAllowClear = false;
            this.updateHostClassService.initializeElement(elementRef.nativeElement);
        }
        Object.defineProperty(ThySelectComponent.prototype, "thySize", {
            set: function (value) {
                this._size = value;
            },
            enumerable: false,
            configurable: true
        });
        ThySelectComponent.prototype.writeValue = function (obj) {
            if (obj !== this._innerValue) {
                this._innerValue = obj;
            }
        };
        ThySelectComponent.prototype.registerOnChange = function (fn) {
            this.onChangeCallback = fn;
        };
        ThySelectComponent.prototype.registerOnTouched = function (fn) {
            this.onTouchedCallback = fn;
        };
        ThySelectComponent.prototype.setDisabledState = function (isDisabled) {
            this._disabled = isDisabled;
        };
        ThySelectComponent.prototype.ngModelChange = function () {
            this.onChangeCallback(this._innerValue);
        };
        ThySelectComponent.prototype.ngOnInit = function () {
            var classes = this._size ? ["thy-select-" + this._size] : [];
            this.updateHostClassService.updateClass(classes);
        };
        ThySelectComponent.prototype.clearSelectValue = function (event) {
            event.stopPropagation();
            this._innerValue = '';
            this.onChangeCallback(this._innerValue);
        };
        return ThySelectComponent;
    }());
    ThySelectComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-select',
                    template: "<select\n  thyInput\n  [thySize]=\"_size\"\n  [disabled]=\"_disabled\"\n  [(ngModel)]=\"_innerValue\"\n  (ngModelChange)=\"ngModelChange()\"\n  [class.thy-select-selection-allow-clear]=\"thyAllowClear\"\n>\n  <ng-content></ng-content>\n</select>\n<thy-icon thyIconName=\"angle-down\"></thy-icon>\n<a\n  class=\"thy-select-remove remove-link\"\n  href=\"javascript:;\"\n  (click)=\"clearSelectValue($event)\"\n  *ngIf=\"thyAllowClear && _innerValue\"\n>\n  <thy-icon class=\"remove-link-icon\" thyIconName=\"close-circle-bold-fill\"></thy-icon>\n</a>\n",
                    providers: [
                        {
                            provide: forms.NG_VALUE_ACCESSOR,
                            useExisting: core.forwardRef(function () { return ThySelectComponent; }),
                            multi: true
                        },
                        core$1.UpdateHostClassService
                    ]
                },] }
    ];
    ThySelectComponent.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core$1.UpdateHostClassService }
    ]; };
    ThySelectComponent.propDecorators = {
        _isSelect: [{ type: core.HostBinding, args: ['class.thy-select',] }],
        thySize: [{ type: core.Input }],
        name: [{ type: core.Input }],
        thyAllowClear: [{ type: core.Input }]
    };

    var ThySelectModule = /** @class */ (function () {
        function ThySelectModule() {
        }
        return ThySelectModule;
    }());
    ThySelectModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        common.CommonModule,
                        forms.FormsModule,
                        input.ThyInputModule,
                        label.ThyLabelModule,
                        overlay.OverlayModule,
                        loading.ThyLoadingModule,
                        shared.ThySharedModule,
                        icon.ThyIconModule,
                        empty.ThyEmptyModule,
                        shared.ThySelectCommonModule,
                        shared.ThyOptionModule
                    ],
                    declarations: [ThySelectComponent, ThySelectCustomComponent],
                    exports: [ThySelectComponent, ThySelectCustomComponent, shared.ThyOptionModule],
                    providers: [THY_SELECT_SCROLL_STRATEGY_PROVIDER]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.THY_SELECT_SCROLL_STRATEGY = THY_SELECT_SCROLL_STRATEGY;
    exports.THY_SELECT_SCROLL_STRATEGY_FACTORY = THY_SELECT_SCROLL_STRATEGY_FACTORY;
    exports.THY_SELECT_SCROLL_STRATEGY_PROVIDER = THY_SELECT_SCROLL_STRATEGY_PROVIDER;
    exports.ThySelectComponent = ThySelectComponent;
    exports.ThySelectCustomComponent = ThySelectCustomComponent;
    exports.ThySelectModule = ThySelectModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-tethys-select.umd.js.map
