{"version":3,"sources":["../../src/skeleton/skeleton.component.ts","../../src/skeleton/stylized/list.component.ts","../../src/skeleton/stylized/bullet-list.component.ts","../../src/skeleton/stylized/title.component.ts","../../src/skeleton/stylized/avatar.component.ts","../../src/skeleton/stylized/paragraph.component.ts","../../src/skeleton/module.ts"],"names":["ThySkeletonComponent","platformId","this","addSkeletonClass","thyAnimate","thyBaseUrl","thyWidth","thyHeight","thyViewBoxWidth","thyViewBoxHeight","thySpeed","thyPreserveAspectRatio","thyPrimaryColor","thySecondaryColor","thyPrimaryOpacity","thySecondaryOpacity","thyIgnoreBaseUrl","thyLoadingDone","contentTemplates","idClip","generateRandomStr","idGradient","defaultAnimation","rtlAnimation","prototype","ngOnInit","animationValues","thyRtl","isPlatformBrowser","window","location","pathname","setFillStyle","setClipPath","ngOnChanges","changes","previousValue","currentValue","fillStyle","fill","clipPath","assignInputProperties","input","thyUniqueKey","addTemplate","template","push","Component","args","selector","Inject","PLATFORM_ID","HostBinding","Input","ContentChild","ThySkeletonListComponent","skeletonComponent","contentTemplateRef","ViewChild","static","ThySkeletonBulletListComponent","thyCount","items","i","circle","cx","cy","r","rect","x","y","rx","ry","width","height","ThySkeletonTitleComponent","Object","defineProperty","value","exportAs","ThySkeletonAvatarComponent","ThySkeletonParagraphComponent","NgModule","declarations","imports","CommonModule","PortalModule","entryComponents","exports","providers"],"mappings":"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","sourcesContent":["import {\n    Component,\n    OnInit,\n    Input,\n    Inject,\n    PLATFORM_ID,\n    SimpleChanges,\n    OnChanges,\n    HostBinding,\n    TemplateRef,\n    ContentChild\n} from '@angular/core';\nimport { generateRandomStr } from 'ngx-tethys/util';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n    selector: 'thy-skeleton',\n    templateUrl: './skeleton.component.html'\n})\nexport class ThySkeletonComponent implements OnInit, OnChanges {\n    @HostBinding('class.thy-skeleton') addSkeletonClass = true;\n\n    @Input() thyAnimate = true;\n\n    @Input() thyBaseUrl = '';\n\n    @Input() thyWidth: string | number = '100%';\n\n    @Input() thyHeight: string | number = '100%';\n\n    @Input() thyViewBoxWidth: string | number = 400;\n\n    @Input() thyViewBoxHeight: string | number = 130;\n\n    @Input() thySpeed = 2;\n\n    @Input() thyPreserveAspectRatio = 'none'; // xMidYMid meet\n\n    @Input() thyPrimaryColor = '#f0f0f0';\n\n    @Input() thySecondaryColor = '#e0e0e0';\n\n    @Input() thyPrimaryOpacity = 1;\n\n    @Input() thySecondaryOpacity = 1;\n\n    @Input() thyUniqueKey: string;\n\n    @Input() thyRtl: string;\n\n    @Input() thyStyle: { [key: string]: string };\n\n    @Input() thyIgnoreBaseUrl = false;\n\n    @Input() thyLoadingDone = false;\n\n    @ContentChild('content')\n    customTemplate: TemplateRef<any>;\n\n    contentTemplates: TemplateRef<any>[] = [];\n\n    idClip = generateRandomStr();\n\n    idGradient = generateRandomStr();\n\n    defaultAnimation = ['-3; 1', '-2; 2', '-1; 3'];\n\n    rtlAnimation = ['1; -3', '2; -2', '3; -1'];\n\n    animationValues: string[];\n\n    fillStyle: { fill: string };\n\n    clipPath: string;\n\n    constructor(@Inject(PLATFORM_ID) private platformId: string) {}\n\n    ngOnInit() {\n        this.animationValues = this.thyRtl ? this.rtlAnimation : this.defaultAnimation;\n\n        if (this.thyBaseUrl === '' && !this.thyIgnoreBaseUrl && isPlatformBrowser(this.platformId)) {\n            this.thyBaseUrl = window.location.pathname;\n        }\n\n        this.setFillStyle();\n        this.setClipPath();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['thyBaseUrl']) {\n            if (changes['thyBaseUrl'].previousValue !== changes['thyBaseUrl'].currentValue) {\n                this.setFillStyle();\n                this.setClipPath();\n            }\n        }\n    }\n\n    setFillStyle() {\n        this.fillStyle = {\n            fill: `url(${this.thyBaseUrl}#${this.idGradient})`\n        };\n    }\n\n    setClipPath() {\n        this.clipPath = `url(${this.thyBaseUrl}#${this.idClip})`;\n    }\n\n    assignInputProperties(input: ThySkeletonComponent) {\n        this.thyAnimate = input.thyAnimate;\n        this.thyBaseUrl = input.thyBaseUrl;\n        this.thyHeight = input.thyHeight;\n        this.thyWidth = input.thyWidth;\n        this.thyViewBoxHeight = input.thyViewBoxHeight;\n        this.thyViewBoxWidth = input.thyViewBoxWidth;\n        this.thyPreserveAspectRatio = input.thyPreserveAspectRatio;\n        this.thyPrimaryColor = input.thyPrimaryColor;\n        this.thyPrimaryOpacity = input.thyPrimaryOpacity;\n        this.thySecondaryColor = input.thySecondaryColor;\n        this.thySecondaryOpacity = input.thySecondaryOpacity;\n        this.thyRtl = this.thyRtl;\n        this.thySpeed = this.thySpeed;\n        this.thyUniqueKey = this.thyUniqueKey;\n    }\n\n    addTemplate(template: TemplateRef<any>) {\n        if (template) {\n            this.contentTemplates.push(template);\n        }\n    }\n}\n","import { Component, ViewChild, TemplateRef, OnInit } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-list-template',\n    template: `\n        <ng-template #content>\n            <svg:rect x=\"0\" y=\"0\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"20\" rx=\"3\" ry=\"3\" width=\"220\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"40\" rx=\"3\" ry=\"3\" width=\"170\" height=\"10\" />\n            <svg:rect x=\"0\" y=\"60\" rx=\"3\" ry=\"3\" width=\"250\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"80\" rx=\"3\" ry=\"3\" width=\"200\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"100\" rx=\"3\" ry=\"3\" width=\"80\" height=\"10\" />\n        </ng-template>\n    `\n})\nexport class ThySkeletonListComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, Input, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\ninterface BulletListItem {\n    circle: { cx: number; cy: number; r: number };\n    rect: { x: number; y: number; rx: number; ry: number; width: number | string; height: number | string };\n}\n\n@Component({\n    selector: 'thy-skeleton-bullet-list-template',\n    template: `\n        <ng-template #content>\n            <ng-container *ngFor=\"let item of items\">\n                <svg:circle [attr.cx]=\"item.circle.cx\" [attr.cy]=\"item.circle.cy\" r=\"8\" />\n                <svg:rect [attr.x]=\"item.rect.x\" [attr.y]=\"item.rect.y\" rx=\"5\" ry=\"5\" width=\"90%\" height=\"10\" />\n            </ng-container>\n        </ng-template>\n    `\n})\nexport class ThySkeletonBulletListComponent implements OnInit {\n    @Input() thyCount = 5;\n\n    items: BulletListItem[] = [];\n\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit() {\n        for (let i = 0; i <= this.thyCount; i++) {\n            this.items.push({\n                circle: {\n                    cx: 10,\n                    cy: i * 30 + 20,\n                    r: 8\n                },\n                rect: {\n                    x: 25,\n                    y: i * 2 * 15 + 15,\n                    rx: 5,\n                    ry: 5,\n                    width: '90%',\n                    height: 10\n                }\n            });\n        }\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, OnInit, TemplateRef, ViewChild, Input } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-title-template,[thySkeletonTitleTemplate]',\n    template: `\n        <ng-template #content>\n            <svg:rect x=\"15\" y=\"13\" rx=\"4\" ry=\"4\" [attr.width]=\"width\" [attr.height]=\"height\" />\n        </ng-template>\n    `,\n    exportAs: 'thySkeletonTitleTemplate'\n})\nexport class ThySkeletonTitleComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    width = 100;\n\n    height = 10;\n\n    @Input() set thyWidth(value: number) {\n        if (value) {\n            this.width = value;\n        }\n    }\n\n    @Input() set thyHeight(value: number) {\n        if (value) {\n            this.height = value;\n        }\n    }\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-avatar-template,[thySkeletonAvatarTemplate]',\n    template: `\n        <ng-template #content>\n            <svg:circle cx=\"30\" cy=\"30\" r=\"30\" />\n        </ng-template>\n    `\n})\nexport class ThySkeletonAvatarComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ThySkeletonComponent } from '../skeleton.component';\n\n@Component({\n    selector: 'thy-skeleton-paragraph-template,[thySkeletonParagraphTemplate]',\n    template: `\n        <ng-template #content>\n            <svg:rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"38%\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"20\" rx=\"2\" ry=\"2\" width=\"92%\" height=\"10\" />\n            <svg:rect x=\"20\" y=\"40\" rx=\"2\" ry=\"2\" width=\"92%\" height=\"10\" />\n            <svg:rect x=\"0\" y=\"60\" rx=\"2\" ry=\"2\" width=\"61%\" height=\"10\" />\n        </ng-template>\n    `,\n    exportAs: 'thySkeletonParagraphTemplate'\n})\nexport class ThySkeletonParagraphComponent implements OnInit {\n    @ViewChild('content', { static: true }) contentTemplateRef: TemplateRef<any>;\n\n    constructor(private skeletonComponent: ThySkeletonComponent) {}\n\n    ngOnInit(): void {\n        this.skeletonComponent.addTemplate(this.contentTemplateRef);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PortalModule } from '@angular/cdk/portal';\n\nimport { ThySkeletonComponent } from './skeleton.component';\nimport { ThySkeletonListComponent } from './stylized/list.component';\nimport { ThySkeletonBulletListComponent } from './stylized/bullet-list.component';\nimport { ThySkeletonTitleComponent } from './stylized/title.component';\nimport { ThySkeletonAvatarComponent } from './stylized/avatar.component';\nimport { ThySkeletonParagraphComponent } from './stylized/paragraph.component';\n\n@NgModule({\n    declarations: [\n        ThySkeletonComponent,\n        ThySkeletonListComponent,\n        ThySkeletonBulletListComponent,\n        ThySkeletonAvatarComponent,\n        ThySkeletonTitleComponent,\n        ThySkeletonParagraphComponent\n    ],\n    imports: [CommonModule, PortalModule],\n    entryComponents: [ThySkeletonComponent],\n    exports: [\n        ThySkeletonComponent,\n        ThySkeletonListComponent,\n        ThySkeletonBulletListComponent,\n        ThySkeletonTitleComponent,\n        ThySkeletonAvatarComponent,\n        ThySkeletonParagraphComponent\n    ],\n    providers: []\n})\nexport class ThySkeletonModule {}\n"]}