{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../src/store/types.ts","../../src/store/internals/static-injector.ts","../../src/store/module.ts","../../src/store/plugins/redux_devtools.ts","../../src/store/action-state.ts","../../src/store/root-store.ts","../../src/store/action.ts","../../src/store/utils.ts","../../src/store/store.ts","../../src/store/entity-store.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","__","this","constructor","create","__metadata","metadataKey","metadataValue","Reflect","metadata","__read","o","n","m","Symbol","iterator","r","e","i","ar","next","done","push","value","error","__spread","arguments","length","concat","META_KEY","ROOT_STATE_TOKEN","InjectionToken","FEATURE_STATE_TOKEN","_super","ThyStoreModuleIsNotImported","Error","clearInjector","ngModuleRef","parentInjector","injector","onDestroy","NgModule","NgModuleRef","ThyStoreModule","forRoot","stores","ngModule","ThyRootStoreModule","providers","provide","useValue","forFeature","ThyFeatureStoreModule","multi","args","ReduxDevtoolsPlugin","_devTools","_window","window","globalDevtools","console","log","connect","name","handleNewState","actionName","state","isConnectSuccessed","send","rootStore","ActionState","changeAction","getActionName","RootStore","connectSuccessed","_containers","BehaviorSubject","Map","_plugin","_combinedStateSubscription","Subscription","_assignCombinedState","isDevMode","_this","pipe","switchMap","containers","_getCombinedState","map","states","reduce","acc","curr","containerName","subscribe","c","combineLatest","apply","from","entries","_a","_b","state$","tap","data","ngOnDestroy","unsubscribe","registerStore","store","has","getStoreInstanceId","set","existStoreInstanceId","instanceId","unregisterStore","delete","getSingletonRootStore","Action","action","target","descriptor","meta","actions","path","children","instance","findAndCreateStoreMetadata","type","originalFn","fn","_i","result","Observable","catchError","of","status","shareReplay","exhaustMap","throwError","Injectable","Store","initialState","reduxToolEnabled","_defaultStoreInstanceId","_getClassName","initialStateCache","assign","defineProperty","getValue","dispatch","payload","_dispatch","actionMeta","snapshot","Promise","observer","select","selector","distinctUntilChanged","complete","setState","helpers","isFunction","getState","clearState","exec","j","decorators","key","desc","getOwnPropertyDescriptor","decorate","__decorate","EntityStore","options","entities","idKey","entities$","entitiesWithRefs$","entity","newEntity","internalReferencesIdMap","references","trackBy","_index","buildReferencesIdMap","resetPagination","pagination","count","pageCount","Math","ceil","pageSize","increasePagination","amount","decreasePagination","buildReferencesKeyBy","referencesIdKeys","initialize","initializeWithReferences","addInternal","addOptions","addEntities","coerceArray","produce","add","mergeReferences","prepend","autoGotoLastPage","pageIndex","undefined","addWithReferences","updateInternal","idsOrFn","newStateOrFn","ids","oldEntity","indexOf","newState","update","updateWithReferences","remove","originalLength","clearPagination","clear"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport const META_KEY = '__THY_META__';\nexport const ROOT_STATE_TOKEN = new InjectionToken<any>('ROOT_STATE_TOKEN');\nexport const FEATURE_STATE_TOKEN = new InjectionToken<any>('FEATURE_STATE_TOKEN');\n\nexport interface StoreMetaInfo {\n    actions: any;\n    path: string;\n    children: any[];\n    instance: any;\n}\n\nexport interface ActionResult {}\n\n// export type Newable<T> = { new (...args: any[]): T };\n","import { Injector } from '@angular/core';\n\nclass ThyStoreModuleIsNotImported extends Error {\n    constructor() {\n        super(`You've forgotten to import \"ThyStoreModule\"!`);\n    }\n}\n\nlet injector: Injector | null = null;\n\nfunction assertDefined<T>(actual: T | null | undefined): asserts actual is T {\n    if (actual == null) {\n        throw new ThyStoreModuleIsNotImported();\n    }\n}\n\nexport function setInjector(parentInjector: Injector): void {\n    injector = parentInjector;\n}\n\n/**\n * Ensure that we don't keep any references in case of the bootstrapped\n * module is destroyed via `NgModuleRef.destroy()`.\n */\nexport function clearInjector(): void {\n    injector = null;\n}\n\nexport function getInjector(): Injector {\n    assertDefined(injector);\n    return injector;\n}\n","import { NgModule, ModuleWithProviders, Type, Injector, NgModuleRef } from '@angular/core';\nimport { ROOT_STATE_TOKEN, FEATURE_STATE_TOKEN } from './types';\nimport { Store } from './store';\nimport { clearInjector, setInjector } from './internals/static-injector';\n\n@NgModule()\nexport class ThyRootStoreModule {\n    constructor(ngModuleRef: NgModuleRef<any>) {\n        setInjector(ngModuleRef.injector);\n        ngModuleRef.onDestroy(clearInjector);\n    }\n}\n\n@NgModule()\nexport class ThyFeatureStoreModule {}\n\n@NgModule({})\nexport class ThyStoreModule {\n    static forRoot(stores: Type<Store>[] = []): ModuleWithProviders<ThyRootStoreModule> {\n        return {\n            ngModule: ThyRootStoreModule,\n            providers: [\n                ...stores,\n                {\n                    provide: ROOT_STATE_TOKEN,\n                    useValue: stores\n                }\n            ]\n        };\n    }\n\n    static forFeature(stores: Type<Store>[] = []): ModuleWithProviders<ThyFeatureStoreModule> {\n        return {\n            ngModule: ThyFeatureStoreModule,\n            providers: [\n                ...stores,\n                {\n                    provide: FEATURE_STATE_TOKEN,\n                    multi: true,\n                    useValue: stores\n                }\n            ]\n        };\n    }\n}\n","export abstract class StorePlugin {\n    // abstract handleNewState(state: Readonly<object>): void;\n    abstract handleNewState(actionName: string, state: Readonly<object>): void;\n    abstract isConnectSuccessed(): boolean;\n}\n/**\n * @internal\n */\nexport interface ReduxDevtoolsInstance {\n    send(action: string, state: object): void;\n}\n\nexport function tinyStateVersion(): string {\n    return 'v0.6.0';\n}\n\nexport class ReduxDevtoolsPlugin implements StorePlugin {\n    private _devTools: ReduxDevtoolsInstance | null = null;\n\n    _window = window;\n    constructor(\n    ) {\n        if (this._window == null) {\n            return;\n        }\n        const globalDevtools: { connect(config: any): ReduxDevtoolsInstance } | undefined =\n            (this._window as any)['__REDUX_DEVTOOLS_EXTENSION__'] ||\n            (this._window as any)['devToolsExtension'];\n\n        if (!globalDevtools) {\n            console.log(`未安装Chrome浏览器的拓展插件: Redux DevTools.`);\n            console.log(`插件下载地址: https://www.chromefor.com/redux-devtools_v2-17-0/`);\n            return;\n        }\n        this._devTools = globalDevtools.connect({\n            name: `NgxStore ${tinyStateVersion()}`\n        });\n    }\n\n    handleNewState(actionName: string, state: object): void {\n        if (this.isConnectSuccessed()) {\n            this._devTools.send(actionName, state);\n        }\n    }\n\n    isConnectSuccessed(): boolean {\n        if (this._devTools === null) {\n            return false;\n        }\n        return true;\n    }\n}\n\nfunction getReduxDevToolsPlugin(): any {\n    if (!window[`___ReduxDevtoolsPlugin___`]) {\n        window[`___ReduxDevtoolsPlugin___`] = new ReduxDevtoolsPlugin();\n    }\n    return window[`___ReduxDevtoolsPlugin___`];\n}\n\nexport default getReduxDevToolsPlugin;\n","// @dynamic\nexport class ActionState {\n    private static actionName = '';\n\n    public static changeAction(actionName: string) {\n        this.actionName = actionName;\n    }\n\n    public static getActionName() {\n        return this.actionName;\n    }\n}\n","import { Store } from './store';\nimport { Inject, SkipSelf, Optional, OnDestroy, isDevMode, Injectable } from '@angular/core';\nimport { Subscription, combineLatest } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\nimport getReduxDevToolsPlugin, { StorePlugin } from './plugins/redux_devtools';\nimport { ActionState } from './action-state';\n\nexport type StoreInstanceMap = Map<string, Store<any>>; // Map key：string，value：状态数据\n\nlet rootStore: RootStore;\n/**\n * @internal\n */\n@Injectable()\nexport class RootStore {\n    private connectSuccessed = false;\n    /**\n     * 数据流 数据是一个Map，k,v键值对，关键字->状态数据\n     */\n    private readonly _containers = new BehaviorSubject<StoreInstanceMap>(new Map<string, Store<any>>());\n    private _plugin: StorePlugin = getReduxDevToolsPlugin();\n    private _combinedStateSubscription: Subscription = new Subscription();\n\n    constructor() {\n        if (this._plugin.isConnectSuccessed()) {\n            this.connectSuccessed = true;\n            this._assignCombinedState(); // 最终调用handleNewState\n            console.log(`是否在Angular开发环境：${isDevMode()}, 初始化root-store`);\n        }\n    }\n\n    private _assignCombinedState() {\n        this._combinedStateSubscription = this._containers\n            .pipe(switchMap(containers => this._getCombinedState(containers)))\n            .pipe(\n                map(states => {\n                    const actionName = ActionState.getActionName();\n                    const state = states.reduce((acc, curr) => {\n                        acc[curr.containerName] = curr.state;\n                        return acc;\n                    }, <{ [key: string]: any }>{});\n                    return { state: state, actionName: actionName };\n                })\n            )\n            .subscribe(c => {\n                this._plugin.handleNewState(c.actionName, c.state);\n            });\n    }\n\n    /**\n     * 合并数据流\n     * 合并状态数据，把状态数据转换为这样的数据：{ containerName: string, state: any }，并且\n     * 通过combineLatest合并成一个数据数据流，这样状态数据只有涉及更新，那么这边就会得到通知\n     * @param containers 状态数据的Map\n     */\n    private _getCombinedState(containers: StoreInstanceMap) {\n        return combineLatest(\n            ...Array.from(containers.entries()).map(([containerName, container]) => {\n                return container.state$.pipe(\n                    map(state => ({ containerName, state })),\n                    tap(data => {})\n                );\n            })\n        );\n    }\n\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this._combinedStateSubscription.unsubscribe();\n    }\n\n    /**\n     * @internal\n     */\n    registerStore(store: Store<any>) {\n        if (!this.connectSuccessed) {\n            return;\n        }\n        const containers = new Map(this._containers.value);\n        if (containers.has(store.getStoreInstanceId())) {\n            throw new Error(\n                `Store: Store with duplicate instance ID found! ${store.getStoreInstanceId()}` +\n                    ` is already registered. Please check your getStoreInstanceId() methods!`\n            );\n        }\n        containers.set(store.getStoreInstanceId(), store);\n        this._containers.next(containers);\n    }\n\n    existStoreInstanceId(instanceId: string): boolean {\n        const containers = new Map(this._containers.value);\n        if (containers.has(instanceId)) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @internal\n     */\n    unregisterStore(store: Store<any>) {\n        if (!this.connectSuccessed) {\n            return;\n        }\n        const containers = new Map(this._containers.value);\n        containers.delete(store.getStoreInstanceId());\n        this._containers.next(containers);\n    }\n}\n\nexport function getSingletonRootStore() {\n    if (!rootStore) {\n        rootStore = new RootStore();\n    }\n    return rootStore;\n}\n","import { META_KEY } from './types';\nimport { findAndCreateStoreMetadata } from './utils';\nimport { Observable, Observer, of, throwError } from 'rxjs';\nimport { map, shareReplay, catchError, exhaustMap } from 'rxjs/operators';\nimport { ActionState } from './action-state';\nimport { ActionContext, ActionStatus } from './actions-stream';\n\nexport interface DecoratorActionOptions {\n    type: string;\n    payload?: any;\n}\n\n/**\n * Decorates a method with a action information.\n */\nexport function Action(action?: DecoratorActionOptions | string) {\n    return function(target: any, name: string, descriptor: TypedPropertyDescriptor<any>) {\n        const meta = findAndCreateStoreMetadata(target);\n\n        // default use function name as action type\n        if (!action) {\n            action = {\n                type: name\n            };\n        }\n        // support string for type\n        if (typeof action === 'string') {\n            action = {\n                type: action\n            };\n        }\n        const type = action.type;\n\n        if (!action.type) {\n            throw new Error(`Action ${action.type} is missing a static \"type\" property`);\n        }\n\n        const originalFn = descriptor.value;\n        meta.actions[type] = {\n            fn: name,\n            originalFn: originalFn,\n            type\n        };\n\n        descriptor.value = function(...args: any[]) {\n            ActionState.changeAction(`${target.constructor.name}-${name}`);\n            let result = originalFn.call(this, ...args);\n            if (result instanceof Observable) {\n                result = result.pipe(\n                    catchError(error => {\n                        return of({ status: ActionStatus.Errored, action: action, error: error });\n                    }),\n                    shareReplay(),\n                    exhaustMap((result: ActionContext | any) => {\n                        if (result && result.status === ActionStatus.Errored) {\n                            return throwError(result.error);\n                        } else {\n                            return of(result);\n                        }\n                    })\n                );\n                result.subscribe();\n            }\n            return result;\n        };\n    };\n}\n","import { StoreMetaInfo, META_KEY } from './types';\n\nexport function findAndCreateStoreMetadata(target: any): StoreMetaInfo {\n    if (!target.hasOwnProperty(META_KEY)) {\n        const defaultMetadata: StoreMetaInfo = {\n            actions: {},\n            path: null,\n            children: [],\n            instance: null\n        };\n        target[META_KEY] = defaultMetadata;\n    }\n    return target[META_KEY];\n}\n","import { Observable, Observer, BehaviorSubject, from, of, PartialObserver, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\nimport { META_KEY, StoreMetaInfo } from './types';\nimport { helpers } from 'ngx-tethys/util';\nimport { getSingletonRootStore, RootStore } from './root-store';\nimport { OnDestroy, isDevMode, Injectable } from '@angular/core';\nimport { ActionState } from './action-state';\nimport { Action } from './action';\n\ninterface Action {\n    type: string;\n    payload?: any;\n}\n\n@Injectable()\nexport class Store<T = unknown> implements Observer<T>, OnDestroy {\n    initialStateCache: any;\n\n    public state$: BehaviorSubject<T>;\n\n    public reduxToolEnabled = isDevMode();\n\n    private _defaultStoreInstanceId: string;\n\n    constructor(initialState: any) {\n        this._defaultStoreInstanceId = this._getClassName();\n        this.state$ = new BehaviorSubject<T>(initialState);\n        this.initialStateCache = { ...initialState };\n        if (this.reduxToolEnabled) {\n            const rootStore: RootStore = getSingletonRootStore();\n            ActionState.changeAction(`Add-${this._defaultStoreInstanceId}`);\n            rootStore.registerStore(this);\n        }\n    }\n\n    get snapshot() {\n        return this.state$.getValue();\n    }\n\n    public dispatch(type: string, payload?: any): Observable<any> {\n        ActionState.changeAction(`${this._defaultStoreInstanceId}-${type}`);\n        const result = this._dispatch({\n            type: type,\n            payload: payload\n        });\n        result.subscribe();\n        return result;\n    }\n\n    private _dispatch(action: any): Observable<any> {\n        const meta = this[META_KEY] as StoreMetaInfo;\n        if (!meta) {\n            throw new Error(`${META_KEY} is not found, current store has not action`);\n        }\n        const actionMeta = meta.actions[action.type];\n        if (!actionMeta) {\n            throw new Error(`${action.type} is not found`);\n        }\n        // let result: any = this[actionMeta.fn](this.snapshot, action.payload);\n        let result: any = actionMeta.originalFn.call(this, this.snapshot, action.payload);\n\n        if (result instanceof Promise) {\n            result = from(result);\n        }\n\n        if (result instanceof Observable) {\n            result = result.pipe(map(r => r));\n        } else {\n            result = new Observable((observer: Observer<any>) => {\n                observer.next({});\n            });\n        }\n        return result.pipe(shareReplay());\n    }\n\n    select<TResult>(selector: (state: T) => TResult): Observable<TResult> | Observable<TResult>;\n    select(selector: string | any): Observable<any> {\n        return this.state$.pipe(map(selector), distinctUntilChanged());\n    }\n\n    next(state: T) {\n        this.state$.next(state);\n    }\n\n    error(error: any) {\n        this.state$.error(error);\n    }\n\n    complete() {\n        this.state$.complete();\n    }\n\n    subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription {\n        return this.state$.subscribe(next, error, complete);\n    }\n\n    /**\n     * set store new state\n     *\n     * @example\n     * this.setState(newState);\n     * this.setState({ users: produce(this.snapshot.users).add(user) });\n     * this.setState((state) => {\n     *    return {\n     *        users: produce(state.users).add(user)\n     *    }\n     * });\n     * @param fn\n     */\n    setState(fn: Partial<T> | ((newState: T) => Partial<T>)): void {\n        if (helpers.isFunction(fn)) {\n            this.next({\n                ...this.snapshot,\n                ...(fn as any)(this.snapshot)\n            });\n        } else {\n            this.next({\n                ...this.snapshot,\n                ...(fn as T)\n            });\n        }\n    }\n\n    getState(): T {\n        return this.snapshot;\n    }\n\n    @Action()\n    clearState() {\n        this.setState(this.initialStateCache);\n    }\n\n    ngOnDestroy() {\n        if (this.reduxToolEnabled) {\n            const rootStore: RootStore = getSingletonRootStore();\n            rootStore.unregisterStore(this);\n        }\n    }\n\n    /**\n     * You can override this method if you want to give your container instance a custom id.\n     * The returned id must be unique in the application.\n     */\n    getStoreInstanceId(): string {\n        return this._defaultStoreInstanceId;\n    }\n\n    private _getClassName(): string {\n        const name = this.constructor.name || /function (.+)\\(/.exec(this.constructor + '')[1];\n        if (this.reduxToolEnabled) {\n            const rootStore: RootStore = getSingletonRootStore();\n            if (!rootStore.existStoreInstanceId(name)) {\n                return name;\n            }\n            let j = 0;\n            for (let i = 1; i < 20; i++) {\n                if (!rootStore.existStoreInstanceId(`${name}-${i}`)) {\n                    j = i;\n                    break;\n                }\n            }\n            return `${name}-${j}`;\n        }\n        return name;\n    }\n}\n","import { Store } from './store';\nimport { Id, PaginationInfo } from 'ngx-tethys/types';\nimport { helpers, produce } from 'ngx-tethys/util';\nimport { mergeReferences, buildReferencesKeyBy, ReferenceArrayExtractAllowKeys } from 'ngx-tethys/util';\nimport { map } from 'rxjs/operators';\nimport { ReferencesIdDictionary, OnCombineRefsFn } from './references';\n\nexport interface EntityStoreOptions<TEntity = unknown, TReferences = unknown> {\n    idKey?: string;\n    referencesIdKeys?: ReferenceArrayExtractAllowKeys<TReferences>;\n}\n\nexport interface EntityAddOptions {\n    prepend?: boolean;\n    // 如果是最后追加，自动跳转到最后一页\n    autoGotoLastPage?: boolean;\n}\n\nexport interface EntityState<TEntity, TReferences = unknown> {\n    pagination?: PaginationInfo;\n    entities: TEntity[];\n    references?: TReferences;\n}\n\nexport class EntityStore<TState extends EntityState<TEntity, TReferences>, TEntity, TReferences = unknown> extends Store<TState> {\n    protected options: EntityStoreOptions<TEntity, TReferences>;\n\n    private internalReferencesIdMap: ReferencesIdDictionary<TReferences>;\n\n    get entities() {\n        return this.snapshot.entities;\n    }\n\n    entities$ = this.select(state => {\n        return state.entities;\n    });\n\n    entitiesWithRefs$ = this.entities$.pipe(\n        map(entities => {\n            if (!entities) {\n                return entities;\n            }\n            return entities.map(entity => {\n                const newEntity = { ...entity };\n\n                if (this['onCombineRefs']) {\n                    if (!newEntity['refs']) {\n                        newEntity['refs'] = {};\n                    }\n                    this['onCombineRefs'](newEntity, this.internalReferencesIdMap, this.snapshot.references);\n                } else {\n                    throw new Error(`onCombineRefs is not empty`);\n                }\n                return newEntity;\n            });\n        })\n    );\n\n    private resetPagination(pagination: PaginationInfo, count: number) {\n        pagination.count = count;\n        // 向上取整 21 / 20 = 1.05 = 2 pageCount is 2\n        const pageCount = Math.ceil(pagination.count / pagination.pageSize);\n        pagination.pageCount = pageCount;\n        this.snapshot.pagination = { ...pagination };\n    }\n\n    private increasePagination(amount: number) {\n        const pagination = this.snapshot.pagination;\n        this.resetPagination(pagination, pagination.count + amount);\n    }\n\n    private decreasePagination(amount: number) {\n        const pagination = this.snapshot.pagination;\n        if (pagination) {\n            this.resetPagination(pagination, pagination.count - amount);\n        }\n    }\n\n    private buildReferencesIdMap() {\n        if (this.snapshot.references) {\n            this.internalReferencesIdMap = buildReferencesKeyBy(this.snapshot.references, this.options.referencesIdKeys);\n        }\n    }\n\n    constructor(\n        initialState: EntityState<TEntity, TReferences> = {\n            entities: [] as TEntity[]\n        },\n        options: EntityStoreOptions<TEntity, TReferences> = { idKey: '_id' }\n    ) {\n        super(initialState);\n        this.options = { idKey: '_id', ...options };\n        if (!this.options.idKey) {\n            throw new Error(`idKey is required in EntityStore`);\n        }\n        this.buildReferencesIdMap();\n    }\n\n    /**\n     *\n     * Replace current collection with provided collection\n     *\n     * @example\n     * this.store.initialize([Entity, Entity], pagination: PaginationInfo);\n     *\n     */\n    initialize(entities: TEntity[], pagination?: PaginationInfo) {\n        const state = this.snapshot;\n        state.entities = entities || [];\n        state.pagination = pagination;\n        this.next(state);\n    }\n\n    /**\n     *\n     * Replace current collection with provided collection with references\n     *\n     * @example\n     * this.store.initializeWithReferences([Entity, Entity], references: TReferences, pagination: PaginationInfo);\n     *\n     */\n    initializeWithReferences(entities: TEntity[], references: TReferences, pagination?: PaginationInfo) {\n        const state = this.snapshot;\n        state.entities = entities || [];\n        state.pagination = pagination;\n        state.references = references;\n        this.buildReferencesIdMap();\n        this.next(state);\n    }\n\n    /**\n     * Add entity or entities for internal\n     * @param entity\n     * @param references\n     * @param addOptions\n     */\n    private addInternal(entity: TEntity | TEntity[], references?: Partial<TReferences>, addOptions?: EntityAddOptions) {\n        const addEntities = helpers.coerceArray(entity);\n        if (addEntities.length === 0) {\n            return;\n        }\n\n        const state = this.snapshot;\n        state.entities = produce(state.entities).add(addEntities, addOptions);\n        if (state.references) {\n            mergeReferences(state.references, references, this.options.referencesIdKeys);\n            this.buildReferencesIdMap();\n        }\n        if (state.pagination) {\n            this.increasePagination(addEntities.length);\n            if (addOptions && !addOptions.prepend && addOptions.autoGotoLastPage) {\n                state.pagination.pageIndex = state.pagination.pageCount;\n            }\n        }\n        this.next(state);\n    }\n\n    /**\n     * Add an entity or entities to the store.\n     *\n     * @example\n     * this.store.add(Entity);\n     * this.store.add([Entity, Entity]);\n     * this.store.add(Entity, { prepend: true });\n     */\n    add(entity: TEntity | TEntity[], addOptions?: EntityAddOptions) {\n        this.addInternal(entity, undefined, addOptions);\n    }\n\n    /**\n     * Add an entity or entities to the store with references.\n     *\n     * @example\n     * this.store.add(Entity);\n     * this.store.add([Entity, Entity]);\n     * this.store.add(Entity, { prepend: true });\n     */\n    addWithReferences(entity: TEntity | TEntity[], references: Partial<TReferences>, addOptions?: EntityAddOptions) {\n        this.addInternal(entity, references, addOptions);\n    }\n\n    /**\n     *\n     * Update an entity or entities in the store.\n     *\n     * @example\n     * this.store.update(3, {\n     *   name: 'New Name'\n     * }, references);\n     *\n     *  this.store.update(3, entity => {\n     *    return {\n     *      ...entity,\n     *      name: 'New Name'\n     *    }\n     *  }, references);\n     *\n     * this.store.update([1,2,3], {\n     *   name: 'New Name'\n     * }, references);\n     */\n    private updateInternal(\n        idsOrFn: Id | Id[] | null,\n        // | Partial<TState>\n        // | ((state: Readonly<TState>) => Partial<TState>)\n        // | ((entity: Readonly<TEntity>) => boolean),\n        newStateOrFn: ((entity: Readonly<TEntity>) => Partial<TEntity>) | Partial<TEntity>,\n        references?: TReferences\n    ): void {\n        const ids = helpers.coerceArray(idsOrFn);\n\n        const state = this.snapshot;\n        for (let i = 0; i < state.entities.length; i++) {\n            const oldEntity = state.entities[i];\n            if (ids.indexOf(oldEntity[this.options.idKey]) > -1) {\n                const newState = helpers.isFunction(newStateOrFn) ? (newStateOrFn as any)(oldEntity) : newStateOrFn;\n                state.entities[i] = { ...(oldEntity as any), ...newState };\n            }\n        }\n        state.entities = [...state.entities];\n        if (state.references) {\n            mergeReferences(state.references, references, this.options.referencesIdKeys);\n            this.buildReferencesIdMap();\n        }\n        this.next(state);\n    }\n\n    /**\n     *\n     * Update an entity or entities in the store with references.\n     *\n     * @example\n     * this.store.update(3, {\n     *   name: 'New Name'\n     * }, references);\n     *\n     *  this.store.update(3, entity => {\n     *    return {\n     *      ...entity,\n     *      name: 'New Name'\n     *    }\n     *  }, references);\n     *\n     * this.store.update([1,2,3], {\n     *   name: 'New Name'\n     * }, references);\n     */\n    update(idsOrFn: Id | Id[] | null, newStateOrFn: ((entity: Readonly<TEntity>) => Partial<TEntity>) | Partial<TEntity>): void {\n        this.updateInternal(idsOrFn, newStateOrFn, undefined);\n    }\n\n    /**\n     *\n     * Update an entity or entities in the store with references.\n     *\n     * @example\n     * this.store.updateWithReferences(3, {\n     *   name: 'New Name'\n     * }, references);\n     *\n     *  this.store.updateWithReferences(3, entity => {\n     *    return {\n     *      ...entity,\n     *      name: 'New Name'\n     *    }\n     *  }, references);\n     *\n     * this.store.updateWithReferences([1,2,3], {\n     *   name: 'New Name'\n     * }, references);\n     */\n    updateWithReferences(\n        idsOrFn: Id | Id[] | null,\n        newStateOrFn: ((entity: Readonly<TEntity>) => Partial<TEntity>) | Partial<TEntity>,\n        references: TReferences\n    ): void {\n        this.updateInternal(idsOrFn, newStateOrFn, references);\n    }\n\n    /**\n     *\n     * Remove one or more entities from the store:\n     *\n     * @example\n     * this.store.remove(5);\n     * this.store.remove([1,2,3]);\n     * this.store.remove(entity => entity.id === 1);\n     */\n    remove(id: Id | Id[]): void;\n    remove(predicate: (entity: Readonly<TEntity>) => boolean): void;\n    remove(idsOrFn?: Id | Id[] | ((entity: Readonly<TEntity>) => boolean)): void {\n        const state = this.snapshot;\n        const originalLength = state.entities.length;\n        state.entities = produce(state.entities, this.options).remove(idsOrFn);\n        this.decreasePagination(originalLength - state.entities.length);\n        this.next(state);\n    }\n\n    trackBy = (_index: number, entity: TEntity) => {\n        return entity[this.options.idKey];\n    };\n\n    clearPagination() {\n        const state = this.snapshot;\n        state.pagination = null;\n        this.next(state);\n    }\n\n    clear() {\n        const state = this.snapshot;\n        state.entities = [];\n        state.pagination = null;\n        state.references = null;\n        this.next(state);\n    }\n}\n"]}