{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../src/uploader/constant.ts","../../src/uploader/util.ts","../../src/uploader/uploader.config.ts","../../src/uploader/file-select-base.ts","../../src/uploader/file-select.component.ts","../../src/uploader/uploader.service.ts","../../src/uploader/file-drop.component.ts","../../src/uploader/module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","__","this","constructor","create","MIME_Map",".3gp",".apk",".asf",".avi",".bin",".bmp",".c",".class",".conf",".cpp",".doc",".docx",".xls",".xlsx",".xlsb",".xlsm",".xltx",".exe",".gif",".gtar",".gz",".h",".htm",".html",".jar",".java",".jpeg",".jpg",".js",".json",".log",".m3u",".m4a",".m4b",".m4p",".m4u",".m4v",".mov",".mp2",".mp3",".mp4",".mpc",".mpe",".mpeg",".mpg",".mpg4",".mpga",".msg",".ogg",".pdf",".png",".pps",".ppt",".pptx",".prop",".rc",".rmvb",".rtf",".sh",".tar",".tgz",".txt",".wav",".wma",".wmv",".wps",".xml",".z",".zip","","mimeTypeConvert","value","inputTypes","acceptTypes","isArray","isString","split","length","forEach","n","push","join","THY_UPLOADER_DEFAULT_OPTIONS","InjectionToken","sizeThreshold","sizeExceedsHandler","THY_UPLOADER_DEFAULT_OPTIONS_PROVIDER","provide","useValue","Éµ0","event","exceedsFilesMessage","exceedsFiles","map","item","name","size","console","error","FileSelectBaseComponent","elementRef","defaultConfig","renderer","ngZone","defineProperty","coerceNumberValue","isNumber","handleSizeExceeds","files","_this","sizeExceedsFiles","filter","sizeExceedContext","nativeEvent","selectFiles","eventEmitter","successFiles","emit","Component","args","template","ElementRef","Inject","Renderer2","NgZone","Input","ThyFileSelectComponent","_super","thyOnFileSelect","EventEmitter","multiple","coerceBooleanProperty","fileInput","nativeElement","setAttribute","removeAttribute","acceptFolder","acceptType","click","$event","selectFile","from","ngOnInit","ngOnDestroy","selector","Output","ViewChild","static","HostListener","ThyUploadStatus","ThyFileDropComponent","isDragOver","thyOnDrop","ngUnsubscribe$","Subject","dragOverCustomClass","runOutsideAngular","fromEvent","pipe","takeUntil","tap","preventDefault","dataTransfer","items","subscribe","checkRejectFolderAndHtmlElement","filterFilesOrItems","isEmpty","run","toggleDropOverClassName","contains","fromElement","resetDragOver","res","index","entry","getAsEntry","kind","isFile","webkitGetAsEntry","includes","type","addClass","removeClass","setDragOverState","next","complete","HostBinding","ThyUploaderService","http","xhrFactory","secondsToHuman","sec","Date","toISOString","substr","humanizeBytes","bytes","i","Math","floor","log","parseFloat","pow","toFixed","normalizeUploadFiles","uploadFiles","coerceArray","uploadFile","progress","status","pending","percentage","startTime","uploadByXhr","observer","xhr","build","time","getTime","speed","estimatedTime","started","upload","addEventListener","lengthComputable","round","loaded","total","diff","progressStartTime","ceil","uploading","speedHuman","estimatedTimeHuman","e","onreadystatechange","readyState","XMLHttpRequest","DONE","speedTime","speedAverage","nativeFile","done","responseStatus","response","JSON","parse","open","method","url","withCredentials","formData_1","FormData","keys","data","key","append","headers","setRequestHeader","fileField","fileName","send","ensureFileName","Observable","abort","uploadBulk","concurrent","options","mergeMap","uploadResponse","onStarted","onDone","Injectable","HttpClient","XhrFactory","NgModule","declarations","imports","CommonModule","HttpClientModule","entryComponents","providers","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Multipurpose Internet Mail Extensions\nexport const MIME_Map = {\n    '.3gp': 'video/3gpp',\n    '.apk': 'application/vnd.android.package-archive',\n    '.asf': 'video/x-ms-asf',\n    '.avi': 'video/x-msvideo',\n    '.bin': 'application/octet-stream',\n    '.bmp': 'image/bmp',\n    '.c': 'text/plain',\n    '.class': 'application/octet-stream',\n    '.conf': 'text/plain',\n    '.cpp': 'text/plain',\n    '.doc': 'application/msword',\n    '.docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    '.xls': 'application/vnd.ms-excel,.xls',\n    '.xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,.xlsx',\n    '.xlsb': 'application/vnd.ms-excel.sheet.binary.macroenabled.12',\n    '.xlsm': 'application/vnd.ms-excel.sheet.macroenabled.12',\n    '.xltx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    '.exe': 'application/octet-stream',\n    '.gif': 'image/gif',\n    '.gtar': 'application/x-gtar',\n    '.gz': 'application/x-gzip',\n    '.h': 'text/plain',\n    '.htm': 'text/html',\n    '.html': 'text/html',\n    '.jar': 'application/java-archive',\n    '.java': 'text/plain',\n    '.jpeg': 'image/jpeg',\n    '.jpg': 'image/jpeg',\n    '.js': 'application/x-javascript',\n    '.json': 'application/json',\n    '.log': 'text/plain',\n    '.m3u': 'audio/x-mpegurl',\n    '.m4a': 'audio/mp4a-latm',\n    '.m4b': 'audio/mp4a-latm',\n    '.m4p': 'audio/mp4a-latm',\n    '.m4u': 'video/vnd.mpegurl',\n    '.m4v': 'video/x-m4v',\n    '.mov': 'video/quicktime',\n    '.mp2': 'audio/x-mpeg',\n    '.mp3': 'audio/x-mpeg',\n    '.mp4': 'video/mp4',\n    '.mpc': 'application/vnd.mpohun.certificate',\n    '.mpe': 'video/mpeg',\n    '.mpeg': 'video/mpeg',\n    '.mpg': 'video/mpeg',\n    '.mpg4': 'video/mp4',\n    '.mpga': 'audio/mpeg',\n    '.msg': 'application/vnd.ms-outlook',\n    '.ogg': 'audio/ogg',\n    '.pdf': 'application/pdf',\n    '.png': 'image/png',\n    '.pps': 'application/vnd.ms-powerpoint',\n    '.ppt': 'application/vnd.ms-powerpoint',\n    '.pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    '.prop': 'text/plain',\n    '.rc': 'text/plain',\n    '.rmvb': 'audio/x-pn-realaudio',\n    '.rtf': 'application/rtf',\n    '.sh': 'text/plain',\n    '.tar': 'application/x-tar',\n    '.tgz': 'application/x-compressed',\n    '.txt': 'text/plain',\n    '.wav': 'audio/x-wav',\n    '.wma': 'audio/x-ms-wma',\n    '.wmv': 'audio/x-ms-wmv',\n    '.wps': 'application/vnd.ms-works',\n    '.xml': 'text/plain',\n    '.z': 'application/x-compress',\n    '.zip': 'application/x-zip-compressed',\n    '': '*/*'\n};\n","import { isString, isArray } from 'ngx-tethys/util';\nimport { MIME_Map } from './constant';\n\nexport function mimeTypeConvert(value: Array<string> | string): string {\n    let inputTypes: Array<string>;\n    const acceptTypes: Array<string> = [];\n    if (isArray(value)) {\n        inputTypes = value as Array<string>;\n    } else if (isString(value)) {\n        inputTypes = value.split(',');\n    } else {\n        inputTypes = [];\n    }\n\n    if (inputTypes.length > 0) {\n        inputTypes.forEach(n => {\n            if (MIME_Map[n]) {\n                acceptTypes.push(MIME_Map[n]);\n            } else {\n                acceptTypes.push(n);\n            }\n        });\n    }\n    return acceptTypes.join(',');\n}\n","import { InjectionToken } from '@angular/core';\nimport { ThyFileSizeExceedsContext, ThySizeExceedsHandler } from './types';\n\nexport interface ThyUploaderConfig {\n    sizeThreshold?: number;\n    sizeExceedsHandler?: ThySizeExceedsHandler;\n}\n\nexport const THY_UPLOADER_DEFAULT_OPTIONS = new InjectionToken<ThyUploaderConfig>('thy-uploader-default-options');\n\nexport const THY_UPLOADER_DEFAULT_OPTIONS_PROVIDER = {\n    provide: THY_UPLOADER_DEFAULT_OPTIONS,\n    useValue: {\n        sizeThreshold: 0,\n        sizeExceedsHandler: sizeExceedsHandler\n    }\n};\n\nexport function sizeExceedsHandler(event: ThyFileSizeExceedsContext) {\n    const exceedsFilesMessage = event.exceedsFiles\n        .map(item => {\n            return `file: ${item.name}, size: ${item.size}`;\n        })\n        .join(',');\n    console.error(`some files(${exceedsFilesMessage}) size exceeds threshold ${event.sizeThreshold}`);\n}\n","import { isNumber, coerceNumberValue, isUndefinedOrNull } from 'ngx-tethys/util';\nimport { Inject, ElementRef, Renderer2, NgZone, Input, EventEmitter, Component, Injectable } from '@angular/core';\nimport { THY_UPLOADER_DEFAULT_OPTIONS, ThyUploaderConfig } from './uploader.config';\nimport { ThyFileSelectEvent, ThySizeExceedsHandler } from './types';\n\n@Component({\n    template: ``\n})\nexport class FileSelectBaseComponent {\n    acceptType: string;\n    sizeThreshold: number;\n    sizeExceedsHandler: ThySizeExceedsHandler;\n\n    @Input() set thySizeThreshold(value: number) {\n        const sizeThreshold = coerceNumberValue(value);\n        if (isNumber(sizeThreshold)) {\n            this.sizeThreshold = sizeThreshold;\n        }\n    }\n\n    @Input() set thySizeExceedsHandler(value: ThySizeExceedsHandler) {\n        if (value) {\n            this.sizeExceedsHandler = value;\n        }\n    }\n\n    constructor(\n        public elementRef: ElementRef,\n        @Inject(THY_UPLOADER_DEFAULT_OPTIONS) public defaultConfig: ThyUploaderConfig,\n        public renderer?: Renderer2,\n        public ngZone?: NgZone\n    ) {\n        this.sizeThreshold = defaultConfig.sizeThreshold;\n        this.sizeExceedsHandler = defaultConfig.sizeExceedsHandler;\n    }\n\n    handleSizeExceeds(event: Event, files: File[]) {\n        let sizeExceedsFiles = files.filter(item => item.size / 1024 > this.sizeThreshold);\n        if (sizeExceedsFiles.length > 0) {\n            const sizeExceedContext = {\n                files: files,\n                exceedsFiles: sizeExceedsFiles,\n                nativeEvent: event,\n                sizeThreshold: this.sizeThreshold\n            };\n            return this.sizeExceedsHandler(sizeExceedContext);\n        }\n        return files;\n    }\n\n    selectFiles(event: Event, files: File[], eventEmitter: EventEmitter<ThyFileSelectEvent>) {\n        let successFiles: File[] | void = files;\n        if (this.sizeThreshold && this.sizeThreshold > 0) {\n            successFiles = this.handleSizeExceeds(event, files);\n        }\n        if (successFiles) {\n            eventEmitter.emit({\n                files: successFiles,\n                nativeEvent: event\n            });\n        }\n    }\n}\n","import {\n    Component,\n    Input,\n    Output,\n    Renderer2,\n    Inject,\n    ViewChild,\n    ElementRef,\n    OnInit,\n    OnDestroy,\n    HostListener,\n    EventEmitter\n} from '@angular/core';\nimport { coerceBooleanProperty, isArray, isString } from 'ngx-tethys/util';\nimport { mimeTypeConvert } from './util';\nimport { ThySizeExceedsHandler } from './types';\nimport { THY_UPLOADER_DEFAULT_OPTIONS, ThyUploaderConfig } from './uploader.config';\nimport { FileSelectBaseComponent } from './file-select-base';\n\n@Component({\n    selector: '[thyFileSelect],thy-file-select',\n    templateUrl: './file-select.component.html'\n})\nexport class ThyFileSelectComponent extends FileSelectBaseComponent implements OnInit, OnDestroy {\n    private multiple: boolean;\n\n    private acceptFolder: boolean;\n\n    @Output() thyOnFileSelect = new EventEmitter();\n\n    @ViewChild('fileInput', { static: true }) fileInput: ElementRef<HTMLInputElement>;\n\n    @Input()\n    set thyMultiple(value: boolean) {\n        this.multiple = coerceBooleanProperty(value);\n        if (this.multiple) {\n            this.fileInput.nativeElement.setAttribute('multiple', '');\n        } else {\n            this.fileInput.nativeElement.removeAttribute('multiple');\n        }\n    }\n\n    @Input()\n    set thyAcceptFolder(value: boolean) {\n        this.acceptFolder = coerceBooleanProperty(value);\n        if (this.acceptFolder) {\n            this.fileInput.nativeElement.setAttribute('webkitdirectory', '');\n        } else {\n            this.fileInput.nativeElement.removeAttribute('webkitdirectory');\n        }\n    }\n\n    @Input()\n    set thyAcceptType(value: Array<string> | string) {\n        this.acceptType = mimeTypeConvert(value);\n    }\n\n    @Input() set thySizeThreshold(value: number) {\n        this.sizeThreshold = value;\n    }\n\n    @HostListener('click', ['$event'])\n    click($event: Event) {\n        this.fileInput.nativeElement.click();\n    }\n\n    constructor(public elementRef: ElementRef, @Inject(THY_UPLOADER_DEFAULT_OPTIONS) public defaultConfig: ThyUploaderConfig) {\n        super(elementRef, defaultConfig);\n    }\n\n    selectFile($event: Event) {\n        const files = this.fileInput.nativeElement.files;\n        if (files && files.length > 0) {\n            this.selectFiles($event, Array.from(files), this.thyOnFileSelect);\n            this.fileInput.nativeElement.value = '';\n        }\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject, Subscriber, from } from 'rxjs';\nimport { coerceArray } from 'ngx-tethys/util';\nimport { map, tap, mergeMap } from 'rxjs/operators';\nimport { HttpClient, HttpEvent, HttpEventType, XhrFactory } from '@angular/common/http';\n\nexport enum ThyUploadStatus {\n    pending = 'pending',\n    started = 'started',\n    uploading = 'uploading',\n    done = 'done'\n}\n\nexport interface ThyUploadResponse {\n    status: ThyUploadStatus;\n    uploadFile?: ThyUploadFile;\n}\n\nexport interface ThyUploadFile {\n    identifier?: string;\n    method: string;\n    url: string;\n    withCredentials?: boolean;\n    nativeFile: File;\n    fileField?: string;\n    fileName?: string;\n    headers?: {\n        [key: string]: string;\n    };\n    data?: {\n        [key: string]: string;\n    };\n\n    responseStatus?: any;\n    response?: any;\n    responseHeaders?: any;\n\n    progress?: {\n        status: ThyUploadStatus;\n        percentage: number;\n        speed?: number;\n        speedHuman?: string;\n        startTime: number | null;\n        endTime?: number | null;\n        estimatedTime?: number | null;\n        estimatedTimeHuman?: string | null;\n    };\n}\n\nexport interface ThyUploadFilesOptions {\n    onStarted?: (item: ThyUploadFile) => void;\n    onDone?: (item: ThyUploadFile) => void;\n}\n\n@Injectable()\nexport class ThyUploaderService {\n    constructor(private http: HttpClient, private xhrFactory: XhrFactory) {}\n\n    private secondsToHuman(sec: number): string {\n        return new Date(sec * 1000).toISOString().substr(11, 8);\n    }\n\n    private humanizeBytes(bytes: number): string {\n        if (bytes === 0) {\n            return '0 Byte';\n        }\n\n        const k = 1024;\n        const sizes: string[] = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB'];\n        const i: number = Math.floor(Math.log(bytes) / Math.log(k));\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n\n    private normalizeUploadFiles(uploadFiles: ThyUploadFile | ThyUploadFile[]) {\n        coerceArray(uploadFiles).forEach(uploadFile => {\n            if (!uploadFile.progress) {\n                uploadFile.progress = {\n                    status: ThyUploadStatus.pending,\n                    percentage: 0,\n                    startTime: 0\n                };\n            }\n        });\n    }\n\n    // private uploadByHttp(observer: Subscriber<ThyUploadResponse>, uploadFile: ThyUploadFile) {\n    //     const time: number = new Date().getTime();\n    //     let speed = 0;\n    //     let estimatedTime: number | null = null;\n\n    //     uploadFile.progress = {\n    //         status: ThyUploadStatus.started,\n    //         percentage: 0,\n    //         startTime: time\n    //     };\n\n    //     const formData = new FormData();\n    //     Object.keys(uploadFile.data || {}).forEach(key => formData.append(key, uploadFile.data[key]));\n    //     formData.append(uploadFile.fileField || 'file', uploadFile.nativeFile, uploadFile.fileName);\n    //     const headers = {\n    //         'Content-Type': 'multipart/form-data'\n    //     };\n    //     Object.keys(uploadFile.headers || {}).forEach(key => (headers[key] = uploadFile.headers[key]));\n\n    //     const subscription = this.http\n    //         .post(uploadFile.url, formData, {\n    //             headers: headers,\n    //             reportProgress: true,\n    //             observe: 'events',\n    //             withCredentials: uploadFile.withCredentials ? true : false\n    //         })\n    //         .subscribe(\n    //             (event: HttpEvent<any>) => {\n    //                 console.log('Subscribe data', event);\n    //                 switch (event.type) {\n    //                     case HttpEventType.Sent:\n    //                         observer.next({ status: ThyUploadStatus.started, uploadFile: uploadFile });\n    //                         break;\n    //                     case HttpEventType.UploadProgress:\n    //                         let percentage = Math.round((event.loaded * 100) / event.total);\n    //                         if (percentage === 100) {\n    //                             percentage = 99;\n    //                         }\n    //                         const diff = new Date().getTime() - time;\n    //                         speed = Math.round((event.loaded / diff) * 1000);\n    //                         const progressStartTime = (uploadFile.progress && uploadFile.progress.startTime) || new Date().getTime();\n    //                         estimatedTime = Math.ceil((event.total - event.loaded) / speed);\n\n    //                         uploadFile.progress.status = ThyUploadStatus.uploading;\n    //                         uploadFile.progress.percentage = percentage;\n    //                         uploadFile.progress.speed = speed;\n    //                         uploadFile.progress.speedHuman = `${this.humanizeBytes(speed)}/s`;\n    //                         uploadFile.progress.startTime = progressStartTime;\n    //                         uploadFile.progress.estimatedTime = estimatedTime;\n    //                         uploadFile.progress.estimatedTimeHuman = this.secondsToHuman(estimatedTime);\n\n    //                         observer.next({ status: ThyUploadStatus.uploading, uploadFile: uploadFile });\n    //                         break;\n    //                     case HttpEventType.Response:\n    //                         uploadFile.response = event.body;\n    //                         observer.next({ status: ThyUploadStatus.done, uploadFile: uploadFile });\n    //                         break;\n    //                     default:\n    //                         throw new Error(`Unhandled event: ${event.type}`);\n    //                 }\n    //             },\n    //             error => {\n    //                 observer.error(error);\n    //             }\n    //         );\n    //     return subscription;\n    // }\n\n    private uploadByXhr(observer: Subscriber<ThyUploadResponse>, uploadFile: ThyUploadFile) {\n        const xhr = this.xhrFactory.build();\n        const time: number = new Date().getTime();\n        let speed = 0;\n        let estimatedTime: number | null = null;\n\n        uploadFile.progress = {\n            status: ThyUploadStatus.started,\n            percentage: 0,\n            startTime: time\n        };\n\n        xhr.upload.addEventListener(\n            'progress',\n            (event: ProgressEvent) => {\n                if (event.lengthComputable) {\n                    let percentage = Math.round((event.loaded * 100) / event.total);\n                    if (percentage === 100) {\n                        percentage = 99;\n                    }\n                    const diff = new Date().getTime() - time;\n                    speed = Math.round((event.loaded / diff) * 1000);\n                    const progressStartTime = (uploadFile.progress && uploadFile.progress.startTime) || new Date().getTime();\n                    estimatedTime = Math.ceil((event.total - event.loaded) / speed);\n\n                    uploadFile.progress.status = ThyUploadStatus.uploading;\n                    uploadFile.progress.percentage = percentage;\n                    uploadFile.progress.speed = speed;\n                    uploadFile.progress.speedHuman = `${this.humanizeBytes(speed)}/s`;\n                    uploadFile.progress.startTime = progressStartTime;\n                    uploadFile.progress.estimatedTime = estimatedTime;\n                    uploadFile.progress.estimatedTimeHuman = this.secondsToHuman(estimatedTime);\n\n                    observer.next({ status: ThyUploadStatus.uploading, uploadFile: uploadFile });\n                }\n            },\n            false\n        );\n\n        xhr.upload.addEventListener('error', (e: Event) => {\n            observer.error(e);\n            observer.complete();\n        });\n\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === XMLHttpRequest.DONE) {\n                const speedTime = (new Date().getTime() - uploadFile.progress.startTime) * 1000;\n                const speedAverage = Math.round(uploadFile.nativeFile.size / speedTime);\n\n                uploadFile.progress.status = ThyUploadStatus.done;\n                uploadFile.progress.percentage = 100;\n                uploadFile.progress.speed = speedAverage;\n                uploadFile.progress.speedHuman = `${this.humanizeBytes(speed)}/s`;\n                uploadFile.progress.estimatedTime = estimatedTime;\n                uploadFile.progress.estimatedTimeHuman = this.secondsToHuman(estimatedTime || 0);\n\n                uploadFile.responseStatus = xhr.status;\n\n                try {\n                    uploadFile.response = JSON.parse(xhr.response);\n                } catch (e) {\n                    uploadFile.response = xhr.response;\n                }\n\n                // file.responseHeaders = this.parseResponseHeaders(xhr.getAllResponseHeaders());\n\n                observer.next({ status: ThyUploadStatus.done, uploadFile: uploadFile });\n\n                observer.complete();\n            }\n        };\n\n        xhr.open(uploadFile.method, uploadFile.url, true);\n        xhr.withCredentials = uploadFile.withCredentials ? true : false;\n\n        try {\n            const formData = new FormData();\n\n            Object.keys(uploadFile.data || {}).forEach(key => formData.append(key, uploadFile.data[key]));\n            Object.keys(uploadFile.headers || {}).forEach(key => xhr.setRequestHeader(key, uploadFile.headers[key]));\n\n            formData.append(uploadFile.fileField || 'file', uploadFile.nativeFile, uploadFile.fileName);\n\n            observer.next({ status: ThyUploadStatus.started, uploadFile: uploadFile });\n            xhr.send(formData);\n        } catch (error) {\n            observer.error(error);\n            observer.complete();\n        }\n        return xhr;\n    }\n\n    private ensureFileName(uploadFile: ThyUploadFile) {\n        uploadFile.fileName = uploadFile.fileName || uploadFile.nativeFile.name;\n    }\n\n    /**\n     * ä¸ä¼ åä¸ªæä»¶\n     * @param uploadFile ä¸ä¼ æä»¶å¯¹è±¡\n     */\n    upload(uploadFile: ThyUploadFile): Observable<ThyUploadResponse> {\n        this.ensureFileName(uploadFile);\n\n        return new Observable(observer => {\n            const xhr = this.uploadByXhr(observer, uploadFile);\n            return () => {\n                xhr.abort();\n            };\n        });\n    }\n\n    /**\n     * å¹¶åä¸ä¼ å¤ä¸ªæä»¶\n     * @param uploadFiles ä¸ä¼ æä»¶åè¡¨\n     * @param concurrent å¹¶åä¸ä¼ æ°, é»è®¤ 5\n     * @param options onStared, onDone åè°\n     */\n    uploadBulk(uploadFiles: ThyUploadFile[], concurrent = 5, options?: ThyUploadFilesOptions) {\n        this.normalizeUploadFiles(uploadFiles);\n        const result = from(uploadFiles).pipe(\n            mergeMap(uploadFile => {\n                return this.upload(uploadFile).pipe(\n                    tap(uploadResponse => {\n                        if (options && options.onStarted && uploadResponse.status === ThyUploadStatus.started) {\n                            options.onStarted(uploadResponse.uploadFile);\n                        }\n                        if (options && options.onDone && uploadResponse.status === ThyUploadStatus.done) {\n                            options.onDone(uploadResponse.uploadFile);\n                        }\n                    })\n                );\n            }, concurrent),\n            map(response => {\n                return response;\n            })\n        );\n\n        return result;\n    }\n}\n","import { isEmpty } from 'ngx-tethys/util';\nimport {\n    Component,\n    OnInit,\n    ElementRef,\n    Renderer2,\n    Output,\n    EventEmitter,\n    HostBinding,\n    Input,\n    NgZone,\n    OnDestroy,\n    Inject\n} from '@angular/core';\nimport { mimeTypeConvert } from './util';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil, filter, tap } from 'rxjs/operators';\nimport { THY_UPLOADER_DEFAULT_OPTIONS, ThyUploaderConfig } from './uploader.config';\nimport { FileSelectBaseComponent } from './file-select-base';\n\n@Component({\n    selector: '[thyFileDrop]',\n    template: `\n        <ng-content></ng-content>\n    `\n})\nexport class ThyFileDropComponent extends FileSelectBaseComponent implements OnInit, OnDestroy {\n    @HostBinding('class.drop-over')\n    @HostBinding('class.thy-drop-over')\n    isDragOver = false;\n    private dragOverCustomClass: string;\n\n    @Input() set thyFileDropClassName(value: string) {\n        this.dragOverCustomClass = value;\n    }\n\n    @Input()\n    set thyAcceptType(value: Array<string> | string) {\n        this.acceptType = mimeTypeConvert(value);\n    }\n\n    @Output() thyOnDrop = new EventEmitter();\n\n    private ngUnsubscribe$ = new Subject();\n\n    constructor(\n        public elementRef: ElementRef,\n        public renderer: Renderer2,\n        public ngZone: NgZone,\n        @Inject(THY_UPLOADER_DEFAULT_OPTIONS) public defaultConfig: ThyUploaderConfig\n    ) {\n        super(elementRef, defaultConfig);\n    }\n\n    public ngOnInit(): void {\n        this.ngZone.runOutsideAngular(() => {\n            fromEvent(this.elementRef.nativeElement, 'dragenter')\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    tap((event: DragEvent) => {\n                        event.preventDefault();\n                    }),\n                    filter(event => event.dataTransfer.items && event.dataTransfer.items.length > 0)\n                )\n                .subscribe((event: DragEvent) => {\n                    if (this.checkRejectFolderAndHtmlElement(event)) {\n                        const files = this.filterFilesOrItems(Array.from(event.dataTransfer.items));\n                        if (!isEmpty(files)) {\n                            this.ngZone.run(() => {\n                                this.isDragOver = true;\n                                this.toggleDropOverClassName();\n                            });\n                        }\n                    }\n                });\n\n            fromEvent(this.elementRef.nativeElement, 'dragover')\n                .pipe(takeUntil(this.ngUnsubscribe$))\n                .subscribe((event: any) => {\n                    event.preventDefault();\n                });\n\n            fromEvent(this.elementRef.nativeElement, 'dragleave')\n                .pipe(takeUntil(this.ngUnsubscribe$))\n                .subscribe((event: any) => {\n                    this.ngZone.run(() => {\n                        if (!this.elementRef.nativeElement.contains(event.fromElement)) {\n                            this.resetDragOver();\n                            this.toggleDropOverClassName();\n                        }\n                    });\n                });\n\n            fromEvent(this.elementRef.nativeElement, 'drop')\n                .pipe(\n                    takeUntil(this.ngUnsubscribe$),\n                    tap((event: DragEvent) => {\n                        event.preventDefault();\n                    })\n                )\n                .subscribe((event: DragEvent) => {\n                    this.ngZone.run(() => {\n                        if (this.checkRejectFolderAndHtmlElement(event)) {\n                            const files = this.filterFilesOrItems(event.dataTransfer ? Array.from(event.dataTransfer.files) : []);\n                            if (!isEmpty(files)) {\n                                this.selectFiles(event, Array.from(event.dataTransfer.files), this.thyOnDrop);\n                            }\n                        }\n                        this.resetDragOver();\n                        this.toggleDropOverClassName();\n                    });\n                });\n        });\n    }\n\n    private checkRejectFolderAndHtmlElement(event: DragEvent) {\n        // æé¤æä»¶å¤¹åHTMLåç´ ææ½\n        const items: DataTransferItemList | DataTransferItem[] = event.dataTransfer ? event.dataTransfer.items : [];\n        let res = true;\n        for (let index = 0; index < items.length; index++) {\n            const item = items[index];\n            const entry = this.getAsEntry(item);\n            if (item.kind !== 'file' || (entry && !entry.isFile)) {\n                res = false;\n                // console.error(`file extensions not support drag upload, kind: ${item.kind}, type: ${item.type}`);\n            }\n        }\n        return res;\n    }\n\n    private getAsEntry(item: DataTransferItem) {\n        let entry;\n        if (item['getAsEntry']) {\n            entry = item['getAsEntry']();\n        } else if (item.webkitGetAsEntry) {\n            entry = item.webkitGetAsEntry();\n        }\n        return entry;\n    }\n\n    private filterFilesOrItems(items: Array<DataTransferItem | File>): Array<DataTransferItem | File> {\n        if (this.acceptType && this.acceptType != '*/*') {\n            return items.filter(item => {\n                return this.acceptType.includes(item.type);\n            });\n        } else {\n            return Array.from(items);\n        }\n    }\n\n    private toggleDropOverClassName() {\n        if (this.dragOverCustomClass) {\n            if (this.isDragOver) {\n                this.renderer.addClass(this.elementRef.nativeElement, this.dragOverCustomClass);\n            } else {\n                this.renderer.removeClass(this.elementRef.nativeElement, this.dragOverCustomClass);\n            }\n        }\n    }\n\n    private setDragOverState(isDragOver: boolean) {\n        this.isDragOver = isDragOver;\n    }\n\n    private resetDragOver() {\n        this.setDragOverState(false);\n    }\n\n    public ngOnDestroy(): void {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ThyFileSelectComponent } from './file-select.component';\nimport { ThyFileDropComponent } from './file-drop.component';\nimport { ThyUploaderService } from './uploader.service';\nimport { THY_UPLOADER_DEFAULT_OPTIONS_PROVIDER } from './uploader.config';\nimport { FileSelectBaseComponent } from './file-select-base';\n// import { ThyDirectiveModule } from 'ngx-tethys/directive';\n\n@NgModule({\n    declarations: [ThyFileSelectComponent, ThyFileDropComponent, FileSelectBaseComponent],\n    imports: [CommonModule, HttpClientModule],\n    entryComponents: [ThyFileDropComponent],\n    providers: [ThyUploaderService, THY_UPLOADER_DEFAULT_OPTIONS_PROVIDER],\n    exports: [ThyFileSelectComponent, ThyFileDropComponent]\n})\nexport class ThyUploaderModule {}\n"]}