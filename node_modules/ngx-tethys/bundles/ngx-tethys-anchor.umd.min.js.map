{"version":3,"sources":["../../src/anchor/anchor.component.ts","../../src/anchor/anchor-link.component.ts","../../src/anchor/anchor.module.ts"],"names":["sharpMatcherRegx","ThyAnchorComponent","document","cdr","platform","zone","renderer","scrollService","this","thyAffix","thyBounds","thyOffsetTop","undefined","thyTarget","thyClick","EventEmitter","thyScroll","visible","wrapperStyle","max-height","links","animating","destroy$","Subject","handleScrollTimeoutID","prototype","registerLink","link","push","unregisterLink","splice","indexOf","getContainer","container","window","ngAfterViewInit","registerScrollEvent","ngOnDestroy","clearTimeout","next","complete","_this","isBrowser","runOutsideAngular","fromEvent","pipe","throttleTime","takeUntil","subscribe","handleScroll","setTimeout","HTMLElement","sections","scope","forEach","linkComponent","sharpLinkMatch","exec","thyHref","toString","target","querySelector","top","getOffset","length","maxSection","reduce","prev","curr","handleActive","clearActive","detectChanges","setVisible","i","unsetActive","setActive","linkNode","getLinkTitleElement","ink","nativeElement","style","offsetTop","height","clientHeight","emit","visibleClassname","addClass","removeClass","handleScrollTo","linkElement","targetScrollTop","getScroll","scrollTo","ngOnChanges","changes","thyContainer","Component","args","selector","exportAs","preserveWhitespaces","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","Inject","DOCUMENT","ChangeDetectorRef","Platform","NgZone","Renderer2","ThyScrollService","ViewChild","Input","Output","ThyAnchorLinkComponent","elementRef","anchorComponent","title","Object","defineProperty","value","TemplateRef","titleTemplate","ngOnInit","linkTitle","goToClick","e","preventDefault","stopPropagation","ElementRef","ContentChild","static","NgModule","declarations","exports","imports","CommonModule","PlatformModule","ThyAffixModule"],"mappings":"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","sourcesContent":["import { Platform } from '@angular/cdk/platform';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { fromEvent, Subject } from 'rxjs';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\n\nimport { ThyAnchorLinkComponent } from './anchor-link.component';\nimport { getOffset } from 'ngx-tethys/util';\nimport { ThyScrollService } from 'ngx-tethys/core';\nimport { DOCUMENT } from '@angular/common';\n\ninterface Section {\n    linkComponent: ThyAnchorLinkComponent;\n    top: number;\n}\n\nconst sharpMatcherRegx = /#([^#]+)$/;\n\n@Component({\n    selector: 'thy-anchor',\n    exportAs: 'thyAnchor',\n    preserveWhitespaces: false,\n    template: `\n        <thy-affix *ngIf=\"thyAffix; else content\" [thyOffsetTop]=\"thyOffsetTop\" [thyContainer]=\"container\">\n            <ng-template [ngTemplateOutlet]=\"content\"></ng-template>\n        </thy-affix>\n        <ng-template #content>\n            <div class=\"thy-anchor-wrapper\" [ngStyle]=\"wrapperStyle\">\n                <div class=\"thy-anchor\">\n                    <div class=\"thy-anchor-ink\">\n                        <div class=\"thy-anchor-ink-full\" #ink></div>\n                    </div>\n                    <ng-content></ng-content>\n                </div>\n            </div>\n        </ng-template>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyAnchorComponent implements OnDestroy, AfterViewInit, OnChanges {\n    @ViewChild('ink') private ink!: ElementRef;\n\n    @Input() thyAffix = true;\n\n    @Input()\n    thyBounds = 5;\n\n    @Input()\n    thyOffsetTop?: number = undefined;\n\n    @Input() thyContainer?: string | HTMLElement;\n    @Input() thyTarget: string | HTMLElement = '';\n\n    @Output() readonly thyClick = new EventEmitter<ThyAnchorLinkComponent>();\n    @Output() readonly thyScroll = new EventEmitter<ThyAnchorLinkComponent>();\n\n    visible = false;\n    wrapperStyle = { 'max-height': '100vh' };\n\n    container?: HTMLElement | Window;\n\n    private links: ThyAnchorLinkComponent[] = [];\n    private animating = false;\n    private destroy$ = new Subject();\n    private handleScrollTimeoutID = -1;\n\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        private cdr: ChangeDetectorRef,\n        private platform: Platform,\n        private zone: NgZone,\n        private renderer: Renderer2,\n        private scrollService: ThyScrollService\n    ) {}\n\n    registerLink(link: ThyAnchorLinkComponent): void {\n        this.links.push(link);\n    }\n\n    unregisterLink(link: ThyAnchorLinkComponent): void {\n        this.links.splice(this.links.indexOf(link), 1);\n    }\n\n    private getContainer(): HTMLElement | Window {\n        return this.container || window;\n    }\n\n    ngAfterViewInit(): void {\n        this.registerScrollEvent();\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this.handleScrollTimeoutID);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    private registerScrollEvent(): void {\n        if (!this.platform.isBrowser) {\n            return;\n        }\n        this.destroy$.next();\n        this.zone.runOutsideAngular(() => {\n            fromEvent(this.getContainer(), 'scroll')\n                .pipe(throttleTime(50), takeUntil(this.destroy$))\n                .subscribe(() => this.handleScroll());\n        });\n        // Browser would maintain the scrolling position when refreshing.\n        // So we have to delay calculation in avoid of getting a incorrect result.\n        this.handleScrollTimeoutID = setTimeout(() => this.handleScroll());\n    }\n\n    handleScroll(): void {\n        if (typeof document === 'undefined' || this.animating) {\n            return;\n        }\n        const container: HTMLElement = this.container instanceof HTMLElement ? this.container : this.document;\n\n        const sections: Section[] = [];\n        const scope = (this.thyOffsetTop || 0) + this.thyBounds;\n        this.links.forEach(linkComponent => {\n            const sharpLinkMatch = sharpMatcherRegx.exec(linkComponent.thyHref.toString());\n            if (!sharpLinkMatch) {\n                return;\n            }\n            const target = container.querySelector(`#${sharpLinkMatch[1]}`) as HTMLElement;\n            if (target) {\n                const top = getOffset(target, this.getContainer()).top;\n                if (top < scope) {\n                    sections.push({\n                        top,\n                        linkComponent\n                    });\n                }\n            }\n        });\n\n        this.visible = !!sections.length;\n        if (!this.visible) {\n            this.clearActive();\n            this.cdr.detectChanges();\n        } else {\n            const maxSection = sections.reduce((prev, curr) => (curr.top > prev.top ? curr : prev));\n            this.handleActive(maxSection.linkComponent);\n        }\n        this.setVisible();\n    }\n\n    private clearActive(): void {\n        this.links.forEach(i => {\n            i.unsetActive();\n        });\n    }\n\n    private handleActive(linkComponent: ThyAnchorLinkComponent): void {\n        this.clearActive();\n        linkComponent.setActive();\n        const linkNode = linkComponent.getLinkTitleElement();\n\n        this.ink.nativeElement.style.top = `${linkNode.offsetTop}px`;\n        this.ink.nativeElement.style.height = `${linkNode.clientHeight}px`;\n        this.visible = true;\n        this.setVisible();\n        this.thyScroll.emit(linkComponent);\n    }\n\n    private setVisible(): void {\n        const visible = this.visible;\n        const visibleClassname = 'visible';\n        if (this.ink) {\n            if (visible) {\n                this.renderer.addClass(this.ink.nativeElement, visibleClassname);\n            } else {\n                this.renderer.removeClass(this.ink.nativeElement, visibleClassname);\n            }\n        }\n    }\n\n    handleScrollTo(linkComponent: ThyAnchorLinkComponent): void {\n        const container: HTMLElement = this.container instanceof HTMLElement ? this.container : this.document;\n        const linkElement: HTMLElement = container.querySelector(linkComponent.thyHref);\n        if (!linkElement) {\n            return;\n        }\n\n        this.animating = true;\n        const containerScrollTop = this.scrollService.getScroll(this.getContainer());\n        const elementOffsetTop = getOffset(linkElement, this.getContainer()).top;\n        const targetScrollTop = containerScrollTop + elementOffsetTop - (this.thyOffsetTop || 0);\n        this.scrollService.scrollTo(this.getContainer(), targetScrollTop, undefined, () => {\n            this.animating = false;\n        });\n        this.handleActive(linkComponent);\n        this.thyClick.emit(linkComponent);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        const { thyOffsetTop, thyContainer } = changes;\n        if (thyOffsetTop) {\n            this.wrapperStyle = {\n                'max-height': `calc(100vh - ${this.thyOffsetTop}px)`\n            };\n        }\n        if (thyContainer && this.thyContainer) {\n            const container = this.thyContainer || this.thyTarget;\n            this.container = typeof container === 'string' ? this.document.querySelector(container) : container;\n            this.registerScrollEvent();\n        }\n    }\n}\n","import { Platform } from '@angular/cdk/platform';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ElementRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    Renderer2,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { ThyAnchorComponent } from './anchor.component';\n\n@Component({\n    selector: 'thy-link',\n    exportAs: 'thyLink',\n    preserveWhitespaces: false,\n    template: `\n        <a #linkTitle (click)=\"goToClick($event)\" href=\"{{ thyHref }}\" class=\"thy-anchor-link-title\" title=\"{{ title }}\">\n            <span *ngIf=\"title; else titleTemplate || thyTemplate\">{{ title }}</span>\n        </a>\n        <ng-content></ng-content>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyAnchorLinkComponent implements OnInit, OnDestroy {\n    @Input() thyHref = '#';\n\n    title: string | null = '';\n    titleTemplate?: TemplateRef<any>;\n\n    @Input()\n    set thyTitle(value: string | TemplateRef<void>) {\n        if (value instanceof TemplateRef) {\n            this.title = null;\n            this.titleTemplate = value;\n        } else {\n            this.title = value;\n        }\n    }\n\n    @ContentChild('thyTemplate') thyTemplate!: TemplateRef<void>;\n    @ViewChild('linkTitle', { static: true }) linkTitle!: ElementRef<HTMLAnchorElement>;\n\n    constructor(\n        public elementRef: ElementRef,\n        private anchorComponent: ThyAnchorComponent,\n        private platform: Platform,\n        private renderer: Renderer2\n    ) {\n        this.renderer.addClass(elementRef.nativeElement, 'thy-anchor-link');\n    }\n\n    ngOnInit(): void {\n        this.anchorComponent.registerLink(this);\n    }\n\n    getLinkTitleElement(): HTMLAnchorElement {\n        return this.linkTitle.nativeElement;\n    }\n\n    setActive(): void {\n        this.renderer.addClass(this.elementRef.nativeElement, 'thy-anchor-link-active');\n    }\n\n    unsetActive(): void {\n        this.renderer.removeClass(this.elementRef.nativeElement, 'thy-anchor-link-active');\n    }\n\n    goToClick(e: Event): void {\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.platform.isBrowser) {\n            this.anchorComponent.handleScrollTo(this);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.anchorComponent.unregisterLink(this);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { ThyAnchorComponent } from './anchor.component';\nimport { ThyAnchorLinkComponent } from './anchor-link.component';\nimport { ThyAffixModule } from 'ngx-tethys/affix';\n\n@NgModule({\n    declarations: [ThyAnchorComponent, ThyAnchorLinkComponent],\n    exports: [ThyAnchorComponent, ThyAnchorLinkComponent],\n    imports: [CommonModule, PlatformModule, ThyAffixModule]\n})\nexport class ThyAnchorModule {}\n"]}