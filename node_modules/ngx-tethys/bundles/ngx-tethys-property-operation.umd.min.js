!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("ngx-tethys/button"),require("ngx-tethys/flexible-text"),require("ngx-tethys/icon"),require("@angular/common"),require("@angular/core"),require("ngx-tethys/core"),require("ngx-tethys/util")):"function"==typeof define&&define.amd?define("ngx-tethys/property-operation",["exports","ngx-tethys/button","ngx-tethys/flexible-text","ngx-tethys/icon","@angular/common","@angular/core","ngx-tethys/core","ngx-tethys/util"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self)["ngx-tethys"]=e["ngx-tethys"]||{},e["ngx-tethys"]["property-operation"]={}),e["ngx-tethys"].button,e["ngx-tethys"]["flexible-text"],e["ngx-tethys"].icon,e.ng.common,e.ng.core,e["ngx-tethys"].core,e["ngx-tethys"].util)}(this,(function(e,t,n,o,i,s,r,a){"use strict";var l=function(){this._isPropertyOperationGroup=!0};l.decorators=[{type:s.Component,args:[{selector:"thy-property-operation-group",template:"<ng-content></ng-content>\n"}]}],l.ctorParameters=function(){return[]},l.propDecorators={_isPropertyOperationGroup:[{type:s.HostBinding,args:["class.thy-property-operation-group"]}]};var p=function(){function e(e,t,n){this.thyTranslate=e,this.updateHostClassService=t,this.elementRef=n,this.initialized=!1,this.onlyHasTips=!1,this.showClose=!1,this.labelHideWhenHasValue=!1,this.thyOnRemove=new s.EventEmitter,this.thyClick=new s.EventEmitter,this._isPropertyOperation=!0}return Object.defineProperty(e.prototype,"thyLabelText",{set:function(e){this.labelText=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyValue",{set:function(e){this.value=e,this.setOnlyHasTips()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyLabelTextTranslateKey",{set:function(e){this.labelText=this.thyTranslate.instant(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyIcon",{set:function(e){this.icon=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyShowClose",{set:function(e){this.showClose=a.coerceBooleanProperty(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyLabelHasValue",{set:function(e){this.labelHideWhenHasValue=!a.coerceBooleanProperty(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyLabelHideWhenHasValue",{set:function(e){this.labelHideWhenHasValue=a.coerceBooleanProperty(e)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"thyType",{set:function(e){this.type=e,this.setHostClass()},enumerable:!1,configurable:!0}),e.prototype.setHostClass=function(e){void 0===e&&(e=!1),(this.initialized||e)&&this.updateHostClassService.updateClass(this.type?["thy-property-operation-"+this.type]:[])},e.prototype.setOnlyHasTips=function(e){void 0===e&&(e=!1),(this.initialized||e)&&(this.value?this.onlyHasTips=!1:a.htmlElementIsEmpty(this.contentElement.nativeElement)?this.onlyHasTips=!0:this.onlyHasTips=!1)},e.prototype.ngOnInit=function(){this.updateHostClassService.initializeElement(this.elementRef.nativeElement),this.setHostClass(!0)},e.prototype.onclick=function(e){this.disabled||this.thyClick.emit(e)},e.prototype.ngAfterContentInit=function(){this.setOnlyHasTips(!0),this.initialized=!0},e.prototype.remove=function(e){e.stopPropagation(),this.thyOnRemove.emit(e)},e}();p.decorators=[{type:s.Component,args:[{selector:"thy-property-operation",template:'<div class="thy-operation-icon">\n  <ng-container *ngTemplateOutlet="operationIcon"></ng-container>\n  <button\n    *ngIf="icon"\n    [ngClass]="{ disabled: disabled }"\n    [thyButtonIcon]="icon"\n    [thyShape]="onlyHasTips ? \'circle-thick-dashed\' : \'circle-thick-solid\'"\n  ></button>\n</div>\n<div class="thy-operation-content" [ngClass]="{ \'only-has-tips\': onlyHasTips }">\n  <div #contentElement>\n    <ng-content></ng-content>\n  </div>\n  <ng-container *ngIf="value">\n    <span thyFlexibleText [thyTooltipContent]="value">{{ value }}</span>\n  </ng-container>\n\n  <div class="thy-tips" *ngIf="!value || (!labelHideWhenHasValue && value)">{{ labelText }}</div>\n</div>\n<span *ngIf="showClose && !disabled" (click)="remove($event)" class="close-link close-link-danger">\n  <thy-icon thyIconName="close" class=" close-link-sm"></thy-icon>\n</span>\n',providers:[r.UpdateHostClassService]}]}],p.ctorParameters=function(){return[{type:r.ThyTranslate},{type:r.UpdateHostClassService},{type:s.ElementRef}]},p.propDecorators={thyOnRemove:[{type:s.Output}],thyClick:[{type:s.Output}],_isPropertyOperation:[{type:s.HostBinding,args:["class.thy-property-operation"]}],operationIcon:[{type:s.ContentChild,args:["operationIcon"]}],contentElement:[{type:s.ViewChild,args:["contentElement",{static:!0}]}],thyLabelText:[{type:s.Input}],thyValue:[{type:s.Input}],thyLabelTextTranslateKey:[{type:s.Input}],thyIcon:[{type:s.Input}],thyShowClose:[{type:s.Input}],thyLabelHasValue:[{type:s.Input}],thyLabelHideWhenHasValue:[{type:s.Input}],thyType:[{type:s.Input}],active:[{type:s.HostBinding,args:["class.active"]},{type:s.Input,args:["thyActive"]}],disabled:[{type:s.HostBinding,args:["class.thy-property-operation-disabled"]},{type:s.Input,args:["thyDisabled"]}],onclick:[{type:s.HostListener,args:["click",["$event"]]}]};var y=function(){};y.decorators=[{type:s.NgModule,args:[{declarations:[p,l],imports:[i.CommonModule,t.ThyButtonModule,o.ThyIconModule,n.ThyFlexibleTextModule],exports:[p,l]}]}],e.ThyPropertyOperationComponent=p,e.ThyPropertyOperationGroupComponent=l,e.ThyPropertyOperationModule=y,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-tethys-property-operation.umd.min.js.map