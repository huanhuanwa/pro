(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('ngx-tethys/shared'), require('ngx-tethys/core'), require('ngx-tethys/util'), require('rxjs'), require('@angular/cdk/bidi'), require('@angular/cdk/coercion'), require('@angular/cdk/overlay'), require('@angular/cdk/portal'), require('rxjs/operators'), require('@angular/animations'), require('ngx-tethys/icon')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/slide', ['exports', '@angular/core', '@angular/common', 'ngx-tethys/shared', 'ngx-tethys/core', 'ngx-tethys/util', 'rxjs', '@angular/cdk/bidi', '@angular/cdk/coercion', '@angular/cdk/overlay', '@angular/cdk/portal', 'rxjs/operators', '@angular/animations', 'ngx-tethys/icon'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].slide = {}), global.ng.core, global.ng.common, global['ngx-tethys'].shared, global['ngx-tethys'].core, global['ngx-tethys'].util, global.rxjs, global.ng.cdk.bidi, global.ng.cdk.coercion, global.ng.cdk.overlay, global.ng.cdk.portal, global.rxjs.operators, global.ng.animations, global['ngx-tethys'].icon));
}(this, (function (exports, core$1, common, shared, core, util, rxjs, bidi, coercion, overlay, portal, operators, animations, icon) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var ThySlideConfig = /** @class */ (function (_super) {
        __extends(ThySlideConfig, _super);
        function ThySlideConfig() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ThySlideConfig;
    }(core.ThyAbstractOverlayConfig));
    var ThySlideOption = /** @class */ (function (_super) {
        __extends(ThySlideOption, _super);
        function ThySlideOption() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ThySlideOption;
    }(ThySlideConfig));
    var THY_SLIDE_DEFAULT_CONFIG = new core$1.InjectionToken('thy-slide-default-options');
    var slideUpperOverlayOptions = {
        name: 'slide',
        animationEnabled: true,
        disposeWhenClose: true
    };
    var slideDefaultConfigValue = {
        hasBackdrop: true,
        backdropClass: 'thy-slide-backdrop',
        backdropClosable: true,
        closeOnNavigation: true,
        autoFocus: true,
        restoreFocus: true,
        from: 'right',
        panelClass: 'thy-slide',
        containerClass: '',
        role: 'slide',
        offset: 0,
        originActiveClass: 'thy-slide-origin-active',
        mode: 'over',
        drawerContainer: ''
    };
    var ɵ0 = {};
    var THY_SLIDE_DEFAULT_CONFIG_PROVIDER = {
        provide: THY_SLIDE_DEFAULT_CONFIG,
        useValue: ɵ0
    };

    var animationBody = [
        animations.transition('void => offsetLeft', [animations.style({ width: 0 }), animations.animate('0.2s ease-in')]),
        animations.transition('offsetLeft => exit', [animations.animate('0.2s', animations.style({ width: 0 }))]),
        animations.transition('void => offsetRight', [animations.style({ width: 0 }), animations.animate('0.2s ease')]),
        animations.transition('offsetRight => exit', [animations.animate('0.2s', animations.style({ width: 0 }))]),
        animations.transition('void => offsetTop', [animations.style({ height: 0 }), animations.animate('0.2s ease-in')]),
        animations.transition('offsetTop => exit', [animations.animate('0.2s', animations.style({ height: 0 }))]),
        animations.transition('void => offsetBottom', [animations.style({ height: 0 }), animations.animate('0.2s ease-in')]),
        animations.transition('offsetBottom => exit', [animations.animate('0.2s', animations.style({ height: 0 }))]),
        animations.state('left right top bottom', animations.style({ transform: '*' })),
        animations.transition('void => left', [animations.style({ transform: 'translateX(-100%)' }), animations.animate('0.2s ease-in')]),
        animations.transition('left => exit', [animations.animate('0.2s', animations.style({ transform: 'translateX(-100%)' }))]),
        animations.transition('void => right', [animations.style({ transform: 'translateX(100%)' }), animations.animate('0.2s ease-in')]),
        animations.transition('right => exit', [animations.animate('0.2s', animations.style({ transform: 'translateX(100%)' }))]),
        animations.transition('void => top', [animations.style({ transform: 'translateY(-100%)' }), animations.animate('0.2s ease-in')]),
        animations.transition('top => exit', [animations.animate('0.2s', animations.style({ transform: 'translateY(-100%)' }))]),
        animations.transition('void => bottom', [animations.style({ transform: 'translateY(100%)' }), animations.animate('0.2s ease-in')]),
        animations.transition('bottom => exit', [animations.animate('0.2s', animations.style({ transform: 'translateY(100%)' }))])
    ];
    var thySlideAnimations = {
        slideContainer: animations.trigger('slideContainer', animationBody)
    };

    var ThySlideContainerComponent = /** @class */ (function (_super) {
        __extends(ThySlideContainerComponent, _super);
        function ThySlideContainerComponent(elementRef, document, config, changeDetectorRef, renderer, viewportRuler) {
            var _this = _super.call(this, slideUpperOverlayOptions, changeDetectorRef) || this;
            _this.elementRef = elementRef;
            _this.document = document;
            _this.config = config;
            _this.renderer = renderer;
            _this.viewportRuler = viewportRuler;
            _this.animationState = 'void';
            _this.slideContainerStyles = {};
            _this.ngUnsubscribe$ = new rxjs.Subject();
            _this.animationOpeningDone = _this.animationStateChanged.pipe(operators.filter(function (event) {
                return event.phaseName === 'done' && event.toState === _this.animationState;
            }));
            _this.animationClosingDone = _this.animationStateChanged.pipe(operators.filter(function (event) {
                return event.phaseName === 'done' && event.toState === 'exit';
            }));
            _this.setDrawerContainerElement();
            _this.checkContainerWithinViewport();
            _this.addDrawerContainerElementClass();
            return _this;
        }
        Object.defineProperty(ThySlideContainerComponent.prototype, "isPush", {
            get: function () {
                return this.config.mode === 'push' && !!this.drawerContainerElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySlideContainerComponent.prototype, "isSide", {
            get: function () {
                return this.config.mode === 'side' && !!this.drawerContainerElement;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySlideContainerComponent.prototype, "isLeftOrRight", {
            get: function () {
                return this.config.from === 'left' || this.config.from === 'right';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySlideContainerComponent.prototype, "hostOffset", {
            get: function () {
                var offset = 0;
                if (this.isLeftOrRight) {
                    offset = this.elementRef.nativeElement.clientWidth + this.config.offset || 0;
                }
                else {
                    offset = this.elementRef.nativeElement.clientHeight + this.config.offset || 0;
                }
                return offset;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySlideContainerComponent.prototype, "transform", {
            get: function () {
                switch (this.config.from) {
                    case 'left':
                        return "translateX(" + this.hostOffset + "px)";
                    case 'right':
                        return "translateX(-" + this.hostOffset + "px)";
                    case 'top':
                        return "translateY(" + this.hostOffset + "px)";
                    case 'bottom':
                        return "translateY(" + this.hostOffset + "px)";
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySlideContainerComponent.prototype, "drawerContainerElementClass", {
            get: function () {
                return "thy-slide-" + this.config.mode + "-drawer-container";
            },
            enumerable: false,
            configurable: true
        });
        ThySlideContainerComponent.prototype.setDrawerContainerElement = function () {
            if (typeof this.config.drawerContainer === 'string') {
                this.drawerContainerElement = this.config.drawerContainer && document.querySelector(this.config.drawerContainer);
            }
            if (this.config.drawerContainer instanceof core$1.ElementRef) {
                this.drawerContainerElement = this.config.drawerContainer.nativeElement;
            }
            if (this.config.drawerContainer instanceof HTMLElement) {
                this.drawerContainerElement = this.config.drawerContainer;
            }
        };
        ThySlideContainerComponent.prototype.setSlideContainerStyles = function () {
            var width, height, top, left;
            var drawerContainerElementRect = (this.drawerContainerElement || document.body).getBoundingClientRect();
            if (this.isLeftOrRight) {
                height = drawerContainerElementRect.height;
                top = drawerContainerElementRect.top;
                this.renderer.setStyle(this.elementRef.nativeElement, 'top', top + "px");
            }
            else {
                width = drawerContainerElementRect.width;
                left = drawerContainerElementRect.left;
                this.renderer.setStyle(this.elementRef.nativeElement, 'left', left + "px");
            }
            this.slideContainerStyles = {
                width: width,
                height: height
            };
        };
        ThySlideContainerComponent.prototype.checkContainerWithinViewport = function () {
            var _this = this;
            this.viewportRuler
                .change(100)
                .pipe(operators.startWith(null), operators.takeUntil(this.ngUnsubscribe$))
                .subscribe(function () {
                _this.setSlideContainerStyles();
            });
        };
        ThySlideContainerComponent.prototype.addDrawerContainerElementClass = function () {
            if (this.drawerContainerElement) {
                this.renderer.addClass(this.drawerContainerElement, this.drawerContainerElementClass);
            }
        };
        ThySlideContainerComponent.prototype.removeDrawerContainerElementClass = function () {
            if (this.drawerContainerElement) {
                this.renderer.removeClass(this.drawerContainerElement, this.drawerContainerElementClass);
            }
        };
        ThySlideContainerComponent.prototype.setDrawerContainerElementStyle = function () {
            if (this.isSide) {
                this.renderer.setStyle(this.drawerContainerElement, "margin-" + this.config.from, this.hostOffset + "px");
            }
            else if (this.isPush) {
                this.renderer.setStyle(this.drawerContainerElement, "transform", this.transform);
            }
        };
        ThySlideContainerComponent.prototype.removeDrawerContainerElementStyle = function () {
            if (this.isSide) {
                this.renderer.removeStyle(this.drawerContainerElement, "margin-" + this.config.from);
            }
            else if (this.isPush) {
                this.renderer.removeStyle(this.drawerContainerElement, "transform");
            }
        };
        ThySlideContainerComponent.prototype.beforeAttachPortal = function () {
            if (this.config.offset) {
                this.renderer.setStyle(this.elementRef.nativeElement, this.config.from, this.config.offset + "px");
                this.animationState = util.helpers.camelCase(['offset', this.config.from]);
            }
            else {
                this.animationState = this.config.from;
            }
            this.setDrawerContainerElementStyle();
        };
        ThySlideContainerComponent.prototype.beforeDetachPortal = function () {
            this.removeDrawerContainerElementStyle();
        };
        ThySlideContainerComponent.prototype.onAnimationDone = function (event) {
            this.animationStateChanged.emit(event);
        };
        ThySlideContainerComponent.prototype.onAnimationStart = function (event) {
            this.animationStateChanged.emit(event);
        };
        ThySlideContainerComponent.prototype.ngOnDestroy = function () {
            _super.prototype.destroy.call(this);
            this.removeDrawerContainerElementClass();
            this.ngUnsubscribe$.next();
            this.ngUnsubscribe$.complete();
        };
        return ThySlideContainerComponent;
    }(core.ThyAbstractOverlayContainer));
    ThySlideContainerComponent.decorators = [
        { type: core$1.Component, args: [{
                    selector: 'thy-slide-container',
                    template: "\n        <ng-template cdkPortalOutlet></ng-template>\n    ",
                    animations: [thySlideAnimations.slideContainer],
                    host: {
                        class: 'thy-slide-container',
                        '[class.thy-slide-push]': 'isPush',
                        '[class.thy-slide-side]': 'isSide',
                        '[class.thy-slide-over]': '!isPush && !isSide',
                        tabindex: '-1',
                        '[attr.role]': "'slide'",
                        '[@slideContainer]': 'animationState',
                        '(@slideContainer.start)': 'onAnimationStart($event)',
                        '(@slideContainer.done)': 'onAnimationDone($event)',
                        '[style.width.px]': 'slideContainerStyles.width',
                        '[style.height.px]': 'slideContainerStyles.height',
                        '[style.max-height.px]': 'slideContainerStyles.height'
                    }
                },] }
    ];
    ThySlideContainerComponent.ctorParameters = function () { return [
        { type: core$1.ElementRef },
        { type: undefined, decorators: [{ type: core$1.Inject, args: [common.DOCUMENT,] }] },
        { type: ThySlideConfig },
        { type: core$1.ChangeDetectorRef },
        { type: core$1.Renderer2 },
        { type: overlay.ViewportRuler }
    ]; };
    ThySlideContainerComponent.propDecorators = {
        portalOutlet: [{ type: core$1.ViewChild, args: [portal.CdkPortalOutlet, { static: true },] }]
    };

    var ThySlideRef = /** @class */ (function (_super) {
        __extends(ThySlideRef, _super);
        function ThySlideRef() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ThySlideRef;
    }(core.ThyAbstractOverlayRef));
    var ThyInternalSlideRef = /** @class */ (function (_super) {
        __extends(ThyInternalSlideRef, _super);
        function ThyInternalSlideRef(overlayRef, containerInstance, config) {
            return _super.call(this, slideUpperOverlayOptions, overlayRef, containerInstance, config) || this;
        }
        ThyInternalSlideRef.prototype.updatePosition = function (position) {
            return this.updateGlobalPosition(position);
        };
        return ThyInternalSlideRef;
    }(core.ThyAbstractInternalOverlayRef));
    ThyInternalSlideRef.decorators = [
        { type: core$1.Injectable }
    ];
    ThyInternalSlideRef.ctorParameters = function () { return [
        { type: overlay.OverlayRef },
        { type: ThySlideContainerComponent },
        { type: ThySlideConfig }
    ]; };

    var ThySlideService = /** @class */ (function (_super) {
        __extends(ThySlideService, _super);
        function ThySlideService(overlay, injector, defaultConfig) {
            var _this = this;
            var slideDefaultConfig = Object.assign({}, slideDefaultConfigValue, defaultConfig);
            _this = _super.call(this, slideUpperOverlayOptions, overlay, injector, slideDefaultConfig) || this;
            return _this;
        }
        ThySlideService.prototype.originElementAddActiveClass = function (config) {
            var _a;
            if (config.origin) {
                (_a = coercion.coerceElement(config.origin).classList).add.apply(_a, __spread(util.coerceArray(config.originActiveClass)));
            }
        };
        ThySlideService.prototype.originElementRemoveActiveClass = function (config) {
            var _a;
            if (config.origin) {
                (_a = coercion.coerceElement(config.origin).classList).remove.apply(_a, __spread(util.coerceArray(config.originActiveClass)));
            }
        };
        ThySlideService.prototype.buildOverlayConfig = function (config) {
            var defaultClasses = ['thy-slide-overlay-pane', "thy-slide-" + config.from];
            var overlayConfig = Object.assign(Object.assign({}, this.buildBaseOverlayConfig(config, defaultClasses)), { width: config.width });
            return overlayConfig;
        };
        ThySlideService.prototype.attachUpperOverlayContainer = function (overlay, config) {
            var userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;
            var injector = core$1.Injector.create({
                parent: userInjector || this.injector,
                providers: [{ provide: ThySlideConfig, useValue: config }]
            });
            var containerPortal = new portal.ComponentPortal(ThySlideContainerComponent, config.viewContainerRef, injector);
            var containerRef = overlay.attach(containerPortal);
            return containerRef.instance;
        };
        ThySlideService.prototype.createUpperOverlayRef = function (overlayRef, containerInstance, config) {
            return new ThyInternalSlideRef(overlayRef, containerInstance, config);
        };
        ThySlideService.prototype.createInjector = function (config, overlayRef, containerInstance) {
            var userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;
            var injectionTokens = [
                { provide: ThySlideContainerComponent, useValue: containerInstance },
                { provide: ThySlideRef, useValue: overlayRef }
            ];
            if (config.direction && (!userInjector || !userInjector.get(bidi.Directionality, null))) {
                injectionTokens.push({
                    provide: bidi.Directionality,
                    useValue: {
                        value: config.direction,
                        change: rxjs.of()
                    }
                });
            }
            return core$1.Injector.create({ parent: userInjector || this.injector, providers: injectionTokens });
        };
        ThySlideService.prototype.overlayIsOpened = function (config) {
            var openedOverlay = this.getUpperOverlayById(config.id);
            this.close(openedOverlay);
            return openedOverlay;
        };
        ThySlideService.prototype.open = function (componentOrTemplateRef, config) {
            var _this = this;
            if (this.overlayIsOpened(config)) {
                return;
            }
            var slideRef = this.openUpperOverlay(componentOrTemplateRef, config);
            this.originElementAddActiveClass(slideRef.containerInstance.config);
            slideRef.afterClosed().subscribe(function () {
                _this.originElementRemoveActiveClass(slideRef.containerInstance.config);
            });
            return slideRef;
        };
        ThySlideService.prototype.ngOnDestroy = function () {
            this.dispose();
        };
        return ThySlideService;
    }(core.ThyAbstractOverlayService));
    ThySlideService.decorators = [
        { type: core$1.Injectable }
    ];
    ThySlideService.ctorParameters = function () { return [
        { type: overlay.Overlay },
        { type: core$1.Injector },
        { type: ThySlideConfig, decorators: [{ type: core$1.Optional }, { type: core$1.Inject, args: [THY_SLIDE_DEFAULT_CONFIG,] }] }
    ]; };

    var ThySlideLayoutComponent = /** @class */ (function () {
        function ThySlideLayoutComponent() {
            this.slideLayout = true;
        }
        ThySlideLayoutComponent.prototype.ngOnInit = function () { };
        return ThySlideLayoutComponent;
    }());
    ThySlideLayoutComponent.decorators = [
        { type: core$1.Component, args: [{
                    selector: 'thy-slide-layout',
                    template: '<ng-content></ng-content>',
                    encapsulation: core$1.ViewEncapsulation.None
                },] }
    ];
    ThySlideLayoutComponent.ctorParameters = function () { return []; };
    ThySlideLayoutComponent.propDecorators = {
        slideLayout: [{ type: core$1.HostBinding, args: ['class.thy-slide-layout',] }]
    };

    var ThySlideHeaderComponent = /** @class */ (function () {
        function ThySlideHeaderComponent(thySlideService) {
            this.thySlideService = thySlideService;
            this.isIconFont = false;
            this._iconName = '';
            this.slideLayoutHeader = true;
        }
        Object.defineProperty(ThySlideHeaderComponent.prototype, "thyIcon", {
            get: function () {
                return this._iconName;
            },
            set: function (value) {
                this._iconName = value;
                if (value.includes('wtf')) {
                    this.isIconFont = true;
                }
                else {
                    this.isIconFont = false;
                }
            },
            enumerable: false,
            configurable: true
        });
        ThySlideHeaderComponent.prototype.ngOnInit = function () { };
        ThySlideHeaderComponent.prototype.closeModal = function (event) {
            event.stopPropagation();
            this.thySlideService.close();
        };
        return ThySlideHeaderComponent;
    }());
    ThySlideHeaderComponent.decorators = [
        { type: core$1.Component, args: [{
                    selector: 'thy-slide-header',
                    template: "<ng-container>\n  <ng-template *ngIf=\"headerTemplate; else default\" [ngTemplateOutlet]=\"headerTemplate\"></ng-template>\n  <ng-template #default>\n    <h3 class=\"thy-slide-header-title\">\n      <thy-icon *ngIf=\"!isIconFont && thyIcon; else iconFont\" [thyIconName]=\"thyIcon\"></thy-icon>\n      <ng-template #iconFont>\n        <i *ngIf=\"thyIcon\" class=\"wft {{ thyIcon }}\"></i>\n      </ng-template>\n      {{ thyTitle }}\n    </h3>\n\n    <div class=\"thy-slide-header-main\">\n      <ng-container>\n        <ng-template *ngIf=\"headerOperateTemplate\" [ngTemplateOutlet]=\"headerOperateTemplate\"> </ng-template>\n      </ng-container>\n    </div>\n    <button type=\"button\" class=\"close\" (click)=\"closeModal($event)\">\n      <thy-icon thyIconName=\"close\"></thy-icon>\n    </button>\n  </ng-template>\n</ng-container>\n"
                },] }
    ];
    ThySlideHeaderComponent.ctorParameters = function () { return [
        { type: ThySlideService }
    ]; };
    ThySlideHeaderComponent.propDecorators = {
        slideLayoutHeader: [{ type: core$1.HostBinding, args: ['class.thy-slide-header',] }],
        thyTitle: [{ type: core$1.Input }],
        thyIcon: [{ type: core$1.Input }],
        headerTemplate: [{ type: core$1.ContentChild, args: ['thyHeader',] }],
        headerOperateTemplate: [{ type: core$1.ContentChild, args: ['thyHeaderOperate',] }]
    };

    var ThySlideBodyComponent = /** @class */ (function () {
        function ThySlideBodyComponent() {
            this.slideLayoutBody = true;
        }
        ThySlideBodyComponent.prototype.ngOnInit = function () { };
        return ThySlideBodyComponent;
    }());
    ThySlideBodyComponent.decorators = [
        { type: core$1.Component, args: [{
                    selector: 'thy-slide-body',
                    template: "\n        <ng-content></ng-content>\n    "
                },] }
    ];
    ThySlideBodyComponent.propDecorators = {
        slideLayoutBody: [{ type: core$1.HostBinding, args: ['class.thy-slide-body',] }]
    };

    var ThySlideBodySectionComponent = /** @class */ (function () {
        function ThySlideBodySectionComponent() {
            this.thySlideBodyItem = true;
            this.hasDivider = false;
        }
        Object.defineProperty(ThySlideBodySectionComponent.prototype, "thyDividerBorder", {
            set: function (value) {
                this.hasDivider = util.coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        ThySlideBodySectionComponent.prototype.ngOnInit = function () { };
        return ThySlideBodySectionComponent;
    }());
    ThySlideBodySectionComponent.decorators = [
        { type: core$1.Component, args: [{
                    selector: 'thy-slide-body-section',
                    template: '<ng-content></ng-content>'
                },] }
    ];
    ThySlideBodySectionComponent.propDecorators = {
        thySlideBodyItem: [{ type: core$1.HostBinding, args: ['class.thy-slide-body-section',] }],
        hasDivider: [{ type: core$1.HostBinding, args: ['class.thy-slide-body-section-divider',] }],
        thyDividerBorder: [{ type: core$1.Input }]
    };

    var ThySlideFooterComponent = /** @class */ (function () {
        function ThySlideFooterComponent() {
            this.slideLayoutFooter = true;
        }
        ThySlideFooterComponent.prototype.ngOnInit = function () { };
        return ThySlideFooterComponent;
    }());
    ThySlideFooterComponent.decorators = [
        { type: core$1.Component, args: [{
                    selector: 'thy-slide-footer',
                    template: '<ng-content></ng-content>'
                },] }
    ];
    ThySlideFooterComponent.propDecorators = {
        slideLayoutFooter: [{ type: core$1.HostBinding, args: ['class.thy-slide-footer',] }]
    };

    var ThyDrawerContainerDirective = /** @class */ (function () {
        function ThyDrawerContainerDirective(elementRef) {
            this.elementRef = elementRef;
        }
        return ThyDrawerContainerDirective;
    }());
    ThyDrawerContainerDirective.decorators = [
        { type: core$1.Directive, args: [{ selector: '[thyDrawerContainer]' },] }
    ];
    ThyDrawerContainerDirective.ctorParameters = function () { return [
        { type: core$1.ElementRef }
    ]; };

    var ThySlideModule = /** @class */ (function () {
        function ThySlideModule() {
        }
        return ThySlideModule;
    }());
    ThySlideModule.decorators = [
        { type: core$1.NgModule, args: [{
                    declarations: [
                        ThySlideContainerComponent,
                        ThySlideLayoutComponent,
                        ThySlideHeaderComponent,
                        ThySlideBodyComponent,
                        ThySlideBodySectionComponent,
                        ThySlideFooterComponent,
                        ThyDrawerContainerDirective
                    ],
                    entryComponents: [ThySlideContainerComponent],
                    imports: [common.CommonModule, shared.ThySharedModule, icon.ThyIconModule, overlay.OverlayModule, portal.PortalModule],
                    exports: [
                        ThySlideLayoutComponent,
                        ThySlideHeaderComponent,
                        ThySlideBodyComponent,
                        ThySlideBodySectionComponent,
                        ThySlideFooterComponent,
                        ThyDrawerContainerDirective
                    ],
                    providers: [ThyInternalSlideRef, ThySlideService, THY_SLIDE_DEFAULT_CONFIG_PROVIDER]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.THY_SLIDE_DEFAULT_CONFIG = THY_SLIDE_DEFAULT_CONFIG;
    exports.THY_SLIDE_DEFAULT_CONFIG_PROVIDER = THY_SLIDE_DEFAULT_CONFIG_PROVIDER;
    exports.ThyDrawerContainerDirective = ThyDrawerContainerDirective;
    exports.ThyInternalSlideRef = ThyInternalSlideRef;
    exports.ThySlideBodyComponent = ThySlideBodyComponent;
    exports.ThySlideBodySectionComponent = ThySlideBodySectionComponent;
    exports.ThySlideConfig = ThySlideConfig;
    exports.ThySlideContainerComponent = ThySlideContainerComponent;
    exports.ThySlideFooterComponent = ThySlideFooterComponent;
    exports.ThySlideHeaderComponent = ThySlideHeaderComponent;
    exports.ThySlideLayoutComponent = ThySlideLayoutComponent;
    exports.ThySlideModule = ThySlideModule;
    exports.ThySlideOption = ThySlideOption;
    exports.ThySlideRef = ThySlideRef;
    exports.ThySlideService = ThySlideService;
    exports.slideDefaultConfigValue = slideDefaultConfigValue;
    exports.slideUpperOverlayOptions = slideUpperOverlayOptions;
    exports.thySlideAnimations = thySlideAnimations;
    exports.ɵ0 = ɵ0;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-tethys-slide.umd.js.map
