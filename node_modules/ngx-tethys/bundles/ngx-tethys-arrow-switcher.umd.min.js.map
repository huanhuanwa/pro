{"version":3,"sources":["../../src/arrow-switcher/arrow-switcher.component.ts","../../src/arrow-switcher/module.ts"],"names":["ThyArrowSwitcherComponent","cd","this","_isArrowSwitcher","_isSmallSize","thyPrevious","EventEmitter","thyNext","index","disabled","previousDisabled","nextDisabled","Object","defineProperty","prototype","value","total","getDisabled","size","ngOnInit","writeValue","markForCheck","registerOnChange","fn","onModelChange","registerOnTouched","onModelTouched","setDisabledState","isDisable","onPreviousClick","event","emit","onNextClick","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ChangeDetectorRef","HostBinding","Output","Input","NgModule","declarations","imports","CommonModule","ThyButtonModule","exports"],"mappings":"4kBAoEI,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,EArCqBC,KAAAC,kBAAmB,EAEbD,KAAAE,cAAe,EAIpDF,KAAAG,YAAc,IAAIC,EAAAA,aAElBJ,KAAAK,QAAU,IAAID,EAAAA,aAiBxBJ,KAAAM,MAAQ,EAERN,KAAAO,UAAW,EAEXP,KAAAQ,kBAAmB,EAEnBR,KAAAS,cAAe,SArBfC,OAAAC,eACIb,EAAAc,UAAA,WAAQ,KADZ,SACaC,GACLA,IACAb,KAAKc,MAAQD,EACbb,KAAKe,gDAIbL,OAAAC,eACIb,EAAAc,UAAA,UAAO,KADX,SACYI,GACK,OAATA,IACAhB,KAAKE,cAAe,oCAkB5BJ,EAAAc,UAAAK,SAAA,aAEAnB,EAAAc,UAAAM,WAAA,SAAWL,GACHA,GAAS,IACTb,KAAKM,MAAQO,EACbb,KAAKe,eAETf,KAAKD,GAAGoB,gBAGZrB,EAAAc,UAAAQ,iBAAA,SAAiBC,GACbrB,KAAKsB,cAAgBD,GAGzBvB,EAAAc,UAAAW,kBAAA,SAAkBF,GACdrB,KAAKwB,eAAiBH,GAG1BvB,EAAAc,UAAAa,iBAAA,SAAiBC,GACb1B,KAAKO,SAAWmB,GAGpB5B,EAAAc,UAAAG,YAAA,WACIf,KAAKQ,iBAAmBR,KAAKM,OAAS,GAAKN,KAAKO,SAChDP,KAAKS,aAAeT,KAAKM,OAASN,KAAKc,MAAQ,GAAKd,KAAKO,UAG7DT,EAAAc,UAAAe,gBAAA,SAAgBC,GACZ5B,KAAKM,QACLN,KAAKsB,cAActB,KAAKM,OACxBN,KAAKe,cACLf,KAAKG,YAAY0B,KAAK,CAAEvB,MAAON,KAAKM,MAAOsB,MAAKA,KAGpD9B,EAAAc,UAAAkB,YAAA,SAAYF,GACR5B,KAAKM,QACLN,KAAKsB,cAActB,KAAKM,OACxBN,KAAKe,cACLf,KAAKK,QAAQwB,KAAK,CAAEvB,MAAON,KAAKM,MAAOsB,MAAKA,8BA1FnDG,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,qBACVC,SAAA,kTACAC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,UAAW,CACP,CACIC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAA5C,KAC9B6C,OAAO,iDAlBfC,EAAAA,+DAuBCC,EAAAA,YAAWb,KAAA,CAAC,kDAEZa,EAAAA,YAAWb,KAAA,CAAC,uDAIZc,EAAAA,wBAEAA,EAAAA,yBAEAC,EAAAA,uBAQAA,EAAAA,eCvCL,iCALCC,EAAAA,SAAQhB,KAAA,CAAC,CACNiB,aAAc,CAACnD,GACfoD,QAAS,CAACC,EAAAA,aAAcC,EAAAA,iBACxBC,QAAS,CAACvD","sourcesContent":["import {\n    Component,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    ChangeDetectionStrategy,\n    OnInit,\n    ChangeDetectorRef,\n    forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport interface ThyArrowSwitcherEvent {\n    index: number;\n    event: Event;\n}\n\n@Component({\n    selector: 'thy-arrow-switcher',\n    templateUrl: './arrow-switcher.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyArrowSwitcherComponent),\n            multi: true\n        }\n    ]\n})\nexport class ThyArrowSwitcherComponent implements OnInit, ControlValueAccessor {\n    @HostBinding('class.thy-arrow-switcher') _isArrowSwitcher = true;\n\n    @HostBinding('class.thy-arrow-switcher-small') _isSmallSize = false;\n\n    total: number;\n\n    @Output() thyPrevious = new EventEmitter<ThyArrowSwitcherEvent>();\n\n    @Output() thyNext = new EventEmitter<ThyArrowSwitcherEvent>();\n\n    @Input()\n    set thyTotal(value: number) {\n        if (value) {\n            this.total = value;\n            this.getDisabled();\n        }\n    }\n\n    @Input()\n    set thySize(size: string) {\n        if (size === 'sm') {\n            this._isSmallSize = true;\n        }\n    }\n\n    index = 0;\n\n    disabled = false;\n\n    previousDisabled = false;\n\n    nextDisabled = false;\n\n    private onModelChange: (value: number) => void;\n\n    private onModelTouched: () => void;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    ngOnInit() {}\n\n    writeValue(value: number): void {\n        if (value >= 0) {\n            this.index = value;\n            this.getDisabled();\n        }\n        this.cd.markForCheck();\n    }\n\n    registerOnChange(fn: () => void) {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: () => void) {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(isDisable: boolean) {\n        this.disabled = isDisable;\n    }\n\n    getDisabled() {\n        this.previousDisabled = this.index <= 0 || this.disabled;\n        this.nextDisabled = this.index >= this.total - 1 || this.disabled;\n    }\n\n    onPreviousClick(event: Event) {\n        this.index--;\n        this.onModelChange(this.index);\n        this.getDisabled();\n        this.thyPrevious.emit({ index: this.index, event });\n    }\n\n    onNextClick(event: Event) {\n        this.index++;\n        this.onModelChange(this.index);\n        this.getDisabled();\n        this.thyNext.emit({ index: this.index, event });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyButtonModule } from 'ngx-tethys/button';\nimport { ThyArrowSwitcherComponent } from './arrow-switcher.component';\n\n@NgModule({\n    declarations: [ThyArrowSwitcherComponent],\n    imports: [CommonModule, ThyButtonModule],\n    exports: [ThyArrowSwitcherComponent]\n})\nexport class ThyArrowSwitcherModule {}\n"]}