(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('ngx-tethys/shared'), require('ngx-tethys/util'), require('ngx-tethys/core'), require('ngx-tethys/icon')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/vote', ['exports', '@angular/common', '@angular/core', 'ngx-tethys/shared', 'ngx-tethys/util', 'ngx-tethys/core', 'ngx-tethys/icon'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].vote = {}), global.ng.common, global.ng.core, global['ngx-tethys'].shared, global['ngx-tethys'].util, global['ngx-tethys'].core, global['ngx-tethys'].icon));
}(this, (function (exports, common, core, shared, util, core$1, icon) { 'use strict';

    var ThyVoteComponent = /** @class */ (function () {
        function ThyVoteComponent(elementRef, updateHostClassService) {
            this.elementRef = elementRef;
            this.updateHostClassService = updateHostClassService;
            this._initialized = false;
            this._isRound = false;
            this.class = true;
            this._hasVoted = true;
            this.thyIcon = 'thumb-up';
            this.updateHostClassService.initializeElement(elementRef.nativeElement);
        }
        Object.defineProperty(ThyVoteComponent.prototype, "thySize", {
            set: function (value) {
                this._size = value;
                if (this._initialized) {
                    this._setClassesByType();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyVoteComponent.prototype, "thyVote", {
            set: function (value) {
                this._type = value;
                if (this._initialized) {
                    this._setClassesByType();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyVoteComponent.prototype, "thyRound", {
            set: function (value) {
                this._isRound = util.coerceBooleanProperty(value);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyVoteComponent.prototype, "thyLayout", {
            set: function (value) {
                this._layout = value;
                if (this._initialized) {
                    this._setClassesByType();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyVoteComponent.prototype, "thyHasVoted", {
            set: function (value) {
                this._hasVoted = util.coerceBooleanProperty(value);
                if (this._initialized) {
                    this._setClassesByType();
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyVoteComponent.prototype.ngOnInit = function () {
            this._setClassesByType();
            this._initialized = true;
        };
        ThyVoteComponent.prototype._setClassesByType = function () {
            var classNames = [];
            if (!this._type) {
                this._type = 'primary';
            }
            if (!this._layout) {
                this._layout = 'horizontal';
            }
            if (!this._size) {
                this._size = 'default';
            }
            if (this._isRound) {
                classNames.push('thy-vote-round');
            }
            classNames.push("thy-vote-" + this._type);
            classNames.push("thy-vote-" + this._layout);
            classNames.push("thy-vote-" + this._layout + "-size-" + this._size);
            this.updateHostClassService.updateClass(classNames);
        };
        return ThyVoteComponent;
    }());
    ThyVoteComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-vote,[thyVote]',
                    template: "<thy-icon *ngIf=\"!voteIcon\" [thyIconName]=\"thyIcon\" [thyIconType]=\"_hasVoted ? 'fill' : ''\"></thy-icon>\n<ng-container *ngIf=\"voteIcon\" [ngTemplateOutlet]=\"voteIcon\"></ng-container>\n<div>{{ thyVoteCount }}</div>\n",
                    providers: [core$1.UpdateHostClassService]
                },] }
    ];
    ThyVoteComponent.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core$1.UpdateHostClassService }
    ]; };
    ThyVoteComponent.propDecorators = {
        class: [{ type: core.HostBinding, args: ["class.thy-vote",] }],
        _hasVoted: [{ type: core.HostBinding, args: ["class.has-voted",] }],
        thySize: [{ type: core.Input }],
        thyVote: [{ type: core.Input }],
        thyRound: [{ type: core.Input }],
        thyLayout: [{ type: core.Input }],
        thyVoteCount: [{ type: core.Input }],
        thyIcon: [{ type: core.Input }],
        thyHasVoted: [{ type: core.Input }],
        voteIcon: [{ type: core.ContentChild, args: ['voteIcon',] }]
    };

    var ThyVoteModule = /** @class */ (function () {
        function ThyVoteModule() {
        }
        return ThyVoteModule;
    }());
    ThyVoteModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [ThyVoteComponent],
                    imports: [common.CommonModule, shared.ThySharedModule, icon.ThyIconModule],
                    exports: [ThyVoteComponent],
                    providers: []
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ThyVoteComponent = ThyVoteComponent;
    exports.ThyVoteModule = ThyVoteModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-tethys-vote.umd.js.map
