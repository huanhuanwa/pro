{"version":3,"sources":["../../src/core/behaviors/constructor.ts","../../node_modules/tslib/tslib.es6.js","../../src/core/behaviors/decorators.ts","../../src/core/scroll-to.service.ts","../../src/core/event-dispatchers/event-dispatcher.ts","../../src/core/event-dispatchers/click-dispatcher.ts","../../src/core/event-dispatchers/keyboard-dispatcher.ts","../../src/core/click-positioner.ts","../../src/core/request-animation.ts","../../src/core/scroll.ts","../../src/core/animation/animation-consts.ts","../../src/core/animation/fade.ts","../../src/core/overlay/overlay-position-map.ts","../../src/core/overlay/utils.ts","../../src/core/overlay/overlay.directive.ts","../../src/core/overlay/abstract-overlay-ref.ts","../../src/core/overlay/abstract-overlay.config.ts","../../src/core/overlay/abstract-overlay-container.ts","../../src/core/overlay/abstract-overlay.service.ts","../../src/core/update-host-class.service.ts","../../src/core/translate.ts","../../src/core/behaviors/disabled.ts","../../src/core/behaviors/loading-done.ts","../../src/core/behaviors/unsubscribe.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","__","this","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","ar","next","done","push","value","error","__spread","arguments","length","concat","propDecoratorFactory","name","fallback","target","propName","originalDescriptor","privatePropName","console","warn","defineProperty","configurable","writable","get","bind","set","ScrollToService","_customScrollToElement","targetElement","containerElement","containerOffset","dom","getElementOffset","targetOffset","topOffset","top","bottomOffset","height","viewOffset","scrollTop","scrollToElement","ThyEventDispatcher","document","ngZone","eventName","_globalSubscription","_event$","Subject","_subscriptionCount","_addGlobalListener","_this","runOutsideAngular","fromEvent","subscribe","event","_removeGlobalListener","unsubscribe","auditTimeInMs","Observable","observer","subscription","pipe","auditTime","ngOnDestroy","complete","Injectable","NgZone","ThyClickDispatcher","_super","clicked","args","providedIn","Inject","DOCUMENT","ThyKeyboardDispatcher","keydown","ThyClickPositioner","clickDispatcher","lastPosition","initialized","runTaskUseLastPosition","task","setTimeout","lastClickPosition","initialize","x","clientX","y","clientY","availablePrefixes","reqAnimFrame","window","requestAnimationFrame","lastTime","prefix","filter","key","callback","currTime","Date","getTime","timeToCall","Math","max","id","getRequestAnimationFrame","easeInOutCubic","t","c","cc","tt","ThyScrollService","setScrollTop","element","topValue","body","documentElement","getScroll","method","isWindow","ret","scrollTo","container","easing","startTime","now","frameFunc","time","AnimationDuration","SLOW","BASE","FAST","AnimationCurves","EASE_BASE_OUT","EASE_BASE_IN","EASE_OUT","EASE_IN","EASE_IN_OUT","EASE_OUT_BACK","EASE_IN_BACK","EASE_IN_OUT_BACK","EASE_OUT_CIRC","EASE_IN_CIRC","EASE_IN_OUT_CIRC","EASE_OUT_QUINT","EASE_IN_QUINT","EASE_IN_OUT_QUINT","fadeMotion","trigger","transition","style","opacity","animate","POSITION_MAP","originX","originY","overlayX","overlayY","topCenter","topLeft","topRight","right","rightTop","rightBottom","bottom","bottomCenter","bottomLeft","bottomRight","left","leftTop","leftBottom","EXPANDED_DROPDOWN_POSITIONS","connectionFallbackPositionsMap","buildConnectedPositionOffset","placement","offset","connectedPositionOffset","startsWith","offsetY","offsetX","buildConnectedPositionPair","panelClassPrefix","position","assign","panelClass","getFallbackPlacements","ThyOverlayDirectiveBase","elementRef","platform","focusMonitor","_trigger","manualListeners","Map","ngUnsubscribe$","showDelay","hideDelay","touchendHideDelay","disabled","clearEventListeners","forEach","listener","nativeElement","removeEventListener","clear","stopMonitoring","clearTimer","showTimeoutId","clearTimeout","hideTimeoutId","IOS","ANDROID","touchendListener","hide","show","overlayElement","overlayRef","toElement","relatedTarget","contains","tooltipPin","take","monitor","takeUntil","origin","run","Error","addEventListener","dispose","uniqueIdMap","ThyAbstractInternalOverlayRef","options","containerInstance","config","backdropClosable","_afterOpened","_afterClosed","_beforeClosed","undefined","animationOpeningDone","disposeWhenClose","animationClosingDone","containerDestroy","Promise","resolve","then","detachments","_result","componentInstance","keydownEvents","keyCode","ESCAPE","close","getPositionStrategy","getConfig","positionStrategy","overlayResult","detachBackdrop","startExitAnimation","afterOpened","asObservable","afterClosed","beforeClosed","backdropClick","getOverlayRef","updateGlobalPosition","strategy","GlobalPositionStrategy","centerHorizontally","centerVertically","updatePosition","ThyAbstractOverlayRef","hasBackdrop","backdropClass","width","initialState","ariaDescribedBy","ariaLabel","autoFocus","restoreFocus","closeOnNavigation","throwPopoverContentAlreadyAttachedError","ThyAbstractOverlayContainer","changeDetectorRef","animationStateChanged","EventEmitter","beforeDetachPortal","attachTemplatePortal","portal","portalOutlet","hasAttached","beforeAttachPortal","attachComponentPortal","animationEnabled","animationState","markForCheck","destroy","ThyAbstractOverlayService","overlay","injector","defaultConfig","scrollStrategy","openedOverlays","_afterAllClosed","attachUpperOverlayContent","componentOrTemplateRef","upperOverlayRef","createUpperOverlayRef","TemplateRef","TemplatePortal","_a","$implicit","createInjector","contentRef","ComponentPortal","instance","removeOpenedOverlay","index","indexOf","splice","getUpperOverlayById","find","buildBaseOverlayConfig","defaultPanelClass","overlayConfig","OverlayConfig","global","direction","minWidth","minHeight","maxWidth","maxHeight","disposeOnNavigation","concatArray","openUpperOverlay","buildOverlayConfig","overlayContainer","attachUpperOverlayContainer","afterAllClosed","result","lastOverlayRef","closeAll","UpdateHostClassService","renderer","_classNames","initializeElement","ElementRef","_hostElement","updateClass","classNames","className","removeClass","newClasses","addClass","updateClassByMap","classMap","Renderer2","ThyTranslate","instant","interpolateParams","coerceBooleanProperty","coerceCssPixelValue","coerceNumberValue","cancelAnimationFrame","map","placementName","keyList","every","base","class_1","_i","apply","_thyDisabled","Mixin","loadingDone","setLoadingDone","ngUnsubscribeReinitialize"],"mappings":"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","sourcesContent":["export type Constructor<T> = new (...args: any[]) => T;\n\nexport class AnonymousClass {}\n\nexport class MixinBase {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { coerceNumberValue, coerceBooleanProperty, coerceCssPixelValue } from 'ngx-tethys/util';\n\nexport function InputBoolean(): any {\n    return propDecoratorFactory('InputBoolean', coerceBooleanProperty);\n}\n\nexport function InputCssPixel(): any {\n    return propDecoratorFactory('InputCssPixel', coerceCssPixelValue);\n}\n\nexport function InputNumber(): any {\n    return propDecoratorFactory('InputNumber', coerceNumberValue);\n}\n\nfunction propDecoratorFactory<T, D>(name: string, fallback: (v: T) => D): (target: any, propName: string) => void {\n    function propDecorator(target: any, propName: string, originalDescriptor?: TypedPropertyDescriptor<any>): any {\n        const privatePropName = `$$__${propName}`;\n\n        if (Object.prototype.hasOwnProperty.call(target, privatePropName)) {\n            console.warn(`The prop \"${privatePropName}\" is already exist, it will be overrided by ${name} decorator.`);\n        }\n\n        Object.defineProperty(target, privatePropName, {\n            configurable: true,\n            writable: true\n        });\n\n        return {\n            get(): string {\n                return originalDescriptor && originalDescriptor.get ? originalDescriptor.get.bind(this)() : this[privatePropName];\n            },\n            set(value: T): void {\n                if (originalDescriptor && originalDescriptor.set) {\n                    originalDescriptor.set.bind(this)(fallback(value));\n                }\n                this[privatePropName] = fallback(value);\n            }\n        };\n    }\n\n    return propDecorator;\n}\n","import { Injectable } from '@angular/core';\nimport { dom } from 'ngx-tethys/util';\n\nexport class ScrollToService {\n    static _customScrollToElement(targetElement: HTMLElement, containerElement: HTMLElement) {\n        const containerOffset = dom.getElementOffset(containerElement);\n        const targetOffset = dom.getElementOffset(targetElement);\n        // 选择项在顶部隐藏的偏移量 > 0 表示被顶部遮住隐藏\n        const topOffset = containerOffset.top - targetOffset.top;\n        // 选择项在底部隐藏的偏移量 > 0 表示被底部遮住隐藏\n        const bottomOffset = targetOffset.top + targetOffset.height - (containerOffset.top + containerOffset.height);\n        // 隐藏后滚动展示 targetElement 的偏移量，避免紧挨着头部或者底部\n        const viewOffset = targetOffset.height;\n        if (topOffset > 0) {\n            containerElement.scrollTop = containerElement.scrollTop - topOffset - viewOffset;\n        } else if (bottomOffset > 0) {\n            containerElement.scrollTop = containerElement.scrollTop + bottomOffset + viewOffset;\n        }\n    }\n    static scrollToElement(targetElement: HTMLElement, containerElement: HTMLElement) {\n        if (targetElement) {\n            this._customScrollToElement(targetElement, containerElement);\n            // if (targetElement.scrollIntoView) {\n            //     targetElement.scrollIntoView({\n            //         behavior: 'smooth',\n            //         block: 'center'\n            //     });\n            // } else {\n            //     this._customScrollToElement(targetElement, containerElement);\n            // }\n        }\n    }\n}\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { fromEvent, Subject, Observable, Observer, Subscription } from 'rxjs';\nimport { auditTime } from 'rxjs/operators';\n\nconst DEFAULT_EVENT_TIME = 100;\n\n@Injectable()\nexport abstract class ThyEventDispatcher implements OnDestroy {\n    private _globalSubscription: Subscription = null;\n\n    private _event$ = new Subject<Event>();\n\n    private _subscriptionCount = 0;\n\n    private _addGlobalListener() {\n        this._globalSubscription = this.ngZone.runOutsideAngular(() => {\n            return fromEvent(this.document, this.eventName).subscribe((event: Event) => {\n                this._event$.next(event);\n            });\n        });\n    }\n\n    private _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n\n    get globalSubscription(): Subscription {\n        return this._globalSubscription;\n    }\n\n    constructor(private document: any, private ngZone: NgZone, private eventName: string) {}\n\n    protected subscribe(auditTimeInMs: number = DEFAULT_EVENT_TIME): Observable<Event> {\n        return new Observable(observer => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription =\n                auditTimeInMs > 0 ? this._event$.pipe(auditTime(auditTimeInMs)).subscribe(observer) : this._event$.subscribe(observer);\n\n            this._subscriptionCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._subscriptionCount--;\n\n                if (!this._subscriptionCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this._event$.complete();\n    }\n}\n","import { Injectable, Inject, NgZone, OnDestroy } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { ThyEventDispatcher } from './event-dispatcher';\n\nconst DEFAULT_CLICKED_TIME = 100;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyClickDispatcher extends ThyEventDispatcher {\n    constructor(@Inject(DOCUMENT) document: any, ngZone: NgZone) {\n        super(document, ngZone, 'click');\n    }\n\n    clicked(auditTimeInMs: number = DEFAULT_CLICKED_TIME): Observable<Event> {\n        return this.subscribe(auditTimeInMs);\n    }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport {\n    Inject,\n    Injectable,\n    NgZone\n} from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ThyEventDispatcher } from './event-dispatcher';\n\nconst DEFAULT_KEYDOWN_TIME = 100;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyKeyboardDispatcher extends ThyEventDispatcher {\n\n    constructor(\n        @Inject(DOCUMENT) document: any,\n        ngZone: NgZone\n    ) {\n        super(document, ngZone, 'keydown');\n    }\n\n    keydown(auditTimeInMs: number = DEFAULT_KEYDOWN_TIME): Observable<Event> {\n        return this.subscribe(auditTimeInMs);\n    }\n}\n\n\n// @Injectable({ providedIn: 'root' })\n// export class ThyKeyboardDispatcher implements OnDestroy {\n//     /** Currently attached keydown refs in the order they were attached. */\n//     _attachedKeydownSubjects: Subject<KeyboardEvent>[] = [];\n\n//     private _document: Document;\n\n//     private _isAttached: boolean;\n\n//     /** Keyboard event listener that will be attached to the body. */\n//     private _keydownListener = (event: KeyboardEvent) => {\n//         const keydownRefs = this._attachedKeydownSubjects;\n\n//         for (let i = keydownRefs.length - 1; i > -1; i--) {\n//             keydownRefs[i].next(event);\n//             break;\n//         }\n//     }\n\n//     /** Detaches the global keyboard event listener. */\n//     private _detach() {\n//         if (this._isAttached) {\n//             this._document.body.removeEventListener(\n//                 'keydown',\n//                 this._keydownListener,\n//                 true\n//             );\n//             this._isAttached = false;\n//         }\n//     }\n\n//     constructor(@Inject(DOCUMENT) document: any) {\n//         this._document = document;\n//     }\n\n//     ngOnDestroy() {\n//         this._detach();\n//     }\n\n//     /** Add a new overlay to the list of attached overlay refs. */\n//     add(keydownSubject: Subject<KeyboardEvent>): void {\n//         // Ensure that we don't get the same overlay multiple times.\n//         this.remove(keydownSubject);\n\n//         // Lazily start dispatcher once first overlay is added\n//         if (!this._isAttached) {\n//             this._document.body.addEventListener(\n//                 'keydown',\n//                 this._keydownListener,\n//                 true\n//             );\n//             this._isAttached = true;\n//         }\n\n//         this._attachedKeydownSubjects.push(keydownSubject);\n//     }\n\n//     /** Remove an keydown ref from the list of attached keydown refs. */\n//     remove(keydownRef: Subject<KeyboardEvent>): void {\n//         const index = this._attachedKeydownSubjects.indexOf(keydownRef);\n\n//         if (index > -1) {\n//             this._attachedKeydownSubjects.splice(index, 1);\n//         }\n\n//         // Remove the global listener once there are no more refs.\n//         if (this._attachedKeydownSubjects.length === 0) {\n//             this._detach();\n//         }\n//     }\n// }\n","import { Injectable, Inject, NgZone } from '@angular/core';\nimport { ThyClickDispatcher } from './event-dispatchers/index';\n\nexport interface ThyClickPosition {\n    x: number;\n    y: number;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyClickPositioner {\n    private lastPosition: ThyClickPosition = null;\n\n    private initialized = false;\n\n    constructor(private clickDispatcher: ThyClickDispatcher) {}\n\n    get lastClickPosition(): ThyClickPosition | null {\n        return this.lastPosition;\n    }\n\n    runTaskUseLastPosition(task: (position?: ThyClickPosition) => void) {\n        setTimeout(() => {\n            task(this.lastClickPosition);\n        });\n    }\n\n    initialize(): void {\n        if (this.initialized) {\n            return;\n        }\n        this.initialized = true;\n        this.clickDispatcher.clicked(0).subscribe((event: MouseEvent) => {\n            this.lastPosition = { x: event.clientX, y: event.clientY };\n        });\n    }\n}\n","const availablePrefixes = ['moz', 'ms', 'webkit'];\n\nfunction requestAnimationFramePolyfill(): typeof requestAnimationFrame {\n    let lastTime = 0;\n    return function(callback: FrameRequestCallback): number {\n        const currTime = new Date().getTime();\n        const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n        const id = setTimeout(() => {\n            callback(currTime + timeToCall);\n        }, timeToCall) as any; // setTimeout type warn\n        lastTime = currTime + timeToCall;\n        return id;\n    };\n}\n\nfunction getRequestAnimationFrame(): typeof requestAnimationFrame {\n    if (typeof window === 'undefined') {\n        return () => 0;\n    }\n    if (window.requestAnimationFrame) {\n        // https://github.com/vuejs/vue/issues/4465\n        return window.requestAnimationFrame.bind(window);\n    }\n\n    const prefix = availablePrefixes.filter(key => `${key}RequestAnimationFrame` in window)[0];\n\n    return prefix ? (window as any)[`${prefix}RequestAnimationFrame`] : requestAnimationFramePolyfill();\n}\nexport function cancelRequestAnimationFrame(id: number): any {\n    if (typeof window === 'undefined') {\n        return null;\n    }\n    if (window.cancelAnimationFrame) {\n        return window.cancelAnimationFrame(id);\n    }\n    const prefix = availablePrefixes.filter(\n        key => `${key}CancelAnimationFrame` in window || `${key}CancelRequestAnimationFrame` in window\n    )[0];\n\n    return prefix\n        ? ((window as any)[`${prefix}CancelAnimationFrame`] || (window as any)[`${prefix}CancelRequestAnimationFrame`])\n              // @ts-ignore\n              .call(this, id)\n        : clearTimeout(id);\n}\n\nexport const reqAnimFrame = getRequestAnimationFrame();\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { reqAnimFrame } from './request-animation';\n\nexport type EasyingFn = (t: number, b: number, c: number, d: number) => number;\n\nfunction easeInOutCubic(t: number, b: number, c: number, d: number): number {\n    const cc = c - b;\n    let tt = t / (d / 2);\n    if (tt < 1) {\n        return (cc / 2) * tt * tt * tt + b;\n    } else {\n        return (cc / 2) * ((tt -= 2) * tt * tt + 2) + b;\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyScrollService {\n    private document: Document;\n\n    constructor(@Inject(DOCUMENT) document: any) {\n        this.document = document;\n    }\n\n    /** Set the position of the scroll bar of `element`. */\n    setScrollTop(element: Element | Window, topValue: number = 0): void {\n        if (element === window) {\n            this.document.body.scrollTop = topValue;\n            this.document.documentElement.scrollTop = topValue;\n        } else {\n            (element as Element).scrollTop = topValue;\n        }\n    }\n\n    /** Get the position of the scoll bar of `element`. */\n    getScroll(element?: Element | Window, top: boolean = true): number {\n        const target = element ? element : window;\n        const prop = top ? 'pageYOffset' : 'pageXOffset';\n        const method = top ? 'scrollTop' : 'scrollLeft';\n        const isWindow = target === window;\n        let ret = isWindow ? target[prop] : target[method];\n        if (isWindow && typeof ret !== 'number') {\n            ret = this.document.documentElement[method];\n        }\n        return ret;\n    }\n\n    /**\n     * Scroll `element` to some position with animation.\n     *\n     * @param container container, `window` by default\n     * @param topValue Scroll to `top`, 0 by default\n     * @param easing Transition curve, `easeInOutCubic` by default\n     * @param callback callback invoked when transition is done\n     */\n    scrollTo(container: Element | Window, topValue: number = 0, easing?: EasyingFn, callback?: () => void): void {\n        const target = container ? container : window;\n        const scrollTop = this.getScroll(target);\n        const startTime = Date.now();\n        const frameFunc = () => {\n            const timestamp = Date.now();\n            const time = timestamp - startTime;\n            this.setScrollTop(target, (easing || easeInOutCubic)(time, scrollTop, topValue, 450));\n            if (time < 450) {\n                reqAnimFrame(frameFunc);\n            } else {\n                if (callback) {\n                    callback();\n                }\n            }\n        };\n        reqAnimFrame(frameFunc);\n    }\n}\n","export class AnimationDuration {\n    static SLOW = '0.3s'; // Modal\n    static BASE = '0.2s';\n    static FAST = '0.1s'; // Tooltip\n}\n\nexport class AnimationCurves {\n    static EASE_BASE_OUT = 'cubic-bezier(0.7, 0.3, 0.1, 1)';\n    static EASE_BASE_IN = 'cubic-bezier(0.9, 0, 0.3, 0.7)';\n    static EASE_OUT = 'cubic-bezier(0.215, 0.61, 0.355, 1)';\n    static EASE_IN = 'cubic-bezier(0.55, 0.055, 0.675, 0.19)';\n    static EASE_IN_OUT = 'cubic-bezier(0.645, 0.045, 0.355, 1)';\n    static EASE_OUT_BACK = 'cubic-bezier(0.12, 0.4, 0.29, 1.46)';\n    static EASE_IN_BACK = 'cubic-bezier(0.71, -0.46, 0.88, 0.6)';\n    static EASE_IN_OUT_BACK = 'cubic-bezier(0.71, -0.46, 0.29, 1.46)';\n    static EASE_OUT_CIRC = 'cubic-bezier(0.08, 0.82, 0.17, 1)';\n    static EASE_IN_CIRC = 'cubic-bezier(0.6, 0.04, 0.98, 0.34)';\n    static EASE_IN_OUT_CIRC = 'cubic-bezier(0.78, 0.14, 0.15, 0.86)';\n    static EASE_OUT_QUINT = 'cubic-bezier(0.23, 1, 0.32, 1)';\n    static EASE_IN_QUINT = 'cubic-bezier(0.755, 0.05, 0.855, 0.06)';\n    static EASE_IN_OUT_QUINT = 'cubic-bezier(0.86, 0, 0.07, 1)';\n}\n","import { animate, AnimationTriggerMetadata, style, transition, trigger } from '@angular/animations';\nimport { AnimationDuration } from './animation-consts';\n\nexport const fadeMotion: AnimationTriggerMetadata = trigger('fadeMotion', [\n    transition(':enter', [style({ opacity: 0 }), animate(`${AnimationDuration.BASE}`, style({ opacity: 1 }))]),\n    transition(':leave', [style({ opacity: 1 }), animate(`${AnimationDuration.BASE}`, style({ opacity: 0 }))])\n]);\n","import { ConnectionPositionPair } from '@angular/cdk/overlay';\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = ({\n    top: {\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter: {\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topLeft: {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    topRight: {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    right: {\n        originX: 'end',\n        originY: 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop: {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    rightBottom: {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    bottom: {\n        originX: 'center',\n        originY: 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX: 'center',\n        originY: 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft: {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight: {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left: {\n        originX: 'start',\n        originY: 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop: {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom: {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n} as {}) as { [key: string]: ConnectionPositionPair };\n\nexport const EXPANDED_DROPDOWN_POSITIONS = [\n    POSITION_MAP.bottomLeft,\n    POSITION_MAP.bottomRight,\n    POSITION_MAP.topLeft,\n    POSITION_MAP.topRight\n];\n","import { ThyPlacement, ConnectedPositionOffset } from './interface';\nimport { POSITION_MAP } from './overlay-position-map';\nimport { ConnectionPositionPair } from '@angular/cdk/overlay';\n\nconst connectionFallbackPositionsMap: { [key: string]: ThyPlacement[] } = {\n    top: ['topLeft', 'topRight', 'bottom', 'bottomLeft', 'bottomRight'],\n    topLeft: ['top', 'topRight', 'bottomLeft', 'bottom', 'bottomRight'],\n    topRight: ['top', 'topLeft', 'bottomRight', 'bottom', 'bottomLeft'],\n    bottom: ['bottomLeft', 'bottomRight', 'top', 'topLeft', 'topRight'],\n    bottomLeft: ['bottom', 'bottomRight', 'topLeft', 'top', 'topRight'],\n    bottomRight: ['bottom', 'bottomLeft', 'topRight', 'top', 'topLeft'],\n    left: ['leftTop', 'leftBottom', 'right', 'rightTop', 'rightBottom'],\n    leftTop: ['left', 'leftBottom', 'rightTop', 'right', 'rightBottom'],\n    leftBottom: ['left', 'leftTop', 'rightBottom', 'right', 'rightTop'],\n    right: ['rightTop', 'rightBottom', 'left', 'leftTop', 'leftBottom'],\n    rightTop: ['right', 'rightBottom', 'leftTop', 'left', 'leftBottom'],\n    rightBottom: ['right', 'rightTop', 'leftBottom', 'left', 'leftTop']\n};\n\nexport function buildConnectedPositionOffset(placement: ThyPlacement, offset: number): ConnectedPositionOffset {\n    const connectedPositionOffset: ConnectedPositionOffset = {};\n    if (placement.startsWith('top')) {\n        connectedPositionOffset.offsetY = -offset;\n    } else if (placement.startsWith('bottom')) {\n        connectedPositionOffset.offsetY = offset;\n    } else if (placement.startsWith('left')) {\n        connectedPositionOffset.offsetX = -offset;\n    } else if (placement.startsWith('right')) {\n        connectedPositionOffset.offsetX = offset;\n    } else {\n        // do nothings\n    }\n    return connectedPositionOffset;\n}\n\nexport function buildConnectedPositionPair(\n    placement: ThyPlacement,\n    offset?: number,\n    panelClassPrefix?: string\n): ConnectionPositionPair {\n    const position: ConnectionPositionPair = {\n        ...POSITION_MAP[placement],\n        ...(offset ? buildConnectedPositionOffset(placement, offset) : null)\n    };\n    if (panelClassPrefix) {\n        position.panelClass = `${panelClassPrefix}-${placement}`;\n    }\n    return position;\n}\n\nexport function getFallbackPlacements(placement: ThyPlacement): ThyPlacement[] {\n    return connectionFallbackPositionsMap[placement] || [];\n}\n\n/**\n * get flexible positions by placement, return placement position and it's fallback connection position\n * @example\n * getFlexiblePositions('top', 10, 'thy-overlay')\n * [{topPosition}, {topLeftPosition}, {topRightPosition}, {bottomPosition}, {bottomLeftPosition}, {bottomRightPosition},]\n * @returns [ConnectionPositionPair]\n */\nexport function getFlexiblePositions(\n    placement: ThyPlacement,\n    offset?: number,\n    panelClassPrefix?: string\n): ConnectionPositionPair[] {\n    const fallbackPlacements = getFallbackPlacements(placement);\n\n    return [placement, ...fallbackPlacements].map(placementName => {\n        return buildConnectedPositionPair(placementName, offset, panelClassPrefix);\n    });\n}\n\nexport function getPlacementByPosition(position: ConnectionPositionPair) {\n    const keyList = ['originX', 'originY', 'overlayX', 'overlayY'];\n    for (const placement in POSITION_MAP) {\n        if (keyList.every(key => position[key] === POSITION_MAP[placement][key])) {\n            return placement;\n        }\n    }\n}\n","import { OnDestroy, ElementRef, NgZone } from '@angular/core';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { Subject, fromEvent } from 'rxjs';\nimport { Platform } from '@angular/cdk/platform';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { takeUntil, take } from 'rxjs/operators';\n\nexport type ThyOverlayTrigger = 'hover' | 'focus' | 'click';\n\nexport abstract class ThyOverlayDirectiveBase {\n    protected elementRef: ElementRef;\n    private initialized = false;\n    /** Trigger Overlay */\n    protected _trigger: ThyOverlayTrigger = 'click';\n    public get trigger() {\n        return this._trigger;\n    }\n    public set trigger(value: ThyOverlayTrigger) {\n        this._trigger = value;\n        // Trigger reinitialize when trigger changed which can't contain first\n        if (this.initialized) {\n            this.clearEventListeners();\n            this.initialize();\n        }\n    }\n\n    protected overlayRef: OverlayRef;\n    protected manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    protected ngUnsubscribe$ = new Subject();\n    protected focusMonitor: FocusMonitor;\n    protected platform: Platform;\n    protected ngZone: NgZone;\n    protected showDelay? = 0;\n    protected hideDelay? = 0;\n    protected touchendHideDelay? = 0;\n    protected disabled = false;\n    protected showTimeoutId: number | null | any;\n    protected hideTimeoutId: number | null | any;\n\n    protected tooltipPin: boolean;\n    /** create overlay, you can use popover service or overlay*/\n    abstract createOverlay(): OverlayRef;\n    abstract show(delay?: number): void;\n    abstract hide(delay?: number): void;\n\n    private clearEventListeners() {\n        this.manualListeners.forEach((listener, event) => {\n            this.elementRef.nativeElement.removeEventListener(event, listener);\n        });\n        this.manualListeners.clear();\n        this.focusMonitor.stopMonitoring(this.elementRef);\n    }\n\n    private clearTimer() {\n        if (this.showTimeoutId) {\n            clearTimeout(this.showTimeoutId);\n        }\n        if (this.hideTimeoutId) {\n            clearTimeout(this.hideTimeoutId);\n        }\n    }\n\n    constructor(elementRef: ElementRef, platform: Platform, focusMonitor: FocusMonitor, ngZone: NgZone) {\n        this.elementRef = elementRef;\n        this.platform = platform;\n        this.focusMonitor = focusMonitor;\n        this.ngZone = ngZone;\n    }\n\n    initialize() {\n        this.initialized = true;\n        const element: HTMLElement = this.elementRef.nativeElement;\n        if (!this.platform.IOS && !this.platform.ANDROID) {\n            if (this.trigger === 'hover') {\n                this.manualListeners\n                    .set('mouseenter', () => {\n                        this.show();\n                    })\n                    .set('mouseleave', (event: MouseEvent) => {\n                        // element which mouse moved to\n                        const overlayElement: HTMLElement = this.overlayRef && this.overlayRef.overlayElement;\n                        const toElement = event['toElement'] || event.relatedTarget;\n                        // if element which moved to is in overlayElement, don't hide tooltip\n                        if (overlayElement && overlayElement.contains && overlayElement.contains(toElement as Element) && this.tooltipPin) {\n                            fromEvent(overlayElement, 'mouseleave')\n                                .pipe(take(1))\n                                .subscribe(() => {\n                                    this.hide();\n                                });\n                        } else {\n                            this.hide();\n                        }\n\n                        // if showDelay is too long and mouseleave immediately, overlayRef is not exist, we should clearTimeout\n                        if (!this.overlayRef) {\n                            this.clearTimer();\n                        }\n                    });\n            } else if (this.trigger === 'focus') {\n                this.focusMonitor\n                    .monitor(this.elementRef)\n                    .pipe(takeUntil(this.ngUnsubscribe$))\n                    .subscribe(origin => {\n                        // Note that the focus monitor runs outside the Angular zone.\n                        if (!origin) {\n                            this.ngZone.run(() => this.hide(0));\n                        } else {\n                            this.ngZone.run(() => this.show());\n                        }\n                    });\n                // this.manualListeners.set('focus', () => this.show());\n                // this.manualListeners.set('blur', () => this.hide());\n            } else if (this.trigger === 'click') {\n                this.manualListeners.set('click', () => this.show());\n            } else {\n                throw new Error(`${this.trigger} is not support, only support hover | focus | click`);\n            }\n        } else {\n            const touchendListener = () => {\n                // this.hide(this.touchendHideDelay);\n                setTimeout(() => {\n                    this.hide();\n                }, this.touchendHideDelay);\n            };\n            // Reserve extensions for mobile in the future\n            this.manualListeners\n                .set('touchend', touchendListener)\n                .set('touchcancel', touchendListener)\n                .set('touchstart', () => {\n                    this.show();\n                });\n        }\n\n        this.manualListeners.forEach((listener, event) => element.addEventListener(event, listener));\n    }\n\n    dispose(): void {\n        this.ngUnsubscribe$.next();\n        this.ngUnsubscribe$.complete();\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.clearEventListeners();\n        this.clearTimer();\n    }\n}\n","import { Observable, Subject } from 'rxjs';\nimport { ThyUpperOverlayPosition, ThyUpperOverlayOptions, ThyAbstractOverlayConfig } from './abstract-overlay.config';\nimport { filter, take } from 'rxjs/operators';\nimport { OverlayRef, PositionStrategy, GlobalPositionStrategy } from '@angular/cdk/overlay';\nimport { ThyAbstractOverlayContainer } from './abstract-overlay-container';\nimport { ESCAPE } from 'ngx-tethys/util';\n\nexport abstract class ThyAbstractOverlayRef<\n    TComponent = unknown,\n    TContainer extends ThyAbstractOverlayContainer = ThyAbstractOverlayContainer,\n    TResult = any\n> {\n    id: string;\n    componentInstance: TComponent;\n    backdropClosable: boolean;\n    containerInstance: TContainer;\n    abstract getOverlayRef(): OverlayRef;\n    abstract close(dialogResult?: TResult): void;\n    abstract afterOpened(): Observable<void>;\n    abstract afterClosed(): Observable<TResult | undefined>;\n    abstract beforeClosed(): Observable<TResult | undefined>;\n    abstract keydownEvents(): Observable<KeyboardEvent>;\n    abstract backdropClick(): Observable<MouseEvent>;\n    abstract updatePosition(position?: ThyUpperOverlayPosition): this;\n}\n\n// Counter for unique overlay ids.\nconst uniqueIdMap: { [key: string]: number } = {};\n\nfunction getUniqueId(name: string) {\n    if (uniqueIdMap[name] !== undefined) {\n        uniqueIdMap[name] = uniqueIdMap[name] + 1;\n    } else {\n        uniqueIdMap[name] = 0;\n    }\n    return uniqueIdMap[name];\n}\n\nexport abstract class ThyAbstractInternalOverlayRef<\n    T,\n    TContainer extends ThyAbstractOverlayContainer,\n    TResult = undefined\n> extends ThyAbstractOverlayRef<T, TContainer, TResult> {\n    /** The instance of component opened into the dialog. */\n    componentInstance: T;\n\n    /** Whether the user is allowed to close the dialog. */\n    backdropClosable: boolean | undefined = this.config.backdropClosable;\n\n    /** Subject for notifying the user that the dialog has finished opening. */\n    private readonly _afterOpened = new Subject<void>();\n\n    /** Subject for notifying the user that the dialog has finished closing. */\n    private readonly _afterClosed = new Subject<TResult | undefined>();\n\n    /** Subject for notifying the user that the dialog has started closing. */\n    private readonly _beforeClosed = new Subject<TResult | undefined>();\n\n    /** Result to be passed to afterClosed. */\n    private _result: TResult | undefined;\n\n    /** Fetches the position strategy object from the overlay ref. */\n    protected getPositionStrategy(): PositionStrategy {\n        return this.overlayRef.getConfig().positionStrategy;\n    }\n\n    constructor(\n        private options: ThyUpperOverlayOptions,\n        protected overlayRef: OverlayRef,\n        containerInstance: TContainer,\n        protected config: ThyAbstractOverlayConfig\n    ) {\n        super();\n        this.containerInstance = containerInstance;\n        // Pass the id along to the container.\n        this.id = containerInstance.id = config.id ? config.id : `thy-${this.options.name}-${getUniqueId(this.options.name)}`;\n        // Emit when opening animation completes\n        containerInstance.animationOpeningDone.pipe(take(1)).subscribe(() => {\n            this._afterOpened.next();\n            if (this.options.disposeWhenClose) {\n                this._afterOpened.complete();\n            }\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationClosingDone.pipe(take(1)).subscribe(() => {\n            if (this.options.disposeWhenClose) {\n                this.overlayRef.dispose();\n            }\n        });\n\n        // Dispose overlay when container after destroy\n        containerInstance.containerDestroy.pipe(take(1)).subscribe(() => {\n            if (this.options.disposeWhenClose) {\n                // component element has not been deleted when the component destroy, so use promise wait for component element destroyed\n                Promise.resolve().then(() => {\n                    this.overlayRef.dispose();\n                });\n            }\n        });\n\n        overlayRef.detachments().subscribe(() => {\n            this._beforeClosed.next(this._result);\n            this._beforeClosed.complete();\n            this._afterClosed.next(this._result);\n            this._afterClosed.complete();\n            this.componentInstance = null;\n            this.overlayRef.dispose();\n        });\n\n        // ESC close\n        overlayRef\n            .keydownEvents()\n            .pipe(filter(event => event.keyCode === ESCAPE && this.backdropClosable))\n            .subscribe(() => this.close());\n    }\n\n    /**\n     * Close the overlay.\n     * @param overlayResult Optional result to return to the dialog opener.\n     */\n    close(overlayResult?: TResult): void {\n        this._result = overlayResult;\n\n        // Transition the backdrop in parallel to the overlay.\n        this._beforeClosed.next(overlayResult);\n        if (this.options.disposeWhenClose) {\n            this._beforeClosed.complete();\n        }\n        this.overlayRef.detachBackdrop();\n        this.containerInstance.startExitAnimation();\n    }\n\n    /**\n     * Gets an observable that is notified when the dialog is finished opening.\n     */\n    afterOpened(): Observable<void> {\n        return this._afterOpened.asObservable();\n    }\n\n    /**\n     * Gets an observable that is notified when the dialog is finished closing.\n     */\n    afterClosed(): Observable<TResult | undefined> {\n        return this._afterClosed.asObservable();\n    }\n\n    /**\n     * Gets an observable that is notified when the dialog has started closing.\n     */\n    beforeClosed(): Observable<TResult | undefined> {\n        return this._beforeClosed.asObservable();\n    }\n\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick(): Observable<MouseEvent> {\n        return this.overlayRef.backdropClick();\n    }\n\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents(): Observable<KeyboardEvent> {\n        return this.overlayRef.keydownEvents();\n    }\n\n    /** Get overlay ref */\n    getOverlayRef() {\n        return this.overlayRef;\n    }\n\n    /**\n     * Updates the overlay's position when is GlobalPositionStrategy\n     * @param position New overlay position.\n     */\n    updateGlobalPosition(position?: ThyUpperOverlayPosition): this {\n        const strategy = this.getPositionStrategy() as GlobalPositionStrategy;\n\n        if (!(strategy instanceof GlobalPositionStrategy)) {\n            throw new Error(`current strategy is not GlobalPositionStrategy`);\n        }\n\n        if (position && (position.left || position.right)) {\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\n        } else {\n            strategy.centerHorizontally();\n        }\n\n        if (position && (position.top || position.bottom)) {\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n        } else {\n            strategy.centerVertically();\n        }\n\n        this.overlayRef.updatePosition();\n\n        return this;\n    }\n}\n","import { Direction } from '@angular/cdk/bidi';\nimport { ViewContainerRef } from '@angular/core';\n\nexport interface ThyUpperOverlayPosition {\n    /** Override for the overlay's top position. */\n    top?: string;\n\n    /** Override for the overlay's bottom position. */\n    bottom?: string;\n\n    /** Override for the overlay's left position. */\n    left?: string;\n\n    /** Override for the overlay's right position. */\n    right?: string;\n}\n\nexport class ThyAbstractOverlayConfig<TData = unknown> {\n    /**\n     * Where the attached component should live in Angular's *logical* component tree.\n     * This affects what is available for injection and the change detection order for the\n     * component instantiated inside of the dialog. This does not affect where the dialog\n     * content will be rendered.\n     */\n    viewContainerRef?: ViewContainerRef;\n\n    /** ID for the dialog. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Custom class for the overlay pane. */\n    panelClass?: string | string[] = '';\n\n    /** Whether the dialog has a backdrop. */\n    hasBackdrop? = true;\n\n    /** Custom class for the backdrop, */\n    backdropClass?: string | string[] = '';\n\n    /** Whether the user can use escape or clicking on the backdrop to close the overlay. */\n    backdropClosable? = true;\n\n    /** Width of the dialog. */\n    width? = '';\n\n    /** Height of the dialog. */\n    height? = '';\n\n    /** Min-width of the dialog. If a number is provided, pixel units are assumed. */\n    minWidth?: number | string;\n\n    /** Min-height of the dialog. If a number is provided, pixel units are assumed. */\n    minHeight?: number | string;\n\n    /** Max-width of the dialog. If a number is provided, pixel units are assumed. Defaults to 80vw */\n    maxWidth?: number | string;\n\n    /** Max-height of the dialog. If a number is provided, pixel units are assumed. */\n    maxHeight?: number | string;\n\n    /** Data being injected into the child component. */\n    initialState?: TData | null = null;\n\n    /** Layout direction for the overlay's content. */\n    direction?: Direction;\n\n    /** ID of the element that describes the dialog. */\n    ariaDescribedBy?: string | null = null;\n\n    /** Aria label to assign to the dialog element */\n    ariaLabel?: string | null = null;\n\n    /** Whether the dialog should focus the first focusable element on open. */\n    autoFocus? = true;\n\n    /**\n     * Whether the dialog should restore focus to the\n     * previously-focused element, after it's closed.\n     */\n    restoreFocus? = true;\n\n    /**\n     * Whether the dialog should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    closeOnNavigation? = true;\n}\n\nexport interface ThyUpperOverlayOptions {\n    /** component name, e.g. dialog | popover | slide */\n    name: string;\n    /** Whether enable animation */\n    animationEnabled: boolean;\n    /** Whether dispose cdk overlay ref when close upper overlay */\n    disposeWhenClose: boolean;\n}\n","import { CdkPortalOutlet, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport { EmbeddedViewRef, ComponentRef, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { ThyUpperOverlayOptions, ThyAbstractOverlayConfig } from './abstract-overlay.config';\nimport { AnimationEvent } from '@angular/animations';\n\nexport function throwPopoverContentAlreadyAttachedError(name: string) {\n    throw Error(`Attempting to attach ${name} content after content is already attached`);\n}\n\nexport abstract class ThyAbstractOverlayContainer {\n    id?: string;\n\n    animationState: string;\n\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    containerDestroy = new Subject<void>();\n\n    abstract config: ThyAbstractOverlayConfig;\n\n    /**portal outlet */\n    abstract portalOutlet: CdkPortalOutlet;\n\n    /**\n     * Opening overlay animation done\n     */\n    abstract animationOpeningDone: Observable<AnimationEvent>;\n\n    /**\n     * Closing overlay animation done\n     */\n    abstract animationClosingDone: Observable<AnimationEvent>;\n\n    /** Before attach content(TemplatePortal or ComponentPortal) portal to portalOutlet*/\n    abstract beforeAttachPortal(): void;\n\n    /** Before detach content*/\n    beforeDetachPortal() {}\n\n    constructor(private options: ThyUpperOverlayOptions, protected changeDetectorRef: ChangeDetectorRef) {}\n\n    /**\n     * Attach a TemplatePortal as content to this overlay container.\n     * @param portal Portal to be attached as the overlay content.\n     */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        if (this.portalOutlet.hasAttached()) {\n            throwPopoverContentAlreadyAttachedError(this.options.name);\n        }\n\n        this.beforeAttachPortal();\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /**\n     * Attach a ComponentPortal as content to this overlay container.\n     * @param portal Portal to be attached as the overlay content.\n     */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        if (this.portalOutlet.hasAttached()) {\n            throwPopoverContentAlreadyAttachedError(this.options.name);\n        }\n        this.beforeAttachPortal();\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    startExitAnimation() {\n        if (this.options.animationEnabled) {\n            this.animationState = 'exit';\n        } else {\n            // this.animationClosingDone.\n        }\n        this.beforeDetachPortal();\n\n        // Mark the container for check so it can react if the\n        // view container is using OnPush change detection.\n        this.changeDetectorRef.markForCheck();\n    }\n\n    destroy() {\n        this.containerDestroy.next();\n    }\n}\n","import { FunctionProp, concatArray } from 'ngx-tethys/util';\nimport { Subject } from 'rxjs';\n\nimport { ComponentType, Overlay, OverlayConfig, OverlayRef, ScrollStrategy } from '@angular/cdk/overlay';\nimport { ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { Injector, TemplateRef } from '@angular/core';\n\nimport { ThyAbstractOverlayContainer } from './abstract-overlay-container';\nimport { ThyAbstractOverlayRef } from './abstract-overlay-ref';\nimport { ThyAbstractOverlayConfig, ThyUpperOverlayOptions } from './abstract-overlay.config';\n\nexport type ComponentTypeOrTemplateRef<T> = ComponentType<T> | TemplateRef<T>;\n\nexport abstract class ThyAbstractOverlayService<TConfig extends ThyAbstractOverlayConfig, TContainer extends ThyAbstractOverlayContainer> {\n    private openedOverlays: ThyAbstractOverlayRef<unknown, TContainer>[] = [];\n\n    private readonly _afterAllClosed = new Subject<void>();\n\n    private readonly _afterOpened = new Subject<ThyAbstractOverlayRef<any, TContainer>>();\n\n    constructor(\n        protected options: ThyUpperOverlayOptions, // component name, e.g: dialog | popover | slide\n        protected overlay: Overlay,\n        protected injector: Injector,\n        protected defaultConfig: TConfig,\n        public scrollStrategy?: FunctionProp<ScrollStrategy>\n    ) {}\n\n    /** Build cdk overlay config by config */\n    protected abstract buildOverlayConfig(config: TConfig): OverlayConfig;\n\n    /** Attach overlay container to overlay*/\n    protected abstract attachUpperOverlayContainer(overlay: OverlayRef, config: TConfig): TContainer;\n\n    /** Create upper overlay ref by cdk overlay, container and config  */\n    protected abstract createUpperOverlayRef<T>(\n        overlayRef: OverlayRef,\n        containerInstance: TContainer,\n        config: TConfig\n    ): ThyAbstractOverlayRef<T, TContainer>;\n\n    /** Create injector for component content */\n    protected abstract createInjector<T>(\n        config: TConfig,\n        overlayRef: ThyAbstractOverlayRef<T, TContainer>,\n        containerInstance: TContainer\n    ): Injector;\n\n    abstract open<T, TData = undefined, TResult = undefined>(\n        componentOrTemplateRef: ComponentTypeOrTemplateRef<T>,\n        config?: ThyAbstractOverlayConfig<TData>\n    ): ThyAbstractOverlayRef<T, TContainer, TResult>;\n\n    /** Attach component or template ref to overlay container */\n    protected attachUpperOverlayContent<T, TResult>(\n        componentOrTemplateRef: ComponentTypeOrTemplateRef<T>,\n        containerInstance: TContainer,\n        overlayRef: OverlayRef,\n        config: TConfig\n    ): ThyAbstractOverlayRef<T, TContainer, TResult> {\n        // Create a reference to the dialog we're creating in order to give the user a handle\n        // to modify and close it.\n        const upperOverlayRef = this.createUpperOverlayRef<T>(overlayRef, containerInstance, config);\n\n        // When the backdrop is clicked, we want to close it.\n        if (config.hasBackdrop) {\n            overlayRef.backdropClick().subscribe(() => {\n                if (upperOverlayRef.backdropClosable) {\n                    upperOverlayRef.close();\n                }\n            });\n        }\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            containerInstance.attachTemplatePortal(\n                new TemplatePortal<T>(componentOrTemplateRef, null, <any>{\n                    $implicit: config.initialState,\n                    [`${this.options.name}Ref`]: upperOverlayRef\n                })\n            );\n        } else {\n            const injector = this.createInjector<T>(config, upperOverlayRef, containerInstance);\n            const contentRef = containerInstance.attachComponentPortal<T>(new ComponentPortal(componentOrTemplateRef, undefined, injector));\n            if (config.initialState) {\n                Object.assign(contentRef.instance, config.initialState);\n            }\n            upperOverlayRef.componentInstance = contentRef.instance;\n        }\n\n        return upperOverlayRef;\n    }\n\n    protected removeOpenedOverlay(upperOverlayRef: ThyAbstractOverlayRef<any, TContainer>) {\n        const index = this.openedOverlays.indexOf(upperOverlayRef);\n\n        if (index > -1) {\n            this.openedOverlays.splice(index, 1);\n\n            if (!this.openedOverlays.length) {\n                this._afterAllClosed.next();\n            }\n        }\n    }\n\n    protected getUpperOverlayById(id: string): ThyAbstractOverlayRef<any, TContainer> | undefined {\n        return this.openedOverlays.find(overlay => overlay.id === id);\n    }\n\n    protected buildBaseOverlayConfig(config: TConfig, defaultPanelClass?: string | string[]): OverlayConfig {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.overlay.position().global(),\n            hasBackdrop: config.hasBackdrop,\n            direction: config.direction,\n            width: config.width,\n            height: config.height,\n            minWidth: config.minWidth,\n            minHeight: config.minHeight,\n            maxWidth: config.maxWidth,\n            maxHeight: config.maxHeight,\n            disposeOnNavigation: config.closeOnNavigation\n        });\n\n        if (config.backdropClass) {\n            overlayConfig.backdropClass = config.backdropClass;\n        }\n\n        overlayConfig.panelClass = concatArray(config.panelClass, defaultPanelClass);\n\n        return overlayConfig;\n    }\n\n    protected openUpperOverlay<T, TResult = any>(\n        componentOrTemplateRef: ComponentTypeOrTemplateRef<T>,\n        config?: TConfig\n    ): ThyAbstractOverlayRef<T, TContainer, TResult> {\n        config = { ...this.defaultConfig, ...config };\n        if (config.id && this.getUpperOverlayById(config.id)) {\n            throw Error(`${this.options.name} with id ${config.id} exists already. The ${this.options.name} id must be unique.`);\n        }\n        const overlayConfig: OverlayConfig = this.buildOverlayConfig(config);\n        const overlayRef = this.overlay.create(overlayConfig);\n\n        const overlayContainer = this.attachUpperOverlayContainer(overlayRef, config);\n        const upperOverlayRef = this.attachUpperOverlayContent<T, TResult>(componentOrTemplateRef, overlayContainer, overlayRef, config);\n\n        this.openedOverlays.push(upperOverlayRef);\n        upperOverlayRef.afterClosed().subscribe(() => {\n            this.removeOpenedOverlay(upperOverlayRef);\n        });\n        this._afterOpened.next(upperOverlayRef);\n\n        return upperOverlayRef;\n    }\n\n    afterAllClosed() {\n        return this._afterAllClosed;\n    }\n\n    afterOpened() {\n        return this._afterOpened;\n    }\n\n    close<T>(result?: T) {\n        if (this.openedOverlays.length > 0) {\n            const lastOverlayRef = this.openedOverlays[this.openedOverlays.length - 1];\n            if (lastOverlayRef) {\n                lastOverlayRef.close(result);\n            }\n        }\n    }\n\n    closeAll() {\n        let i = this.openedOverlays.length;\n        while (i--) {\n            // 不需要操作 openedOverlays, 因为 close 会触发 afterClosed 的订阅\n            // 触发订阅后会自动从 openedOverlays 中移除\n            this.openedOverlays[i].close();\n        }\n    }\n\n    dispose(): void {\n        this.closeAll();\n        this._afterAllClosed.complete();\n        this._afterOpened.complete();\n    }\n}\n","import { Injectable, Renderer2, ElementRef } from '@angular/core';\nimport { Dictionary } from 'ngx-tethys/types';\n\n@Injectable()\nexport class UpdateHostClassService {\n    private _classNames: string[] = [];\n\n    private _hostElement: HTMLElement;\n\n    constructor(private renderer: Renderer2) {}\n\n    initializeElement(element: HTMLElement | ElementRef<HTMLElement>) {\n        if (element instanceof ElementRef) {\n            this._hostElement = element.nativeElement;\n        } else {\n            this._hostElement = element;\n        }\n        return this;\n    }\n\n    updateClass(classNames: string[]) {\n        if (this._classNames) {\n            this._classNames.forEach(className => {\n                if (classNames.indexOf(className) < 0) {\n                    this.removeClass(className);\n                }\n            });\n        }\n        const newClasses: string[] = [];\n        classNames.forEach(className => {\n            if (className) {\n                newClasses.push(className);\n                if (this._classNames.indexOf(className) < 0) {\n                    this.addClass(className);\n                }\n            }\n        });\n        this._classNames = newClasses;\n        return this;\n    }\n\n    updateClassByMap(classMap: Dictionary<boolean>) {\n        const newClasses = [];\n        for (const key in classMap) {\n            if (classMap.hasOwnProperty(key) && classMap[key]) {\n                newClasses.push(key);\n            }\n        }\n        this.updateClass(newClasses);\n    }\n\n    addClass(className: string) {\n        this.renderer.addClass(this._hostElement, className);\n        return this;\n    }\n\n    removeClass(className: string) {\n        this.renderer.removeClass(this._hostElement, className);\n        return this;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThyTranslate {\n    instant(key: string | Array<string>, interpolateParams?: object): string | any {\n        return key;\n    }\n\n    get(key: string | Array<string>, interpolateParams?: object): Observable<string | any> {\n        return new Observable((observer: Observer<any>) => {\n            observer.next(key);\n        });\n    }\n}\n","import { Constructor } from './constructor';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\nexport interface ThyCanDisable {\n    thyDisabled: boolean;\n}\n\nexport type ThyCanDisableCtor = Constructor<ThyCanDisable>;\n\n/** Mixin to augment a directive with a `disable` property. */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): ThyCanDisableCtor & T {\n    return class extends base {\n        private _thyDisabled = false;\n\n        get thyDisabled() {\n            return this._thyDisabled;\n        }\n\n        set thyDisabled(value: any) {\n            this._thyDisabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { Subject } from 'rxjs';\nimport { OnDestroy } from '@angular/core';\nimport { Constructor } from './constructor';\n\nexport interface ThyLoadingDone {\n    loadingDone: boolean;\n}\n\nexport function mixinLoadingDone<T extends Constructor<{}>>(base: T): Constructor<ThyLoadingDone> & T {\n    return class Mixin extends base {\n        loadingDone = false;\n\n        setLoadingDone(value: boolean) {\n            this.loadingDone = value;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { Subject } from 'rxjs';\nimport { OnDestroy } from '@angular/core';\nimport { Constructor } from './constructor';\n\nexport interface ThyUnsubscribe extends OnDestroy {\n    ngUnsubscribe$: Subject<any>;\n}\n\n/** Mixin to augment a directive with a `disableRipple` property. */\nexport function mixinUnsubscribe<T extends Constructor<{}>>(base: T): Constructor<ThyUnsubscribe> & T {\n    return class Mixin extends base {\n        ngUnsubscribe$ = new Subject();\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        ngUnsubscribeReinitialize() {\n            this.ngUnsubscribe$.next();\n            this.ngUnsubscribe$.complete();\n            this.ngUnsubscribe$ = new Subject();\n        }\n\n        ngOnDestroy() {\n            this.ngUnsubscribe$.next();\n            this.ngUnsubscribe$.complete();\n        }\n    };\n}\n"]}