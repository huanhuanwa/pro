(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('ngx-tethys/popover'),require('@angular/common'),require('ngx-tethys/action-menu'),require('ngx-tethys/date-picker'),require('@angular/forms'),require('ngx-tethys/icon'),require('ngx-tethys/nav'),require('ngx-tethys/shared'),exports, require('ngx-tethys/icon'), require('@angular/core'), require('@angular/common'), require('@angular/forms'), require('ngx-tethys/popover'), require('date-fns'), require('ngx-tethys/action-menu'), require('ngx-tethys/shared'), require('ngx-tethys/date-picker'), require('ngx-tethys/nav')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/date-range', ['@angular/core','ngx-tethys/popover','@angular/common','ngx-tethys/action-menu','ngx-tethys/date-picker','@angular/forms','ngx-tethys/icon','ngx-tethys/nav','ngx-tethys/shared','exports', 'ngx-tethys/icon', '@angular/core', '@angular/common', '@angular/forms', 'ngx-tethys/popover', 'date-fns', 'ngx-tethys/action-menu', 'ngx-tethys/shared', 'ngx-tethys/date-picker', 'ngx-tethys/nav'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ngxTethys.popover,global.ng.common,global.ngxTethys.actionMenu,global.ngxTethys.datePicker,global.ng.forms,global.ngxTethys.icon,global.ngxTethys.nav,global.ngxTethys.shared,(global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys']['date-range'] = {}), global['ngx-tethys'].icon, global.ng.core, global.ng.common, global.ng.forms, global['ngx-tethys'].popover, global.dateFns, global['ngx-tethys']['action-menu'], global['ngx-tethys'].shared, global['ngx-tethys']['date-picker'], global['ngx-tethys'].nav));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,ɵngcc7,ɵngcc8,exports, icon, core, common, forms, popover, dateFns, actionMenu, shared, datePicker, nav) { 
function OptionalDateRangesComponent_thy_action_menu_0_a_1_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 7);
    ɵngcc0.ɵɵelement(1, "thy-icon", 8);
    ɵngcc0.ɵɵelementEnd();
} }
function OptionalDateRangesComponent_thy_action_menu_0_a_1_Template(rf, ctx) { if (rf & 1) {
    var _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 6);
    ɵngcc0.ɵɵlistener("click", function OptionalDateRangesComponent_thy_action_menu_0_a_1_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); var dateRange_r3 = ctx.$implicit; var ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5._selectDateRange(dateRange_r3); });
    ɵngcc0.ɵɵelementStart(1, "span", 4);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, OptionalDateRangesComponent_thy_action_menu_0_a_1_span_3_Template, 2, 0, "span", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var dateRange_r3 = ctx.$implicit;
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(dateRange_r3 == null ? null : dateRange_r3.text);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", dateRange_r3.key === (ctx_r1.selectedDate == null ? null : ctx_r1.selectedDate.key));
} }
function OptionalDateRangesComponent_thy_action_menu_0_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 7);
    ɵngcc0.ɵɵelement(1, "thy-icon", 8);
    ɵngcc0.ɵɵelementEnd();
} }
function OptionalDateRangesComponent_thy_action_menu_0_Template(rf, ctx) { if (rf & 1) {
    var _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "thy-action-menu", 1);
    ɵngcc0.ɵɵtemplate(1, OptionalDateRangesComponent_thy_action_menu_0_a_1_Template, 4, 2, "a", 2);
    ɵngcc0.ɵɵelementStart(2, "a", 3);
    ɵngcc0.ɵɵlistener("ngModelChange", function OptionalDateRangesComponent_thy_action_menu_0_Template_a_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.selectedDate = $event; })("ngModelChange", function OptionalDateRangesComponent_thy_action_menu_0_Template_a_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); var ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9._selectedCustomDate($event); });
    ɵngcc0.ɵɵelementStart(3, "span", 4);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, OptionalDateRangesComponent_thy_action_menu_0_span_5_Template, 2, 0, "span", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.optionalDateRanges);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r0.selectedDate)("thyMinDate", ctx_r0.minDate)("thyMaxDate", ctx_r0.maxDate);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.customValue);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.customKey === (ctx_r0.selectedDate == null ? null : ctx_r0.selectedDate.key));
} }
function ThyDateRangeComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "thy-icon-nav", 4);
    ɵngcc0.ɵɵlistener("click", function ThyDateRangeComponent_ng_container_1_Template_thy_icon_nav_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r7); var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.previous(); });
    ɵngcc0.ɵɵelementStart(2, "a", 5);
    ɵngcc0.ɵɵelement(3, "thy-icon", 6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ThyDateRangeComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "thyDatePickerFormat");
    ɵngcc0.ɵɵpipe(3, "thyDatePickerFormat");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r1.selectedDate == null ? null : ctx_r1.selectedDate.begin), " ~ ", ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r1.selectedDate == null ? null : ctx_r1.selectedDate.end), " ");
} }
function ThyDateRangeComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "thyDatePickerFormat");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r2.selectedDate == null ? null : ctx_r2.selectedDate.begin, ctx_r2.thyPickerFormat), " ");
} }
function ThyDateRangeComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.selectedDate == null ? null : ctx_r3.selectedDate.text);
} }
function ThyDateRangeComponent_thy_icon_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 7);
} }
function ThyDateRangeComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "thy-icon-nav", 4);
    ɵngcc0.ɵɵlistener("click", function ThyDateRangeComponent_ng_container_7_Template_thy_icon_nav_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.next(); });
    ɵngcc0.ɵɵelementStart(2, "a", 5);
    ɵngcc0.ɵɵelement(3, "thy-icon", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} }
var _c0 = function (a0) { return { "thy-date-range-disabled": a0 }; };
'use strict';

    var OptionalDateRangesComponent = /** @class */ (function () {
        function OptionalDateRangesComponent(thyPopover) {
            this.thyPopover = thyPopover;
            this.hiddenMenu = false;
            this.customValue = '自定义';
        }
        OptionalDateRangesComponent.prototype.ngOnInit = function () { };
        OptionalDateRangesComponent.prototype._selectDateRange = function (dateRange) {
            this.selectedDate = dateRange;
            this.selectedDateRange(dateRange);
            this.thyPopover.close();
        };
        OptionalDateRangesComponent.prototype._selectedCustomDate = function (date) {
            this.selectedDate = {
                begin: date.begin,
                end: date.end,
                key: this.customKey,
                text: this.customValue
            };
            this.selectedDateRange(this.selectedDate);
        };
OptionalDateRangesComponent.ɵfac = function OptionalDateRangesComponent_Factory(t) { return new (t || OptionalDateRangesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyPopover)); };
OptionalDateRangesComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: OptionalDateRangesComponent, selectors: [["date-range-optional"]], decls: 1, vars: 1, consts: [["class", "thy-date-range-action-menu-container", 4, "ngIf"], [1, "thy-date-range-action-menu-container"], ["thyActionMenuItem", "", "href", "javascript:;", 3, "click", 4, "ngFor", "ngForOf"], ["thyActionMenuItem", "", "href", "javascript:;", "thyRangePicker", "", 3, "ngModel", "thyMinDate", "thyMaxDate", "ngModelChange"], ["thyActionMenuItemName", ""], ["thyActionMenuItemExtendIcon", "", 4, "ngIf"], ["thyActionMenuItem", "", "href", "javascript:;", 3, "click"], ["thyActionMenuItemExtendIcon", ""], ["thyIconName", "check", 1, "text-primary"]], template: function OptionalDateRangesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OptionalDateRangesComponent_thy_action_menu_0_Template, 6, 6, "thy-action-menu", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hiddenMenu);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.ThyActionMenuComponent, ɵngcc2.NgForOf, ɵngcc3.ThyActionMenuItemDirective, ɵngcc4.ThyRangePickerDirective, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc3.ThyActionMenuItemNameDirective, ɵngcc3.ThyActionMenuItemExtendIconDirective, ɵngcc6.ThyIconComponent], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OptionalDateRangesComponent, [{
        type: core.Component,
        args: [{
                selector: 'date-range-optional',
                template: "<thy-action-menu *ngIf=\"!hiddenMenu\" class=\"thy-date-range-action-menu-container\">\n  <a thyActionMenuItem href=\"javascript:;\" *ngFor=\"let dateRange of optionalDateRanges\" (click)=\"_selectDateRange(dateRange)\">\n    <span thyActionMenuItemName>{{ dateRange?.text }}</span>\n    <span thyActionMenuItemExtendIcon *ngIf=\"dateRange.key === selectedDate?.key\">\n      <thy-icon class=\"text-primary\" thyIconName=\"check\"></thy-icon>\n    </span>\n  </a>\n  <a\n    thyActionMenuItem\n    href=\"javascript:;\"\n    thyRangePicker\n    [(ngModel)]=\"selectedDate\"\n    [thyMinDate]=\"minDate\"\n    [thyMaxDate]=\"maxDate\"\n    (ngModelChange)=\"_selectedCustomDate($event)\"\n  >\n    <span thyActionMenuItemName>{{ customValue }}</span>\n    <span thyActionMenuItemExtendIcon *ngIf=\"customKey === selectedDate?.key\">\n      <thy-icon class=\"text-primary\" thyIconName=\"check\"></thy-icon>\n    </span>\n  </a>\n</thy-action-menu>\n"
            }]
    }], function () { return [{ type: ɵngcc1.ThyPopover }]; }, null); })();
        return OptionalDateRangesComponent;
    }());
    OptionalDateRangesComponent.ctorParameters = function () { return [
        { type: popover.ThyPopover }
    ]; };

    var allDayTimestamp = 24 * 60 * 60;
    var INPUT_CONTROL_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: core.forwardRef(function () { return ThyDateRangeComponent; }),
        multi: true
    };
    var ThyDateRangeComponent = /** @class */ (function () {
        function ThyDateRangeComponent(thyPopover, cdr) {
            this.thyPopover = thyPopover;
            this.cdr = cdr;
            this.thyHiddenMenu = false;
            this.thyDisabledSwitch = false;
            this.thyCustomTextValue = '自定义';
            this.thyCustomKey = 'custom';
            this.optionalDateRanges = [
                {
                    key: 'week',
                    text: '本周',
                    begin: dateFns.getUnixTime(dateFns.startOfISOWeek(new Date())),
                    end: dateFns.getUnixTime(dateFns.endOfISOWeek(new Date())),
                    timestamp: {
                        interval: 7,
                        unit: 'day'
                    }
                },
                {
                    key: 'month',
                    text: '本月',
                    begin: dateFns.getUnixTime(dateFns.startOfMonth(new Date())),
                    end: dateFns.getUnixTime(dateFns.endOfMonth(new Date())),
                    timestamp: {
                        interval: 1,
                        unit: 'month'
                    }
                }
            ];
            this.onModelChange = function () { };
            this.onModelTouched = function () { };
        }
        Object.defineProperty(ThyDateRangeComponent.prototype, "thyOptionalDateRanges", {
            set: function (value) {
                this.optionalDateRanges = value.length > 0 ? value : this.optionalDateRanges;
            },
            enumerable: false,
            configurable: true
        });
        ThyDateRangeComponent.prototype.writeValue = function (value) {
            if (value) {
                this.selectedDate = value;
            }
            else if (this.optionalDateRanges.length > 0) {
                this.selectedDate = this.optionalDateRanges[0];
                this.onModelChange(this.selectedDate);
            }
            this._setSelectedDateRange();
            this.cdr.detectChanges();
        };
        ThyDateRangeComponent.prototype.registerOnChange = function (fn) {
            this.onModelChange = fn;
        };
        ThyDateRangeComponent.prototype.registerOnTouched = function (fn) {
            this.onModelTouched = fn;
        };
        ThyDateRangeComponent.prototype.ngOnInit = function () { };
        ThyDateRangeComponent.prototype._setSelectedDateRange = function () {
            this.selectedDateRange = {
                begin: this.selectedDate.begin,
                end: this.selectedDate.end
            };
        };
        ThyDateRangeComponent.prototype._calculateNewTime = function (type) {
            if (this.selectedDate.timestamp) {
                var beginDate = new Date(this.selectedDate.begin * 1000);
                var endDate = new Date(this.selectedDate.end * 1000);
                var interval = this.selectedDate.timestamp.interval;
                if (this.selectedDate.timestamp.unit === 'day') {
                    if (type === 'previous') {
                        return {
                            begin: dateFns.getUnixTime(dateFns.addDays(beginDate, -1 * interval)),
                            end: dateFns.getUnixTime(dateFns.addDays(endDate, -1 * interval)),
                            key: this.thyCustomKey
                        };
                    }
                    else {
                        return {
                            begin: dateFns.getUnixTime(dateFns.addDays(beginDate, 1 * interval)),
                            end: dateFns.getUnixTime(dateFns.addDays(endDate, 1 * interval)),
                            key: this.thyCustomKey
                        };
                    }
                }
                else if (this.selectedDate.timestamp.unit === 'month') {
                    if (type === 'previous') {
                        return {
                            begin: dateFns.getUnixTime(dateFns.addMonths(beginDate, -1 * interval)),
                            end: dateFns.getUnixTime(dateFns.addMonths(endDate, -1 * interval)),
                            key: this.thyCustomKey
                        };
                    }
                    else {
                        return {
                            begin: dateFns.getUnixTime(dateFns.addMonths(beginDate, 1 * interval)),
                            end: dateFns.getUnixTime(dateFns.addMonths(endDate, 1 * interval)),
                            key: this.thyCustomKey
                        };
                    }
                }
                else if (this.selectedDate.timestamp.unit === 'year') {
                    if (type === 'previous') {
                        return {
                            begin: dateFns.getUnixTime(dateFns.addYears(beginDate, -1 * interval)),
                            end: dateFns.getUnixTime(dateFns.addYears(endDate, -1 * interval)),
                            key: this.thyCustomKey
                        };
                    }
                    else {
                        return {
                            begin: dateFns.getUnixTime(dateFns.addYears(beginDate, 1 * interval)),
                            end: dateFns.getUnixTime(dateFns.addYears(endDate, 1 * interval)),
                            key: this.thyCustomKey
                        };
                    }
                }
            }
            else {
                var interval = this.selectedDate.end - this.selectedDate.begin + allDayTimestamp;
                if (type === 'previous') {
                    return {
                        begin: this.selectedDate.begin - interval,
                        end: this.selectedDate.end - interval,
                        key: this.thyCustomKey
                    };
                }
                else {
                    return {
                        begin: this.selectedDate.begin + interval,
                        end: this.selectedDate.end + interval,
                        key: this.thyCustomKey
                    };
                }
            }
        };
        ThyDateRangeComponent.prototype._setPreviousOrNextDate = function (type) {
            this.selectedDate = Object.assign({}, this.selectedDate, this._calculateNewTime(type));
            this._setSelectedDateRange();
            this.onModelChange(this.selectedDate);
        };
        ThyDateRangeComponent.prototype.previous = function () {
            this._setPreviousOrNextDate('previous');
        };
        ThyDateRangeComponent.prototype.next = function () {
            this._setPreviousOrNextDate('next');
        };
        ThyDateRangeComponent.prototype.openOptionalDateRangesMenu = function (event) {
            var _this = this;
            if (this.thyHiddenMenu) {
                return;
            }
            this.thyPopover.open(OptionalDateRangesComponent, {
                origin: event.currentTarget,
                hasBackdrop: true,
                backdropClass: 'thy-overlay-transparent-backdrop',
                offset: 0,
                manualClosure: true,
                originActiveClass: 'thy-date-range-text-active',
                initialState: {
                    hiddenMenu: this.thyHiddenMenu,
                    optionalDateRanges: this.optionalDateRanges,
                    selectedDate: this.selectedDate,
                    minDate: this.thyMinDate,
                    maxDate: this.thyMaxDate,
                    customValue: this.thyCustomTextValue,
                    customKey: this.thyCustomKey,
                    selectedDateRange: function (dateRange) {
                        _this.onModelChange(dateRange);
                        _this.selectedDate = dateRange;
                    }
                }
            });
        };
ThyDateRangeComponent.ɵfac = function ThyDateRangeComponent_Factory(t) { return new (t || ThyDateRangeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyPopover), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ThyDateRangeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyDateRangeComponent, selectors: [["thy-date-range"]], inputs: { thyHiddenMenu: "thyHiddenMenu", thyDisabledSwitch: "thyDisabledSwitch", thyCustomTextValue: "thyCustomTextValue", thyCustomKey: "thyCustomKey", thyOptionalDateRanges: "thyOptionalDateRanges", thyMinDate: "thyMinDate", thyMaxDate: "thyMaxDate", thyPickerFormat: "thyPickerFormat" }, features: [ɵngcc0.ɵɵProvidersFeature([INPUT_CONTROL_VALUE_ACCESSOR])], decls: 8, vars: 9, consts: [[1, "thy-date-range-container"], [4, "ngIf"], ["href", "javascript:;", 1, "thy-date-range-text", 3, "ngClass", "click"], ["class", "thy-date-range-text-caret-down ml-2", "thyIconName", "angle-down", 4, "ngIf"], ["thyType", "secondary", 3, "click"], ["href", "javascript:;", "thyIconNavLink", ""], ["thyIconName", "angle-left"], ["thyIconName", "angle-down", 1, "thy-date-range-text-caret-down", "ml-2"], ["thyIconName", "angle-right"]], template: function ThyDateRangeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ThyDateRangeComponent_ng_container_1_Template, 4, 0, "ng-container", 1);
        ɵngcc0.ɵɵelementStart(2, "span", 2);
        ɵngcc0.ɵɵlistener("click", function ThyDateRangeComponent_Template_span_click_2_listener($event) { return ctx.openOptionalDateRangesMenu($event); });
        ɵngcc0.ɵɵtemplate(3, ThyDateRangeComponent_ng_container_3_Template, 4, 6, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(4, ThyDateRangeComponent_ng_container_4_Template, 3, 4, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(5, ThyDateRangeComponent_ng_container_5_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(6, ThyDateRangeComponent_thy_icon_6_Template, 1, 0, "thy-icon", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, ThyDateRangeComponent_ng_container_7_Template, 4, 0, "ng-container", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.thyDisabledSwitch);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c0, ctx.thyHiddenMenu));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.selectedDate == null ? null : ctx.selectedDate.key) === "custom");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.selectedDate == null ? null : ctx.selectedDate.key) === "exception");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", (ctx.selectedDate == null ? null : ctx.selectedDate.key) !== "custom" && (ctx.selectedDate == null ? null : ctx.selectedDate.key) !== "exception");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.thyHiddenMenu);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.thyDisabledSwitch);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgClass, ɵngcc7.ThyIconNavComponent, ɵngcc7.ThyIconNavLinkComponent, ɵngcc6.ThyIconComponent], pipes: [ɵngcc4.ThyDatePickerFormatPipe], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDateRangeComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-date-range',
                template: "<div class=\"thy-date-range-container\">\n  <ng-container *ngIf=\"!thyDisabledSwitch\">\n    <thy-icon-nav thyType=\"secondary\" (click)=\"previous()\">\n      <a href=\"javascript:;\" thyIconNavLink><thy-icon thyIconName=\"angle-left\"></thy-icon></a>\n    </thy-icon-nav>\n  </ng-container>\n  <span\n    href=\"javascript:;\"\n    (click)=\"openOptionalDateRangesMenu($event)\"\n    class=\"thy-date-range-text\"\n    [ngClass]=\"{ 'thy-date-range-disabled': thyHiddenMenu }\"\n  >\n    <ng-container *ngIf=\"selectedDate?.key === 'custom'\">\n      {{ selectedDate?.begin | thyDatePickerFormat }} ~ {{ selectedDate?.end | thyDatePickerFormat }}\n    </ng-container>\n    <ng-container *ngIf=\"selectedDate?.key === 'exception'\">\n      {{ selectedDate?.begin | thyDatePickerFormat: thyPickerFormat }}\n    </ng-container>\n    <ng-container *ngIf=\"selectedDate?.key !== 'custom' && selectedDate?.key !== 'exception'\">{{ selectedDate?.text }}</ng-container>\n    <thy-icon *ngIf=\"!thyHiddenMenu\" class=\"thy-date-range-text-caret-down ml-2\" thyIconName=\"angle-down\"></thy-icon>\n  </span>\n  <ng-container *ngIf=\"!thyDisabledSwitch\">\n    <thy-icon-nav thyType=\"secondary\" (click)=\"next()\">\n      <a href=\"javascript:;\" thyIconNavLink><thy-icon thyIconName=\"angle-right\"></thy-icon></a>\n    </thy-icon-nav>\n  </ng-container>\n</div>\n",
                providers: [INPUT_CONTROL_VALUE_ACCESSOR]
            }]
    }], function () { return [{ type: ɵngcc1.ThyPopover }, { type: ɵngcc0.ChangeDetectorRef }]; }, { thyHiddenMenu: [{
            type: core.Input
        }], thyDisabledSwitch: [{
            type: core.Input
        }], thyCustomTextValue: [{
            type: core.Input
        }], thyCustomKey: [{
            type: core.Input
        }], thyOptionalDateRanges: [{
            type: core.Input
        }], thyMinDate: [{
            type: core.Input
        }], thyMaxDate: [{
            type: core.Input
        }], thyPickerFormat: [{
            type: core.Input
        }] }); })();
        return ThyDateRangeComponent;
    }());
    ThyDateRangeComponent.ctorParameters = function () { return [
        { type: popover.ThyPopover },
        { type: core.ChangeDetectorRef }
    ]; };
    ThyDateRangeComponent.propDecorators = {
        thyOptionalDateRanges: [{ type: core.Input }],
        thyHiddenMenu: [{ type: core.Input }],
        thyDisabledSwitch: [{ type: core.Input }],
        thyCustomTextValue: [{ type: core.Input }],
        thyMinDate: [{ type: core.Input }],
        thyMaxDate: [{ type: core.Input }],
        thyCustomKey: [{ type: core.Input }],
        thyPickerFormat: [{ type: core.Input }]
    };

    var ThyDateRangeModule = /** @class */ (function () {
        function ThyDateRangeModule() {
        }
ThyDateRangeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyDateRangeModule });
ThyDateRangeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyDateRangeModule_Factory(t) { return new (t || ThyDateRangeModule)(); }, imports: [[common.CommonModule, forms.FormsModule, actionMenu.ThyActionMenuModule, shared.ThySharedModule, icon.ThyIconModule, datePicker.ThyDatePickerModule, nav.ThyNavModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyDateRangeModule, { declarations: [ThyDateRangeComponent, OptionalDateRangesComponent], imports: [ɵngcc2.CommonModule, ɵngcc5.FormsModule, ɵngcc3.ThyActionMenuModule, ɵngcc8.ThySharedModule, ɵngcc6.ThyIconModule, ɵngcc4.ThyDatePickerModule, ɵngcc7.ThyNavModule], exports: [ThyDateRangeComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDateRangeModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule, forms.FormsModule, actionMenu.ThyActionMenuModule, shared.ThySharedModule, icon.ThyIconModule, datePicker.ThyDatePickerModule, nav.ThyNavModule],
                declarations: [ThyDateRangeComponent, OptionalDateRangesComponent],
                exports: [ThyDateRangeComponent],
                entryComponents: [OptionalDateRangesComponent]
            }]
    }], function () { return []; }, null); })();
        return ThyDateRangeModule;
    }());

    var DateRangeItemInfo = /** @class */ (function () {
        function DateRangeItemInfo() {
        }
        return DateRangeItemInfo;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.DateRangeItemInfo = DateRangeItemInfo;
    exports.OptionalDateRangesComponent = OptionalDateRangesComponent;
    exports.ThyDateRangeComponent = ThyDateRangeComponent;
    exports.ThyDateRangeModule = ThyDateRangeModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-tethys-date-range.umd.js.map