{"version":3,"file":"ngx-tethys-input.umd.js","sources":["../../src/input/input.directive.ts","../../src/input/input.component.ts","../../src/input/input-group.component.ts","../../src/input/input-search.component.ts","../../src/input/module.ts","../../src/input/ngx-tethys-input.ts"],"names":["inputGroupSizeMap","coerceBooleanProperty","Directive","UpdateHostClassService","ElementRef","Renderer2","HostBinding","Input","NG_VALUE_ACCESSOR","forwardRef","noop","EventEmitter","take","Component","ViewEncapsulation","NgZone","Output","ContentChild","ViewChild","ThyTranslate","ChangeDetectorRef","NgModule","CommonModule","FormsModule","ThySharedModule","ThyIconModule"],"mappings":"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","sourcesContent":["import { Directive, ElementRef, HostBinding, Input, OnInit, Renderer2 } from '@angular/core';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\nexport type InputSize = 'xs' | 'sm' | 'md' | 'lg' | '';\n\nconst inputGroupSizeMap = {\n    xs: ['form-control-xs'],\n    sm: ['form-control-sm'],\n    md: ['form-control-md'],\n    lg: ['form-control-lg']\n};\n\n@Directive({\n    selector: '[thyInput]',\n    providers: [UpdateHostClassService]\n})\nexport class ThyInputDirective implements OnInit {\n    @HostBinding('class.form-control') _isFormControl = true;\n\n    private autocomplete: boolean;\n\n    private initialized = false;\n\n    @Input()\n    set thySize(size: InputSize) {\n        if (size && inputGroupSizeMap[size]) {\n            this.updateHostClassService.updateClass(inputGroupSizeMap[size]);\n        } else {\n            this.updateHostClassService.updateClass([]);\n        }\n    }\n\n    @Input()\n    set thyAutocomplete(value: boolean) {\n        this.autocomplete = coerceBooleanProperty(value);\n        if (this.initialized) {\n            this.setAutocomplete();\n        }\n    }\n\n    constructor(private updateHostClassService: UpdateHostClassService, private elementRef: ElementRef, private render: Renderer2) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n\n    ngOnInit() {\n        this.initialized = true;\n        this.setAutocomplete();\n    }\n\n    private setAutocomplete() {\n        this.render.setAttribute(this.elementRef.nativeElement, 'autocomplete', this.autocomplete ? 'on' : 'off');\n    }\n}\n","import {\n    AfterViewInit,\n    Component,\n    ContentChild,\n    EventEmitter,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    Renderer2,\n    TemplateRef,\n    ViewChild,\n    ViewEncapsulation,\n    NgZone,\n    OnInit\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { take } from 'rxjs/operators';\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThyInputComponent),\n    multi: true\n};\n\nconst noop = () => {};\n\nconst password = 'password';\n\n@Component({\n    selector: 'thy-input',\n    templateUrl: './input.component.html',\n    providers: [UpdateHostClassService, CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyInputComponent implements ControlValueAccessor, OnInit {\n    @Input() placeholder = '';\n\n    @Input() thySize: string;\n\n    @Input() thyAutofocus = false;\n\n    @Input() type: string;\n\n    @Input()\n    set thyType(value: string) {\n        this.type = value;\n    }\n\n    @Input() thyLabelText: string;\n\n    @Input() readonly = false;\n\n    @Input()\n    set thyAutocomplete(value: boolean) {\n        this.autocomplete = value;\n    }\n\n    @Output() focus: EventEmitter<Event> = new EventEmitter<Event>();\n\n    @Output() blur: EventEmitter<Event> = new EventEmitter<Event>();\n\n    @ContentChild('append') appendTemplate: TemplateRef<any>;\n\n    @ContentChild('prepend') prependTemplate: TemplateRef<any>;\n\n    @ViewChild('eye', { static: true }) eyeTemplate: TemplateRef<any>;\n\n    public _type = 'text';\n\n    public value: string;\n\n    public autocomplete: boolean;\n\n    public showLabel: boolean;\n\n    private onTouchedCallback: () => void = noop;\n\n    private onChangeCallback: (_: any) => void = noop;\n\n    @HostBinding('class.thy-input') _isSearchContainer = true;\n\n    @HostBinding('class.form-control') _isFormControl = true;\n\n    @HostBinding('class.form-control-active') _isFocus = false;\n\n    @HostBinding('class.disabled') disabled = false;\n\n    constructor(private ngZone: NgZone) {}\n\n    ngOnInit() {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n            if (this.isPassword(this.type)) {\n                this.appendTemplate = this.eyeTemplate;\n            }\n        });\n    }\n\n    writeValue(value: any): void {\n        this.value = value;\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onModelChange() {\n        this.onChangeCallback(this.value);\n    }\n\n    onInputFocus(event: Event) {\n        this._isFocus = true;\n        this.showLabel = true;\n        this.focus.emit(event);\n    }\n\n    onInputBlur(event: Event) {\n        this._isFocus = false;\n        this.showLabel = false;\n        this.blur.emit(event);\n    }\n\n    isPassword(value: string) {\n        return value === password;\n    }\n\n    togglePasswordType() {\n        this.type = this.isPassword(this.type) ? 'text' : 'password';\n    }\n}\n","import { Component, HostBinding, Input, ContentChild, TemplateRef, ElementRef, ViewEncapsulation } from '@angular/core';\nimport { ThyTranslate, UpdateHostClassService } from 'ngx-tethys/core';\n\nexport type InputGroupSize = 'sm' | 'lg' | '';\n\nconst inputGroupSizeMap = {\n    sm: ['input-group-sm'],\n    lg: ['input-group-lg']\n};\n\n@Component({\n    selector: 'thy-input-group',\n    templateUrl: './input-group.component.html',\n    providers: [UpdateHostClassService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyInputGroupComponent {\n    public appendText: string;\n\n    public prependText: string;\n\n    @HostBinding('class.thy-input-group') _isInputGroup = true;\n\n    @Input()\n    set thyAppendText(value: string) {\n        this.appendText = value;\n    }\n\n    @Input()\n    set thyAppendTextTranslateKey(value: string) {\n        if (value) {\n            this.appendText = this.thyTranslate.instant(value);\n        }\n    }\n\n    @Input()\n    set thyPrependText(value: string) {\n        this.prependText = value;\n    }\n\n    @Input()\n    set thyPrependTextTranslateKey(value: string) {\n        if (value) {\n            this.prependText = this.thyTranslate.instant(value);\n        }\n    }\n\n    @Input()\n    set thySize(size: InputGroupSize) {\n        if (size && inputGroupSizeMap[size]) {\n            this.updateHostClassService.updateClass(inputGroupSizeMap[size]);\n        } else {\n            this.updateHostClassService.updateClass([]);\n        }\n    }\n\n    @ContentChild('append') appendTemplate: TemplateRef<any>;\n\n    @ContentChild('prepend') prependTemplate: TemplateRef<any>;\n\n    constructor(\n        private thyTranslate: ThyTranslate,\n        private updateHostClassService: UpdateHostClassService,\n        private elementRef: ElementRef\n    ) {\n        this.updateHostClassService.initializeElement(elementRef.nativeElement);\n    }\n}\n","import { ChangeDetectorRef, Component, EventEmitter, forwardRef, HostBinding, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { InputSize } from './input.directive';\n\nexport type InputSearchTheme = 'ellipse' | '';\n\nexport const CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ThyInputSearchComponent),\n    multi: true\n};\n\nconst noop = () => {};\n\n@Component({\n    selector: 'thy-input-search',\n    templateUrl: './input-search.component.html',\n    providers: [UpdateHostClassService, CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyInputSearchComponent implements ControlValueAccessor {\n    public onTouchedCallback: () => void = noop;\n\n    private onChangeCallback: (_: any) => void = noop;\n\n    public disabled = false;\n\n    public autoFocus = false;\n\n    @HostBinding('class.input-search-container') _isSearchContainer = true;\n\n    @HostBinding('class.input-search-ellipse') _isSearchEllipse = false;\n\n    searchText: string;\n\n    @Input() name = '';\n\n    @Input() placeholder = '';\n\n    @Input()\n    set thyTheme(value: InputSearchTheme) {\n        if (value === 'ellipse') {\n            this._isSearchEllipse = true;\n        }\n    }\n\n    @Input()\n    set thySearchFocus(value: boolean) {\n        this.autoFocus = value;\n    }\n\n    @Input() thySize: InputSize;\n\n    @Output() clear: EventEmitter<Event> = new EventEmitter<Event>();\n\n    constructor(private cdr: ChangeDetectorRef) {}\n\n    writeValue(value: any): void {\n        this.searchText = value;\n        this.cdr.markForCheck();\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchedCallback = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    searchModelChange() {\n        this.onChangeCallback(this.searchText);\n    }\n\n    clearSearchText(event: Event) {\n        event.stopPropagation();\n        if (this.disabled) {\n            return;\n        }\n        this.searchText = '';\n        this.onChangeCallback(this.searchText);\n        this.clear.emit(event);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyInputDirective } from './input.directive';\nimport { ThyInputComponent } from './input.component';\nimport { ThyInputGroupComponent } from './input-group.component';\nimport { ThyInputSearchComponent } from './input-search.component';\nimport { FormsModule } from '@angular/forms';\nimport { ThySharedModule } from 'ngx-tethys/shared';\nimport { ThyIconModule } from 'ngx-tethys/icon';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ThySharedModule, ThyIconModule],\n    declarations: [ThyInputDirective, ThyInputComponent, ThyInputGroupComponent, ThyInputSearchComponent],\n    exports: [ThyInputDirective, ThyInputComponent, ThyInputGroupComponent, ThyInputSearchComponent]\n})\nexport class ThyInputModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}