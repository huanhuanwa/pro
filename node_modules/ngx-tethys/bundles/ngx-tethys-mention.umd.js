(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('ngx-tethys/popover'),require('ngx-tethys/loading'),require('@angular/common'),require('ngx-tethys/list'),require('ngx-tethys/shared'),require('@angular/forms'),exports, require('@angular/core'), require('@angular/common'), require('@angular/forms'), require('ngx-tethys/popover'), require('rxjs'), require('rxjs/operators'), require('ngx-tethys/util'), require('ngx-tethys/list'), require('ngx-tethys/loading')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/mention', ['@angular/core','ngx-tethys/popover','ngx-tethys/loading','@angular/common','ngx-tethys/list','ngx-tethys/shared','@angular/forms','exports', '@angular/core', '@angular/common', '@angular/forms', 'ngx-tethys/popover', 'rxjs', 'rxjs/operators', 'ngx-tethys/util', 'ngx-tethys/list', 'ngx-tethys/loading'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ngxTethys.popover,global.ngxTethys.loading,global.ng.common,global.ngxTethys.list,global.ngxTethys.shared,global.ng.forms,(global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].mention = {}), global.ng.core, global.ng.common, global.ng.forms, global['ngx-tethys'].popover, global.rxjs, global.rxjs.operators, global['ngx-tethys'].util, global['ngx-tethys'].list, global['ngx-tethys'].loading));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,exports, core, common, forms, popover, rxjs, operators, util, list, loading) { 
function ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_thy_list_option_1_ng_container_1_1_ng_template_0_Template(rf, ctx) { }
function ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_thy_list_option_1_ng_container_1_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_thy_list_option_1_ng_container_1_1_ng_template_0_Template, 0, 0, "ng-template");
} }
var _c0 = function (a0) { return { $implicit: a0 }; };
function ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_thy_list_option_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_thy_list_option_1_ng_container_1_1_Template, 1, 0, undefined, 9);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var item_r5 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r6 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r6.mention == null ? null : ctx_r6.mention.displayTemplateRef)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c0, item_r5));
} }
function ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_thy_list_option_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    var item_r5 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r5["name"] || "", " ");
} }
function ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_thy_list_option_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "thy-list-option", 6);
    ɵngcc0.ɵɵtemplate(1, ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_thy_list_option_1_ng_container_1_Template, 2, 4, "ng-container", 7);
    ɵngcc0.ɵɵtemplate(2, ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_thy_list_option_1_ng_template_2_Template, 1, 1, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r5 = ctx.$implicit;
    var _r7 = ɵngcc0.ɵɵreference(3);
    var ctx_r4 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("thyValue", item_r5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.mention == null ? null : ctx_r4.mention.displayTemplateRef)("ngIfElse", _r7);
} }
function ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "thy-selection-list", 4);
    ɵngcc0.ɵɵlistener("thySelectionChange", function ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_Template_thy_selection_list_thySelectionChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.selectionChange($event); });
    ɵngcc0.ɵɵtemplate(1, ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_thy_list_option_1_Template, 4, 3, "thy-list-option", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("thyScrollContainer", ctx_r3.elementRef);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.data);
} }
function ThyMentionSuggestionsComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ThyMentionSuggestionsComponent_ng_container_1_thy_selection_list_1_Template, 2, 2, "thy-selection-list", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    var _r1 = ɵngcc0.ɵɵreference(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r0.data == null ? null : ctx_r0.data.length) > 0)("ngIfElse", _r1);
} }
function ThyMentionSuggestionsComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.mention == null ? null : ctx_r2.mention.emptyText, " ");
} }
'use strict';

    var ThyMentionSuggestionsComponent = /** @class */ (function () {
        function ThyMentionSuggestionsComponent(elementRef, ngZone, popoverRef) {
            var _this = this;
            this.elementRef = elementRef;
            this.ngZone = ngZone;
            this.popoverRef = popoverRef;
            this.suggestionSelect$ = new rxjs.Subject();
            this.debounce = 150;
            this.loadingDone = true;
            this.search$ = new rxjs.Subject();
            this.suggestionsClass = true;
            this.search$
                .pipe(operators.switchMap(function (query) {
                var data = _this.mention.search(query.term, _this.mention.data);
                if (data instanceof rxjs.Observable) {
                    _this.loadingDone = false;
                    return data.pipe(operators.debounceTime(_this.debounce));
                }
                else {
                    return rxjs.of(data);
                }
            }), operators.catchError(function () {
                _this.loadingDone = false;
                return [];
            }))
                .subscribe(function (data) {
                _this.loadingDone = true;
                _this.data = data || [];
                if (_this.popoverRef) {
                    if (_this.mention.autoClose && _this.data.length === 0) {
                        _this.popoverRef.close();
                    }
                    _this.ngZone.onStable.pipe(operators.take(1)).subscribe(function () {
                        _this.popoverRef.updatePosition();
                    });
                }
            });
        }
        ThyMentionSuggestionsComponent.prototype.ngOnInit = function () {
            if (this.mention.popoverClass) {
                this.elementRef.nativeElement.classList.add(this.mention.popoverClass);
            }
        };
        ThyMentionSuggestionsComponent.prototype.search = function (query) {
            this.search$.next(query);
        };
        ThyMentionSuggestionsComponent.prototype.select = function (item, event) {
            this.suggestionSelect$.next({
                event: event,
                item: item
            });
        };
        ThyMentionSuggestionsComponent.prototype.selectionChange = function (event) {
            this.select(event.value, event.event);
        };
        ThyMentionSuggestionsComponent.prototype.ngOnDestroy = function () {
            this.search$.next();
            this.search$.complete();
        };
ThyMentionSuggestionsComponent.ɵfac = function ThyMentionSuggestionsComponent_Factory(t) { return new (t || ThyMentionSuggestionsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyPopoverRef)); };
ThyMentionSuggestionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyMentionSuggestionsComponent, selectors: [["thy-mention-suggestions"]], hostVars: 2, hostBindings: function ThyMentionSuggestionsComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-mention-suggestions", ctx.suggestionsClass);
    } }, decls: 4, vars: 2, consts: [[3, "thyDone"], [4, "ngIf"], ["empty", ""], ["thyBindKeyEventContainer", "body", "thyMultiple", "false", "thyAutoActiveFirstItem", "true", "thySpaceKeyEnabled", "false", 3, "thyScrollContainer", "thySelectionChange", 4, "ngIf", "ngIfElse"], ["thyBindKeyEventContainer", "body", "thyMultiple", "false", "thyAutoActiveFirstItem", "true", "thySpaceKeyEnabled", "false", 3, "thyScrollContainer", "thySelectionChange"], [3, "thyValue", 4, "ngFor", "ngForOf"], [3, "thyValue"], [4, "ngIf", "ngIfElse"], ["default", ""], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "text-desc", "p-3"]], template: function ThyMentionSuggestionsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "thy-loading", 0);
        ɵngcc0.ɵɵtemplate(1, ThyMentionSuggestionsComponent_ng_container_1_Template, 2, 2, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(2, ThyMentionSuggestionsComponent_ng_template_2_Template, 2, 1, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("thyDone", ctx.loadingDone);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.loadingDone);
    } }, directives: [ɵngcc2.ThyLoadingComponent, ɵngcc3.NgIf, ɵngcc4.ThySelectionListComponent, ɵngcc3.NgForOf, ɵngcc5.ThyListOptionComponent, ɵngcc3.NgTemplateOutlet], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyMentionSuggestionsComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-mention-suggestions',
                template: "<thy-loading [thyDone]=\"loadingDone\"></thy-loading>\n<ng-container *ngIf=\"loadingDone\">\n  <thy-selection-list\n    *ngIf=\"data?.length > 0; else empty\"\n    thyBindKeyEventContainer=\"body\"\n    thyMultiple=\"false\"\n    thyAutoActiveFirstItem=\"true\"\n    thySpaceKeyEnabled=\"false\"\n    [thyScrollContainer]=\"elementRef\"\n    (thySelectionChange)=\"selectionChange($event)\"\n  >\n    <thy-list-option *ngFor=\"let item of data\" [thyValue]=\"item\">\n      <ng-container *ngIf=\"mention?.displayTemplateRef; else default\">\n        <ng-template *ngTemplateOutlet=\"mention?.displayTemplateRef; context: { $implicit: item }\"></ng-template>\n      </ng-container>\n      <ng-template #default>\n        {{ item['name'] || '' }}\n      </ng-template>\n    </thy-list-option>\n  </thy-selection-list>\n</ng-container>\n<ng-template #empty>\n  <div class=\"text-desc p-3\">\n    {{ mention?.emptyText }}\n  </div>\n</ng-template>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.ThyPopoverRef }]; }, { suggestionsClass: [{
            type: core.HostBinding,
            args: ['class.thy-mention-suggestions']
        }] }); })();
        return ThyMentionSuggestionsComponent;
    }());
    ThyMentionSuggestionsComponent.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: core.NgZone },
        { type: popover.ThyPopoverRef }
    ]; };
    ThyMentionSuggestionsComponent.propDecorators = {
        suggestionsClass: [{ type: core.HostBinding, args: ['class.thy-mention-suggestions',] }]
    };

    // We'll copy the properties below into the mirror div.
    // Note that some browsers, such as Firefox, do not concatenate properties
    // into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),
    // so we have to list every single property explicitly.
    var properties = [
        'direction',
        'boxSizing',
        'width',
        'height',
        'overflowX',
        'overflowY',
        'borderTopWidth',
        'borderRightWidth',
        'borderBottomWidth',
        'borderLeftWidth',
        'borderStyle',
        'paddingTop',
        'paddingRight',
        'paddingBottom',
        'paddingLeft',
        // https://developer.mozilla.org/en-US/docs/Web/CSS/font
        'fontStyle',
        'fontVariant',
        'fontWeight',
        'fontStretch',
        'fontSize',
        'fontSizeAdjust',
        'lineHeight',
        'fontFamily',
        'textAlign',
        'textTransform',
        'textIndent',
        'textDecoration',
        'letterSpacing',
        'wordSpacing',
        'tabSize',
        'MozTabSize'
    ];
    var isBrowser = typeof window !== 'undefined';
    var isFirefox = isBrowser && window['mozInnerScreenX'] != null;
    var CaretPositioner = /** @class */ (function () {
        function CaretPositioner() {
        }
        // get caret coordinates in input or textarea
        // copy from repo: https://github.com/component/textarea-caret-position
        CaretPositioner.getTextareaCaretCoordinates = function (element, position, options) {
            if (!isBrowser) {
                throw new Error('textarea-caret-position#getCaretCoordinates should only be called in a browser');
            }
            var debug = (options && options.debug) || false;
            if (debug) {
                var el = document.querySelector('#input-textarea-caret-position-mirror-div');
                if (el) {
                    el.parentNode.removeChild(el);
                }
            }
            // The mirror div will replicate the textarea's style
            var div = document.createElement('div');
            div.id = 'input-textarea-caret-position-mirror-div';
            document.body.appendChild(div);
            var style = div.style;
            var computed = window.getComputedStyle ? window.getComputedStyle(element) : element['currentStyle']; // currentStyle for IE < 9
            var isInput = element.nodeName === 'INPUT';
            // Default textarea styles
            style.whiteSpace = 'pre-wrap';
            if (!isInput) {
                style.wordWrap = 'break-word'; // only for textarea-s
            }
            // Position off-screen
            style.position = 'absolute'; // required to return coordinates properly
            if (!debug) {
                style.visibility = 'hidden'; // not 'display: none' because we want rendering
            }
            // Transfer the element's properties to the div
            properties.forEach(function (prop) {
                if (isInput && prop === 'lineHeight') {
                    // Special case for <input>s because text is rendered centered and line height may be != height
                    if (computed.boxSizing === 'border-box') {
                        var height = parseInt(computed.height, 10);
                        var outerHeight = parseInt(computed.paddingTop, 10) +
                            parseInt(computed.paddingBottom, 10) +
                            parseInt(computed.borderTopWidth, 10) +
                            parseInt(computed.borderBottomWidth, 10);
                        var targetHeight = outerHeight + parseInt(computed.lineHeight, 10);
                        if (height > targetHeight) {
                            style.lineHeight = height - outerHeight + 'px';
                        }
                        else if (height === targetHeight) {
                            style.lineHeight = computed.lineHeight;
                        }
                        else {
                            style.lineHeight = '0';
                        }
                    }
                    else {
                        style.lineHeight = computed.height;
                    }
                }
                else {
                    style[prop] = computed[prop];
                }
            });
            if (isFirefox) {
                // Firefox lies about the overflow property for textareas: https://bugzilla.mozilla.org/show_bug.cgi?id=984275
                if (element.scrollHeight > parseInt(computed.height, 10)) {
                    style.overflowY = 'scroll';
                }
            }
            else {
                style.overflow = 'hidden'; // for Chrome to not render a scrollbar; IE keeps overflowY = 'scroll'
            }
            div.textContent = element.value.substring(0, position);
            // The second special handling for input type="text" vs textarea:
            // spaces need to be replaced with non-breaking spaces - http://stackoverflow.com/a/13402035/1269037
            if (isInput) {
                div.textContent = div.textContent.replace(/\s/g, '\u00a0');
            }
            var span = document.createElement('span');
            // Wrapping must be replicated *exactly*, including when a long word gets
            // onto the next line, with whitespace at the end of the line before (#7).
            // The  *only* reliable way to do that is to copy the *entire* rest of the
            // textarea's content into the <span> created at the caret position.
            // For inputs, just '.' would be enough, but no need to bother.
            span.textContent = element.value.substring(position) || '.'; // || because a completely empty faux span doesn't render at all
            div.appendChild(span);
            var coordinates = {
                top: span.offsetTop + parseInt(computed['borderTopWidth'], 10),
                left: span.offsetLeft + parseInt(computed['borderLeftWidth'], 10),
                height: parseInt(computed['lineHeight'], 10)
            };
            if (debug) {
                span.style.backgroundColor = '#aaa';
            }
            else {
                document.body.removeChild(div);
            }
            return coordinates;
        };
        CaretPositioner.getEditableCaretCoordinates = function (element) {
            if (window.getSelection().rangeCount) {
                var range = window.getSelection().getRangeAt(0);
                var rect = range.getBoundingClientRect();
                // using the start or endcontainer is... uhm yeah... difficult...? :D
                var height = range.startContainer.nodeType === 1
                    ? getComputedStyle(range.startContainer).lineHeight
                    : getComputedStyle(range.startContainer.parentNode).lineHeight;
                if (isNaN(height)) {
                    var node = range.startContainer;
                    if (range.startContainer.nodeType !== 1) {
                        node = node.parentNode;
                    }
                    var current = node.style.lineHeight;
                    node.style.lineHeight = '1em';
                    height = parseInt(getComputedStyle(node).lineHeight, 10);
                    node.style.lineHeight = current != null ? current : '';
                    if (!node.getAttribute('style').length) {
                        // clean up if empty
                        node.removeAttribute('style');
                    }
                }
                var editableRect = element.getBoundingClientRect();
                return {
                    top: rect.top - editableRect.top,
                    left: rect.left - editableRect.left,
                    height: height
                };
            }
            else {
                return {
                    top: 0,
                    left: 0,
                    height: 0
                };
            }
        };
        CaretPositioner.getCaretCoordinates = function (element, position, options) {
            var isInput = ['INPUT', 'TEXTAREA'].indexOf(element.nodeName) >= 0;
            if (isInput) {
                return this.getTextareaCaretCoordinates(element, position, options);
            }
            else {
                return this.getEditableCaretCoordinates(element);
            }
        };
        // get caret position in view window
        CaretPositioner.getCaretPosition = function (element, position, options) {
            var coordinates = CaretPositioner.getCaretCoordinates(element, position, options);
            var elementOffset = util.getElementOffset(element);
            return {
                top: coordinates.top + elementOffset.top,
                left: coordinates.left + elementOffset.left
            };
        };
        return CaretPositioner;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var MentionAdapter = /** @class */ (function () {
        function MentionAdapter(inputor) {
            this.inputor = inputor;
        }
        MentionAdapter.prototype.lookup = function (event, mentions) {
            var e_1, _a;
            this.matchedMention = null;
            try {
                for (var mentions_1 = __values(mentions), mentions_1_1 = mentions_1.next(); !mentions_1_1.done; mentions_1_1 = mentions_1.next()) {
                    var mention = mentions_1_1.value;
                    var query = this.seekQuery(event, mention);
                    if (query) {
                        this.matchedMention = {
                            query: query,
                            mention: mention
                        };
                        break;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (mentions_1_1 && !mentions_1_1.done && (_a = mentions_1.return)) _a.call(mentions_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            return this.matchedMention;
        };
        return MentionAdapter;
    }());

    var TextareaMentionAdapter = /** @class */ (function (_super) {
        __extends(TextareaMentionAdapter, _super);
        function TextareaMentionAdapter(inputor) {
            return _super.call(this, inputor) || this;
        }
        TextareaMentionAdapter.prototype.seekQuery = function (event, mention) {
            var selectionStart = this.inputor.selectionStart;
            var value = this.inputor.value.replace(/[\r\n]/g, ' ');
            // @123 | @456 => 0(start) => @123
            // @123 @456 | => 5(start) => @456
            var start = value.lastIndexOf(mention.trigger, selectionStart);
            var fistSpaceIndexFromStart = value.indexOf(' ', selectionStart);
            var end = fistSpaceIndexFromStart > -1 ? fistSpaceIndexFromStart : value.length;
            var termWithTrigger = value.substring(start, end);
            var startBeforeHasSpace = start > 0 && value[start - 1] === ' ';
            if ((startBeforeHasSpace || start === 0) && !termWithTrigger.includes(' ') && !termWithTrigger.includes(mention.trigger, 1)) {
                return {
                    start: start,
                    end: end,
                    term: termWithTrigger.substring(mention.trigger.length)
                };
            }
            else {
                return null;
            }
        };
        TextareaMentionAdapter.prototype.insertMention = function (item) {
            if (!this.matchedMention) {
                throw new Error("matchedMention is null");
            }
            var insertValue = this.getInsertValue(item);
            var value = this.inputor.value;
            var newValue = [
                value.slice(0, this.matchedMention.query.start),
                insertValue,
                value.slice(this.matchedMention.query.end, value.length)
            ].join('');
            this.inputor.value = newValue;
            this.focus(this.matchedMention.query.start + insertValue.length);
            return newValue;
        };
        TextareaMentionAdapter.prototype.getInsertValue = function (item) {
            if (this.matchedMention.mention.insertTransform) {
                return this.matchedMention.mention.insertTransform(item).trim() + ' ';
            }
            else {
                return ("" + this.matchedMention.mention.trigger + item['name']).trim() + ' ';
            }
        };
        TextareaMentionAdapter.prototype.focus = function (caretPosition) {
            this.inputor.focus();
            this.inputor.setSelectionRange(caretPosition, caretPosition);
        };
        TextareaMentionAdapter.prototype.isEditable = function () {
            return !this.inputor.readOnly && !this.inputor.disabled;
        };
        return TextareaMentionAdapter;
    }(MentionAdapter));

    var EditableMentionAdapter = /** @class */ (function (_super) {
        __extends(EditableMentionAdapter, _super);
        function EditableMentionAdapter(inputor) {
            return _super.call(this, inputor) || this;
        }
        EditableMentionAdapter.prototype.seekQuery = function (event, mention) {
            return null;
        };
        EditableMentionAdapter.prototype.insertMention = function (item) {
            throw new Error('Method not implemented.');
        };
        return EditableMentionAdapter;
    }(MentionAdapter));

    function createMentionAdapter(element) {
        if (util.isInputOrTextarea(element)) {
            return new TextareaMentionAdapter(element);
        }
        else {
            element.contentEditable = 'true';
            return new EditableMentionAdapter(element);
        }
    }

    var SUGGESTION_BACKDROP_CLASS = 'thy-mention-suggestions-backdrop';
    var POPOVER_DEFAULT_CONFIG = {
        backdropClass: SUGGESTION_BACKDROP_CLASS,
        placement: 'bottomLeft'
    };
    var ɵ0 = function (term, data) {
        return data.filter(function (item) {
            return !item.name || item.name.toLowerCase().includes(term.toLowerCase());
        });
    };
    var DEFAULT_MENTION_CONFIG = {
        autoClose: true,
        emptyText: '无匹配数据，按空格完成输入',
        search: ɵ0
    };
    var ThyMentionDirective = /** @class */ (function () {
        function ThyMentionDirective(elementRef, thyPopover, ngControl) {
            this.elementRef = elementRef;
            this.thyPopover = thyPopover;
            this.ngControl = ngControl;
            this.adapter = null;
            this.select = new core.EventEmitter();
            this.adapter = createMentionAdapter(elementRef.nativeElement);
            this.bindEvents();
        }
        Object.defineProperty(ThyMentionDirective.prototype, "mentions", {
            get: function () {
                return this._mentions;
            },
            set: function (value) {
                this._mentions = value;
                if (this._mentions) {
                    this._mentions = this._mentions.map(function (mention) {
                        if (!mention.trigger) {
                            throw new Error("mention trigger is required");
                        }
                        return Object.assign({}, DEFAULT_MENTION_CONFIG, mention);
                    });
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyMentionDirective.prototype.ngOnInit = function () { };
        ThyMentionDirective.prototype.bindEvents = function () {
            var _this = this;
            this.elementRef.nativeElement.addEventListener('input', function (event) {
                _this.onInput(event);
            });
            this.elementRef.nativeElement.addEventListener('click', function (event) {
                _this.onClick(event);
            });
        };
        ThyMentionDirective.prototype.onClick = function (event) {
            this.lookup(event);
        };
        ThyMentionDirective.prototype.onInput = function (event) {
            this.lookup(event);
        };
        ThyMentionDirective.prototype.lookup = function (event) {
            var matched = this.adapter.lookup(event, this.mentions);
            if (matched) {
                this.openSuggestions(matched);
            }
            else {
                this.closeSuggestions();
            }
        };
        ThyMentionDirective.prototype.openSuggestions = function (matched) {
            var _this = this;
            if (!this.openedSuggestionsRef) {
                var inputElement = this.elementRef.nativeElement;
                var position = CaretPositioner.getCaretPosition(inputElement, matched.query.start);
                var fontSize = parseInt(getComputedStyle(this.elementRef.nativeElement).fontSize, 10);
                this.openedSuggestionsRef = this.thyPopover.open(ThyMentionSuggestionsComponent, Object.assign({}, POPOVER_DEFAULT_CONFIG, this.popoverConfig, {
                    origin: this.elementRef,
                    originPosition: {
                        x: position.left,
                        y: position.top,
                        width: fontSize,
                        height: fontSize
                    },
                    initialState: {
                        mention: matched.mention
                    }
                }));
                this.openedSuggestionsRef.afterClosed().subscribe(function () {
                    _this.openedSuggestionsRef = null;
                });
                this.openedSuggestionsRef.componentInstance.suggestionSelect$.subscribe(function (event) {
                    var newValue = _this.adapter.insertMention(event.item);
                    if (_this.ngControl && _this.ngControl.control) {
                        _this.ngControl.control.setValue(newValue);
                    }
                    _this.openedSuggestionsRef.close();
                    _this.select.emit(event);
                });
            }
            if (this.openedSuggestionsRef) {
                this.openedSuggestionsRef.componentInstance.search(matched.query);
            }
        };
        ThyMentionDirective.prototype.closeSuggestions = function () {
            if (this.openedSuggestionsRef) {
                this.openedSuggestionsRef.close();
            }
        };
        ThyMentionDirective.prototype.isEditable = function () {
            var element = this.elementRef.nativeElement;
            return !element.readOnly && !element.disabled;
        };
ThyMentionDirective.ɵfac = function ThyMentionDirective_Factory(t) { return new (t || ThyMentionDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyPopover), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.NgControl, 10)); };
ThyMentionDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyMentionDirective, selectors: [["", "thyMention", ""]], inputs: { mentions: ["thyMention", "mentions"], popoverConfig: ["thyPopoverConfig", "popoverConfig"] }, outputs: { select: "thySelectSuggestion" }, features: [ɵngcc0.ɵɵProvidersFeature([])] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyMentionDirective, [{
        type: core.Directive,
        args: [{
                selector: '[thyMention]',
                providers: []
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.ThyPopover }, { type: ɵngcc6.NgControl, decorators: [{
                type: core.Optional
            }, {
                type: core.Self
            }] }]; }, { select: [{
            type: core.Output,
            args: ['thySelectSuggestion']
        }], mentions: [{
            type: core.Input,
            args: ['thyMention']
        }], popoverConfig: [{
            type: core.Input,
            args: ['thyPopoverConfig']
        }] }); })();
        return ThyMentionDirective;
    }());
    ThyMentionDirective.ctorParameters = function () { return [
        { type: core.ElementRef },
        { type: popover.ThyPopover },
        { type: forms.NgControl, decorators: [{ type: core.Optional }, { type: core.Self }] }
    ]; };
    ThyMentionDirective.propDecorators = {
        mentions: [{ type: core.Input, args: ['thyMention',] }],
        popoverConfig: [{ type: core.Input, args: ['thyPopoverConfig',] }],
        select: [{ type: core.Output, args: ['thySelectSuggestion',] }]
    };

    var ThyMentionModule = /** @class */ (function () {
        function ThyMentionModule() {
        }
ThyMentionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyMentionModule });
ThyMentionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyMentionModule_Factory(t) { return new (t || ThyMentionModule)(); }, providers: [], imports: [[common.CommonModule, forms.FormsModule, popover.ThyPopoverModule, list.ThyListModule, loading.ThyLoadingModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyMentionModule, { declarations: [ThyMentionDirective, ThyMentionSuggestionsComponent], imports: [ɵngcc3.CommonModule, ɵngcc6.FormsModule, ɵngcc1.ThyPopoverModule, ɵngcc4.ThyListModule, ɵngcc2.ThyLoadingModule], exports: [ThyMentionDirective] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyMentionModule, [{
        type: core.NgModule,
        args: [{
                declarations: [ThyMentionDirective, ThyMentionSuggestionsComponent],
                imports: [common.CommonModule, forms.FormsModule, popover.ThyPopoverModule, list.ThyListModule, loading.ThyLoadingModule],
                exports: [ThyMentionDirective],
                providers: [],
                entryComponents: [ThyMentionSuggestionsComponent]
            }]
    }], function () { return []; }, null); })();
        return ThyMentionModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ThyMentionDirective = ThyMentionDirective;
    exports.ThyMentionModule = ThyMentionModule;
    exports.ThyMentionSuggestionsComponent = ThyMentionSuggestionsComponent;
    exports.ɵ0 = ɵ0;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-tethys-mention.umd.js.map