{"version":3,"sources":["../../src/switch/switch.component.ts","../../src/switch/switch.module.ts"],"names":["ThySwitchComponent","this","type","size","disabled","typeArray","sizeArray","initialized","thyChange","EventEmitter","onModelChange","onModelTouched","Object","defineProperty","prototype","value","includes","setClassNames","ngOnInit","ngOnChanges","changes","thyDisabled","currentValue","helpers","isBoolean","Boolean","writeValue","model","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","toggle","event","emit","classNames","push","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ViewChild","static","Input","Output","NgModule","declarations","entryComponents","imports","CommonModule","exports"],"mappings":"mjBA4DI,SAAAA,IA1COC,KAAAC,KAAgB,UAEhBD,KAAAE,KAAgB,GAEhBF,KAAAG,UAAqB,EAIrBH,KAAAI,UAAsB,CAAC,UAAW,OAAQ,UAAW,UAErDJ,KAAAK,UAAsB,CAAC,KAAM,GAAI,MAEhCL,KAAAM,aAAc,EA4BZN,KAAAO,UAAiC,IAAIC,EAAAA,aAkBxCR,KAAAS,cAA0B,aAE1BT,KAAAU,eAA2B,oBA5ClCC,OAAAC,eACIb,EAAAc,UAAA,UAAO,KADX,SACYC,GACHd,KAAKI,UAAUW,SAASD,KACzBA,EAAQ,WAEZd,KAAKC,KAAOa,EACRd,KAAKM,aACLN,KAAKgB,iDAIbL,OAAAC,eACIb,EAAAc,UAAA,UAAO,KADX,SACYC,GACHd,KAAKK,UAAUU,SAASD,KACzBA,EAAQ,IAEZd,KAAKE,KAAOY,EACRd,KAAKM,aACLN,KAAKgB,iDAUbjB,EAAAc,UAAAI,SAAA,WACIjB,KAAKgB,gBACLhB,KAAKM,aAAc,GAGvBP,EAAAc,UAAAK,YAAA,SAAYC,GAER,GAAIA,EAAQC,YAAa,CACrB,IAAMN,EAAQK,EAAQC,YAAYC,aAClCrB,KAAKG,SAAWmB,EAAAA,QAAQC,UAAUT,GAASU,QAAQV,GAAmB,SAAVA,GAA8B,MAAVA,EAChFd,KAAKgB,kBAQbjB,EAAAc,UAAAY,WAAA,SAAWX,GACPd,KAAK0B,MAAQZ,GAIjBf,EAAAc,UAAAc,iBAAA,SAAiBC,GACb5B,KAAKS,cAAgBmB,GAGzB7B,EAAAc,UAAAgB,kBAAA,SAAkBD,GACd5B,KAAKU,eAAiBkB,GAG1B7B,EAAAc,UAAAiB,iBAAA,SAAiBC,GACb/B,KAAKG,SAAW4B,EAChB/B,KAAKgB,iBAGTjB,EAAAc,UAAAmB,OAAA,SAAOC,GACHjC,KAAK0B,OAAS1B,KAAK0B,MACnB1B,KAAKS,cAAcT,KAAK0B,OACxB1B,KAAKO,UAAU2B,KAAKD,IAGxBlC,EAAAc,UAAAG,cAAA,WACIhB,KAAKmC,WAAa,CAAC,cAAcnC,KAAKC,MAClCD,KAAKE,MACLF,KAAKmC,WAAWC,KAAK,cAAcpC,KAAKE,MAExCF,KAAKG,WACLH,KAAKmC,WAAWC,KAAK,uBACjBpC,KAAK0B,OACL1B,KAAKmC,WAAWC,KAAK,uDA5GpCC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,aACVC,SAAA,uRACAC,UAAW,CACP,CACIC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,YAAW,WAAM,OAAA9C,KAC9B+C,OAAO,wFAqBdC,EAAAA,UAAST,KAAA,CAAC,SAAU,CAAEU,QAAQ,qBAE9BC,EAAAA,uBAWAA,EAAAA,2BAWAA,EAAAA,yBAEAC,EAAAA,gBCxCL,iCAdCC,EAAAA,SAAQb,KAAA,CAAC,CACNc,aAAc,CACVrD,GAEJsD,gBAAiB,CACbtD,GAEJuD,QAAS,CACLC,EAAAA,cAEJC,QAAS,CACLzD","sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, forwardRef, ElementRef, ViewChild, OnChanges, SimpleChanges } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { helpers } from 'ngx-tethys/util';\n\n@Component({\n    selector: 'thy-switch',\n    templateUrl: './switch.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThySwitchComponent),\n            multi: true\n        }\n    ]\n})\nexport class ThySwitchComponent implements OnInit, ControlValueAccessor, OnChanges {\n    public model: boolean;\n\n    public type?: String = 'primary';\n\n    public size?: String = '';\n\n    public disabled?: Boolean = false;\n\n    public classNames: string[];\n\n    public typeArray: string[] = ['primary', 'info', 'warning', 'danger'];\n\n    public sizeArray: string[] = ['lg', '', 'sm'];\n\n    private initialized = false;\n\n    @ViewChild('switch', { static: true }) switchElementRef: ElementRef;\n\n    @Input()\n    set thyType(value: string) {\n        if (!this.typeArray.includes(value)) {\n            value = 'primary';\n        }\n        this.type = value;\n        if (this.initialized) {\n            this.setClassNames();\n        }\n    }\n\n    @Input()\n    set thySize(value: string) {\n        if (!this.sizeArray.includes(value)) {\n            value = '';\n        }\n        this.size = value;\n        if (this.initialized) {\n            this.setClassNames();\n        }\n    }\n\n    @Input() thyDisabled: boolean;\n\n    @Output() thyChange: EventEmitter<Event> = new EventEmitter<Event>();\n\n    constructor() {}\n\n    ngOnInit() {\n        this.setClassNames();\n        this.initialized = true;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // 兼容降级后的Switch，使用onChanges\n        if (changes.thyDisabled) {\n            const value = changes.thyDisabled.currentValue;\n            this.disabled = helpers.isBoolean(value) ? Boolean(value) : value === 'true' || value === '1';\n            this.setClassNames();\n        }\n    }\n\n    public onModelChange: Function = () => {};\n\n    public onModelTouched: Function = () => {};\n\n    writeValue(value: boolean) {\n        this.model = value;\n        // this.setClassNames();\n    }\n\n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n\n    setDisabledState(isDisabled: Boolean) {\n        this.disabled = isDisabled;\n        this.setClassNames();\n    }\n\n    toggle(event: Event) {\n        this.model = !this.model;\n        this.onModelChange(this.model);\n        this.thyChange.emit(event);\n    }\n\n    setClassNames() {\n        this.classNames = [`thy-switch-${this.type}`];\n        if (this.size) {\n            this.classNames.push(`thy-switch-${this.size}`);\n        }\n        if (this.disabled) {\n            this.classNames.push(`thy-switch-disabled`);\n            if (this.model) {\n                this.classNames.push(`thy-switch-disabled-true`);\n            }\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThySwitchComponent } from './switch.component';\n\n@NgModule({\n    declarations: [\n        ThySwitchComponent\n    ],\n    entryComponents: [\n        ThySwitchComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        ThySwitchComponent\n    ]\n})\nexport class ThySwitchModule {\n\n}\n"]}