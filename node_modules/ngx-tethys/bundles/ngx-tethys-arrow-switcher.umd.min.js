!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("ngx-tethys/button"),require("@angular/forms")):"function"==typeof define&&define.amd?define("ngx-tethys/arrow-switcher",["exports","@angular/core","@angular/common","ngx-tethys/button","@angular/forms"],e):e(((t="undefined"!=typeof globalThis?globalThis:t||self)["ngx-tethys"]=t["ngx-tethys"]||{},t["ngx-tethys"]["arrow-switcher"]={}),t.ng.core,t.ng.common,t["ngx-tethys"].button,t.ng.forms)}(this,(function(t,e,i,n,o){"use strict";var s=function(){function t(t){this.cd=t,this._isArrowSwitcher=!0,this._isSmallSize=!1,this.thyPrevious=new e.EventEmitter,this.thyNext=new e.EventEmitter,this.index=0,this.disabled=!1,this.previousDisabled=!1,this.nextDisabled=!1}return Object.defineProperty(t.prototype,"thyTotal",{set:function(t){t&&(this.total=t,this.getDisabled())},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"thySize",{set:function(t){"sm"===t&&(this._isSmallSize=!0)},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.writeValue=function(t){t>=0&&(this.index=t,this.getDisabled()),this.cd.markForCheck()},t.prototype.registerOnChange=function(t){this.onModelChange=t},t.prototype.registerOnTouched=function(t){this.onModelTouched=t},t.prototype.setDisabledState=function(t){this.disabled=t},t.prototype.getDisabled=function(){this.previousDisabled=this.index<=0||this.disabled,this.nextDisabled=this.index>=this.total-1||this.disabled},t.prototype.onPreviousClick=function(t){this.index--,this.onModelChange(this.index),this.getDisabled(),this.thyPrevious.emit({index:this.index,event:t})},t.prototype.onNextClick=function(t){this.index++,this.onModelChange(this.index),this.getDisabled(),this.thyNext.emit({index:this.index,event:t})},t}();s.decorators=[{type:e.Component,args:[{selector:"thy-arrow-switcher",template:'<div class="switcher-wrapper">\n  <button thyButtonIcon="angle-left" [disabled]="previousDisabled" (click)="onPreviousClick($event)"></button>\n  <span>{{ index + 1 }} / {{ total }}</span>\n  <button thyButtonIcon="angle-right" [disabled]="nextDisabled" (click)="onNextClick($event)"></button>\n</div>\n',changeDetection:e.ChangeDetectionStrategy.OnPush,providers:[{provide:o.NG_VALUE_ACCESSOR,useExisting:e.forwardRef((function(){return s})),multi:!0}]}]}],s.ctorParameters=function(){return[{type:e.ChangeDetectorRef}]},s.propDecorators={_isArrowSwitcher:[{type:e.HostBinding,args:["class.thy-arrow-switcher"]}],_isSmallSize:[{type:e.HostBinding,args:["class.thy-arrow-switcher-small"]}],thyPrevious:[{type:e.Output}],thyNext:[{type:e.Output}],thyTotal:[{type:e.Input}],thySize:[{type:e.Input}]};var r=function(){};r.decorators=[{type:e.NgModule,args:[{declarations:[s],imports:[i.CommonModule,n.ThyButtonModule],exports:[s]}]}],t.ThyArrowSwitcherComponent=s,t.ThyArrowSwitcherModule=r,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-tethys-arrow-switcher.umd.min.js.map