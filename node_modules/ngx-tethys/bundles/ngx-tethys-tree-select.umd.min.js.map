{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../../src/tree-select/tree-select.component.ts","../../src/tree-select/tree-select-nodes.component.ts","../../src/tree-select/module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","filterTreeData","treeNodes","searchText","searchKey","filterNodes","node","result","indexOf","Array","isArray","children","nodes","reduce","previous","current","parentNode","assign","expand","ThyTreeSelectComponent","elementRef","renderer","ngZone","this","treeSelectClass","isTreeSelect","expandTreeSelectOptions","isMulti","selectedNodes","flattenTreeNodes","cdkConnectOverlayWidth","icons","collapse","gap","initialled","valueIsObject","thyPrimaryKey","thyShowKey","thyChildCountKey","thyMultiple","thyDisable","thyPlaceholder","thyEmptyOptionsText","thyHiddenNodeKey","thyDisableNodeKey","thyAsyncNode","thyShowWholeName","thyShowSearch","thyHiddenNodeFn","hidden","thyDisableNodeFn","disabled","thyGetNodeChildren","of","onModelChange","onModelTouch","defineProperty","prototype","originTreeNodes","flattenNodes","setSelectedNodes","type","warnDeprecation","_getNgModelType","selectedValue","isObject","writeValue","registerOnChange","fn","registerOnTouched","onDocumentClick","event","stopPropagation","nativeElement","contains","target","ngOnInit","positions","getFlexiblePositions","init","selectedNode","searchValue","trim","setPosition","_this","onStable","asObservable","pipe","take","subscribe","cdkConnectedOverlay","overlayRef","updatePosition","cdkOverlayOrigin","getBoundingClientRect","width","resultNodes","parentPrimaryValue","nodesLeafs","forEach","item","parentValues","level","nodeLeafs","_findTreeNode","find","getShowNodeName","wholeName_1","index","keys","map","openSelectPop","close","clearSelectedValue","_changeSelectValue","removeMultipleSelectedNode","removeSelectedNode","$event","produce","remove","selectNode","add","getNodeChildren","data","otherNodes","filter","hasItem","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ElementRef","Renderer2","NgZone","HostBinding","ContentChild","ViewChild","CdkOverlayOrigin","static","CdkConnectedOverlay","Input","HostListener","ThyTreeSelectNodesComponent","parent","primaryKey","showKey","isMultiple","childCountKey","treeNodeTemplateRef","class","treeNodeIsSelected","treeNodeIsHidden","treeNodeIsDisable","treeNodeIsExpand","isSelectedNodeParent","isExpand","selectTreeNode","nodeExpandToggle","NgModule","imports","CommonModule","FormsModule","OverlayModule","ThyLabelModule","ThyListModule","ThyIconModule","ThyEmptyModule","ThySelectCommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { getFlexiblePositions } from 'ngx-tethys/core';\nimport { ThyTreeNode } from 'ngx-tethys/tree';\nimport { isArray, isObject, produce, warnDeprecation } from 'ngx-tethys/util';\nimport { Observable, of } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectionPositionPair } from '@angular/cdk/overlay';\nimport {\n    Component,\n    ContentChild,\n    ElementRef,\n    forwardRef,\n    HostBinding,\n    HostListener,\n    Input,\n    NgZone,\n    OnInit,\n    Renderer2,\n    TemplateRef,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { ThyTreeSelectNode, ThyTreeSelectType } from './tree-select.class';\n\ntype InputSize = 'xs' | 'sm' | 'md' | 'lg' | '';\n\nexport function filterTreeData(treeNodes: ThyTreeSelectNode[], searchText: string, searchKey: string = 'name') {\n    const filterNodes = (node: ThyTreeSelectNode, result: ThyTreeSelectNode[]) => {\n        if (node[searchKey] && node[searchKey].indexOf(searchText) !== -1) {\n            result.push(node);\n            return result;\n        }\n        if (Array.isArray(node.children)) {\n            const nodes = node.children.reduce((previous, current) => filterNodes(current, previous), [] as ThyTreeSelectNode[]);\n            if (nodes.length) {\n                const parentNode = { ...node, children: nodes, expand: true };\n                result.push(parentNode);\n            }\n        }\n        return result;\n    };\n    const treeData = treeNodes.reduce((previous, current) => filterNodes(current, previous), [] as ThyTreeSelectNode[]);\n    return treeData;\n}\n@Component({\n    selector: 'thy-tree-select',\n    templateUrl: './tree-select.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => ThyTreeSelectComponent),\n            multi: true\n        }\n    ]\n})\nexport class ThyTreeSelectComponent implements OnInit, ControlValueAccessor {\n    @HostBinding('class.thy-select-custom') treeSelectClass = true;\n\n    @HostBinding('class.thy-select') isTreeSelect = true;\n\n    // 菜单是否展开\n    @HostBinding('class.menu-is-opened') expandTreeSelectOptions = false;\n\n    @HostBinding('class.thy-select-custom--multiple') isMulti = false;\n\n    public treeNodes: ThyTreeSelectNode[];\n\n    public selectedValue: any;\n\n    public selectedNode: ThyTreeSelectNode;\n\n    public selectedNodes: ThyTreeSelectNode[] = [];\n\n    public flattenTreeNodes: ThyTreeSelectNode[] = [];\n\n    public cdkConnectOverlayWidth = 0;\n\n    public positions: ConnectionPositionPair[];\n\n    public icons: { expand: string; collapse: string; gap?: number } = {\n        expand: 'angle-down',\n        collapse: 'angle-right',\n        gap: 15\n    };\n\n    private initialled = false;\n\n    public valueIsObject = false;\n\n    originTreeNodes: ThyTreeSelectNode[];\n\n    @ContentChild('thyTreeSelectTriggerDisplay')\n    thyTreeSelectTriggerDisplayRef: TemplateRef<any>;\n\n    @ContentChild('treeNodeTemplate')\n    treeNodeTemplateRef: TemplateRef<any>;\n\n    @ViewChild(CdkOverlayOrigin, { static: true }) cdkOverlayOrigin: CdkOverlayOrigin;\n\n    @ViewChild(CdkConnectedOverlay, { static: true }) cdkConnectedOverlay: CdkConnectedOverlay;\n\n    @ViewChild('customDisplayTemplate', { static: true }) customDisplayTemplate: TemplateRef<any>;\n\n    @Input()\n    set thyTreeNodes(value: ThyTreeSelectNode[]) {\n        this.treeNodes = value;\n        this.originTreeNodes = value;\n        if (this.initialled) {\n            this.flattenTreeNodes = this.flattenNodes(this.treeNodes, this.flattenTreeNodes, []);\n            this.setSelectedNodes();\n        }\n    }\n\n    @Input() thyPrimaryKey = '_id';\n\n    @Input() thyShowKey = 'name';\n\n    @Input() thyChildCountKey = 'childCount';\n\n    @Input() thyAllowClear: boolean;\n\n    @Input() thyMultiple = false;\n\n    @Input() thyDisable = false;\n\n    @Input() thyPlaceholder = '请选择节点';\n\n    get placeholder() {\n        return this.thyPlaceholder;\n    }\n\n    @Input() thySize: InputSize;\n\n    @Input() thyEmptyOptionsText = '暂时没有数据可选';\n\n    @Input() thyHiddenNodeKey = 'hidden';\n\n    @Input() thyDisableNodeKey = 'disabled';\n\n    @Input() thyAsyncNode = false;\n\n    @Input() thyShowWholeName = false;\n\n    @Input() thyShowSearch = false;\n\n    @Input()\n    set thyIconType(type: ThyTreeSelectType) {\n        warnDeprecation('This parameter has been deprecation');\n        // if (type === 'especial') {\n        //     this.icons = { expand: 'minus-square', collapse: 'plus-square', gap: 20 };\n        // } else {\n        //     this.icons = { expand: 'caret-right-down', collapse: 'caret-right', gap: 15 };\n        // }\n    }\n\n    @Input() thyHiddenNodeFn: (node: ThyTreeSelectNode) => boolean = (node: ThyTreeSelectNode) => node.hidden;\n\n    @Input() thyDisableNodeFn: (node: ThyTreeSelectNode) => boolean = (node: ThyTreeSelectNode) => node.disabled;\n\n    @Input() thyGetNodeChildren: (node: ThyTreeSelectNode) => Observable<ThyTreeSelectNode> = (node: ThyTreeSelectNode) => of([]);\n\n    // TODO: 是否可以取消选中的node\n    // @Input() thyUnRemoveSelectedNodeFn: Function;\n\n    public onModelChange: Function = () => {};\n\n    public onModelTouch: Function = () => {};\n\n    private _getNgModelType() {\n        if (this.thyMultiple) {\n            this.valueIsObject = !this.selectedValue[0] || isObject(this.selectedValue[0]);\n        } else {\n            this.valueIsObject = isObject(this.selectedValue);\n        }\n    }\n\n    writeValue(value: any): void {\n        this.selectedValue = value;\n\n        if (value) {\n            this._getNgModelType();\n        }\n        this.setSelectedNodes();\n    }\n\n    registerOnChange(fn: any): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onModelTouch = fn;\n    }\n\n    constructor(public elementRef: ElementRef, public renderer: Renderer2, private ngZone: NgZone) {}\n\n    @HostListener('document:click', ['$event'])\n    onDocumentClick(event: Event) {\n        event.stopPropagation();\n        if (!this.elementRef.nativeElement.contains(event.target) && this.expandTreeSelectOptions) {\n            this.expandTreeSelectOptions = false;\n        }\n    }\n\n    ngOnInit() {\n        this.positions = getFlexiblePositions('bottom', 4);\n        this.isMulti = this.thyMultiple;\n        this.flattenTreeNodes = this.flattenNodes(this.treeNodes, this.flattenTreeNodes, []);\n        this.setSelectedNodes();\n        this.initialled = true;\n        this.init();\n    }\n\n    get selectedValueObject() {\n        return this.thyMultiple ? this.selectedNodes : this.selectedNode;\n    }\n\n    searchValue(searchText: string) {\n        this.treeNodes = filterTreeData(this.originTreeNodes, searchText.trim(), this.thyShowKey);\n    }\n\n    public setPosition() {\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.cdkConnectedOverlay.overlayRef.updatePosition();\n            });\n    }\n\n    private init() {\n        this.cdkConnectOverlayWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n    }\n\n    private flattenNodes(\n        nodes: ThyTreeSelectNode[] = [],\n        resultNodes: ThyTreeSelectNode[] = [],\n        parentPrimaryValue: string[] = []\n    ): ThyTreeSelectNode[] {\n        resultNodes = resultNodes.concat(nodes);\n        let nodesLeafs: ThyTreeSelectNode[] = [];\n        (nodes || []).forEach(item => {\n            item.parentValues = parentPrimaryValue;\n            item.level = item.parentValues.length;\n            if (item.children && isArray(item.children)) {\n                const nodeLeafs = this.flattenNodes(item.children, resultNodes, [...parentPrimaryValue, item[this.thyPrimaryKey]]);\n                nodesLeafs = [...nodesLeafs, ...nodeLeafs];\n            }\n        });\n        return [...nodes, ...nodesLeafs];\n    }\n\n    private _findTreeNode(value: string): ThyTreeSelectNode {\n        return (this.flattenTreeNodes || []).find(item => item[this.thyPrimaryKey] === value);\n    }\n\n    getShowNodeName() {\n        if (this.thyShowWholeName) {\n            let wholeName = '';\n            (this.selectedNode.parentValues || []).forEach((item: string, index: number) => {\n                const node = this._findTreeNode(item);\n                wholeName = `${wholeName}${node[this.thyShowKey]} > `;\n            });\n            return `${wholeName}${this.selectedNode[this.thyShowKey]}`;\n        } else {\n            return this.selectedNode[this.thyShowKey];\n        }\n    }\n\n    private setSelectedNodes() {\n        if (this.selectedValue) {\n            // 多选数据初始化\n            if (this.thyMultiple) {\n                if (this.selectedValue.length > 0) {\n                    if (this.valueIsObject && Object.keys(this.selectedValue[0]).indexOf(this.thyPrimaryKey) >= 0) {\n                        this.selectedNodes = this.selectedValue.map((item: any) => {\n                            return this._findTreeNode(item[this.thyPrimaryKey]);\n                        });\n                    } else {\n                        this.selectedNodes = this.selectedValue.map((item: any) => {\n                            return this._findTreeNode(item);\n                        });\n                    }\n                }\n            } else {\n                // 单选数据初始化\n                if (this.valueIsObject) {\n                    if (Object.keys(this.selectedValue).indexOf(this.thyPrimaryKey) >= 0) {\n                        this.selectedNode = this._findTreeNode(this.selectedValue[this.thyPrimaryKey]);\n                    }\n                } else {\n                    this.selectedNode = this._findTreeNode(this.selectedValue);\n                }\n            }\n        } else {\n            this.selectedNodes = [];\n            this.selectedNode = null;\n        }\n    }\n\n    openSelectPop() {\n        if (this.thyDisable) {\n            return;\n        }\n        this.cdkConnectOverlayWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\n        this.expandTreeSelectOptions = !this.expandTreeSelectOptions;\n    }\n\n    close() {\n        this.expandTreeSelectOptions = false;\n    }\n\n    clearSelectedValue(event: Event) {\n        event.stopPropagation();\n        this.selectedValue = null;\n        this.selectedNode = null;\n        this.selectedNodes = [];\n        this.onModelChange(this.selectedValue);\n    }\n\n    private _changeSelectValue() {\n        if (this.valueIsObject) {\n            this.selectedValue = this.thyMultiple ? this.selectedNodes : this.selectedNode;\n        } else {\n            this.selectedValue = this.thyMultiple\n                ? this.selectedNodes.map(item => item[this.thyPrimaryKey])\n                : this.selectedNode[this.thyPrimaryKey];\n        }\n        this.onModelChange(this.selectedValue);\n    }\n\n    removeMultipleSelectedNode(event: { item: ThyTreeSelectNode; $event: Event }) {\n        this.removeSelectedNode(event.item, event.$event);\n    }\n\n    // thyMultiple = true 时，移除数据时调用\n    removeSelectedNode(node: ThyTreeSelectNode, event?: Event) {\n        if (event) {\n            event.stopPropagation();\n        }\n        if (this.thyDisable) {\n            return;\n        }\n        if (this.thyMultiple) {\n            this.selectedNodes = produce(this.selectedNodes).remove((item: ThyTreeSelectNode) => {\n                return item[this.thyPrimaryKey] === node[this.thyPrimaryKey];\n            });\n            this._changeSelectValue();\n        }\n    }\n\n    selectNode(node: ThyTreeSelectNode) {\n        if (!this.thyMultiple) {\n            this.selectedNode = node;\n            this.expandTreeSelectOptions = false;\n        } else {\n            if (\n                this.selectedNodes.find(item => {\n                    return item[this.thyPrimaryKey] === node[this.thyPrimaryKey];\n                })\n            ) {\n                this.removeSelectedNode(node);\n            } else {\n                this.selectedNodes = produce(this.selectedNodes).add(node);\n            }\n        }\n        this._changeSelectValue();\n    }\n\n    getNodeChildren(node: ThyTreeSelectNode) {\n        const result = this.thyGetNodeChildren(node);\n        if (result && result.subscribe) {\n            result.pipe().subscribe((data: ThyTreeSelectNode[]) => {\n                const nodes = this.flattenNodes(data, this.flattenTreeNodes, [...node.parentValues, node[this.thyPrimaryKey]]);\n                const otherNodes = nodes.filter((item: ThyTreeNode) => {\n                    return !this.flattenTreeNodes.find(hasItem => {\n                        return hasItem[this.thyPrimaryKey] === item[this.thyPrimaryKey];\n                    });\n                });\n                this.flattenTreeNodes = [...this.flattenTreeNodes, ...otherNodes];\n                node.children = data;\n            });\n            return result;\n        }\n    }\n}\n","import { BehaviorSubject, Subject } from 'rxjs';\nimport { Component, OnInit, HostBinding, Input } from '@angular/core';\nimport { ThyTreeSelectComponent } from './tree-select.component';\nimport { ThyTreeSelectNode } from './tree-select.class';\n\n@Component({\n    selector: 'thy-tree-select-nodes',\n    templateUrl: './tree-select-nodes.component.html'\n})\nexport class ThyTreeSelectNodesComponent implements OnInit {\n    @HostBinding('class') class: string;\n\n    @Input() treeNodes: ThyTreeSelectNode[];\n\n    public primaryKey = this.parent.thyPrimaryKey;\n\n    public showKey = this.parent.thyShowKey;\n\n    public isMultiple = this.parent.thyMultiple;\n\n    public valueIsObject = this.parent.valueIsObject;\n\n    public selectedValue = this.parent.selectedValue;\n\n    public childCountKey = this.parent.thyChildCountKey;\n\n    public treeNodeTemplateRef = this.parent.treeNodeTemplateRef;\n\n    constructor(public parent: ThyTreeSelectComponent) {}\n\n    ngOnInit() {\n        this.class = this.isMultiple ? 'thy-tree-select-dropdown thy-tree-select-dropdown-multiple' : 'thy-tree-select-dropdown';\n    }\n\n    treeNodeIsSelected(node: ThyTreeSelectNode) {\n        if (this.parent.thyMultiple) {\n            return (this.parent.selectedNodes || []).find(item => {\n                return item[this.primaryKey] === node[this.primaryKey];\n            });\n        } else {\n            return this.parent.selectedNode && this.parent.selectedNode[this.primaryKey] === node[this.primaryKey];\n        }\n    }\n\n    treeNodeIsHidden(node: ThyTreeSelectNode) {\n        if (this.parent.thyHiddenNodeKey) {\n            return node[this.parent.thyHiddenNodeKey];\n        }\n        if (this.parent.thyHiddenNodeFn) {\n            return this.parent.thyHiddenNodeFn(node);\n        }\n        return false;\n    }\n\n    treeNodeIsDisable(node: ThyTreeSelectNode) {\n        if (this.parent.thyDisableNodeKey) {\n            return node[this.parent.thyDisableNodeKey];\n        }\n        if (this.parent.thyDisableNodeFn) {\n            return this.parent.thyDisableNodeFn(node);\n        }\n        return false;\n    }\n\n    treeNodeIsExpand(node: ThyTreeSelectNode) {\n        let isSelectedNodeParent = false;\n        if (this.parent.thyMultiple) {\n            isSelectedNodeParent = !!(this.parent.selectedNodes || []).find(item => {\n                return item.parentValues.indexOf(node[this.primaryKey]) > -1;\n            });\n        } else {\n            isSelectedNodeParent = this.parent.selectedNode\n                ? this.parent.selectedNode.parentValues.indexOf(node[this.primaryKey]) > -1\n                : false;\n        }\n        const isExpand = node.expand || (Object.keys(node).indexOf('expand') < 0 && isSelectedNodeParent);\n        node.expand = isExpand;\n        return isExpand;\n    }\n\n    getNodeChildren(node: ThyTreeSelectNode) {\n        return this.parent.getNodeChildren(node);\n    }\n\n    selectTreeNode(event: Event, node: ThyTreeSelectNode) {\n        event.stopPropagation();\n        if (this.treeNodeIsDisable(node)) {\n            return;\n        }\n        this.parent.selectNode(node);\n    }\n\n    nodeExpandToggle(event: Event, node: ThyTreeSelectNode) {\n        event.stopPropagation();\n        if (Object.keys(node).indexOf('expand') > -1) {\n            node.expand = !node.expand;\n        } else {\n            if (this.treeNodeIsExpand(node)) {\n                node.expand = false;\n            } else {\n                node.expand = true;\n            }\n        }\n\n        if (node.expand && this.parent.thyAsyncNode) {\n            this.getNodeChildren(node).subscribe(() => {\n                this.parent.setPosition();\n            });\n        }\n        this.parent.setPosition();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ThyLabelModule } from 'ngx-tethys/label';\nimport { ThyTreeSelectComponent } from './tree-select.component';\nimport { ThyTreeSelectNodesComponent } from './tree-select-nodes.component';\nimport { ThyListModule } from 'ngx-tethys/list';\nimport { ThyIconModule } from 'ngx-tethys/icon';\nimport { ThyEmptyModule } from 'ngx-tethys/empty';\nimport { ThySelectCommonModule } from 'ngx-tethys/shared';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        OverlayModule,\n        ThyLabelModule,\n        ThyListModule,\n        ThyIconModule,\n        ThyEmptyModule,\n        ThySelectCommonModule\n    ],\n    declarations: [ThyTreeSelectComponent, ThyTreeSelectNodesComponent],\n    exports: [ThyTreeSelectComponent, ThyTreeSelectNodesComponent]\n})\nexport class ThyTreeSelectModule {}\n"]}