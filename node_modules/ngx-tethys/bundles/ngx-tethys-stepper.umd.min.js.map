{"version":3,"sources":["../../src/stepper/step-header.component.ts","../../src/stepper/step.component.ts","../../src/stepper/stepper.component.ts","../../src/stepper/stepper-button.directive.ts","../../src/stepper/stepper.module.ts"],"names":["this","thyStepHeader","Component","args","selector","template","Input","HostBinding","type","THY_STEPPER_COMPONENT","InjectionToken","ThyStepComponent","stepper","prototype","select","selected","Optional","Inject","ViewChild","TemplateRef","static","ThyStepperComponent","thyShowStepHeader","_selectedIndex","selectionChange","EventEmitter","thyStepper","Object","defineProperty","value","selectedIndex","steps","toArray","step","indexOf","index","_updateSelectedItemIndex","newIndex","stepsArray","emit","previouslySelectedIndex","selectedStep","previouslySelectedStep","to","Math","min","length","next","previous","max","providers","provide","useExisting","Output","ViewChildren","ThyStepHeaderComponent","ContentChildren","ThyStepperNextDirective","click","$event","Directive","HostListener","ThyStepperPreviousDirective","NgModule","declarations","entryComponents","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n    selector: 'thy-step-header',\n    templateUrl: './step-header.component.html'\n})\nexport class ThyStepHeaderComponent {\n\n    @Input() label: string;\n\n    @Input() index: number;\n\n    @HostBinding('class.thy-stepper-header-selected')\n    @Input() selected: boolean;\n\n    @Input() active: boolean;\n\n    @HostBinding('class.thy-stepper-header') thyStepHeader = true;\n\n}\n","import { Component, Input, ViewChild, TemplateRef, forwardRef, Inject, InjectionToken, Optional } from '@angular/core';\n\nexport interface IThyStepperComponent {\n    selected: ThyStepComponent;\n}\n\nexport const THY_STEPPER_COMPONENT = new InjectionToken<IThyStepperComponent>('THY_STEPPER_COMPONENT');\n\n@Component({\n    selector: 'thy-step',\n    templateUrl: './step.component.html'\n})\nexport class ThyStepComponent {\n    @ViewChild(TemplateRef, { static: true }) content: TemplateRef<any>;\n\n    @Input() label: string;\n\n    @Input() thyLabel: string;\n\n    constructor(@Optional() @Inject(THY_STEPPER_COMPONENT) public stepper: IThyStepperComponent) {}\n\n    select() {\n        this.stepper.selected = this;\n    }\n}\n","import {\n    Component,\n    ViewChildren,\n    ContentChildren,\n    QueryList,\n    AfterViewInit,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter\n} from '@angular/core';\nimport { ThyStepComponent, IThyStepperComponent, THY_STEPPER_COMPONENT } from './step.component';\nimport { ThyStepHeaderComponent } from './step-header.component';\n\n@Component({\n    selector: 'thy-stepper',\n    templateUrl: 'stepper.component.html',\n    providers: [\n        {\n            provide: THY_STEPPER_COMPONENT,\n            useExisting: ThyStepperComponent\n        }\n    ]\n})\nexport class ThyStepperComponent implements IThyStepperComponent {\n    @Input()\n    set thySelectedIndex(value: number) {\n        this.selectedIndex = value;\n    }\n\n    @Input()\n    set thySelected(value: ThyStepComponent) {\n        this.selected = value;\n    }\n\n    @Input() thyShowStepHeader = true;\n\n    private _selectedIndex = 0;\n\n    public set selected(step: ThyStepComponent) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n\n    public get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : null;\n    }\n\n    set selectedIndex(index: number) {\n        if (this.steps) {\n            this._updateSelectedItemIndex(index);\n        } else {\n            this._selectedIndex = index;\n        }\n    }\n\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n\n    @Output() selectionChange: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(ThyStepHeaderComponent) stepHeaders: QueryList<ThyStepHeaderComponent>;\n\n    @ContentChildren(ThyStepComponent) steps: QueryList<ThyStepComponent>;\n\n    @HostBinding('class.thy-stepper') thyStepper = true;\n\n    private _updateSelectedItemIndex(newIndex: number): void {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex]\n        });\n        this._selectedIndex = newIndex;\n    }\n\n    to(index: number): void {\n        this.selectedIndex = Math.min(index, this.steps.length - 1);\n    }\n\n    next(): void {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n\n    /** Selects and focuses the previous step in list. */\n    previous(): void {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n}\n","import { Directive, Input, HostListener } from '@angular/core';\nimport { ThyStepperComponent } from './stepper.component';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n    selector: '[thyStepperNext]'\n})\nexport class ThyStepperNextDirective {\n    constructor(private stepper: ThyStepperComponent) {}\n\n    @HostListener('click', ['$event'])\n    click($event: any) {\n        this.stepper.next();\n    }\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n    selector: '[thyStepperPrevious]'\n})\nexport class ThyStepperPreviousDirective {\n    constructor(private stepper: ThyStepperComponent) {}\n\n    @HostListener('click', ['$event'])\n    click($event: any) {\n        this.stepper.previous();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyStepHeaderComponent } from './step-header.component';\nimport { ThyStepComponent } from './step.component';\nimport { ThyStepperComponent } from './stepper.component';\nimport { ThyStepperNextDirective, ThyStepperPreviousDirective } from './stepper-button.directive';\n\n@NgModule({\n    declarations: [ThyStepHeaderComponent, ThyStepperComponent, ThyStepComponent, ThyStepperNextDirective, ThyStepperPreviousDirective],\n    entryComponents: [],\n    imports: [CommonModule],\n    exports: [ThyStepperComponent, ThyStepComponent, ThyStepHeaderComponent, ThyStepperNextDirective, ThyStepperPreviousDirective],\n    providers: []\n})\nexport class ThyStepperModule {}\n"]}