(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('ngx-tethys/util'), require('ngx-tethys/icon')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/alert', ['exports', '@angular/core', '@angular/common', 'ngx-tethys/util', 'ngx-tethys/icon'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].alert = {}), global.ng.core, global.ng.common, global['ngx-tethys'].util, global['ngx-tethys'].icon));
}(this, (function (exports, core, common, util, icon) { 'use strict';

    var ThyAlertComponent = /** @class */ (function () {
        function ThyAlertComponent() {
            // @ViewChild(TemplateRef) content: TemplateRef<any>;
            this._typeIcon = {
                success: 'check-circle-fill',
                warning: 'waring-fill',
                danger: 'close-circle-fill',
                info: 'minus-circle-fill',
                'primary-week': 'question-circle-fill',
                'success-week': 'check-circle-fill',
                'warning-week': 'waring-fill',
                'danger-week': 'close-circle-fill',
                'primary-weak': 'question-circle-fill',
                'success-weak': 'check-circle-fill',
                'warning-weak': 'waring-fill',
                'danger-weak': 'close-circle-fill'
            };
            this._showIcon = true;
            this._type = 'info';
        }
        Object.defineProperty(ThyAlertComponent.prototype, "thyType", {
            set: function (value) {
                if (value && value.indexOf('-week') !== -1) {
                    console.warn('The type "xxx-week" will be removed, please use "xxx-weak" instead.');
                }
                this._type = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyAlertComponent.prototype, "thyMessage", {
            set: function (value) {
                if (value instanceof core.TemplateRef) {
                    this.messageTemplate = value;
                }
                else {
                    this.messageText = value;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyAlertComponent.prototype, "thyIcon", {
            get: function () {
                if (this._showIcon) {
                    return this._icon || this._typeIcon[this._type];
                }
                else {
                    return null;
                }
            },
            set: function (value) {
                if (value) {
                    this._showIcon = true;
                    this._icon = util.isString(value) ? value.toString() : null;
                }
                else {
                    this._showIcon = false;
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyAlertComponent.prototype.ngOnInit = function () {
            this.class = "thy-alert thy-alert-" + this._type;
        };
        ThyAlertComponent.prototype.closeAlert = function () {
            this.class = this.class + " thy-alert-hidden";
        };
        return ThyAlertComponent;
    }());
    ThyAlertComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-alert',
                    template: "<div class=\"thy-alert-content\">\n  <thy-icon *ngIf=\"thyIcon\" class=\"thy-alert-icon\" [thyIconName]=\"thyIcon\"></thy-icon>\n  <ng-container *ngIf=\"messageTemplate\">\n    <ng-template *ngTemplateOutlet=\"messageTemplate\"></ng-template>\n  </ng-container>\n  <span *ngIf=\"messageText\">{{ messageText }}</span>\n  <div class=\"thy-alert-operation\" *ngIf=\"alertOperation\">\n    <ng-container [ngTemplateOutlet]=\"alertOperation\"></ng-container>\n  </div>\n</div>\n<a href=\"javascript:;\" class=\"thy-alert-close\" *ngIf=\"thyCloseable\" (click)=\"closeAlert()\">\n  <thy-icon thyIconName=\"close\"></thy-icon>\n</a>\n"
                },] }
    ];
    ThyAlertComponent.ctorParameters = function () { return []; };
    ThyAlertComponent.propDecorators = {
        class: [{ type: core.HostBinding, args: ['class',] }],
        thyType: [{ type: core.Input }],
        thyMessage: [{ type: core.Input }],
        thyIcon: [{ type: core.Input }],
        thyCloseable: [{ type: core.Input }],
        alertOperation: [{ type: core.ContentChild, args: ['operation',] }]
    };

    var ThyAlertActionItemDirective = /** @class */ (function () {
        function ThyAlertActionItemDirective() {
            this.class = true;
        }
        return ThyAlertActionItemDirective;
    }());
    ThyAlertActionItemDirective.decorators = [
        { type: core.Directive, args: [{ selector: '[thyAlertActionItem]' },] }
    ];
    ThyAlertActionItemDirective.ctorParameters = function () { return []; };
    ThyAlertActionItemDirective.propDecorators = {
        class: [{ type: core.HostBinding, args: ['class.thy-alert-action',] }]
    };

    var ThyAlertModule = /** @class */ (function () {
        function ThyAlertModule() {
        }
        return ThyAlertModule;
    }());
    ThyAlertModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [ThyAlertComponent, ThyAlertActionItemDirective],
                    imports: [common.CommonModule, icon.ThyIconModule],
                    exports: [ThyAlertComponent, ThyAlertActionItemDirective]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ThyAlertActionItemDirective = ThyAlertActionItemDirective;
    exports.ThyAlertComponent = ThyAlertComponent;
    exports.ThyAlertModule = ThyAlertModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-tethys-alert.umd.js.map
