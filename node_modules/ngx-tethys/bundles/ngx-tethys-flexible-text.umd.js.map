{"version":3,"file":"ngx-tethys-flexible-text.umd.js","sources":["../../src/flexible-text/flexible-text.component.ts","../../src/flexible-text/flexible-text.module.ts","../../src/flexible-text/ngx-tethys-flexible-text.ts"],"names":["debounceTime","isUndefinedOrNull","Component","TooltipService","UpdateHostClassService","ElementRef","ViewContainerRef","ContentObserver","Input","NgModule","CommonModule","ThyTooltipModule","ObserversModule"],"mappings":"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","sourcesContent":["import { Component, Input, TemplateRef, ElementRef, OnInit, ViewContainerRef, OnDestroy, AfterContentInit } from '@angular/core';\nimport { timer, Subject, Subscription } from 'rxjs';\nimport { TooltipService } from 'ngx-tethys/tooltip';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { debounceTime } from 'rxjs/operators';\nimport { ThyPlacement } from 'ngx-tethys/core';\nimport { isUndefinedOrNull } from 'ngx-tethys/util';\n\n@Component({\n    selector: 'thy-flexible-text,[thyFlexibleText]',\n    exportAs: 'thyFlexibleText',\n    templateUrl: './flexible-text.component.html',\n    providers: [TooltipService, UpdateHostClassService]\n})\nexport class ThyFlexibleTextComponent implements OnInit, AfterContentInit, OnDestroy {\n    isOverflow = false;\n\n    content: string | TemplateRef<HTMLElement>;\n\n    placement: ThyPlacement;\n\n    containerClass: string;\n\n    subscription: Subscription | null = null;\n\n    @Input('thyTooltipTrigger') trigger: 'hover' | 'focus' | 'click';\n\n    @Input('thyContainerClass')\n    get thyContainerClass(): string {\n        return this.containerClass;\n    }\n\n    set thyContainerClass(value: string) {\n        this.containerClass = value;\n        this.updateContainerClass();\n    }\n\n    @Input('thyTooltipContent') set thyContent(value: string | TemplateRef<HTMLElement>) {\n        this.content = value;\n        if (this.tooltipService.thyTooltipDirective) {\n            this.tooltipService.thyTooltipDirective.content = this.content;\n        }\n    }\n\n    @Input('thyTooltipPlacement') set thyPlacement(value: ThyPlacement) {\n        this.placement = value;\n        if (this.tooltipService.thyTooltipDirective) {\n            this.tooltipService.thyTooltipDirective.placement = this.placement;\n        }\n    }\n\n    constructor(\n        private elementRef: ElementRef,\n        private viewContainerRef: ViewContainerRef,\n        public tooltipService: TooltipService,\n        private updateHostClassService: UpdateHostClassService,\n        private contentObserver: ContentObserver\n    ) {\n        this.updateHostClassService.initializeElement(this.elementRef);\n    }\n\n    ngOnInit() {\n        this.updateContainerClass();\n        this.tooltipService.attach(this.elementRef, this.viewContainerRef, this.trigger);\n        if (this.placement) {\n            this.tooltipService.thyTooltipDirective.placement = this.placement;\n        }\n        this.tooltipService.thyTooltipDirective.content = this.content;\n        this.tooltipService.thyTooltipDirective.thyTooltipDisabled = true;\n    }\n\n    ngAfterContentInit() {\n        this.applyOverflow();\n        this.subscription = this.contentObserver\n            .observe(this.elementRef)\n            .pipe(debounceTime(100))\n            .subscribe((value: MutationRecord[]) => {\n                this.applyOverflow();\n            });\n    }\n\n    ngOnDestroy() {\n        this.tooltipService.detach();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    applyOverflow() {\n        const nativeElement = this.elementRef.nativeElement;\n        if (nativeElement.clientWidth < nativeElement.scrollWidth) {\n            this.isOverflow = true;\n        } else {\n            this.isOverflow = false;\n        }\n        this.tooltipService.thyTooltipDirective.thyTooltipDisabled = !this.isOverflow;\n    }\n\n    updateContainerClass() {\n        const containerClass = isUndefinedOrNull(this.containerClass) ? 'flexible-text-container' : this.containerClass;\n        const flexibleTextClass = {\n            'text-truncate': true,\n            [containerClass]: containerClass !== ''\n        };\n        this.updateHostClassService.updateClassByMap(flexibleTextClass);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyFlexibleTextComponent } from './flexible-text.component';\nimport { ThyTooltipModule } from 'ngx-tethys/tooltip';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n@NgModule({\n    declarations: [ThyFlexibleTextComponent],\n    imports: [CommonModule, ThyTooltipModule, ObserversModule],\n    exports: [ThyFlexibleTextComponent]\n})\nexport class ThyFlexibleTextModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}