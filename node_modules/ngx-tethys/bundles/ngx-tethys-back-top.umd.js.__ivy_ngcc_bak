(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('ngx-tethys/icon'), require('rxjs'), require('@angular/cdk/platform'), require('rxjs/operators'), require('ngx-tethys/core')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/back-top', ['exports', '@angular/core', '@angular/common', 'ngx-tethys/icon', 'rxjs', '@angular/cdk/platform', 'rxjs/operators', 'ngx-tethys/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys']['back-top'] = {}), global.ng.core, global.ng.common, global['ngx-tethys'].icon, global.rxjs, global.ng.cdk.platform, global.rxjs.operators, global['ngx-tethys'].core));
}(this, (function (exports, core, common, icon, rxjs, platform, operators, core$1) { 'use strict';

    var ThyBackTopComponent = /** @class */ (function () {
        function ThyBackTopComponent(doc, thyScrollService, platform, cdr, zone) {
            this.doc = doc;
            this.thyScrollService = thyScrollService;
            this.platform = platform;
            this.cdr = cdr;
            this.zone = zone;
            this.classNames = true;
            this.thyVisibilityHeight = 400;
            this.thyClick = new core.EventEmitter();
            this.visibleChange = new core.EventEmitter();
            this.visible = false;
            this.scrollListenerDestroy$ = new rxjs.Subject();
            this.target = null;
        }
        ThyBackTopComponent.prototype.ngOnInit = function () {
            this.registerScrollEvent();
        };
        ThyBackTopComponent.prototype.clickBackTop = function () {
            this.thyScrollService.scrollTo(this.getTarget(), 0);
            this.thyClick.emit(true);
        };
        ThyBackTopComponent.prototype.getTarget = function () {
            return this.target || window;
        };
        ThyBackTopComponent.prototype.handleScroll = function () {
            var _this = this;
            if (this.visible === this.thyScrollService.getScroll(this.getTarget()) > this.thyVisibilityHeight) {
                return;
            }
            this.visible = !this.visible;
            this.cdr.detectChanges();
            this.zone.run(function () {
                _this.visibleChange.emit(_this.visible);
            });
        };
        ThyBackTopComponent.prototype.registerScrollEvent = function () {
            var _this = this;
            if (!this.platform.isBrowser) {
                return;
            }
            this.scrollListenerDestroy$.next();
            this.handleScroll();
            this.zone.runOutsideAngular(function () {
                rxjs.fromEvent(_this.getTarget(), 'scroll')
                    .pipe(operators.throttleTime(50), operators.takeUntil(_this.scrollListenerDestroy$))
                    .subscribe(function () { return _this.handleScroll(); });
            });
        };
        ThyBackTopComponent.prototype.ngOnDestroy = function () {
            this.scrollListenerDestroy$.next();
            this.scrollListenerDestroy$.complete();
        };
        ThyBackTopComponent.prototype.ngOnChanges = function (changes) {
            var thyContainer = changes.thyContainer;
            if (thyContainer) {
                this.target = typeof this.thyContainer === 'string' ? this.doc.querySelector(this.thyContainer) : this.thyContainer;
                this.registerScrollEvent();
            }
        };
        return ThyBackTopComponent;
    }());
    ThyBackTopComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-back-top,[thyBackTop]',
                    template: "<div class=\"thy-back-top\" (click)=\"clickBackTop()\" @fadeMotion *ngIf=\"visible\">\n  <ng-template #defaultContent>\n    <div class=\"thy-back-top-content\">\n      <thy-icon class=\"back-top-icon text-muted font-size-lg\" thyIconName=\"arrow-up\"></thy-icon>\n    </div>\n  </ng-template>\n  <ng-template [ngTemplateOutlet]=\"thyTemplate || defaultContent\"></ng-template>\n</div>\n",
                    changeDetection: core.ChangeDetectionStrategy.OnPush,
                    encapsulation: core.ViewEncapsulation.None,
                    animations: [core$1.fadeMotion]
                },] }
    ];
    ThyBackTopComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] },
        { type: core$1.ThyScrollService },
        { type: platform.Platform },
        { type: core.ChangeDetectorRef },
        { type: core.NgZone }
    ]; };
    ThyBackTopComponent.propDecorators = {
        classNames: [{ type: core.HostBinding, args: ['class.thy-back-top-container',] }],
        thyTemplate: [{ type: core.Input }],
        thyVisibilityHeight: [{ type: core.Input }],
        thyContainer: [{ type: core.Input }],
        thyClick: [{ type: core.Output }],
        visibleChange: [{ type: core.Output }]
    };

    var ThyBackTopModule = /** @class */ (function () {
        function ThyBackTopModule() {
        }
        return ThyBackTopModule;
    }());
    ThyBackTopModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [ThyBackTopComponent],
                    imports: [common.CommonModule, icon.ThyIconModule],
                    exports: [ThyBackTopComponent]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ThyBackTopComponent = ThyBackTopComponent;
    exports.ThyBackTopModule = ThyBackTopModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-tethys-back-top.umd.js.map
