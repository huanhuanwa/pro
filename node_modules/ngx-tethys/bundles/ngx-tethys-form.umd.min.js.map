{"version":3,"sources":["../../src/form/form.class.ts","../../src/form/form-validator-loader.ts","../../src/form/form.directive.ts","../../src/form/form-validator.service.ts","../../src/form/form-group.component.ts","../../src/form/form-group-label.directive.ts","../../src/form/form-submit.directive.ts","../../src/form/from-group-footer/form-group-footer.component.ts","../../node_modules/tslib/tslib.es6.js","../../src/form/form-group-error/form-group-error.component.ts","../../src/form/validator/unique-validator.directive.ts","../../src/form/validator/min-validator.directive.ts","../../src/form/validator/max-validator.directive.ts","../../src/form/validator/confirm-validator.directive.ts","../../src/form/module.ts"],"names":["THY_VALIDATOR_CONFIG","InjectionToken","THY_FORM_CONFIG","layout","footerAlign","THY_FORM_CONFIG_PROVIDER","provide","useValue","Éµ0","ERROR_VALUE_REPLACE_REGEX","INVALID_CLASS","defaultValidatorConfig","showElementError","removeElementError","validationMessages","globalValidationMessages","required","maxlength","minlength","thyUniqueCheck","email","confirm","pattern","number","url","max","min","ThyFormValidatorLoader","config","this","Object","assign","prototype","getDefaultValidationMessage","key","defineProperty","getErrorMessage","name","getErrorMessages","validationErrors","messages","validationError","hasOwnProperty","push","defaultShowError","element","errorMessages","parentElement","documentFrag","document","createDocumentFragment","divNode","createElement","textNode","createTextNode","appendChild","setAttribute","append","defaultRemoveError","invalidFeedback","querySelector","removeChild","removeError","classList","remove","helpers","isFunction","showError","add","addValidationMessages","setGlobalValidationMessages","Injectable","Optional","type","Inject","args","ThyEnterKeyMode","ThyFormValidatorService","thyFormValidateLoader","errors","validations","_getElement","_formElement","_clearElementError","hasError","_tryGetValidation","_initializeFormControlValidation","_ngForm","controls","_addError","message","unshift","_clearErrors","control","_this","valueChanges","subscribe","_restFormControlValidation","validation","_formatValidationMessage","replace","tag","requiredLength","_getValidationMessage","_config","_getValidationMessages","_setControlValidationError","initialize","ngForm","formElement","setValidatorConfig","validateControl","invalid","validateControls","keys","forEach","addError","validate","$event","onSubmit","valid","reset","setElementErrorMessage","ThyFormDirective","elementRef","renderer","ngZone","updateHostClassService","validator","initialized","wasValidated","initializeElement","nativeElement","value","updateClasses","ngOnInit","runOutsideAngular","_unsubscribe","listen","onKeydown","bind","submit","onSubmitSuccess","updateClassByMap","_a","thyLayout","submitRunInZone","run","currentInput","activeElement","which","keyCode","keycodes","ENTER","tagName","thyEnterKeyMode","alwaysSubmit","preventDefault","coerceBooleanProperty","getAttribute","ctrlKey","metaKey","ngOnDestroy","Directive","selector","providers","UpdateHostClassService","exportAs","host","class","NgForm","ElementRef","Renderer2","NgZone","Input","HostBinding","internalIconMap","date","ThyFormGroupComponent","thyParentForm","thyTranslate","labelRequired","labelPaddingTopClear","_rowFill","_isFormGroup","isHorizontal","hasFeedback","labelText","instant","feedbackIcon","feedbackSvgIconName","tips","Component","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","decorators","ThyTranslate","ContentChild","ThyFormGroupLabelDirective","_isFormGroupLabel","translateKey","ThyFormSubmitDirective","thyFormDirective","thyFormSubmit","EventEmitter","emit","Output","HostListener","ThyFormGroupFooterComponent","defaultConfig","footerClassMap","thyAlign","setFooterClassMap","form-group-footer","col-sm-10 offset-sm-2 col-form-control","align","create","ThyFormGroupErrorComponent","thyShowFirst","length","thyErrors","target","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","__decorate","InputBoolean","metadataKey","metadataValue","metadata","ThyUniqueCheckValidator","thyForm","ctrl","pipe","map","failed","setTimeout","catchError","of","NG_ASYNC_VALIDATORS","useExisting","multi","ThyMinDirective","_validator","Validators","parseFloat","NG_VALIDATORS","forwardRef","ThyMaxDirective","confirmValidator","actual","ThyConfirmValidatorDirective","ThyFormModule","forRoot","ngModule","NgModule","imports","CommonModule","FormsModule","ThyInputModule","ThyAlertModule","ThyIconModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Dictionary } from 'ngx-tethys/types';\nimport { InjectionToken } from '@angular/core';\n\nexport type ThyFormLayout = 'horizontal' | 'vertical' | 'inline';\n\nexport type ThyFormGroupFooterAlign = 'left' | 'right' | 'center';\n\nexport declare type ThyFormValidationMessages = Dictionary<Dictionary<string>>;\n\nexport interface ThyFormValidatorConfig {\n    showElementError?: boolean | ((element: HTMLElement, errorMessages: string[]) => void);\n    removeElementError?: boolean | ((element: HTMLElement) => void);\n    validationMessages?: ThyFormValidationMessages;\n}\nexport interface ThyFormValidatorGlobalConfig extends ThyFormValidatorConfig {\n    globalValidationMessages?: Dictionary<string>;\n}\n\nexport interface ThyFormConfig {\n    layout?: ThyFormLayout;\n    footerAlign?: ThyFormGroupFooterAlign;\n}\n\nexport const THY_VALIDATOR_CONFIG = new InjectionToken<ThyFormValidatorGlobalConfig>('VALIDATION_CONFIG');\n\nexport const THY_FORM_CONFIG = new InjectionToken<ThyFormConfig>('THY_FORM_CONFIG');\n\nexport const THY_FORM_CONFIG_PROVIDER = {\n    provide: THY_FORM_CONFIG,\n    useValue: { layout: 'horizontal', footerAlign: 'left' }\n};\n","import { InjectionToken, Inject, Injectable, Optional } from '@angular/core';\nimport { ThyFormValidatorGlobalConfig, ThyFormValidationMessages, THY_VALIDATOR_CONFIG } from './form.class';\nimport { Dictionary } from 'ngx-tethys/types';\nimport { ValidationErrors } from '@angular/forms';\nimport { helpers } from 'ngx-tethys/util';\n\nexport const ERROR_VALUE_REPLACE_REGEX = /\\{(.+?)\\}/g;\n\nconst INVALID_CLASS = 'is-invalid';\nconst INVALID_FEEDBACK_CLASS = 'invalid-feedback';\n\nconst defaultValidatorConfig: ThyFormValidatorGlobalConfig = {\n    showElementError: true,\n    removeElementError: true,\n    validationMessages: {}\n};\n\nconst globalValidationMessages = {\n    required: 'è¯¥éé¡¹ä¸è½ä¸ºç©º',\n    maxlength: 'è¯¥éé¡¹è¾å¥å¼é¿åº¦ä¸è½å¤§äº{maxlength}',\n    minlength: 'è¯¥éé¡¹è¾å¥å¼é¿åº¦ä¸è½å°äº{minlength}',\n    thyUniqueCheck: 'è¾å¥å¼å·²ç»å­å¨ï¼è¯·éæ°è¾å¥',\n    email: 'è¾å¥é®ä»¶çæ ¼å¼ä¸æ­£ç¡®',\n    confirm: 'ä¸¤æ¬¡è¾å¥ä¸ä¸è´',\n    pattern: 'è¯¥éé¡¹è¾å¥æ ¼å¼ä¸æ­£ç¡®',\n    number: 'å¿é¡»è¾å¥æ°å­',\n    url: 'è¾å¥URLæ ¼å¼ä¸æ­£ç¡®',\n    max: 'è¯¥éé¡¹è¾å¥å¼ä¸è½å¤§äº{max}',\n    min: 'è¯¥éé¡¹è¾å¥å¼ä¸è½å°äº{min}'\n};\n\n@Injectable()\nexport class ThyFormValidatorLoader {\n    private config: ThyFormValidatorGlobalConfig;\n\n    private getDefaultValidationMessage(key: string) {\n        if (this.config.globalValidationMessages && this.config.globalValidationMessages[key]) {\n            return this.config.globalValidationMessages[key];\n        } else {\n            return globalValidationMessages[key];\n        }\n    }\n    constructor(\n        @Optional()\n        @Inject(THY_VALIDATOR_CONFIG)\n        config: ThyFormValidatorGlobalConfig\n    ) {\n        this.config = Object.assign({}, defaultValidatorConfig, config);\n    }\n\n    get validationMessages() {\n        return this.config.validationMessages;\n    }\n\n    getErrorMessage(name: string, key: string): string {\n        if (this.validationMessages[name] && this.validationMessages[name][key]) {\n            return this.validationMessages[name][key];\n        } else {\n            return this.getDefaultValidationMessage(key);\n        }\n    }\n\n    getErrorMessages(name: string, validationErrors: ValidationErrors): string[] {\n        const messages = [];\n        for (const validationError in validationErrors) {\n            if (validationErrors.hasOwnProperty(validationError)) {\n                messages.push(this.getErrorMessage(name, validationError));\n            }\n        }\n        return messages;\n    }\n\n    defaultShowError(element: HTMLElement, errorMessages: string[]) {\n        if (element && element.parentElement) {\n            const documentFrag = document.createDocumentFragment();\n            const divNode = document.createElement('DIV');\n            const textNode = document.createTextNode(errorMessages[0]);\n            divNode.appendChild(textNode);\n            divNode.setAttribute('class', INVALID_FEEDBACK_CLASS);\n            documentFrag.appendChild(divNode);\n            element.parentElement.append(documentFrag);\n        }\n    }\n\n    defaultRemoveError(element: HTMLElement) {\n        if (element && element.parentElement) {\n            const invalidFeedback = element.parentElement.querySelector('.invalid-feedback');\n            element.parentElement.removeChild(invalidFeedback);\n        }\n    }\n\n    removeError(element: HTMLElement) {\n        element.classList.remove(INVALID_CLASS);\n        if (helpers.isFunction(this.config.removeElementError)) {\n            this.config.removeElementError(element);\n        } else if (this.config.showElementError) {\n            this.defaultRemoveError(element);\n        } else {\n            // do nothings\n        }\n    }\n\n    showError(element: HTMLElement, errorMessages: string[]) {\n        element.classList.add(INVALID_CLASS);\n        if (helpers.isFunction(this.config.showElementError)) {\n            this.config.showElementError(element, errorMessages);\n        } else if (this.config.showElementError) {\n            this.defaultShowError(element, errorMessages);\n        } else {\n            // do nothings\n        }\n    }\n\n    addValidationMessages(messages: ThyFormValidationMessages) {\n        Object.assign(this.config.validationMessages, messages);\n    }\n\n    setGlobalValidationMessages(validationMessages: Dictionary<string>) {\n        this.config.globalValidationMessages = validationMessages;\n    }\n}\n","import { Directive, ElementRef, Input, OnInit, Renderer2, HostBinding, OnDestroy, NgZone, Inject } from '@angular/core';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { NgForm } from '@angular/forms';\nimport { keycodes } from 'ngx-tethys/util';\nimport { ThyFormLayout, ThyFormValidatorConfig, ThyFormConfig, THY_FORM_CONFIG } from './form.class';\nimport { ThyFormValidatorService } from './form-validator.service';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\n\n// 1. submit æ Enter é®æäº¤, Textareæåå«[contenteditable]å±æ§çåç´  é¤å¤ï¼éè¦æ Ctrl | Command + Enter æäº¤\n// 2. alwaysSubmit ä¸ç®¡æ¯åªä¸ªåç´  æ Enter é®é½æäº¤\n// 3. forbidSubmit \bEnter é®ç¦æ­¢æäº¤\n// é»è®¤ submit\nexport enum ThyEnterKeyMode {\n    submit = 'submit',\n    alwaysSubmit = 'alwaysSubmit',\n    forbidSubmit = 'forbidSubmit'\n}\n\n@Directive({\n    selector: '[thyForm],[thy-form]',\n    providers: [UpdateHostClassService, ThyFormValidatorService],\n    exportAs: 'thyForm',\n    host: {\n        class: 'thy-form'\n    }\n})\nexport class ThyFormDirective implements OnInit, OnDestroy {\n    private layout: ThyFormLayout;\n\n    private initialized = false;\n\n    @Input()\n    set thyLayout(value: ThyFormLayout) {\n        if (value) {\n            this.layout = value;\n            if (this.initialized) {\n                this.updateClasses();\n            }\n        }\n    }\n\n    get thyLayout(): ThyFormLayout {\n        return this.layout;\n    }\n\n    get isHorizontal() {\n        return this.layout === 'horizontal';\n    }\n\n    @Input() thyEnterKeyMode: ThyEnterKeyMode;\n\n    @Input()\n    set thyFormValidatorConfig(config: ThyFormValidatorConfig) {\n        this.validator.setValidatorConfig(config);\n    }\n\n    @HostBinding('class.was-validated') wasValidated = false;\n\n    onSubmitSuccess: ($event: any) => void;\n\n    private _unsubscribe: () => void;\n\n    constructor(\n        private ngForm: NgForm,\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private ngZone: NgZone,\n        private updateHostClassService: UpdateHostClassService,\n        public validator: ThyFormValidatorService,\n        @Inject(THY_FORM_CONFIG) private config: ThyFormConfig\n    ) {\n        this.updateHostClassService.initializeElement(this.elementRef.nativeElement);\n        this.layout = this.config.layout;\n    }\n\n    ngOnInit(): void {\n        this.ngZone.runOutsideAngular(() => {\n            this._unsubscribe = this.renderer.listen(this.elementRef.nativeElement, 'keydown', this.onKeydown.bind(this));\n        });\n        this.updateClasses();\n        this.initialized = true;\n        this.validator.initialize(this.ngForm, this.elementRef.nativeElement);\n    }\n\n    submit($event: Event) {\n        if (this.validator.validate($event)) {\n            this.onSubmitSuccess($event);\n        } else {\n            // this.wasValidated = true;\n        }\n    }\n\n    updateClasses() {\n        this.updateHostClassService.updateClassByMap({\n            [`thy-form-${this.thyLayout}`]: true\n        });\n    }\n\n    submitRunInZone($event: any) {\n        this.ngZone.run(() => {\n            this.submit($event);\n        });\n    }\n\n    onKeydown($event: KeyboardEvent) {\n        const currentInput = document.activeElement;\n        const key = $event.which || $event.keyCode;\n        if (key === keycodes.ENTER && currentInput.tagName) {\n            if (!this.thyEnterKeyMode || this.thyEnterKeyMode === ThyEnterKeyMode.submit) {\n                // TEXTAREAæåå«[contenteditable]å±æ§çåç´  Ctrl + Enter æè Command + Enter é»æ­¢\bé»è®¤è¡ä¸ºå¹¶æäº¤\n                if (currentInput.tagName === 'TEXTAREA' || coerceBooleanProperty(currentInput.getAttribute('contenteditable'))) {\n                    if ($event.ctrlKey || $event.metaKey) {\n                        $event.preventDefault();\n                        this.submitRunInZone($event);\n                    }\n                } else {\n                    // ä¸æ¯ TEXTAREA Enter é»æ­¢\bé»è®¤è¡ä¸ºå¹¶æäº¤\n                    $event.preventDefault();\n                    this.submitRunInZone($event);\n                }\n            } else if (this.thyEnterKeyMode === ThyEnterKeyMode.alwaysSubmit) {\n                $event.preventDefault();\n                this.submitRunInZone($event);\n            } else {\n                // do nothing\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._unsubscribe) {\n            this._unsubscribe();\n            this._unsubscribe = null;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { NgForm, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { ThyFormValidatorLoader, ERROR_VALUE_REPLACE_REGEX } from './form-validator-loader';\nimport { ThyFormValidatorConfig } from './form.class';\nimport { Dictionary } from 'ngx-tethys/types';\n\n@Injectable()\nexport class ThyFormValidatorService {\n    private _ngForm: NgForm;\n\n    private _formElement: HTMLElement;\n\n    private _config: ThyFormValidatorConfig;\n\n    public errors: string[] = [];\n\n    // è®°å½ææåç´ çéªè¯ä¿¡æ¯\n    public validations: Dictionary<{\n        hasError?: boolean;\n        errorMessages?: string[];\n    }> = {};\n\n    private _getElement(name: string) {\n        const element = this._formElement[name];\n        if (element) {\n            return element;\n        } else {\n            return this._formElement.querySelector(`[name='${name}']`);\n        }\n    }\n\n    private _clearElementError(name: string) {\n        if (this.validations[name] && this.validations[name].hasError) {\n            this.validations[name].hasError = false;\n            this.validations[name].errorMessages = [];\n            this.thyFormValidateLoader.removeError(this._getElement(name));\n        }\n    }\n\n    private _tryGetValidation(name: string) {\n        if (!this.validations[name]) {\n            this._initializeFormControlValidation(name, this._ngForm.controls[name]);\n        }\n        return this.validations[name];\n    }\n\n    private _addError(message: string) {\n        this.errors.unshift(message);\n    }\n\n    private _clearErrors() {\n        this.errors = [];\n    }\n\n    private _initializeFormControlValidation(name: string, control: AbstractControl) {\n        this.validations[name] = {\n            hasError: false,\n            errorMessages: []\n        };\n        control.valueChanges.subscribe(() => {\n            this._clearElementError(name);\n            this._clearErrors();\n        });\n    }\n\n    private _restFormControlValidation(name: string) {\n        const validation = this.validations[name];\n        if (validation) {\n            validation.hasError = false;\n            validation.errorMessages = [];\n        }\n    }\n\n    private _formatValidationMessage(name: string, message: string) {\n        const control = this._ngForm.controls[name];\n        if (control) {\n            return message.replace(ERROR_VALUE_REPLACE_REGEX, (tag, key) => {\n                if (key) {\n                    return control.errors[key][key] || control.errors[key].requiredLength;\n                }\n            });\n        } else {\n            return message;\n        }\n    }\n\n    private _getValidationMessage(name: string, validationError: string) {\n        let message = null;\n        if (\n            this._config &&\n            this._config.validationMessages &&\n            this._config.validationMessages[name] &&\n            this._config.validationMessages[name][validationError]\n        ) {\n            message = this._config.validationMessages[name][validationError];\n        } else {\n            message = this.thyFormValidateLoader.getErrorMessage(name, validationError);\n        }\n        return this._formatValidationMessage(name, message);\n    }\n\n    private _getValidationMessages(name: string, validationErrors: ValidationErrors) {\n        const messages = [];\n        for (const validationError in validationErrors) {\n            if (validationErrors.hasOwnProperty(validationError)) {\n                messages.push(this._getValidationMessage(name, validationError));\n            }\n        }\n        return messages;\n    }\n\n    private _setControlValidationError(name: string, errorMessages: string[]) {\n        const validation = this._tryGetValidation(name);\n        validation.errorMessages = errorMessages;\n        validation.hasError = true;\n        this.thyFormValidateLoader.showError(this._getElement(name), errorMessages);\n    }\n\n    constructor(private thyFormValidateLoader: ThyFormValidatorLoader) {}\n\n    initialize(ngForm: NgForm, formElement: HTMLElement) {\n        this._ngForm = ngForm;\n        this._formElement = formElement;\n    }\n\n    setValidatorConfig(config: ThyFormValidatorConfig) {\n        this._config = config;\n    }\n\n    validateControl(name: string) {\n        this._clearElementError(name);\n        const control = this._ngForm.controls[name];\n        if (control && control.invalid) {\n            const errorMessages = this._getValidationMessages(name, control.errors);\n            this._setControlValidationError(name, errorMessages);\n        }\n    }\n\n    validateControls() {\n        // ä¸»è¦æ¯ æ æ³æ£æµå° ngForm ç controls çååï¼æèæ¯ææ²¡ææ¾å°\n        // éªè¯çæ¶åå¾ªç¯ ngForm ç controls éªè¯\n        // åç°æ²¡æ validation åå§åä¸ä¸ªï¼å·²ç»å­å¨ä¸ä¼éæ°åå§åï¼ä¿å­ç¼å­æ°æ®\n        for (const name in this._ngForm.controls) {\n            if (this._ngForm.controls.hasOwnProperty(name)) {\n                this._tryGetValidation(name);\n                this.validateControl(name);\n            }\n        }\n        // ç§»é¤å·²ç»ä¸å­å¨ç validation\n        const names = Object.keys(this.validations);\n        names.forEach(name => {\n            if (!this._ngForm.controls[name]) {\n                delete this.validations[name];\n            }\n        });\n    }\n\n    addError(message: string) {\n        this._addError(message);\n    }\n\n    validate($event?: Event): boolean {\n        this._ngForm.onSubmit($event);\n        this.validateControls();\n        return this._ngForm.valid;\n    }\n\n    reset() {\n        this._ngForm.reset();\n        for (const name in this.validations) {\n            if (this.validations.hasOwnProperty(name)) {\n                this._restFormControlValidation(name);\n                this._clearElementError(name);\n            }\n        }\n    }\n\n    setElementErrorMessage(name: string, message: string) {\n        this._clearElementError(name);\n        this._setControlValidationError(name, [message]);\n    }\n}\n","import { Component, HostBinding, Optional, Input, ViewEncapsulation, ContentChild, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { ThyFormDirective } from './form.directive';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\nimport { TemplateRef } from '@angular/core';\nimport { ThyTranslate } from 'ngx-tethys/core';\n\nconst internalIconMap = {\n    date: 'wtf wtf-schedule-o'\n};\n\n@Component({\n    selector: 'thy-form-group',\n    templateUrl: './form-group.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThyFormGroupComponent implements OnInit {\n    labelText: string;\n    labelRequired = false;\n    labelPaddingTopClear = false;\n    feedbackIcon: string;\n    feedbackSvgIconName: string;\n    tips: string;\n\n    @HostBinding('class.row-fill') _rowFill = false;\n\n    @HostBinding('class.form-group') _isFormGroup = true;\n\n    @HostBinding('class.row') isHorizontal = true;\n\n    @HostBinding('class.has-feedback') hasFeedback = false;\n\n    @Input()\n    set thyLabelText(value: string) {\n        this.labelText = value;\n    }\n\n    @Input()\n    set thyLabelTextTranslateKey(value: string) {\n        if (value) {\n            this.labelText = this.thyTranslate.instant(value);\n        } else {\n            this.labelText = '';\n        }\n    }\n\n    @Input()\n    set thyLabelRequired(value: string) {\n        this.labelRequired = coerceBooleanProperty(value);\n    }\n\n    @Input()\n    set thyLabelPaddingTopClear(value: string) {\n        this.labelPaddingTopClear = coerceBooleanProperty(value);\n    }\n\n    @Input()\n    set thyFeedbackIcon(value: string) {\n        this.hasFeedback = true;\n        if (internalIconMap[value]) {\n            this.feedbackIcon = internalIconMap[value];\n            this.feedbackSvgIconName = null;\n        } else {\n            this.feedbackSvgIconName = value;\n            this.feedbackIcon = null;\n        }\n    }\n\n    @Input()\n    set thyTips(value: string) {\n        this.tips = value;\n    }\n\n    @Input()\n    set thyTipsTranslateKey(value: string) {\n        this.tips = this.thyTranslate.instant(value);\n    }\n\n    @Input()\n    set thyRowFill(value: boolean) {\n        this._rowFill = coerceBooleanProperty(value);\n    }\n\n    @ContentChild('formGroup')\n    public contentTemplateRef: TemplateRef<any>;\n\n    constructor(@Optional() private thyParentForm: ThyFormDirective, private thyTranslate: ThyTranslate) {}\n\n    ngOnInit() {\n        this.isHorizontal = this.thyParentForm ? this.thyParentForm.isHorizontal : true;\n    }\n}\n","import { Directive, HostBinding, Optional, Input, ViewEncapsulation } from '@angular/core';\nimport { ThyFormDirective } from './form.directive';\nimport { coerceBooleanProperty } from 'ngx-tethys/util';\nimport { ThyTranslate } from 'ngx-tethys/core';\n\n@Directive({\n    selector: '[thyFormGroupLabel]'\n})\nexport class ThyFormGroupLabelDirective {\n    public labelText: string;\n\n    @HostBinding('class.label-required') labelRequired = false;\n\n    @HostBinding('class.col-form-label') _isFormGroupLabel = true;\n\n    @Input()\n    set thyLabelText(value: string) {\n        this.labelText = value;\n    }\n\n    @Input()\n    set thyLabelTranslateKey(translateKey: string) {\n        if (translateKey) {\n            this.labelText = this.thyTranslate.instant(translateKey);\n        }\n    }\n\n    @Input()\n    set thyLabelRequired(value: string) {\n        this.labelRequired = coerceBooleanProperty(value);\n    }\n\n    constructor(private thyTranslate: ThyTranslate) {}\n}\n","import { Directive, ElementRef, Output, OnInit, HostBinding, HostListener, Optional, EventEmitter } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ThyFormDirective } from './form.directive';\n\n@Directive({\n    selector: '[thyFormSubmit],[thy-form-submit]'\n})\nexport class ThyFormSubmitDirective implements OnInit {\n    @Output() thyFormSubmit = new EventEmitter();\n\n    constructor(private ngForm: NgForm, private thyFormDirective: ThyFormDirective) {}\n\n    ngOnInit(): void {\n        this.thyFormDirective.onSubmitSuccess = ($event: Event) => {\n            this.thyFormSubmit.emit($event);\n        };\n    }\n\n    @HostListener('click', ['$event'])\n    onSubmit($event: Event) {\n        this.thyFormDirective.submit($event);\n    }\n}\n","import { Component, HostBinding, ViewEncapsulation, OnInit, Optional, Input, Inject, ContentChild, TemplateRef } from '@angular/core';\nimport { ThyFormDirective } from '../form.directive';\nimport { ThyFormGroupFooterAlign, THY_FORM_CONFIG, ThyFormConfig } from '../form.class';\n\n@Component({\n    selector: 'thy-form-group-footer',\n    templateUrl: './form-group-footer.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyFormGroupFooterComponent implements OnInit {\n    @HostBinding('class.form-group') _isFormGroup = true;\n\n    @HostBinding('class.row') isHorizontal = true;\n\n    @ContentChild('description') description: TemplateRef<any>;\n\n    @Input() thyAlign: ThyFormGroupFooterAlign;\n\n    public footerClassMap = {};\n\n    private get align() {\n        return !!this.thyAlign ? this.thyAlign : this.defaultConfig.footerAlign;\n    }\n\n    constructor(@Optional() private thyParentForm: ThyFormDirective, @Inject(THY_FORM_CONFIG) private defaultConfig: ThyFormConfig) {}\n\n    ngOnInit() {\n        if (this.thyParentForm) {\n            this.isHorizontal = this.thyParentForm.isHorizontal;\n        }\n        this.setFooterClassMap();\n    }\n\n    setFooterClassMap() {\n        this.footerClassMap = {\n            'form-group-footer': true,\n            'col-sm-10 offset-sm-2 col-form-control': this.isHorizontal,\n            [`form-group-footer-align-${this.align}`]: true\n        };\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InputBoolean } from 'ngx-tethys/core';\nimport { Component, HostBinding, ViewEncapsulation, OnInit, Optional, Input } from '@angular/core';\nimport { ThyFormDirective } from '../form.directive';\n\n@Component({\n    selector: 'thy-form-group-error',\n    templateUrl: './form-group-error.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ThyFormGroupErrorComponent implements OnInit {\n    public errors: string[];\n\n    @Input() @InputBoolean() thyShowFirst = true;\n\n    @Input()\n    set thyErrors(errors: string[]) {\n        this.errors = errors;\n    }\n\n    get thyErrors() {\n        const errors = this.errors || this.thyParentForm.validator.errors;\n        return errors && errors.length > 0 && this.thyShowFirst ? [errors[0]] : errors;\n    }\n\n    @HostBinding('class.form-group')\n    get _isFormGroup() {\n        return this.thyErrors && this.thyErrors.length > 0;\n    }\n\n    @HostBinding('class.row') isHorizontal = true;\n\n    constructor(@Optional() private thyParentForm: ThyFormDirective) {}\n\n    ngOnInit() {\n        if (this.thyParentForm) {\n            this.isHorizontal = this.thyParentForm.isHorizontal;\n        }\n    }\n}\n","import { AsyncValidator, AbstractControl, ValidationErrors, NG_ASYNC_VALIDATORS } from '@angular/forms';\nimport { Injectable, Directive, Input, Optional, ElementRef } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { ThyFormDirective } from '../form.directive';\n\n@Directive({\n    selector: '[thyUniqueCheck]',\n    providers: [\n        {\n            provide: NG_ASYNC_VALIDATORS,\n            useExisting: ThyUniqueCheckValidator,\n            multi: true\n        }\n    ]\n})\nexport class ThyUniqueCheckValidator implements AsyncValidator {\n    @Input() thyUniqueCheck: (value: any) => Observable<boolean>;\n\n    constructor(private elementRef: ElementRef, @Optional() private thyForm: ThyFormDirective) {}\n\n    validate(ctrl: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n        return this.thyUniqueCheck(ctrl.value).pipe(\n            map((failed: boolean) => {\n                setTimeout(() => {\n                    if (failed && this.thyForm && this.elementRef.nativeElement.name) {\n                        this.thyForm.validator.validateControl(this.elementRef.nativeElement.name);\n                    }\n                });\n                return failed ? { thyUniqueCheck: failed } : null;\n            }),\n            catchError(() => of(null))\n        );\n    }\n}\n","import { Directive, Input, forwardRef } from '@angular/core';\nimport {\n    Validator, AbstractControl, NG_VALIDATORS, Validators, ValidatorFn\n} from '@angular/forms';\n\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => ThyMinDirective),\n            multi: true\n        }\n    ]\n})\nexport class ThyMinDirective implements Validator {\n    private _validator: ValidatorFn;\n    @Input() public set min(value: string) {\n        this._validator = Validators.min(parseFloat(value));\n    }\n\n    public validate(control: AbstractControl): { [key: string]: any } {\n        return this._validator(control);\n    }\n}\n","import { Directive, Input, forwardRef } from '@angular/core';\nimport {\n    Validator, AbstractControl, NG_VALIDATORS, Validators, ValidatorFn\n} from '@angular/forms';\n\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useExisting: forwardRef(() => ThyMaxDirective),\n            multi: true\n        }\n    ]\n})\nexport class ThyMaxDirective implements Validator {\n    private _validator: ValidatorFn;\n    @Input() public set max(value: string) {\n        this._validator = Validators.max(parseFloat(value));\n    }\n\n    public validate(control: AbstractControl): { [key: string]: any } {\n        return this._validator(control);\n    }\n}\n","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn } from '@angular/forms';\n\nexport function confirmValidator(value: string): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n        const isEqual = value === control.value;\n        return !isEqual ? { confirm: { value: value, actual: control.value } } : null;\n    };\n}\n\n@Directive({\n    selector: '[confirm]',\n    providers: [{ provide: NG_VALIDATORS, useExisting: ThyConfirmValidatorDirective, multi: true }]\n})\nexport class ThyConfirmValidatorDirective implements Validator {\n    @Input() confirm: string;\n\n    validate(control: AbstractControl) {\n        return confirmValidator(this.confirm)(control);\n    }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ThyFormDirective } from './form.directive';\nimport { ThyFormGroupComponent } from './form-group.component';\nimport { ThyFormGroupLabelDirective } from './form-group-label.directive';\nimport { ThyFormSubmitDirective } from './form-submit.directive';\nimport { ThyInputModule } from 'ngx-tethys/input';\nimport { ThyFormGroupFooterComponent } from './from-group-footer/form-group-footer.component';\nimport { ThyFormGroupErrorComponent } from './form-group-error/form-group-error.component';\nimport { ThyFormValidatorLoader } from './form-validator-loader';\nimport { ThyFormValidatorGlobalConfig, THY_VALIDATOR_CONFIG, THY_FORM_CONFIG, THY_FORM_CONFIG_PROVIDER } from './form.class';\nimport { ThyUniqueCheckValidator, ThyMaxDirective, ThyMinDirective, ThyConfirmValidatorDirective } from './validator/index';\nimport { ThyAlertModule } from 'ngx-tethys/alert';\nimport { ThyIconModule } from 'ngx-tethys/icon';\n\n@NgModule({\n    imports: [CommonModule, FormsModule, ThyInputModule, ThyAlertModule, ThyIconModule],\n    declarations: [\n        ThyFormDirective,\n        ThyFormGroupComponent,\n        ThyFormGroupLabelDirective,\n        ThyFormSubmitDirective,\n        ThyFormGroupFooterComponent,\n        ThyUniqueCheckValidator,\n        ThyFormGroupErrorComponent,\n        ThyMinDirective,\n        ThyMaxDirective,\n        ThyConfirmValidatorDirective\n    ],\n    exports: [\n        ThyFormDirective,\n        ThyFormGroupComponent,\n        ThyFormGroupLabelDirective,\n        ThyFormSubmitDirective,\n        ThyFormGroupFooterComponent,\n        ThyUniqueCheckValidator,\n        ThyFormGroupErrorComponent,\n        ThyMinDirective,\n        ThyMaxDirective,\n        ThyConfirmValidatorDirective\n    ],\n    providers: [ThyFormValidatorLoader, THY_FORM_CONFIG_PROVIDER]\n})\nexport class ThyFormModule {\n    static forRoot(config: ThyFormValidatorGlobalConfig): ModuleWithProviders<ThyFormModule> {\n        return {\n            ngModule: ThyFormModule,\n            providers: [\n                {\n                    provide: THY_VALIDATOR_CONFIG,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\n"]}