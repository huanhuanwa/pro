{"version":3,"sources":["../../src/copy/copy.directive.ts","../../src/copy/module.ts"],"names":["ThyCopyDirective","document","tooltipService","elementRef","viewContainerRef","notifyService","this","thyCopy","EventEmitter","thyCopySuccessText","thyCopyTips","prototype","ngOnInit","attach","thyTooltipDirective","content","getContent","event","thyCopyContent","target","coerceElement","value","textContent","onClick","textarea","createElement","body","appendChild","select","execCommand","emit","isSuccess","success","err","error","remove","ngOnDestroy","detach","Directive","args","selector","providers","TooltipService","ThyNotifyService","Inject","DOCUMENT","ElementRef","ViewContainerRef","Output","Input","HostListener","NgModule","declarations","imports","CommonModule","exports"],"mappings":"upBAqCI,SAAAA,EAC8BC,EACnBC,EACCC,EACAC,EACAC,GAJkBC,KAAAL,SAAAA,EACnBK,KAAAJ,eAAAA,EACCI,KAAAH,WAAAA,EACAG,KAAAF,iBAAAA,EACAE,KAAAD,cAAAA,EAbFC,KAAAC,QAAU,IAAIC,EAAAA,aAEfF,KAAAG,mBAAqB,OAErBH,KAAAI,YAAc,cAYvBV,EAAAW,UAAAC,SAAA,WACIN,KAAKJ,eAAeW,OAAOP,KAAKH,WAAYG,KAAKF,iBAAkB,SACnEE,KAAKJ,eAAeY,oBAAoBC,QAAUT,KAAKI,YAAcJ,KAAKI,YAAc,QAGpFV,EAAAW,UAAAK,WAAA,SAAWC,GACf,GAAmC,iBAAxBX,KAAKY,eACZ,OAAOZ,KAAKY,eAEZ,IAAMC,EAASb,KAAKY,eAAiBE,EAAAA,cAAcd,KAAKY,gBAAkBD,EAAME,OAChF,OAAOA,EAAOE,OAASF,EAAOG,aAI/BtB,EAAAW,UAAAY,QAAA,SAAQN,GACX,IAAMO,EAAWlB,KAAKL,SAASwB,cAAc,YAC7CnB,KAAKL,SAASyB,KAAKC,YAAYH,GAC/BA,EAASH,MAAQf,KAAKU,WAAWC,GACjCO,EAASI,SACT,IACI3B,SAAS4B,YAAY,QAAQ,EAAO,MACpCvB,KAAKC,QAAQuB,KAAK,CAAEC,WAAW,EAAMd,MAAKA,IAC1CX,KAAKD,cAAc2B,QAAQ1B,KAAKG,oBAClC,MAAOwB,GACL3B,KAAKC,QAAQuB,KAAK,CAAEC,WAAW,EAAOd,MAAKA,IAC3CX,KAAKD,cAAc6B,MAAM,gBAEzBV,EAASW,WAIjBnC,EAAAW,UAAAyB,YAAA,WACI9B,KAAKJ,eAAemC,mCAtD3BC,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,YACVC,UAAW,CAACC,EAAAA,eAAgBC,EAAAA,wFAavBC,EAAAA,OAAML,KAAA,CAACM,EAAAA,mBAvBPH,EAAAA,sBAbLI,EAAAA,kBAKAC,EAAAA,wBASKJ,EAAAA,qDAaJK,EAAAA,mCAEAC,EAAAA,2BAEAA,EAAAA,8BAEAA,EAAAA,uBAuBAC,EAAAA,aAAYX,KAAA,CAAC,QAAS,CAAC,oBCjD5B,iCALCY,EAAAA,SAAQZ,KAAA,CAAC,CACNa,aAAc,CAACpD,GACfqD,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACvD","sourcesContent":["import {\n    Directive,\n    ElementRef,\n    OnInit,\n    HostListener,\n    Input,\n    Inject,\n    ViewContainerRef,\n    OnDestroy,\n    Output,\n    EventEmitter\n} from '@angular/core';\n\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { TooltipService } from 'ngx-tethys/tooltip';\nimport { ThyNotifyService } from 'ngx-tethys/notify';\n\nexport interface ThyCopyEvent {\n    isSuccess: boolean;\n    event: Event;\n}\n\n@Directive({\n    selector: '[thyCopy]',\n    providers: [TooltipService, ThyNotifyService]\n})\nexport class ThyCopyDirective implements OnInit, OnDestroy {\n    // 默认为点击标签，可传复制目标标签\n    @Output() thyCopy = new EventEmitter<ThyCopyEvent>();\n\n    @Input() thyCopySuccessText = '复制成功';\n\n    @Input() thyCopyTips = '点击复制';\n\n    @Input() thyCopyContent: string | ElementRef | HTMLElement;\n\n    constructor(\n        @Inject(DOCUMENT) private document: any,\n        public tooltipService: TooltipService,\n        private elementRef: ElementRef<HTMLElement>,\n        private viewContainerRef: ViewContainerRef,\n        private notifyService: ThyNotifyService\n    ) {}\n\n    ngOnInit() {\n        this.tooltipService.attach(this.elementRef, this.viewContainerRef, 'hover');\n        this.tooltipService.thyTooltipDirective.content = this.thyCopyTips ? this.thyCopyTips : '点击复制';\n    }\n\n    private getContent(event: Event) {\n        if (typeof this.thyCopyContent === 'string') {\n            return this.thyCopyContent;\n        } else {\n            const target = this.thyCopyContent ? coerceElement(this.thyCopyContent) : event.target;\n            return target.value || target.textContent;\n        }\n    }\n    @HostListener('click', ['$event'])\n    public onClick(event: Event) {\n        const textarea = this.document.createElement('textarea');\n        this.document.body.appendChild(textarea);\n        textarea.value = this.getContent(event);\n        textarea.select();\n        try {\n            document.execCommand('copy', false, null);\n            this.thyCopy.emit({ isSuccess: true, event });\n            this.notifyService.success(this.thyCopySuccessText);\n        } catch (err) {\n            this.thyCopy.emit({ isSuccess: false, event });\n            this.notifyService.error('复制失败');\n        } finally {\n            textarea.remove();\n        }\n    }\n\n    ngOnDestroy() {\n        this.tooltipService.detach();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ThyCopyDirective } from './copy.directive';\n\n@NgModule({\n    declarations: [ThyCopyDirective],\n    imports: [CommonModule],\n    exports: [ThyCopyDirective]\n})\nexport class ThyCopyModule {}\n"]}