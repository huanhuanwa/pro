(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/stepper', ['exports', '@angular/core', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].stepper = {}), global.ng.core, global.ng.common));
}(this, (function (exports, core, common) { 'use strict';

    var ThyStepHeaderComponent = /** @class */ (function () {
        function ThyStepHeaderComponent() {
            this.thyStepHeader = true;
        }
        return ThyStepHeaderComponent;
    }());
    ThyStepHeaderComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-step-header',
                    template: "<div class=\"thy-step-number\"> <span>{{index + 1}}</span></div>\n<div class=\"thy-step-label\">{{label}}</div>"
                },] }
    ];
    ThyStepHeaderComponent.propDecorators = {
        label: [{ type: core.Input }],
        index: [{ type: core.Input }],
        selected: [{ type: core.HostBinding, args: ['class.thy-stepper-header-selected',] }, { type: core.Input }],
        active: [{ type: core.Input }],
        thyStepHeader: [{ type: core.HostBinding, args: ['class.thy-stepper-header',] }]
    };

    var THY_STEPPER_COMPONENT = new core.InjectionToken('THY_STEPPER_COMPONENT');
    var ThyStepComponent = /** @class */ (function () {
        function ThyStepComponent(stepper) {
            this.stepper = stepper;
        }
        ThyStepComponent.prototype.select = function () {
            this.stepper.selected = this;
        };
        return ThyStepComponent;
    }());
    ThyStepComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-step',
                    template: "<ng-template><ng-content></ng-content></ng-template>\n"
                },] }
    ];
    ThyStepComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [THY_STEPPER_COMPONENT,] }] }
    ]; };
    ThyStepComponent.propDecorators = {
        content: [{ type: core.ViewChild, args: [core.TemplateRef, { static: true },] }],
        label: [{ type: core.Input }],
        thyLabel: [{ type: core.Input }]
    };

    var ThyStepperComponent = /** @class */ (function () {
        function ThyStepperComponent() {
            this.thyShowStepHeader = true;
            this._selectedIndex = 0;
            this.selectionChange = new core.EventEmitter();
            this.thyStepper = true;
        }
        Object.defineProperty(ThyStepperComponent.prototype, "thySelectedIndex", {
            set: function (value) {
                this.selectedIndex = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyStepperComponent.prototype, "thySelected", {
            set: function (value) {
                this.selected = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyStepperComponent.prototype, "selected", {
            get: function () {
                return this.steps ? this.steps.toArray()[this.selectedIndex] : null;
            },
            set: function (step) {
                this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyStepperComponent.prototype, "selectedIndex", {
            get: function () {
                return this._selectedIndex;
            },
            set: function (index) {
                if (this.steps) {
                    this._updateSelectedItemIndex(index);
                }
                else {
                    this._selectedIndex = index;
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyStepperComponent.prototype._updateSelectedItemIndex = function (newIndex) {
            var stepsArray = this.steps.toArray();
            this.selectionChange.emit({
                selectedIndex: newIndex,
                previouslySelectedIndex: this._selectedIndex,
                selectedStep: stepsArray[newIndex],
                previouslySelectedStep: stepsArray[this._selectedIndex]
            });
            this._selectedIndex = newIndex;
        };
        ThyStepperComponent.prototype.to = function (index) {
            this.selectedIndex = Math.min(index, this.steps.length - 1);
        };
        ThyStepperComponent.prototype.next = function () {
            this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);
        };
        /** Selects and focuses the previous step in list. */
        ThyStepperComponent.prototype.previous = function () {
            this.selectedIndex = Math.max(this._selectedIndex - 1, 0);
        };
        return ThyStepperComponent;
    }());
    ThyStepperComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'thy-stepper',
                    template: "<div *ngIf=\"thyShowStepHeader\" class=\"thy-stepper-header-container\">\n  <ng-container *ngFor=\"let step of steps; let i = index; let isLast = last\">\n    <thy-step-header\n      [index]=\"i\"\n      [label]=\"step.thyLabel || step.label\"\n      [selected]=\"selectedIndex === i\"\n      [class.thy-stepper-header-active]=\"i <= selectedIndex\"\n      [active]=\"i <= selectedIndex\"\n    >\n    </thy-step-header>\n    <div *ngIf=\"!isLast\" class=\"thy-stepper-line\" [class.thy-stepper-line-active]=\"i < selectedIndex\"></div>\n  </ng-container>\n</div>\n\n<div class=\"thy-stepper-content-container\">\n  <ng-container [ngTemplateOutlet]=\"selected?.content\"></ng-container>\n</div>\n",
                    providers: [
                        {
                            provide: THY_STEPPER_COMPONENT,
                            useExisting: ThyStepperComponent
                        }
                    ]
                },] }
    ];
    ThyStepperComponent.propDecorators = {
        thySelectedIndex: [{ type: core.Input }],
        thySelected: [{ type: core.Input }],
        thyShowStepHeader: [{ type: core.Input }],
        selectionChange: [{ type: core.Output }],
        stepHeaders: [{ type: core.ViewChildren, args: [ThyStepHeaderComponent,] }],
        steps: [{ type: core.ContentChildren, args: [ThyStepComponent,] }],
        thyStepper: [{ type: core.HostBinding, args: ['class.thy-stepper',] }]
    };

    /** Button that moves to the next step in a stepper workflow. */
    var ThyStepperNextDirective = /** @class */ (function () {
        function ThyStepperNextDirective(stepper) {
            this.stepper = stepper;
        }
        ThyStepperNextDirective.prototype.click = function ($event) {
            this.stepper.next();
        };
        return ThyStepperNextDirective;
    }());
    ThyStepperNextDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[thyStepperNext]'
                },] }
    ];
    ThyStepperNextDirective.ctorParameters = function () { return [
        { type: ThyStepperComponent }
    ]; };
    ThyStepperNextDirective.propDecorators = {
        click: [{ type: core.HostListener, args: ['click', ['$event'],] }]
    };
    /** Button that moves to the previous step in a stepper workflow. */
    var ThyStepperPreviousDirective = /** @class */ (function () {
        function ThyStepperPreviousDirective(stepper) {
            this.stepper = stepper;
        }
        ThyStepperPreviousDirective.prototype.click = function ($event) {
            this.stepper.previous();
        };
        return ThyStepperPreviousDirective;
    }());
    ThyStepperPreviousDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[thyStepperPrevious]'
                },] }
    ];
    ThyStepperPreviousDirective.ctorParameters = function () { return [
        { type: ThyStepperComponent }
    ]; };
    ThyStepperPreviousDirective.propDecorators = {
        click: [{ type: core.HostListener, args: ['click', ['$event'],] }]
    };

    var ThyStepperModule = /** @class */ (function () {
        function ThyStepperModule() {
        }
        return ThyStepperModule;
    }());
    ThyStepperModule.decorators = [
        { type: core.NgModule, args: [{
                    declarations: [ThyStepHeaderComponent, ThyStepperComponent, ThyStepComponent, ThyStepperNextDirective, ThyStepperPreviousDirective],
                    entryComponents: [],
                    imports: [common.CommonModule],
                    exports: [ThyStepperComponent, ThyStepComponent, ThyStepHeaderComponent, ThyStepperNextDirective, ThyStepperPreviousDirective],
                    providers: []
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.THY_STEPPER_COMPONENT = THY_STEPPER_COMPONENT;
    exports.ThyStepComponent = ThyStepComponent;
    exports.ThyStepHeaderComponent = ThyStepHeaderComponent;
    exports.ThyStepperComponent = ThyStepperComponent;
    exports.ThyStepperModule = ThyStepperModule;
    exports.ThyStepperNextDirective = ThyStepperNextDirective;
    exports.ThyStepperPreviousDirective = ThyStepperPreviousDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-tethys-stepper.umd.js.map
