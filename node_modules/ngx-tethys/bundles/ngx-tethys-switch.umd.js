(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/common'),exports, require('@angular/core'), require('@angular/common'), require('@angular/forms'), require('ngx-tethys/util')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/switch', ['@angular/core','@angular/common','exports', '@angular/core', '@angular/common', '@angular/forms', 'ngx-tethys/util'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ng.common,(global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].switch = {}), global.ng.core, global.ng.common, global.ng.forms, global['ngx-tethys'].util));
}(this, (function (ɵngcc0,ɵngcc1,exports, core, common, forms, util) { 
var _c0 = ["switch"];
'use strict';

    var ThySwitchComponent = /** @class */ (function () {
        function ThySwitchComponent() {
            this.type = 'primary';
            this.size = '';
            this.disabled = false;
            this.typeArray = ['primary', 'info', 'warning', 'danger'];
            this.sizeArray = ['lg', '', 'sm'];
            this.initialized = false;
            this.thyChange = new core.EventEmitter();
            this.onModelChange = function () { };
            this.onModelTouched = function () { };
        }
        Object.defineProperty(ThySwitchComponent.prototype, "thyType", {
            set: function (value) {
                if (!this.typeArray.includes(value)) {
                    value = 'primary';
                }
                this.type = value;
                if (this.initialized) {
                    this.setClassNames();
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThySwitchComponent.prototype, "thySize", {
            set: function (value) {
                if (!this.sizeArray.includes(value)) {
                    value = '';
                }
                this.size = value;
                if (this.initialized) {
                    this.setClassNames();
                }
            },
            enumerable: false,
            configurable: true
        });
        ThySwitchComponent.prototype.ngOnInit = function () {
            this.setClassNames();
            this.initialized = true;
        };
        ThySwitchComponent.prototype.ngOnChanges = function (changes) {
            // 兼容降级后的Switch，使用onChanges
            if (changes.thyDisabled) {
                var value = changes.thyDisabled.currentValue;
                this.disabled = util.helpers.isBoolean(value) ? Boolean(value) : value === 'true' || value === '1';
                this.setClassNames();
            }
        };
        ThySwitchComponent.prototype.writeValue = function (value) {
            this.model = value;
            // this.setClassNames();
        };
        ThySwitchComponent.prototype.registerOnChange = function (fn) {
            this.onModelChange = fn;
        };
        ThySwitchComponent.prototype.registerOnTouched = function (fn) {
            this.onModelTouched = fn;
        };
        ThySwitchComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
            this.setClassNames();
        };
        ThySwitchComponent.prototype.toggle = function (event) {
            this.model = !this.model;
            this.onModelChange(this.model);
            this.thyChange.emit(event);
        };
        ThySwitchComponent.prototype.setClassNames = function () {
            this.classNames = ["thy-switch-" + this.type];
            if (this.size) {
                this.classNames.push("thy-switch-" + this.size);
            }
            if (this.disabled) {
                this.classNames.push("thy-switch-disabled");
                if (this.model) {
                    this.classNames.push("thy-switch-disabled-true");
                }
            }
        };
ThySwitchComponent.ɵfac = function ThySwitchComponent_Factory(t) { return new (t || ThySwitchComponent)(); };
ThySwitchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThySwitchComponent, selectors: [["thy-switch"]], viewQuery: function ThySwitchComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.switchElementRef = _t.first);
    } }, inputs: { thyType: "thyType", thySize: "thySize", thyDisabled: "thyDisabled" }, outputs: { thyChange: "thyChange" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: forms.NG_VALUE_ACCESSOR,
                useExisting: core.forwardRef(function () { return ThySwitchComponent; }),
                multi: true
            }
        ]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 3, consts: [[1, "thy-switch", 3, "ngClass"], ["switch", ""], ["type", "checkbox", 1, "thy-switch-input", 3, "disabled", "checked", "change"], [1, "thy-switch-label"], [1, "thy-switch-handle"]], template: function ThySwitchComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "label", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "input", 2);
        ɵngcc0.ɵɵlistener("change", function ThySwitchComponent_Template_input_change_2_listener($event) { return ctx.toggle($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(3, "span", 3);
        ɵngcc0.ɵɵelement(4, "span", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ctx.classNames);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", ctx.disabled)("checked", ctx.model);
    } }, directives: [ɵngcc1.NgClass], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThySwitchComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-switch',
                template: "<label #switch class=\"thy-switch\" [ngClass]=\"classNames\">\n    <input type=\"checkbox\" [disabled]=\"disabled\" class=\"thy-switch-input\" [checked]=\"model\" (change)=\"toggle($event)\">\n    <span class=\"thy-switch-label\"></span>\n    <span class=\"thy-switch-handle\"></span>\n</label>",
                providers: [
                    {
                        provide: forms.NG_VALUE_ACCESSOR,
                        useExisting: core.forwardRef(function () { return ThySwitchComponent; }),
                        multi: true
                    }
                ]
            }]
    }], function () { return []; }, { thyChange: [{
            type: core.Output
        }], thyType: [{
            type: core.Input
        }], thySize: [{
            type: core.Input
        }], switchElementRef: [{
            type: core.ViewChild,
            args: ['switch', { static: true }]
        }], thyDisabled: [{
            type: core.Input
        }] }); })();
        return ThySwitchComponent;
    }());
    ThySwitchComponent.ctorParameters = function () { return []; };
    ThySwitchComponent.propDecorators = {
        switchElementRef: [{ type: core.ViewChild, args: ['switch', { static: true },] }],
        thyType: [{ type: core.Input }],
        thySize: [{ type: core.Input }],
        thyDisabled: [{ type: core.Input }],
        thyChange: [{ type: core.Output }]
    };

    var ThySwitchModule = /** @class */ (function () {
        function ThySwitchModule() {
        }
ThySwitchModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThySwitchModule });
ThySwitchModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThySwitchModule_Factory(t) { return new (t || ThySwitchModule)(); }, imports: [[
            common.CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThySwitchModule, { declarations: [ThySwitchComponent], imports: [ɵngcc1.CommonModule], exports: [ThySwitchComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThySwitchModule, [{
        type: core.NgModule,
        args: [{
                declarations: [
                    ThySwitchComponent
                ],
                entryComponents: [
                    ThySwitchComponent
                ],
                imports: [
                    common.CommonModule
                ],
                exports: [
                    ThySwitchComponent
                ]
            }]
    }], function () { return []; }, null); })();
        return ThySwitchModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ThySwitchComponent = ThySwitchComponent;
    exports.ThySwitchModule = ThySwitchModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-tethys-switch.umd.js.map