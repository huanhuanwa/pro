(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('ngx-tethys/core'),require('@angular/common'),require('ngx-tethys/shared'),require('@angular/forms'),require('ngx-tethys/icon'),exports, require('@angular/core'), require('@angular/common'), require('ngx-tethys/core'), require('ngx-tethys/util'), require('@angular/forms'), require('rxjs/operators'), require('ngx-tethys/shared'), require('ngx-tethys/icon')) :
    typeof define === 'function' && define.amd ? define('ngx-tethys/input', ['@angular/core','ngx-tethys/core','@angular/common','ngx-tethys/shared','@angular/forms','ngx-tethys/icon','exports', '@angular/core', '@angular/common', 'ngx-tethys/core', 'ngx-tethys/util', '@angular/forms', 'rxjs/operators', 'ngx-tethys/shared', 'ngx-tethys/icon'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ngxTethys.core,global.ng.common,global.ngxTethys.shared,global.ng.forms,global.ngxTethys.icon,(global['ngx-tethys'] = global['ngx-tethys'] || {}, global['ngx-tethys'].input = {}), global.ng.core, global.ng.common, global['ngx-tethys'].core, global['ngx-tethys'].util, global.ng.forms, global.rxjs.operators, global['ngx-tethys'].shared, global['ngx-tethys'].icon));
}(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,exports, core, common, core$1, util, forms, operators, shared, icon) { 
var _c0 = ["append"];
var _c1 = ["prepend"];
var _c2 = ["eye"];
function ThyInputComponent_div_0_2_ng_template_0_Template(rf, ctx) { }
function ThyInputComponent_div_0_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThyInputComponent_div_0_2_ng_template_0_Template, 0, 0, "ng-template");
} }
function ThyInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5, 6);
    ɵngcc0.ɵɵtemplate(2, ThyInputComponent_div_0_2_Template, 1, 0, undefined, 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.prependTemplate);
} }
function ThyInputComponent_div_5_2_ng_template_0_Template(rf, ctx) { }
function ThyInputComponent_div_5_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThyInputComponent_div_5_2_ng_template_0_Template, 0, 0, "ng-template");
} }
function ThyInputComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8, 9);
    ɵngcc0.ɵɵtemplate(2, ThyInputComponent_div_5_2_Template, 1, 0, undefined, 7);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.appendTemplate);
} }
function ThyInputComponent_ng_template_6_thy_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 13);
} }
function ThyInputComponent_ng_template_6_thy_icon_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 14);
} }
function ThyInputComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 10);
    ɵngcc0.ɵɵlistener("click", function ThyInputComponent_ng_template_6_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.togglePasswordType(); });
    ɵngcc0.ɵɵtemplate(1, ThyInputComponent_ng_template_6_thy_icon_1_Template, 1, 0, "thy-icon", 11);
    ɵngcc0.ɵɵtemplate(2, ThyInputComponent_ng_template_6_thy_icon_2_Template, 1, 0, "thy-icon", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r4.isPassword(ctx_r4.type));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r4.isPassword(ctx_r4.type));
} }
function ThyInputGroupComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "span", 3);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.prependText);
} }
function ThyInputGroupComponent_div_1_1_ng_template_0_Template(rf, ctx) { }
function ThyInputGroupComponent_div_1_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThyInputGroupComponent_div_1_1_ng_template_0_Template, 0, 0, "ng-template");
} }
function ThyInputGroupComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵtemplate(1, ThyInputGroupComponent_div_1_1_Template, 1, 0, undefined, 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.prependTemplate);
} }
function ThyInputGroupComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵelementStart(1, "span", 3);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.appendText);
} }
function ThyInputGroupComponent_div_4_1_ng_template_0_Template(rf, ctx) { }
function ThyInputGroupComponent_div_4_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThyInputGroupComponent_div_4_1_ng_template_0_Template, 0, 0, "ng-template");
} }
function ThyInputGroupComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 5);
    ɵngcc0.ɵɵtemplate(1, ThyInputGroupComponent_div_4_1_Template, 1, 0, undefined, 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r3.appendTemplate);
} }
var _c3 = ["*"];
function ThyInputSearchComponent_a_2_Template(rf, ctx) { if (rf & 1) {
    var _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 3);
    ɵngcc0.ɵɵlistener("click", function ThyInputSearchComponent_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); var ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.clearSearchText($event); });
    ɵngcc0.ɵɵelement(1, "thy-icon", 4);
    ɵngcc0.ɵɵelementEnd();
} }
'use strict';

    var inputGroupSizeMap$1 = {
        xs: ['form-control-xs'],
        sm: ['form-control-sm'],
        md: ['form-control-md'],
        lg: ['form-control-lg']
    };
    var ThyInputDirective = /** @class */ (function () {
        function ThyInputDirective(updateHostClassService, elementRef, render) {
            this.updateHostClassService = updateHostClassService;
            this.elementRef = elementRef;
            this.render = render;
            this._isFormControl = true;
            this.initialized = false;
            this.updateHostClassService.initializeElement(elementRef.nativeElement);
        }
        Object.defineProperty(ThyInputDirective.prototype, "thySize", {
            set: function (size) {
                if (size && inputGroupSizeMap$1[size]) {
                    this.updateHostClassService.updateClass(inputGroupSizeMap$1[size]);
                }
                else {
                    this.updateHostClassService.updateClass([]);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyInputDirective.prototype, "thyAutocomplete", {
            set: function (value) {
                this.autocomplete = util.coerceBooleanProperty(value);
                if (this.initialized) {
                    this.setAutocomplete();
                }
            },
            enumerable: false,
            configurable: true
        });
        ThyInputDirective.prototype.ngOnInit = function () {
            this.initialized = true;
            this.setAutocomplete();
        };
        ThyInputDirective.prototype.setAutocomplete = function () {
            this.render.setAttribute(this.elementRef.nativeElement, 'autocomplete', this.autocomplete ? 'on' : 'off');
        };
ThyInputDirective.ɵfac = function ThyInputDirective_Factory(t) { return new (t || ThyInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UpdateHostClassService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ThyInputDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyInputDirective, selectors: [["", "thyInput", ""]], hostVars: 2, hostBindings: function ThyInputDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("form-control", ctx._isFormControl);
    } }, inputs: { thySize: "thySize", thyAutocomplete: "thyAutocomplete" }, features: [ɵngcc0.ɵɵProvidersFeature([core$1.UpdateHostClassService])] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyInputDirective, [{
        type: core.Directive,
        args: [{
                selector: '[thyInput]',
                providers: [core$1.UpdateHostClassService]
            }]
    }], function () { return [{ type: ɵngcc1.UpdateHostClassService }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { _isFormControl: [{
            type: core.HostBinding,
            args: ['class.form-control']
        }], thySize: [{
            type: core.Input
        }], thyAutocomplete: [{
            type: core.Input
        }] }); })();
        return ThyInputDirective;
    }());
    ThyInputDirective.ctorParameters = function () { return [
        { type: core$1.UpdateHostClassService },
        { type: core.ElementRef },
        { type: core.Renderer2 }
    ]; };
    ThyInputDirective.propDecorators = {
        _isFormControl: [{ type: core.HostBinding, args: ['class.form-control',] }],
        thySize: [{ type: core.Input }],
        thyAutocomplete: [{ type: core.Input }]
    };

    var CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: core.forwardRef(function () { return ThyInputComponent; }),
        multi: true
    };
    var noop$1 = function () { };
    var ɵ0$1 = noop$1;
    var password = 'password';
    var ThyInputComponent = /** @class */ (function () {
        function ThyInputComponent(ngZone) {
            this.ngZone = ngZone;
            this.placeholder = '';
            this.thyAutofocus = false;
            this.readonly = false;
            this.focus = new core.EventEmitter();
            this.blur = new core.EventEmitter();
            this._type = 'text';
            this.onTouchedCallback = noop$1;
            this.onChangeCallback = noop$1;
            this._isSearchContainer = true;
            this._isFormControl = true;
            this._isFocus = false;
            this.disabled = false;
        }
        Object.defineProperty(ThyInputComponent.prototype, "thyType", {
            set: function (value) {
                this.type = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyInputComponent.prototype, "thyAutocomplete", {
            set: function (value) {
                this.autocomplete = value;
            },
            enumerable: false,
            configurable: true
        });
        ThyInputComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.ngZone.onStable.pipe(operators.take(1)).subscribe(function () {
                if (_this.isPassword(_this.type)) {
                    _this.appendTemplate = _this.eyeTemplate;
                }
            });
        };
        ThyInputComponent.prototype.writeValue = function (value) {
            this.value = value;
        };
        ThyInputComponent.prototype.registerOnChange = function (fn) {
            this.onChangeCallback = fn;
        };
        ThyInputComponent.prototype.registerOnTouched = function (fn) {
            this.onTouchedCallback = fn;
        };
        ThyInputComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
        };
        ThyInputComponent.prototype.onModelChange = function () {
            this.onChangeCallback(this.value);
        };
        ThyInputComponent.prototype.onInputFocus = function (event) {
            this._isFocus = true;
            this.showLabel = true;
            this.focus.emit(event);
        };
        ThyInputComponent.prototype.onInputBlur = function (event) {
            this._isFocus = false;
            this.showLabel = false;
            this.blur.emit(event);
        };
        ThyInputComponent.prototype.isPassword = function (value) {
            return value === password;
        };
        ThyInputComponent.prototype.togglePasswordType = function () {
            this.type = this.isPassword(this.type) ? 'text' : 'password';
        };
ThyInputComponent.ɵfac = function ThyInputComponent_Factory(t) { return new (t || ThyInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ThyInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyInputComponent, selectors: [["thy-input"]], contentQueries: function ThyInputComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c1, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.appendTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.prependTemplate = _t.first);
    } }, viewQuery: function ThyInputComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c2, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.eyeTemplate = _t.first);
    } }, hostVars: 8, hostBindings: function ThyInputComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-input", ctx._isSearchContainer)("form-control", ctx._isFormControl)("form-control-active", ctx._isFocus)("disabled", ctx.disabled);
    } }, inputs: { placeholder: "placeholder", thyAutofocus: "thyAutofocus", readonly: "readonly", thyType: "thyType", thyAutocomplete: "thyAutocomplete", type: "type", thySize: "thySize", thyLabelText: "thyLabelText" }, outputs: { focus: "focus", blur: "blur" }, features: [ɵngcc0.ɵɵProvidersFeature([core$1.UpdateHostClassService, CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR])], decls: 8, vars: 16, consts: [["class", "input-prepend", 4, "ngIf"], ["thyInput", "", 3, "thySize", "thyAutofocus", "type", "placeholder", "disabled", "thyAutocomplete", "ngModel", "readonly", "ngModelChange", "focus", "blur"], ["input", ""], ["class", "input-append", 4, "ngIf"], ["eye", ""], [1, "input-prepend"], ["prepend", ""], [4, "ngTemplateOutlet"], [1, "input-append"], ["append", ""], ["href", "javascript:;", 1, "link-secondary", "input-password-icon", 3, "click"], ["thyIconName", "eye", 4, "ngIf"], ["thyIconName", "eye-invisible", 4, "ngIf"], ["thyIconName", "eye"], ["thyIconName", "eye-invisible"]], template: function ThyInputComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ThyInputComponent_div_0_Template, 3, 1, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "span");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "input", 1, 2);
        ɵngcc0.ɵɵlistener("ngModelChange", function ThyInputComponent_Template_input_ngModelChange_3_listener($event) { return ctx.value = $event; })("ngModelChange", function ThyInputComponent_Template_input_ngModelChange_3_listener() { return ctx.onModelChange(); })("focus", function ThyInputComponent_Template_input_focus_3_listener($event) { return ctx.onInputFocus($event); })("blur", function ThyInputComponent_Template_input_blur_3_listener($event) { return ctx.onInputBlur($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, ThyInputComponent_div_5_Template, 3, 1, "div", 3);
        ɵngcc0.ɵɵtemplate(6, ThyInputComponent_ng_template_6_Template, 3, 2, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.prependTemplate);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵclassMapInterpolate1("input-label input-label-", ctx.thySize, "");
        ɵngcc0.ɵɵclassProp("active", ctx.showLabel);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.thyLabelText);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("thySize", ctx.thySize)("thyAutofocus", ctx.thyAutofocus)("type", ctx.type)("placeholder", ctx.placeholder)("disabled", ctx.disabled)("thyAutocomplete", ctx.autocomplete)("ngModel", ctx.value)("readonly", ctx.readonly);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.appendTemplate);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.ThyAutofocusDirective, ɵngcc4.DefaultValueAccessor, ThyInputDirective, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc2.NgTemplateOutlet, ɵngcc5.ThyIconComponent], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyInputComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-input',
                template: "<div #prepend class=\"input-prepend\" *ngIf=\"prependTemplate\">\n  <ng-template *ngTemplateOutlet=\"prependTemplate\"></ng-template>\n</div>\n<span class=\"input-label input-label-{{ thySize }}\" [class.active]=\"showLabel\">{{ thyLabelText }}</span>\n<input\n  #input\n  thyInput\n  [thySize]=\"thySize\"\n  [thyAutofocus]=\"thyAutofocus\"\n  [type]=\"type\"\n  [placeholder]=\"placeholder\"\n  [disabled]=\"disabled\"\n  [thyAutocomplete]=\"autocomplete\"\n  [(ngModel)]=\"value\"\n  (ngModelChange)=\"onModelChange()\"\n  (focus)=\"onInputFocus($event)\"\n  (blur)=\"onInputBlur($event)\"\n  [readonly]=\"readonly\"\n/>\n<div #append class=\"input-append\" *ngIf=\"appendTemplate\">\n  <ng-template *ngTemplateOutlet=\"appendTemplate\"></ng-template>\n</div>\n\n<ng-template #eye>\n  <a href=\"javascript:;\" class=\"link-secondary input-password-icon\" (click)=\"togglePasswordType()\">\n    <thy-icon *ngIf=\"isPassword(type)\" thyIconName=\"eye\"></thy-icon>\n    <thy-icon *ngIf=\"!isPassword(type)\" thyIconName=\"eye-invisible\"></thy-icon>\n  </a>\n</ng-template>\n",
                providers: [core$1.UpdateHostClassService, CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],
                encapsulation: core.ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc0.NgZone }]; }, { placeholder: [{
            type: core.Input
        }], thyAutofocus: [{
            type: core.Input
        }], readonly: [{
            type: core.Input
        }], focus: [{
            type: core.Output
        }], blur: [{
            type: core.Output
        }], _isSearchContainer: [{
            type: core.HostBinding,
            args: ['class.thy-input']
        }], _isFormControl: [{
            type: core.HostBinding,
            args: ['class.form-control']
        }], _isFocus: [{
            type: core.HostBinding,
            args: ['class.form-control-active']
        }], disabled: [{
            type: core.HostBinding,
            args: ['class.disabled']
        }], thyType: [{
            type: core.Input
        }], thyAutocomplete: [{
            type: core.Input
        }], type: [{
            type: core.Input
        }], thySize: [{
            type: core.Input
        }], thyLabelText: [{
            type: core.Input
        }], appendTemplate: [{
            type: core.ContentChild,
            args: ['append']
        }], prependTemplate: [{
            type: core.ContentChild,
            args: ['prepend']
        }], eyeTemplate: [{
            type: core.ViewChild,
            args: ['eye', { static: true }]
        }] }); })();
        return ThyInputComponent;
    }());
    ThyInputComponent.ctorParameters = function () { return [
        { type: core.NgZone }
    ]; };
    ThyInputComponent.propDecorators = {
        placeholder: [{ type: core.Input }],
        thySize: [{ type: core.Input }],
        thyAutofocus: [{ type: core.Input }],
        type: [{ type: core.Input }],
        thyType: [{ type: core.Input }],
        thyLabelText: [{ type: core.Input }],
        readonly: [{ type: core.Input }],
        thyAutocomplete: [{ type: core.Input }],
        focus: [{ type: core.Output }],
        blur: [{ type: core.Output }],
        appendTemplate: [{ type: core.ContentChild, args: ['append',] }],
        prependTemplate: [{ type: core.ContentChild, args: ['prepend',] }],
        eyeTemplate: [{ type: core.ViewChild, args: ['eye', { static: true },] }],
        _isSearchContainer: [{ type: core.HostBinding, args: ['class.thy-input',] }],
        _isFormControl: [{ type: core.HostBinding, args: ['class.form-control',] }],
        _isFocus: [{ type: core.HostBinding, args: ['class.form-control-active',] }],
        disabled: [{ type: core.HostBinding, args: ['class.disabled',] }]
    };

    var inputGroupSizeMap = {
        sm: ['input-group-sm'],
        lg: ['input-group-lg']
    };
    var ThyInputGroupComponent = /** @class */ (function () {
        function ThyInputGroupComponent(thyTranslate, updateHostClassService, elementRef) {
            this.thyTranslate = thyTranslate;
            this.updateHostClassService = updateHostClassService;
            this.elementRef = elementRef;
            this._isInputGroup = true;
            this.updateHostClassService.initializeElement(elementRef.nativeElement);
        }
        Object.defineProperty(ThyInputGroupComponent.prototype, "thyAppendText", {
            set: function (value) {
                this.appendText = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyInputGroupComponent.prototype, "thyAppendTextTranslateKey", {
            set: function (value) {
                if (value) {
                    this.appendText = this.thyTranslate.instant(value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyInputGroupComponent.prototype, "thyPrependText", {
            set: function (value) {
                this.prependText = value;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyInputGroupComponent.prototype, "thyPrependTextTranslateKey", {
            set: function (value) {
                if (value) {
                    this.prependText = this.thyTranslate.instant(value);
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyInputGroupComponent.prototype, "thySize", {
            set: function (size) {
                if (size && inputGroupSizeMap[size]) {
                    this.updateHostClassService.updateClass(inputGroupSizeMap[size]);
                }
                else {
                    this.updateHostClassService.updateClass([]);
                }
            },
            enumerable: false,
            configurable: true
        });
ThyInputGroupComponent.ɵfac = function ThyInputGroupComponent_Factory(t) { return new (t || ThyInputGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyTranslate), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UpdateHostClassService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyInputGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyInputGroupComponent, selectors: [["thy-input-group"]], contentQueries: function ThyInputGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c1, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.appendTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.prependTemplate = _t.first);
    } }, hostVars: 2, hostBindings: function ThyInputGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-input-group", ctx._isInputGroup);
    } }, inputs: { thyAppendText: "thyAppendText", thyAppendTextTranslateKey: "thyAppendTextTranslateKey", thyPrependText: "thyPrependText", thyPrependTextTranslateKey: "thyPrependTextTranslateKey", thySize: "thySize" }, features: [ɵngcc0.ɵɵProvidersFeature([core$1.UpdateHostClassService])], ngContentSelectors: _c3, decls: 5, vars: 4, consts: [["class", "input-group-prepend", 4, "ngIf"], ["class", "input-group-append", 4, "ngIf"], [1, "input-group-prepend"], [1, "input-group-text"], [4, "ngTemplateOutlet"], [1, "input-group-append"]], template: function ThyInputGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ThyInputGroupComponent_div_0_Template, 3, 1, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ThyInputGroupComponent_div_1_Template, 2, 1, "div", 0);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵtemplate(3, ThyInputGroupComponent_div_3_Template, 3, 1, "div", 1);
        ɵngcc0.ɵɵtemplate(4, ThyInputGroupComponent_div_4_Template, 2, 1, "div", 1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.prependText);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.prependTemplate);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.appendText);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.appendTemplate);
    } }, directives: [ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyInputGroupComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-input-group',
                template: "<div class=\"input-group-prepend\" *ngIf=\"prependText\">\n    <span class=\"input-group-text\">{{prependText}}</span>\n</div>\n<div class=\"input-group-prepend\" *ngIf=\"prependTemplate\">\n    <ng-template *ngTemplateOutlet=\"prependTemplate\"></ng-template>\n</div>\n<ng-content></ng-content>\n<div class=\"input-group-append\" *ngIf=\"appendText\">\n    <span class=\"input-group-text\">{{appendText}}</span>\n</div>\n<div class=\"input-group-append\" *ngIf=\"appendTemplate\">\n    <ng-template *ngTemplateOutlet=\"appendTemplate\"></ng-template>\n</div>",
                providers: [core$1.UpdateHostClassService],
                encapsulation: core.ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.ThyTranslate }, { type: ɵngcc1.UpdateHostClassService }, { type: ɵngcc0.ElementRef }]; }, { _isInputGroup: [{
            type: core.HostBinding,
            args: ['class.thy-input-group']
        }], thyAppendText: [{
            type: core.Input
        }], thyAppendTextTranslateKey: [{
            type: core.Input
        }], thyPrependText: [{
            type: core.Input
        }], thyPrependTextTranslateKey: [{
            type: core.Input
        }], thySize: [{
            type: core.Input
        }], appendTemplate: [{
            type: core.ContentChild,
            args: ['append']
        }], prependTemplate: [{
            type: core.ContentChild,
            args: ['prepend']
        }] }); })();
        return ThyInputGroupComponent;
    }());
    ThyInputGroupComponent.ctorParameters = function () { return [
        { type: core$1.ThyTranslate },
        { type: core$1.UpdateHostClassService },
        { type: core.ElementRef }
    ]; };
    ThyInputGroupComponent.propDecorators = {
        _isInputGroup: [{ type: core.HostBinding, args: ['class.thy-input-group',] }],
        thyAppendText: [{ type: core.Input }],
        thyAppendTextTranslateKey: [{ type: core.Input }],
        thyPrependText: [{ type: core.Input }],
        thyPrependTextTranslateKey: [{ type: core.Input }],
        thySize: [{ type: core.Input }],
        appendTemplate: [{ type: core.ContentChild, args: ['append',] }],
        prependTemplate: [{ type: core.ContentChild, args: ['prepend',] }]
    };

    var CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: core.forwardRef(function () { return ThyInputSearchComponent; }),
        multi: true
    };
    var noop = function () { };
    var ɵ0 = noop;
    var ThyInputSearchComponent = /** @class */ (function () {
        function ThyInputSearchComponent(cdr) {
            this.cdr = cdr;
            this.onTouchedCallback = noop;
            this.onChangeCallback = noop;
            this.disabled = false;
            this.autoFocus = false;
            this._isSearchContainer = true;
            this._isSearchEllipse = false;
            this.name = '';
            this.placeholder = '';
            this.clear = new core.EventEmitter();
        }
        Object.defineProperty(ThyInputSearchComponent.prototype, "thyTheme", {
            set: function (value) {
                if (value === 'ellipse') {
                    this._isSearchEllipse = true;
                }
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ThyInputSearchComponent.prototype, "thySearchFocus", {
            set: function (value) {
                this.autoFocus = value;
            },
            enumerable: false,
            configurable: true
        });
        ThyInputSearchComponent.prototype.writeValue = function (value) {
            this.searchText = value;
            this.cdr.markForCheck();
        };
        ThyInputSearchComponent.prototype.registerOnChange = function (fn) {
            this.onChangeCallback = fn;
        };
        ThyInputSearchComponent.prototype.registerOnTouched = function (fn) {
            this.onTouchedCallback = fn;
        };
        ThyInputSearchComponent.prototype.setDisabledState = function (isDisabled) {
            this.disabled = isDisabled;
        };
        ThyInputSearchComponent.prototype.searchModelChange = function () {
            this.onChangeCallback(this.searchText);
        };
        ThyInputSearchComponent.prototype.clearSearchText = function (event) {
            event.stopPropagation();
            if (this.disabled) {
                return;
            }
            this.searchText = '';
            this.onChangeCallback(this.searchText);
            this.clear.emit(event);
        };
ThyInputSearchComponent.ɵfac = function ThyInputSearchComponent_Factory(t) { return new (t || ThyInputSearchComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ThyInputSearchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyInputSearchComponent, selectors: [["thy-input-search"]], hostVars: 4, hostBindings: function ThyInputSearchComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("input-search-container", ctx._isSearchContainer)("input-search-ellipse", ctx._isSearchEllipse);
    } }, inputs: { name: "name", placeholder: "placeholder", thyTheme: "thyTheme", thySearchFocus: "thySearchFocus", thySize: "thySize" }, outputs: { clear: "clear" }, features: [ɵngcc0.ɵɵProvidersFeature([core$1.UpdateHostClassService, CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR])], decls: 3, vars: 7, consts: [["thyIconName", "search", 1, "input-prefix-icon"], ["thyInput", "", 1, "input-search-control", 3, "name", "placeholder", "disabled", "thyAutofocus", "ngModel", "thySize", "ngModelChange", "blur"], ["class", "close input-suffix-icon", "href", "javascript:;", 3, "click", 4, "ngIf"], ["href", "javascript:;", 1, "close", "input-suffix-icon", 3, "click"], ["thyIconName", "close"]], template: function ThyInputSearchComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "thy-icon", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1);
        ɵngcc0.ɵɵlistener("ngModelChange", function ThyInputSearchComponent_Template_input_ngModelChange_1_listener($event) { return ctx.searchText = $event; })("ngModelChange", function ThyInputSearchComponent_Template_input_ngModelChange_1_listener() { return ctx.searchModelChange(); })("blur", function ThyInputSearchComponent_Template_input_blur_1_listener() { return ctx.onTouchedCallback(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, ThyInputSearchComponent_a_2_Template, 2, 0, "a", 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("placeholder", ctx.placeholder)("disabled", ctx.disabled)("thyAutofocus", ctx.autoFocus)("ngModel", ctx.searchText)("thySize", ctx.thySize);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.searchText);
    } }, directives: [ɵngcc5.ThyIconComponent, ɵngcc3.ThyAutofocusDirective, ɵngcc4.DefaultValueAccessor, ThyInputDirective, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc2.NgIf], encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyInputSearchComponent, [{
        type: core.Component,
        args: [{
                selector: 'thy-input-search',
                template: "<thy-icon class=\"input-prefix-icon\" thyIconName=\"search\"></thy-icon>\n<input\n  class=\"input-search-control\"\n  thyInput\n  [name]=\"name\"\n  [placeholder]=\"placeholder\"\n  [disabled]=\"disabled\"\n  [thyAutofocus]=\"autoFocus\"\n  [(ngModel)]=\"searchText\"\n  (ngModelChange)=\"searchModelChange()\"\n  (blur)=\"onTouchedCallback()\"\n  [thySize]=\"thySize\"\n/>\n<a *ngIf=\"searchText\" class=\"close input-suffix-icon\" href=\"javascript:;\" (click)=\"clearSearchText($event)\">\n  <thy-icon thyIconName=\"close\"></thy-icon>\n</a>\n",
                providers: [core$1.UpdateHostClassService, CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR],
                encapsulation: core.ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { _isSearchContainer: [{
            type: core.HostBinding,
            args: ['class.input-search-container']
        }], _isSearchEllipse: [{
            type: core.HostBinding,
            args: ['class.input-search-ellipse']
        }], name: [{
            type: core.Input
        }], placeholder: [{
            type: core.Input
        }], clear: [{
            type: core.Output
        }], thyTheme: [{
            type: core.Input
        }], thySearchFocus: [{
            type: core.Input
        }], thySize: [{
            type: core.Input
        }] }); })();
        return ThyInputSearchComponent;
    }());
    ThyInputSearchComponent.ctorParameters = function () { return [
        { type: core.ChangeDetectorRef }
    ]; };
    ThyInputSearchComponent.propDecorators = {
        _isSearchContainer: [{ type: core.HostBinding, args: ['class.input-search-container',] }],
        _isSearchEllipse: [{ type: core.HostBinding, args: ['class.input-search-ellipse',] }],
        name: [{ type: core.Input }],
        placeholder: [{ type: core.Input }],
        thyTheme: [{ type: core.Input }],
        thySearchFocus: [{ type: core.Input }],
        thySize: [{ type: core.Input }],
        clear: [{ type: core.Output }]
    };

    var ThyInputModule = /** @class */ (function () {
        function ThyInputModule() {
        }
ThyInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyInputModule });
ThyInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyInputModule_Factory(t) { return new (t || ThyInputModule)(); }, imports: [[common.CommonModule, forms.FormsModule, shared.ThySharedModule, icon.ThyIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyInputModule, { declarations: [ThyInputDirective, ThyInputComponent, ThyInputGroupComponent, ThyInputSearchComponent], imports: [ɵngcc2.CommonModule, ɵngcc4.FormsModule, ɵngcc3.ThySharedModule, ɵngcc5.ThyIconModule], exports: [ThyInputDirective, ThyInputComponent, ThyInputGroupComponent, ThyInputSearchComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyInputModule, [{
        type: core.NgModule,
        args: [{
                imports: [common.CommonModule, forms.FormsModule, shared.ThySharedModule, icon.ThyIconModule],
                declarations: [ThyInputDirective, ThyInputComponent, ThyInputGroupComponent, ThyInputSearchComponent],
                exports: [ThyInputDirective, ThyInputComponent, ThyInputGroupComponent, ThyInputSearchComponent]
            }]
    }], function () { return []; }, null); })();
        return ThyInputModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR;
    exports.CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR = CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR;
    exports.ThyInputComponent = ThyInputComponent;
    exports.ThyInputDirective = ThyInputDirective;
    exports.ThyInputGroupComponent = ThyInputGroupComponent;
    exports.ThyInputModule = ThyInputModule;
    exports.ThyInputSearchComponent = ThyInputSearchComponent;
    exports.ɵ0 = ɵ0;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ngx-tethys-input.umd.js.map