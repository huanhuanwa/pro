import { MentionDefaultDataItem, Mention } from '../interfaces';
export interface SeekQueryResult {
    term: string;
    start: number;
    end: number;
}
export interface MatchedMention<T = MentionDefaultDataItem> {
    query: SeekQueryResult;
    mention: Mention<T>;
}
export declare type MentionInputorElement = HTMLTextAreaElement | HTMLInputElement;
export declare abstract class MentionAdapter {
    inputor: MentionInputorElement;
    matchedMention: MatchedMention;
    constructor(inputor: MentionInputorElement);
    abstract seekQuery(event: Event, mention: Mention): SeekQueryResult;
    abstract insertMention(item: MentionDefaultDataItem): string;
    lookup(event: Event, mentions: Mention[]): MatchedMention<MentionDefaultDataItem>;
}
