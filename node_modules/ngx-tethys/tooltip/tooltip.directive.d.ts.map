{"version":3,"file":"tooltip.directive.d.ts","sources":["tooltip.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ViewContainerRef, NgZone, OnInit, OnDestroy, TemplateRef } from '@angular/core';\nimport { Overlay, ScrollDispatcher, OverlayRef } from '@angular/cdk/overlay';\nimport { Platform } from '@angular/cdk/platform';\nimport { ThyTooltipComponent } from './tooltip.component';\nimport { ThyPlacement, ThyOverlayDirectiveBase, ThyOverlayTrigger } from 'ngx-tethys/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ThyTooltipConfig } from './tooltip.config';\nexport declare class ThyTooltipDirective extends ThyOverlayDirectiveBase implements OnInit, OnDestroy {\n    private overlay;\n    private scrollDispatcher;\n    private viewContainerRef;\n    private thyTooltipConfig;\n    private options;\n    private portal;\n    private scrollStrategy;\n    private tooltipClass;\n    tooltipInstance: ThyTooltipComponent;\n    panelClassPrefix: string;\n    touchendHideDelay: number;\n    private _content;\n    get content(): string | TemplateRef<HTMLElement>;\n    set content(value: string | TemplateRef<HTMLElement>);\n    placement: ThyPlacement;\n    set thyTooltipClass(value: string | string[]);\n    showDelay: number;\n    hideDelay: number;\n    _trigger: ThyOverlayTrigger;\n    set thyTooltipTrigger(value: ThyOverlayTrigger);\n    /** Disables the display of the tooltip. */\n    set thyTooltipDisabled(value: boolean);\n    data: any;\n    tooltipOffset: number;\n    tooltipPin: boolean;\n    private detach;\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef;\n    private updateTooltipContent;\n    /** Returns true if the tooltip is currently visible to the user */\n    isTooltipVisible(): boolean;\n    /** Updates the position of the current tooltip. */\n    private updatePosition;\n    private setTooltipClass;\n    constructor(overlay: Overlay, elementRef: ElementRef<HTMLElement>, scrollDispatcher: ScrollDispatcher, viewContainerRef: ViewContainerRef, ngZone: NgZone, platform: Platform, focusMonitor: FocusMonitor, thyTooltipConfig: ThyTooltipConfig);\n    ngOnInit(): void;\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show 200ms */\n    show(delay?: number): void;\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide 100ms */\n    hide(delay?: number): void;\n    ngOnDestroy(): void;\n}\n"]}