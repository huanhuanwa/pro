{"version":3,"file":"tooltip.component.d.ts","sources":["tooltip.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, TemplateRef, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AnimationEvent } from '@angular/animations';\nimport { ThyTooltipVisibility } from './interface';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nexport declare class ThyTooltipComponent implements OnInit {\n    private changeDetectorRef;\n    private updateHostClassService;\n    addTooltipContainerClass: boolean;\n    _content: string | TemplateRef<HTMLElement>;\n    data: any;\n    private readonly onHide;\n    private closeOnInteraction;\n    visibility: ThyTooltipVisibility;\n    showTimeoutId: number | null | any;\n    hideTimeoutId: number | null | any;\n    tooltipClasses: string[];\n    isTemplateRef: boolean;\n    get content(): string | TemplateRef<HTMLElement>;\n    set content(value: string | TemplateRef<HTMLElement>);\n    private updateClasses;\n    constructor(changeDetectorRef: ChangeDetectorRef, updateHostClassService: UpdateHostClassService, elementRef: ElementRef<HTMLElement>);\n    ngOnInit(): void;\n    markForCheck(): void;\n    isVisible(): boolean;\n    show(delay: number): void;\n    hide(delay: number): void;\n    animationStart(): void;\n    animationDone(event: AnimationEvent): void;\n    afterHidden(): Observable<void>;\n    setTooltipClass(classes: string | string[]): void;\n}\n"]}