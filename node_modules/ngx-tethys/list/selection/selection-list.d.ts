import { UpdateHostClassService } from 'ngx-tethys/core';
import { IThyListOptionParentComponent, ThyListLayout, ThyListOptionComponent } from 'ngx-tethys/shared';
import { SelectionModel } from '@angular/cdk/collections';
import { AfterContentInit, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, QueryList, Renderer2 } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { ThySelectionListChange } from './selection.interface';
import * as ɵngcc0 from '@angular/core';
export declare type ThyListSize = 'sm' | 'md' | 'lg';
export declare class ThySelectionListComponent implements OnInit, OnDestroy, AfterContentInit, IThyListOptionParentComponent, ControlValueAccessor {
    private renderer;
    private elementRef;
    private ngZone;
    private updateHostClassService;
    private _keyManager;
    private _selectionChangesUnsubscribe$;
    private _bindKeyEventUnsubscribe;
    private _modelValues;
    /** The currently selected options. */
    selectionModel: SelectionModel<any>;
    disabled: boolean;
    layout: ThyListLayout;
    _isList: boolean;
    _isSelectionList: boolean;
    multiple: boolean;
    isLayoutGrid: boolean;
    /** The option components contained within this selection-list. */
    options: QueryList<ThyListOptionComponent>;
    set thyMultiple(value: any);
    thyBindKeyEventContainer: HTMLElement | ElementRef | string;
    thyScrollContainer: HTMLElement | ElementRef | string;
    thyBeforeKeydown: (event?: KeyboardEvent) => boolean;
    thyUniqueKey: string;
    thyCompareWith: (o1: any, o2: any) => boolean;
    set thyLayout(value: ThyListLayout);
    set thyAutoActiveFirstItem(value: boolean);
    set thySize(value: ThyListSize);
    private spaceEnabled;
    /** Whether keydown space toggle focused option */
    set thySpaceKeyEnabled(value: boolean);
    /** Emits a change event whenever the selected state of an option changes. */
    readonly thySelectionChange: EventEmitter<ThySelectionListChange>;
    private autoActiveFirstItem;
    private _onTouched;
    private _onChange;
    private _emitChangeEvent;
    private _emitModelValueChange;
    private _toggleFocusedOption;
    private _initializeFocusKeyManager;
    private _instanceSelectionModel;
    private _getElementBySelector;
    private _compareValue;
    private _getOptionSelectionValue;
    private _setSelectionByValues;
    private _setAllOptionsSelected;
    private _getOptionByValue;
    private _getActiveOption;
    private _setListSize;
    constructor(renderer: Renderer2, elementRef: ElementRef, ngZone: NgZone, updateHostClassService: UpdateHostClassService);
    ngOnInit(): void;
    writeValue(value: any[] | any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    onKeydown(event: KeyboardEvent): void;
    toggleOption(option: ThyListOptionComponent, event?: Event): void;
    setActiveOption(option: ThyListOptionComponent): void;
    scrollIntoView(option: ThyListOptionComponent): void;
    isSelected(option: ThyListOptionComponent): boolean;
    clearActiveItem(): void;
    determineClearActiveItem(): void;
    /** Selects all of the options. */
    selectAll(): void;
    /** Deselects all of the options. */
    deselectAll(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThySelectionListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ThySelectionListComponent, "thy-selection-list,[thy-selection-list]", never, { "thyMultiple": "thyMultiple"; "thyLayout": "thyLayout"; "thyAutoActiveFirstItem": "thyAutoActiveFirstItem"; "thySize": "thySize"; "thySpaceKeyEnabled": "thySpaceKeyEnabled"; "thyBindKeyEventContainer": "thyBindKeyEventContainer"; "thyScrollContainer": "thyScrollContainer"; "thyBeforeKeydown": "thyBeforeKeydown"; "thyUniqueKey": "thyUniqueKey"; "thyCompareWith": "thyCompareWith"; }, { "thySelectionChange": "thySelectionChange"; }, ["options"], ["*"]>;
}

//# sourceMappingURL=selection-list.d.ts.map