{"version":3,"file":"flexible-text.component.d.ts","sources":["flexible-text.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef, ElementRef, OnInit, ViewContainerRef, OnDestroy, AfterContentInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TooltipService } from 'ngx-tethys/tooltip';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { ContentObserver } from '@angular/cdk/observers';\nimport { ThyPlacement } from 'ngx-tethys/core';\nexport declare class ThyFlexibleTextComponent implements OnInit, AfterContentInit, OnDestroy {\n    private elementRef;\n    private viewContainerRef;\n    tooltipService: TooltipService;\n    private updateHostClassService;\n    private contentObserver;\n    isOverflow: boolean;\n    content: string | TemplateRef<HTMLElement>;\n    placement: ThyPlacement;\n    containerClass: string;\n    subscription: Subscription | null;\n    trigger: 'hover' | 'focus' | 'click';\n    get thyContainerClass(): string;\n    set thyContainerClass(value: string);\n    set thyContent(value: string | TemplateRef<HTMLElement>);\n    set thyPlacement(value: ThyPlacement);\n    constructor(elementRef: ElementRef, viewContainerRef: ViewContainerRef, tooltipService: TooltipService, updateHostClassService: UpdateHostClassService, contentObserver: ContentObserver);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    applyOverflow(): void;\n    updateContainerClass(): void;\n}\n"]}