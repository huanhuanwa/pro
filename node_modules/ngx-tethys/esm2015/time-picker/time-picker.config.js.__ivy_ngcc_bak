import { Injectable } from '@angular/core';
export class TimePickerConfig {
    constructor() {
        /** hours change step */
        this.hourStep = 1;
        /** hours change step */
        this.minuteStep = 5;
        /** seconds changes step */
        this.secondsStep = 10;
        /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */
        this.showMeridian = true;
        /** meridian labels based on locale */
        this.meridians = ['AM', 'PM'];
        /** if true hours and minutes fields will be readonly */
        this.readonlyInput = false;
        /** if true hours and minutes fields will be disabled */
        this.disabled = false;
        /** if true scroll inside hours and minutes inputs will change time */
        this.mousewheel = true;
        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */
        this.arrowKeys = true;
        /** if true spinner arrows above and below the inputs will be shown */
        this.showSpinners = true;
        /** show seconds in timePicker */
        this.showSeconds = false;
        /** show minutes in timePicker */
        this.showMinutes = true;
        /** placeholder for hours field in timePicker */
        this.hoursPlaceholder = 'HH';
        /** placeholder for minutes field in timePicker */
        this.minutesPlaceholder = 'MM';
        /** placeholder for seconds field in timePicker */
        this.secondsPlaceholder = 'SS';
    }
}
TimePickerConfig.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1waWNrZXIuY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3RpbWUtcGlja2VyL3RpbWUtcGlja2VyLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE1BQU0sT0FBTyxnQkFBZ0I7SUFEN0I7UUFFSSx3QkFBd0I7UUFDeEIsYUFBUSxHQUFHLENBQUMsQ0FBQztRQUNiLHdCQUF3QjtRQUN4QixlQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsMkJBQTJCO1FBQzNCLGdCQUFXLEdBQUcsRUFBRSxDQUFDO1FBQ2pCLCtGQUErRjtRQUMvRixpQkFBWSxHQUFHLElBQUksQ0FBQztRQUNwQixzQ0FBc0M7UUFDdEMsY0FBUyxHQUFHLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3pCLHdEQUF3RDtRQUN4RCxrQkFBYSxHQUFHLEtBQUssQ0FBQztRQUN0Qix3REFBd0Q7UUFDeEQsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixzRUFBc0U7UUFDdEUsZUFBVSxHQUFHLElBQUksQ0FBQztRQUNsQiwwR0FBMEc7UUFDMUcsY0FBUyxHQUFHLElBQUksQ0FBQztRQUNqQixzRUFBc0U7UUFDdEUsaUJBQVksR0FBRyxJQUFJLENBQUM7UUFDcEIsaUNBQWlDO1FBQ2pDLGdCQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLGlDQUFpQztRQUNqQyxnQkFBVyxHQUFHLElBQUksQ0FBQztRQUtuQixnREFBZ0Q7UUFDaEQscUJBQWdCLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLGtEQUFrRDtRQUNsRCx1QkFBa0IsR0FBRyxJQUFJLENBQUM7UUFDMUIsa0RBQWtEO1FBQ2xELHVCQUFrQixHQUFHLElBQUksQ0FBQztJQUM5QixDQUFDOzs7WUFwQ0EsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRpbWVQaWNrZXJDb25maWcge1xuICAgIC8qKiBob3VycyBjaGFuZ2Ugc3RlcCAqL1xuICAgIGhvdXJTdGVwID0gMTtcbiAgICAvKiogaG91cnMgY2hhbmdlIHN0ZXAgKi9cbiAgICBtaW51dGVTdGVwID0gNTtcbiAgICAvKiogc2Vjb25kcyBjaGFuZ2VzIHN0ZXAgKi9cbiAgICBzZWNvbmRzU3RlcCA9IDEwO1xuICAgIC8qKiBpZiB0cnVlIHdvcmtzIGluIDEySCBtb2RlIGFuZCBkaXNwbGF5cyBBTS9QTS4gSWYgZmFsc2Ugd29ya3MgaW4gMjRIIG1vZGUgYW5kIGhpZGVzIEFNL1BNICovXG4gICAgc2hvd01lcmlkaWFuID0gdHJ1ZTtcbiAgICAvKiogbWVyaWRpYW4gbGFiZWxzIGJhc2VkIG9uIGxvY2FsZSAqL1xuICAgIG1lcmlkaWFucyA9IFsnQU0nLCAnUE0nXTtcbiAgICAvKiogaWYgdHJ1ZSBob3VycyBhbmQgbWludXRlcyBmaWVsZHMgd2lsbCBiZSByZWFkb25seSAqL1xuICAgIHJlYWRvbmx5SW5wdXQgPSBmYWxzZTtcbiAgICAvKiogaWYgdHJ1ZSBob3VycyBhbmQgbWludXRlcyBmaWVsZHMgd2lsbCBiZSBkaXNhYmxlZCAqL1xuICAgIGRpc2FibGVkID0gZmFsc2U7XG4gICAgLyoqIGlmIHRydWUgc2Nyb2xsIGluc2lkZSBob3VycyBhbmQgbWludXRlcyBpbnB1dHMgd2lsbCBjaGFuZ2UgdGltZSAqL1xuICAgIG1vdXNld2hlZWwgPSB0cnVlO1xuICAgIC8qKiBpZiB0cnVlIHRoZSB2YWx1ZXMgb2YgaG91cnMgYW5kIG1pbnV0ZXMgY2FuIGJlIGNoYW5nZWQgdXNpbmcgdGhlIHVwL2Rvd24gYXJyb3cga2V5cyBvbiB0aGUga2V5Ym9hcmQgKi9cbiAgICBhcnJvd0tleXMgPSB0cnVlO1xuICAgIC8qKiBpZiB0cnVlIHNwaW5uZXIgYXJyb3dzIGFib3ZlIGFuZCBiZWxvdyB0aGUgaW5wdXRzIHdpbGwgYmUgc2hvd24gKi9cbiAgICBzaG93U3Bpbm5lcnMgPSB0cnVlO1xuICAgIC8qKiBzaG93IHNlY29uZHMgaW4gdGltZVBpY2tlciAqL1xuICAgIHNob3dTZWNvbmRzID0gZmFsc2U7XG4gICAgLyoqIHNob3cgbWludXRlcyBpbiB0aW1lUGlja2VyICovXG4gICAgc2hvd01pbnV0ZXMgPSB0cnVlO1xuICAgIC8qKiBtaW5pbXVtIHRpbWUgdXNlciBjYW4gc2VsZWN0ICovXG4gICAgbWluOiBEYXRlO1xuICAgIC8qKiBtYXhpbXVtIHRpbWUgdXNlciBjYW4gc2VsZWN0ICovXG4gICAgbWF4OiBEYXRlO1xuICAgIC8qKiBwbGFjZWhvbGRlciBmb3IgaG91cnMgZmllbGQgaW4gdGltZVBpY2tlciAqL1xuICAgIGhvdXJzUGxhY2Vob2xkZXIgPSAnSEgnO1xuICAgIC8qKiBwbGFjZWhvbGRlciBmb3IgbWludXRlcyBmaWVsZCBpbiB0aW1lUGlja2VyICovXG4gICAgbWludXRlc1BsYWNlaG9sZGVyID0gJ01NJztcbiAgICAvKiogcGxhY2Vob2xkZXIgZm9yIHNlY29uZHMgZmllbGQgaW4gdGltZVBpY2tlciAqL1xuICAgIHNlY29uZHNQbGFjZWhvbGRlciA9ICdTUyc7XG59XG4iXX0=