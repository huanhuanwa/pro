import { Component, Input, ViewChild, TemplateRef, Inject, InjectionToken, Optional } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

function ThyStepComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
const _c0 = ["*"];
export const THY_STEPPER_COMPONENT = new InjectionToken('THY_STEPPER_COMPONENT');
export class ThyStepComponent {
    constructor(stepper) {
        this.stepper = stepper;
    }
    select() {
        this.stepper.selected = this;
    }
}
ThyStepComponent.ɵfac = function ThyStepComponent_Factory(t) { return new (t || ThyStepComponent)(ɵngcc0.ɵɵdirectiveInject(THY_STEPPER_COMPONENT, 8)); };
ThyStepComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyStepComponent, selectors: [["thy-step"]], viewQuery: function ThyStepComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);
    } }, inputs: { label: "label", thyLabel: "thyLabel" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ThyStepComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ThyStepComponent_ng_template_0_Template, 1, 0, "ng-template");
    } }, encapsulation: 2 });
ThyStepComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [THY_STEPPER_COMPONENT,] }] }
];
ThyStepComponent.propDecorators = {
    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],
    label: [{ type: Input }],
    thyLabel: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyStepComponent, [{
        type: Component,
        args: [{
                selector: 'thy-step',
                template: "<ng-template><ng-content></ng-content></ng-template>\n"
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [THY_STEPPER_COMPONENT]
            }] }]; }, { content: [{
            type: ViewChild,
            args: [TemplateRef, { static: true }]
        }], label: [{
            type: Input
        }], thyLabel: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdGVwcGVyL3N0ZXAuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQWMsTUFBTSxFQUFFLGNBQWMsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7QUFNdkgsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsSUFBSSxjQUFjLENBQXVCLHVCQUF1QixDQUFDLENBQUM7QUFNdkcsTUFBTSxPQUFPLGdCQUFnQjtBQUM3QixJQU1JLFlBQThELE9BQTZCO0FBQUksUUFBakMsWUFBTyxHQUFQLE9BQU8sQ0FBc0I7QUFBQyxJQUFFLENBQUM7QUFDbkcsSUFDSSxNQUFNO0FBQ1YsUUFBUSxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7QUFDckMsSUFBSSxDQUFDO0FBQ0w7NENBaEJDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsVUFBVSxrQkFDcEI7OEJBQW9DLGNBQ3ZDOzs7Ozs7Ozs2QkFDSTtBQUFDO0FBQ1UsNENBTUMsUUFBUSxZQUFJLE1BQU0sU0FBQyxxQkFBcUI7QUFBUTtBQUFHO0FBRWpFLHNCQVJFLFNBQVMsU0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO0FBQU8sb0JBRTlDLEtBQUs7QUFBSyx1QkFFVixLQUFLO0FBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFZpZXdDaGlsZCwgVGVtcGxhdGVSZWYsIGZvcndhcmRSZWYsIEluamVjdCwgSW5qZWN0aW9uVG9rZW4sIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVRoeVN0ZXBwZXJDb21wb25lbnQge1xuICAgIHNlbGVjdGVkOiBUaHlTdGVwQ29tcG9uZW50O1xufVxuXG5leHBvcnQgY29uc3QgVEhZX1NURVBQRVJfQ09NUE9ORU5UID0gbmV3IEluamVjdGlvblRva2VuPElUaHlTdGVwcGVyQ29tcG9uZW50PignVEhZX1NURVBQRVJfQ09NUE9ORU5UJyk7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndGh5LXN0ZXAnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9zdGVwLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaHlTdGVwQ29tcG9uZW50IHtcbiAgICBAVmlld0NoaWxkKFRlbXBsYXRlUmVmLCB7IHN0YXRpYzogdHJ1ZSB9KSBjb250ZW50OiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIHRoeUxhYmVsOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBASW5qZWN0KFRIWV9TVEVQUEVSX0NPTVBPTkVOVCkgcHVibGljIHN0ZXBwZXI6IElUaHlTdGVwcGVyQ29tcG9uZW50KSB7fVxuXG4gICAgc2VsZWN0KCkge1xuICAgICAgICB0aGlzLnN0ZXBwZXIuc2VsZWN0ZWQgPSB0aGlzO1xuICAgIH1cbn1cbiJdfQ==