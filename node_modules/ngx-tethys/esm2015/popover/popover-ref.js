import { ThyAbstractOverlayRef, ThyAbstractInternalOverlayRef } from 'ngx-tethys/core';
import { popoverUpperOverlayOptions } from './popover.options';
export class ThyPopoverRef extends ThyAbstractOverlayRef {
}
export class ThyInternalPopoverRef extends ThyAbstractInternalOverlayRef {
    constructor(overlayRef, containerInstance, config) {
        super(popoverUpperOverlayOptions, overlayRef, containerInstance, config);
        containerInstance.insideClicked.subscribe(() => {
            this.close();
        });
        containerInstance.outsideClicked.subscribe(() => {
            this.close();
        });
    }
    /**
     * Updates the popover's position.
     * @param position New popover position.
     */
    updatePosition() {
        this.overlayRef.updatePosition();
        return this;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1yZWYuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcG9wb3Zlci9wb3BvdmVyLXJlZi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2RixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUcvRCxNQUFNLE9BQWdCLGFBQWdDLFNBQVEscUJBQStEO0NBQUc7QUFFaEksTUFBTSxPQUFPLHFCQUF3QyxTQUFRLDZCQUF1RTtJQUVoSSxZQUFZLFVBQXNCLEVBQUUsaUJBQStDLEVBQUUsTUFBd0I7UUFDekcsS0FBSyxDQUFDLDBCQUEwQixFQUFFLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUN6RSxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUMzQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDakIsQ0FBQyxDQUFDLENBQUM7UUFDSCxpQkFBaUIsQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUM1QyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDakIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsY0FBYztRQUNWLElBQUksQ0FBQyxVQUFVLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDakMsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT3ZlcmxheVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IFRoeVBvcG92ZXJDb250YWluZXJDb21wb25lbnQgfSBmcm9tICcuL3BvcG92ZXItY29udGFpbmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaHlBYnN0cmFjdE92ZXJsYXlSZWYsIFRoeUFic3RyYWN0SW50ZXJuYWxPdmVybGF5UmVmIH0gZnJvbSAnbmd4LXRldGh5cy9jb3JlJztcbmltcG9ydCB7IHBvcG92ZXJVcHBlck92ZXJsYXlPcHRpb25zIH0gZnJvbSAnLi9wb3BvdmVyLm9wdGlvbnMnO1xuaW1wb3J0IHsgVGh5UG9wb3ZlckNvbmZpZyB9IGZyb20gJy4vcG9wb3Zlci5jb25maWcnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgVGh5UG9wb3ZlclJlZjxULCBUUmVzdWx0ID0gYW55PiBleHRlbmRzIFRoeUFic3RyYWN0T3ZlcmxheVJlZjxULCBUaHlQb3BvdmVyQ29udGFpbmVyQ29tcG9uZW50LCBUUmVzdWx0PiB7fVxuXG5leHBvcnQgY2xhc3MgVGh5SW50ZXJuYWxQb3BvdmVyUmVmPFQsIFRSZXN1bHQgPSBhbnk+IGV4dGVuZHMgVGh5QWJzdHJhY3RJbnRlcm5hbE92ZXJsYXlSZWY8VCwgVGh5UG9wb3ZlckNvbnRhaW5lckNvbXBvbmVudCwgVFJlc3VsdD5cbiAgICBpbXBsZW1lbnRzIFRoeVBvcG92ZXJSZWY8VCwgVFJlc3VsdD4ge1xuICAgIGNvbnN0cnVjdG9yKG92ZXJsYXlSZWY6IE92ZXJsYXlSZWYsIGNvbnRhaW5lckluc3RhbmNlOiBUaHlQb3BvdmVyQ29udGFpbmVyQ29tcG9uZW50LCBjb25maWc6IFRoeVBvcG92ZXJDb25maWcpIHtcbiAgICAgICAgc3VwZXIocG9wb3ZlclVwcGVyT3ZlcmxheU9wdGlvbnMsIG92ZXJsYXlSZWYsIGNvbnRhaW5lckluc3RhbmNlLCBjb25maWcpO1xuICAgICAgICBjb250YWluZXJJbnN0YW5jZS5pbnNpZGVDbGlja2VkLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIH0pO1xuICAgICAgICBjb250YWluZXJJbnN0YW5jZS5vdXRzaWRlQ2xpY2tlZC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGVzIHRoZSBwb3BvdmVyJ3MgcG9zaXRpb24uXG4gICAgICogQHBhcmFtIHBvc2l0aW9uIE5ldyBwb3BvdmVyIHBvc2l0aW9uLlxuICAgICAqL1xuICAgIHVwZGF0ZVBvc2l0aW9uKCk6IHRoaXMge1xuICAgICAgICB0aGlzLm92ZXJsYXlSZWYudXBkYXRlUG9zaXRpb24oKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuIl19