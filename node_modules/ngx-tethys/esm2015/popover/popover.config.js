import { ThyAbstractOverlayConfig } from 'ngx-tethys/core';
import { Overlay } from '@angular/cdk/overlay';
import { InjectionToken } from '@angular/core';
export class ThyPopoverConfig extends ThyAbstractOverlayConfig {
}
export const THY_POPOVER_DEFAULT_CONFIG = new InjectionToken('thy-popover-default-config');
export const THY_POPOVER_DEFAULT_CONFIG_VALUE = {
    hasBackdrop: true,
    backdropClass: 'thy-popover-backdrop',
    panelClass: '',
    offset: 4,
    backdropClosable: true,
    closeOnNavigation: true,
    placement: 'bottom',
    insideClosable: false,
    manualClosure: false,
    originActiveClass: 'thy-popover-origin-active'
};
export const THY_POPOVER_DEFAULT_CONFIG_PROVIDER = {
    provide: THY_POPOVER_DEFAULT_CONFIG,
    useValue: THY_POPOVER_DEFAULT_CONFIG_VALUE
};
export const THY_POPOVER_SCROLL_STRATEGY = new InjectionToken('thy-popover-scroll-strategy');
export const THY_POPOVER_SCROLL_STRATEGY_FACTORY = (overlay) => {
    return () => overlay.scrollStrategies.block();
};
export const THY_POPOVER_SCROLL_STRATEGY_PROVIDER = {
    provide: THY_POPOVER_SCROLL_STRATEGY,
    deps: [Overlay],
    useFactory: THY_POPOVER_SCROLL_STRATEGY_FACTORY
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci5jb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcG9wb3Zlci9wb3BvdmVyLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWdCLHdCQUF3QixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFekUsT0FBTyxFQUFFLE9BQU8sRUFBa0IsTUFBTSxzQkFBc0IsQ0FBQztBQUMvRCxPQUFPLEVBQWMsY0FBYyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNELE1BQU0sT0FBTyxnQkFBOEIsU0FBUSx3QkFBK0I7Q0FnQ2pGO0FBRUQsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBQUcsSUFBSSxjQUFjLENBQW1CLDRCQUE0QixDQUFDLENBQUM7QUFFN0csTUFBTSxDQUFDLE1BQU0sZ0NBQWdDLEdBQUc7SUFDNUMsV0FBVyxFQUFFLElBQUk7SUFDakIsYUFBYSxFQUFFLHNCQUFzQjtJQUNyQyxVQUFVLEVBQUUsRUFBRTtJQUNkLE1BQU0sRUFBRSxDQUFDO0lBQ1QsZ0JBQWdCLEVBQUUsSUFBSTtJQUN0QixpQkFBaUIsRUFBRSxJQUFJO0lBQ3ZCLFNBQVMsRUFBRSxRQUF3QjtJQUNuQyxjQUFjLEVBQUUsS0FBSztJQUNyQixhQUFhLEVBQUUsS0FBSztJQUNwQixpQkFBaUIsRUFBRSwyQkFBMkI7Q0FDakQsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG1DQUFtQyxHQUFHO0lBQy9DLE9BQU8sRUFBRSwwQkFBMEI7SUFDbkMsUUFBUSxFQUFFLGdDQUFnQztDQUM3QyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUcsSUFBSSxjQUFjLENBQXVCLDZCQUE2QixDQUFDLENBQUM7QUFFbkgsTUFBTSxDQUFDLE1BQU0sbUNBQW1DLEdBQUcsQ0FBQyxPQUFnQixFQUFFLEVBQUU7SUFDcEUsT0FBTyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDbEQsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0NBQW9DLEdBQUc7SUFDaEQsT0FBTyxFQUFFLDJCQUEyQjtJQUNwQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUM7SUFDZixVQUFVLEVBQUUsbUNBQW1DO0NBQ2xELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUaHlQbGFjZW1lbnQsIFRoeUFic3RyYWN0T3ZlcmxheUNvbmZpZyB9IGZyb20gJ25neC10ZXRoeXMvY29yZSc7XG5cbmltcG9ydCB7IE92ZXJsYXksIFNjcm9sbFN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL292ZXJsYXknO1xuaW1wb3J0IHsgRWxlbWVudFJlZiwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGNsYXNzIFRoeVBvcG92ZXJDb25maWc8VERhdGEgPSBhbnk+IGV4dGVuZHMgVGh5QWJzdHJhY3RPdmVybGF5Q29uZmlnPFREYXRhPiB7XG4gICAgLyoqIE9yaWdpbiBFbGVtZW50LCBmb3Igb3ZlcmxheSBmbGV4aWJsZSBjb25uZWN0ZWQgdG8gKi9cbiAgICBvcmlnaW46IEVsZW1lbnRSZWY8YW55PiB8IEhUTUxFbGVtZW50O1xuXG4gICAgLyoqIE9yaWdpbiBwb2ludCwgZGVmYXVsdCB1c2Ugb3JpZ2luJ3MgYm91bmRpbmdDbGllbnRSZWN0Ki9cbiAgICBvcmlnaW5Qb3NpdGlvbj86IHtcbiAgICAgICAgeDogbnVtYmVyO1xuICAgICAgICB5OiBudW1iZXI7XG4gICAgfSAmIHsgd2lkdGg/OiBudW1iZXI7IGhlaWdodD86IG51bWJlciB9O1xuXG4gICAgLyoqIFBsYWNlbWVudCBiZSByZWxhdGl2ZSB0byBvcmlnaW4sIHRvcENlbnRlciwgdG9wTGVmdCwgdG9wUmlnaHQsIGJvdHRvbUNlbnRlciwgYm90dG9tTGVmdCwgYm90dG9tUmlnaHQgLi4uKi9cbiAgICBwbGFjZW1lbnQ/OiBUaHlQbGFjZW1lbnQ7XG5cbiAgICAvKiogQ2xpY2sgaW5zaWRlIGNhbiBiZWVuIGNsb3NlICovXG4gICAgaW5zaWRlQ2xvc2FibGU/OiBib29sZWFuO1xuXG4gICAgLyoqIE9mZnNldCBiZSByZWxhdGl2ZSB0byBvcmlnaW4sIGRlZmF1bHQgaXMgNCovXG4gICAgb2Zmc2V0PzogbnVtYmVyO1xuXG4gICAgLyoqIE1hbnVhbGx5IGNsb3NlIGl0LCBkZWZhdWx0IHJ1bGVzIGlzIHdoaWNoIGF1dG8gY2xvc2UgbGFzdCBwb3BvdmVyIHdoZW4gb3BlbiBhIG5ldyB1bmxlc3Mgc2V0IG1hbnVhbENsb3N1cmUgYXMgdHJ1ZSAqL1xuICAgIG1hbnVhbENsb3N1cmU/OiBib29sZWFuO1xuXG4gICAgLyoqIE9yaWdpbiBhY3RpdmUgY2xhc3Mgd2hlbiBwb3BvdmVyIGlzIG9wZW5lZCAqL1xuICAgIG9yaWdpbkFjdGl2ZUNsYXNzPzogc3RyaW5nIHwgc3RyaW5nW107XG5cbiAgICAvKipcbiAgICAgKiDmu5rliqjnrZbnlaVcbiAgICAgKi9cbiAgICBzY3JvbGxTdHJhdGVneT86IFNjcm9sbFN0cmF0ZWd5O1xuXG4gICAgLyoqIENsaWNrIG91dHNpZGUgY2FuIGJlZW4gY2xvc2UgKi9cbiAgICBvdXRzaWRlQ2xvc2FibGU/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY29uc3QgVEhZX1BPUE9WRVJfREVGQVVMVF9DT05GSUcgPSBuZXcgSW5qZWN0aW9uVG9rZW48VGh5UG9wb3ZlckNvbmZpZz4oJ3RoeS1wb3BvdmVyLWRlZmF1bHQtY29uZmlnJyk7XG5cbmV4cG9ydCBjb25zdCBUSFlfUE9QT1ZFUl9ERUZBVUxUX0NPTkZJR19WQUxVRSA9IHtcbiAgICBoYXNCYWNrZHJvcDogdHJ1ZSxcbiAgICBiYWNrZHJvcENsYXNzOiAndGh5LXBvcG92ZXItYmFja2Ryb3AnLFxuICAgIHBhbmVsQ2xhc3M6ICcnLFxuICAgIG9mZnNldDogNCxcbiAgICBiYWNrZHJvcENsb3NhYmxlOiB0cnVlLFxuICAgIGNsb3NlT25OYXZpZ2F0aW9uOiB0cnVlLFxuICAgIHBsYWNlbWVudDogJ2JvdHRvbScgYXMgVGh5UGxhY2VtZW50LFxuICAgIGluc2lkZUNsb3NhYmxlOiBmYWxzZSxcbiAgICBtYW51YWxDbG9zdXJlOiBmYWxzZSxcbiAgICBvcmlnaW5BY3RpdmVDbGFzczogJ3RoeS1wb3BvdmVyLW9yaWdpbi1hY3RpdmUnXG59O1xuXG5leHBvcnQgY29uc3QgVEhZX1BPUE9WRVJfREVGQVVMVF9DT05GSUdfUFJPVklERVIgPSB7XG4gICAgcHJvdmlkZTogVEhZX1BPUE9WRVJfREVGQVVMVF9DT05GSUcsXG4gICAgdXNlVmFsdWU6IFRIWV9QT1BPVkVSX0RFRkFVTFRfQ09ORklHX1ZBTFVFXG59O1xuXG5leHBvcnQgY29uc3QgVEhZX1BPUE9WRVJfU0NST0xMX1NUUkFURUdZID0gbmV3IEluamVjdGlvblRva2VuPCgpID0+IFNjcm9sbFN0cmF0ZWd5PigndGh5LXBvcG92ZXItc2Nyb2xsLXN0cmF0ZWd5Jyk7XG5cbmV4cG9ydCBjb25zdCBUSFlfUE9QT1ZFUl9TQ1JPTExfU1RSQVRFR1lfRkFDVE9SWSA9IChvdmVybGF5OiBPdmVybGF5KSA9PiB7XG4gICAgcmV0dXJuICgpID0+IG92ZXJsYXkuc2Nyb2xsU3RyYXRlZ2llcy5ibG9jaygpO1xufTtcblxuZXhwb3J0IGNvbnN0IFRIWV9QT1BPVkVSX1NDUk9MTF9TVFJBVEVHWV9QUk9WSURFUiA9IHtcbiAgICBwcm92aWRlOiBUSFlfUE9QT1ZFUl9TQ1JPTExfU1RSQVRFR1ksXG4gICAgZGVwczogW092ZXJsYXldLFxuICAgIHVzZUZhY3Rvcnk6IFRIWV9QT1BPVkVSX1NDUk9MTF9TVFJBVEVHWV9GQUNUT1JZXG59O1xuIl19