import { Component, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';
import { mixinDisabled, MixinBase } from 'ngx-tethys/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
const _MixinBase = mixinDisabled(MixinBase);
export class ThyOptionGroupComponent extends _MixinBase {
    set thyDisabled(value) {
        this.thyDisabled = value;
    }
}
ThyOptionGroupComponent.ɵfac = function ThyOptionGroupComponent_Factory(t) { return ɵThyOptionGroupComponent_BaseFactory(t || ThyOptionGroupComponent); };
ThyOptionGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyOptionGroupComponent, selectors: [["thy-list-option-group"], ["", "thy-list-option-group", ""]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ThyOptionGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
const ɵThyOptionGroupComponent_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(ThyOptionGroupComponent);
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyOptionGroupComponent, [{
        type: Component,
        args: [{
                selector: 'thy-list-option-group,[thy-list-option-group]',
                template: '<ng-content></ng-content>',
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9uLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9vcHRpb24vb3B0aW9uLWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLHVCQUF1QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RGLE9BQU8sRUFBaUIsYUFBYSxFQUFxQixTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7OztBQUU3RixNQUFNLFVBQVUsR0FBeUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBT2xGLE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxVQUFVO0FBQUcsSUFDdEQsSUFBSSxXQUFXLENBQUMsS0FBVTtBQUM5QixRQUFRLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO0FBQ2pDLElBQUksQ0FBQztBQUNMO21EQVZDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsK0NBQStDO09BQ3pELFFBQVEsRUFBRSwyQkFBMkIsa0JBQ3JDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJLGtCQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTSxjQUNsRDs7Ozs7Ozs7Ozs7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRoeUNhbkRpc2FibGUsIG1peGluRGlzYWJsZWQsIFRoeUNhbkRpc2FibGVDdG9yLCBNaXhpbkJhc2UgfSBmcm9tICduZ3gtdGV0aHlzL2NvcmUnO1xuXG5jb25zdCBfTWl4aW5CYXNlOiBUaHlDYW5EaXNhYmxlQ3RvciAmIHR5cGVvZiBNaXhpbkJhc2UgPSBtaXhpbkRpc2FibGVkKE1peGluQmFzZSk7XG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RoeS1saXN0LW9wdGlvbi1ncm91cCxbdGh5LWxpc3Qtb3B0aW9uLWdyb3VwXScsXG4gICAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+JyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFRoeU9wdGlvbkdyb3VwQ29tcG9uZW50IGV4dGVuZHMgX01peGluQmFzZSBpbXBsZW1lbnRzIFRoeUNhbkRpc2FibGUge1xuICAgIHNldCB0aHlEaXNhYmxlZCh2YWx1ZTogYW55KSB7XG4gICAgICAgIHRoaXMudGh5RGlzYWJsZWQgPSB2YWx1ZTtcbiAgICB9XG59XG4iXX0=