import { Component, HostBinding, Input, ContentChildren, QueryList, NgZone } from '@angular/core';
import { defer, Subject, merge } from 'rxjs';
import { ThyOptionComponent } from '../option.component';
import { take, switchMap, startWith, takeUntil, debounceTime, map } from 'rxjs/operators';
import { THY_OPTION_GROUP_COMPONENT } from '../option.token';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["*"];
export class ThySelectOptionGroupComponent {
    constructor(_ngZone) {
        this._ngZone = _ngZone;
        this._hidden = false;
        this._isOptionGroup = true;
        this._destroy$ = new Subject();
        this.optionVisibleChanges = defer(() => {
            if (this.options) {
                return merge(...this.options.map(option => option.visibleChange));
            }
            return this._ngZone.onStable.asObservable().pipe(take(1), switchMap(() => this.optionVisibleChanges));
        });
    }
    get hidden() {
        return this._hidden;
    }
    ngAfterContentInit() {
        this.options.changes.pipe(startWith(null), takeUntil(this._destroy$)).subscribe(() => {
            this._resetOptions();
        });
    }
    _resetOptions() {
        const changedOrDestroyed$ = merge(this.options.changes, this._destroy$);
        merge(...this.options.map(option => option.visibleChange))
            .pipe(takeUntil(changedOrDestroyed$), debounceTime(10), map((event) => {
            const hasOption = this.options.find(option => {
                if (!option.hidden) {
                    return true;
                }
            });
            if (hasOption) {
                return false;
            }
            else {
                return true;
            }
        }))
            .subscribe((data) => {
            this._hidden = data;
        });
    }
    ngOnDestroy() {
        this._destroy$.next();
        this._destroy$.complete();
    }
}
ThySelectOptionGroupComponent.ɵfac = function ThySelectOptionGroupComponent_Factory(t) { return new (t || ThySelectOptionGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ThySelectOptionGroupComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThySelectOptionGroupComponent, selectors: [["thy-option-group"]], contentQueries: function ThySelectOptionGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ThyOptionComponent, false);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);
    } }, hostVars: 6, hostBindings: function ThySelectOptionGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-option-item-group", ctx._isOptionGroup)("thy-select-option-group-hidden", ctx.hidden)("disabled", ctx.thyDisabled);
    } }, inputs: { thyDisabled: "thyDisabled", thyGroupLabel: "thyGroupLabel" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: THY_OPTION_GROUP_COMPONENT,
                useExisting: ThySelectOptionGroupComponent
            }
        ])], ngContentSelectors: _c0, decls: 3, vars: 1, consts: [[1, "group-name", "text-desc"]], template: function ThySelectOptionGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵprojection(2);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ctx.thyGroupLabel);
    } }, encapsulation: 2 });
ThySelectOptionGroupComponent.ctorParameters = () => [
    { type: NgZone }
];
ThySelectOptionGroupComponent.propDecorators = {
    thyDisabled: [{ type: Input }, { type: HostBinding, args: [`class.disabled`,] }],
    _isOptionGroup: [{ type: HostBinding, args: ['class.thy-option-item-group',] }],
    hidden: [{ type: HostBinding, args: ['class.thy-select-option-group-hidden',] }],
    thyGroupLabel: [{ type: Input }],
    options: [{ type: ContentChildren, args: [ThyOptionComponent,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThySelectOptionGroupComponent, [{
        type: Component,
        args: [{
                selector: 'thy-option-group',
                template: "<span class=\"group-name text-desc\">{{ thyGroupLabel }}</span>\n<ng-content></ng-content>\n",
                providers: [
                    {
                        provide: THY_OPTION_GROUP_COMPONENT,
                        useExisting: ThySelectOptionGroupComponent
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.NgZone }]; }, { _isOptionGroup: [{
            type: HostBinding,
            args: ['class.thy-option-item-group']
        }], hidden: [{
            type: HostBinding,
            args: ['class.thy-select-option-group-hidden']
        }], thyDisabled: [{
            type: Input
        }, {
            type: HostBinding,
            args: [`class.disabled`]
        }], thyGroupLabel: [{
            type: Input
        }], options: [{
            type: ContentChildren,
            args: [ThyOptionComponent]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9uLWdyb3VwLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3NoYXJlZC9vcHRpb24vZ3JvdXAvb3B0aW9uLWdyb3VwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQVUsZUFBZSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQStCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZJLE9BQU8sRUFBYyxLQUFLLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBaUIsTUFBTSxNQUFNLENBQUM7QUFDeEUsT0FBTyxFQUErQixrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RGLE9BQU8sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQVUsWUFBWSxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ2xHLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7O0FBWTdELE1BQU0sT0FBTyw2QkFBNkI7QUFBRyxJQTZCekMsWUFBb0IsT0FBZTtBQUFJLFFBQW5CLFlBQU8sR0FBUCxPQUFPLENBQVE7QUFBQyxRQTVCcEMsWUFBTyxHQUFHLEtBQUssQ0FBQztBQUNwQixRQUlnRCxtQkFBYyxHQUFHLElBQUksQ0FBQztBQUN0RSxRQVVJLGNBQVMsR0FBaUIsSUFBSSxPQUFPLEVBQU8sQ0FBQztBQUNqRCxRQUNJLHlCQUFvQixHQUE0QyxLQUFLLENBQUMsR0FBRyxFQUFFO0FBQy9FLFlBQVEsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO0FBQzFCLGdCQUFZLE9BQU8sS0FBSyxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztBQUM5RSxhQUFTO0FBQ1QsWUFBUSxPQUFPLElBQUksQ0FB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QmluZGluZywgSW5wdXQsIE9uSW5pdCwgQ29udGVudENoaWxkcmVuLCBRdWVyeUxpc3QsIE5nWm9uZSwgT25EZXN0cm95LCBBZnRlckNvbnRlbnRJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBkZWZlciwgU3ViamVjdCwgbWVyZ2UsIGNvbWJpbmVMYXRlc3QgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFRoeU9wdGlvblZpc2libGVDaGFuZ2VFdmVudCwgVGh5T3B0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi4vb3B0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyB0YWtlLCBzd2l0Y2hNYXAsIHN0YXJ0V2l0aCwgdGFrZVVudGlsLCByZWR1Y2UsIGRlYm91bmNlVGltZSwgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgVEhZX09QVElPTl9HUk9VUF9DT01QT05FTlQgfSBmcm9tICcuLi9vcHRpb24udG9rZW4nO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RoeS1vcHRpb24tZ3JvdXAnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9vcHRpb24tZ3JvdXAuY29tcG9uZW50Lmh0bWwnLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBUSFlfT1BUSU9OX0dST1VQX0NPTVBPTkVOVCxcbiAgICAgICAgICAgIHVzZUV4aXN0aW5nOiBUaHlTZWxlY3RPcHRpb25Hcm91cENvbXBvbmVudFxuICAgICAgICB9XG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBUaHlTZWxlY3RPcHRpb25Hcm91cENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSwgQWZ0ZXJDb250ZW50SW5pdCB7XG4gICAgX2hpZGRlbiA9IGZhbHNlO1xuICAgIEBJbnB1dCgpXG4gICAgQEhvc3RCaW5kaW5nKGBjbGFzcy5kaXNhYmxlZGApXG4gICAgdGh5RGlzYWJsZWQ6IGJvb2xlYW47XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLnRoeS1vcHRpb24taXRlbS1ncm91cCcpIF9pc09wdGlvbkdyb3VwID0gdHJ1ZTtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MudGh5LXNlbGVjdC1vcHRpb24tZ3JvdXAtaGlkZGVuJylcbiAgICBnZXQgaGlkZGVuKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5faGlkZGVuO1xuICAgIH1cblxuICAgIEBJbnB1dCgpIHRoeUdyb3VwTGFiZWw6IHN0cmluZztcblxuICAgIEBDb250ZW50Q2hpbGRyZW4oVGh5T3B0aW9uQ29tcG9uZW50KSBvcHRpb25zOiBRdWVyeUxpc3Q8VGh5T3B0aW9uQ29tcG9uZW50PjtcblxuICAgIF9kZXN0cm95JDogU3ViamVjdDxhbnk+ID0gbmV3IFN1YmplY3Q8YW55PigpO1xuXG4gICAgb3B0aW9uVmlzaWJsZUNoYW5nZXM6IE9ic2VydmFibGU8VGh5T3B0aW9uVmlzaWJsZUNoYW5nZUV2ZW50PiA9IGRlZmVyKCgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMub3B0aW9ucykge1xuICAgICAgICAgICAgcmV0dXJuIG1lcmdlKC4uLnRoaXMub3B0aW9ucy5tYXAob3B0aW9uID0+IG9wdGlvbi52aXNpYmxlQ2hhbmdlKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX25nWm9uZS5vblN0YWJsZS5hc09ic2VydmFibGUoKS5waXBlKFxuICAgICAgICAgICAgdGFrZSgxKSxcbiAgICAgICAgICAgIHN3aXRjaE1hcCgoKSA9PiB0aGlzLm9wdGlvblZpc2libGVDaGFuZ2VzKVxuICAgICAgICApO1xuICAgIH0pIGFzIE9ic2VydmFibGU8VGh5T3B0aW9uVmlzaWJsZUNoYW5nZUV2ZW50PjtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX25nWm9uZTogTmdab25lKSB7fVxuXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgICAgICB0aGlzLm9wdGlvbnMuY2hhbmdlcy5waXBlKHN0YXJ0V2l0aChudWxsKSwgdGFrZVVudGlsKHRoaXMuX2Rlc3Ryb3kkKSkuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3Jlc2V0T3B0aW9ucygpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBfcmVzZXRPcHRpb25zKCkge1xuICAgICAgICBjb25zdCBjaGFuZ2VkT3JEZXN0cm95ZWQkID0gbWVyZ2UodGhpcy5vcHRpb25zLmNoYW5nZXMsIHRoaXMuX2Rlc3Ryb3kkKTtcbiAgICAgICAgbWVyZ2UoLi4udGhpcy5vcHRpb25zLm1hcChvcHRpb24gPT4gb3B0aW9uLnZpc2libGVDaGFuZ2UpKVxuICAgICAgICAgICAgLnBpcGUoXG4gICAgICAgICAgICAgICAgdGFrZVVudGlsKGNoYW5nZWRPckRlc3Ryb3llZCQpLFxuICAgICAgICAgICAgICAgIGRlYm91bmNlVGltZSgxMCksXG4gICAgICAgICAgICAgICAgbWFwKChldmVudDogVGh5T3B0aW9uVmlzaWJsZUNoYW5nZUV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGhhc09wdGlvbiA9IHRoaXMub3B0aW9ucy5maW5kKG9wdGlvbiA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW9wdGlvbi5oaWRkZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChoYXNPcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIC5zdWJzY3JpYmUoKGRhdGE6IGJvb2xlYW4pID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9oaWRkZW4gPSBkYXRhO1xuICAgICAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgbmdPbkRlc3Ryb3koKSB7XG4gICAgICAgIHRoaXMuX2Rlc3Ryb3kkLm5leHQoKTtcbiAgICAgICAgdGhpcy5fZGVzdHJveSQuY29tcGxldGUoKTtcbiAgICB9XG59XG4iXX0=