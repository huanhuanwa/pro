import { Component, Input, TemplateRef, EventEmitter, Output, ViewChild, ElementRef, Renderer2, ChangeDetectionStrategy } from '@angular/core';
import { UpdateHostClassService } from 'ngx-tethys/core';
import { isUndefinedOrNull } from 'ngx-tethys/util';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/core';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'ngx-tethys/icon';
import * as ɵngcc4 from '@angular/forms';

const _c0 = ["inputElement"];
function ThySelectControlComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 8, 9);
    ɵngcc0.ɵɵlistener("compositionstart", function ThySelectControlComponent_ng_template_0_Template_input_compositionstart_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.isComposing = true; })("compositionend", function ThySelectControlComponent_ng_template_0_Template_input_compositionend_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.isComposing = false; })("input", function ThySelectControlComponent_ng_template_0_Template_input_input_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.updateWidth(); })("ngModelChange", function ThySelectControlComponent_ng_template_0_Template_input_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.setInputValue($event); })("keydown.backspace", function ThySelectControlComponent_ng_template_0_Template_input_keydown_backspace_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.handleBackspace($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.searchInputControlClass)("ngModel", ctx_r1.inputValue)("disabled", ctx_r1.thyDisabled);
} }
function ThySelectControlComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r2.placeholderStyle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.thyPlaceholder, " ");
} }
function ThySelectControlComponent_ng_container_4_li_2_ng_template_2_Template(rf, ctx) { }
function ThySelectControlComponent_ng_container_4_li_2_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const item_r16 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r16.thyLabelText, " ");
} }
const _c1 = function (a0) { return { $implicit: a0 }; };
function ThySelectControlComponent_ng_container_4_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 14);
    ɵngcc0.ɵɵelementStart(1, "div", 15);
    ɵngcc0.ɵɵtemplate(2, ThySelectControlComponent_ng_container_4_li_2_ng_template_2_Template, 0, 0, "ng-template", 16, 17, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(4, ThySelectControlComponent_ng_container_4_li_2_ng_container_4_Template, 2, 1, "ng-container", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "span", 18);
    ɵngcc0.ɵɵlistener("click", function ThySelectControlComponent_ng_container_4_li_2_Template_span_click_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); const item_r16 = ctx.$implicit; const ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.removeHandle(item_r16, $event); });
    ɵngcc0.ɵɵelement(6, "thy-icon", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r16 = ctx.$implicit;
    const _r17 = ɵngcc0.ɵɵreference(3);
    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r14.choiceContentClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r14.customDisplayTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(5, _c1, item_r16.thyRawValue || item_r16.thyValue || item_r16));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r14.customDisplayTemplate)("ngIfElse", _r17);
} }
function ThySelectControlComponent_ng_container_4_ng_template_4_Template(rf, ctx) { }
function ThySelectControlComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "ul");
    ɵngcc0.ɵɵtemplate(2, ThySelectControlComponent_ng_container_4_li_2_Template, 7, 7, "li", 11);
    ɵngcc0.ɵɵelementStart(3, "li", 12);
    ɵngcc0.ɵɵtemplate(4, ThySelectControlComponent_ng_container_4_ng_template_4_Template, 0, 0, "ng-template", 13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.multipleSelectedValue)("ngForTrackBy", ctx_r3.trackValue);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
function ThySelectControlComponent_ng_template_5_ng_container_0_ng_template_2_Template(rf, ctx) { }
function ThySelectControlComponent_ng_template_5_ng_container_0_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r27 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r27.selectedValue == null ? null : ctx_r27.selectedValue.thyLabelText, " ");
} }
function ThySelectControlComponent_ng_template_5_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 21);
    ɵngcc0.ɵɵtemplate(2, ThySelectControlComponent_ng_template_5_ng_container_0_ng_template_2_Template, 0, 0, "ng-template", 16, 17, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(4, ThySelectControlComponent_ng_template_5_ng_container_0_ng_container_4_Template, 2, 1, "ng-container", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r25 = ɵngcc0.ɵɵreference(3);
    const ctx_r23 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r23.selectedValueStyle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r23.customDisplayTemplate)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(5, _c1, ctx_r23.selectedValue.thyRawValue || ctx_r23.selectedValue.thyValue || ctx_r23.selectedValue));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r23.customDisplayTemplate)("ngIfElse", _r25);
} }
function ThySelectControlComponent_ng_template_5_ng_template_2_Template(rf, ctx) { }
function ThySelectControlComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThySelectControlComponent_ng_template_5_ng_container_0_Template, 5, 7, "ng-container", 20);
    ɵngcc0.ɵɵelementStart(1, "div", 12);
    ɵngcc0.ɵɵtemplate(2, ThySelectControlComponent_ng_template_5_ng_template_2_Template, 0, 0, "ng-template", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.isSelectedValue);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r0);
} }
function ThySelectControlComponent_span_9_Template(rf, ctx) { if (rf & 1) {
    const _r29 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 22);
    ɵngcc0.ɵɵlistener("click", function ThySelectControlComponent_span_9_Template_span_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r29); const ctx_r28 = ɵngcc0.ɵɵnextContext(); return ctx_r28.clearHandle($event); });
    ɵngcc0.ɵɵelement(1, "thy-icon", 23);
    ɵngcc0.ɵɵelementEnd();
} }
export class ThySelectControlComponent {
    constructor(renderer, element, updateHostClassService) {
        this.renderer = renderer;
        this.element = element;
        this.updateHostClassService = updateHostClassService;
        this.inputValue = '';
        this.isComposing = false;
        this.panelOpened = false;
        this.isMultiple = false;
        this.showSearch = false;
        this.disabled = false;
        this.thyAllowClear = false;
        this.thyPlaceholder = '';
        this.thyOnSearch = new EventEmitter();
        this.thyOnRemove = new EventEmitter();
        this.thyOnClear = new EventEmitter();
        this.updateHostClassService.initializeElement(this.element.nativeElement);
    }
    get thyPanelOpened() {
        return this.panelOpened;
    }
    set thyPanelOpened(value) {
        this.panelOpened = value;
        if (this.panelOpened && this.thyShowSearch) {
            Promise.resolve(null).then(() => {
                this.inputElement.nativeElement.focus();
            });
        }
        if (!this.panelOpened && this.thyShowSearch) {
            Promise.resolve(null).then(() => {
                this.setInputValue('');
            });
        }
        this.setSelectControlClass();
    }
    get thyIsMultiple() {
        return this.isMultiple;
    }
    set thyIsMultiple(value) {
        this.isMultiple = value;
        this.setSelectControlClass();
    }
    get thyShowSearch() {
        return this.showSearch;
    }
    set thyShowSearch(value) {
        this.showSearch = value;
        this.setSelectControlClass();
    }
    get thySelectedOptions() {
        return this.selectedOptions;
    }
    set thySelectedOptions(value) {
        let sameValue = false;
        const oldValue = this.selectedOptions;
        if (this.isMultiple) {
            if (oldValue instanceof Array && value instanceof Array && oldValue.length === value.length) {
                sameValue = value.every((option, index) => option.thyValue === oldValue[index].thyValue);
            }
        }
        else {
            if (oldValue && value) {
                sameValue = oldValue.thyValue === value.thyValue;
            }
        }
        this.selectedOptions = value;
        if (this.panelOpened && this.thyShowSearch) {
            if (!sameValue) {
                Promise.resolve(null).then(() => {
                    this.setInputValue('');
                });
            }
            this.inputElement.nativeElement.focus();
        }
    }
    get thyDisabled() {
        return this.disabled;
    }
    set thyDisabled(value) {
        this.disabled = value;
        this.setSelectControlClass();
    }
    get thySize() {
        return this.size;
    }
    set thySize(value) {
        this.size = value;
        this.setSelectControlClass();
    }
    get selectedValueStyle() {
        let showSelectedValue = false;
        if (this.showSearch) {
            if (this.panelOpened) {
                showSelectedValue = !(this.isComposing || this.inputValue);
            }
            else {
                showSelectedValue = true;
            }
        }
        else {
            showSelectedValue = true;
        }
        return { display: showSelectedValue ? 'block' : 'none' };
    }
    get placeholderStyle() {
        let placeholder = true;
        if (this.isSelectedValue) {
            placeholder = false;
        }
        if (!this.thyPlaceholder) {
            placeholder = false;
        }
        if (this.isComposing || this.inputValue) {
            placeholder = false;
        }
        return { display: placeholder ? 'block' : 'none' };
    }
    get selectedValue() {
        return this.thySelectedOptions;
    }
    get multipleSelectedValue() {
        return this.thySelectedOptions;
    }
    get showClearIcon() {
        return this.thyAllowClear && this.isSelectedValue;
    }
    get isSelectedValue() {
        return ((!this.isMultiple && !isUndefinedOrNull(this.thySelectedOptions)) ||
            (this.isMultiple && this.thySelectedOptions.length > 0));
    }
    ngOnInit() {
        this.setSelectControlClass();
    }
    setSelectControlClass() {
        const modeType = this.isMultiple ? 'multiple' : 'single';
        const selectControlClass = {
            [`form-control`]: true,
            [`form-control-${this.thySize}`]: !!this.thySize,
            [`form-control-custom`]: true,
            [`select-control`]: true,
            [`select-control-${modeType}`]: true,
            [`select-control-show-search`]: this.showSearch,
            [`panel-is-opened`]: this.panelOpened,
            [`disabled`]: this.disabled
        };
        this.updateHostClassService.updateClassByMap(selectControlClass);
        this.searchInputControlClass = {
            [`form-control`]: true,
            [`form-control-${this.thySize}`]: !!this.thySize,
            [`search-input-field`]: true,
            [`hidden`]: !this.thyShowSearch
        };
        this.choiceContentClass = {
            [`choice-content`]: true,
            [`text-truncate`]: true,
            [`font-size-${this.thySize}`]: !!this.thySize
        };
    }
    setInputValue(value) {
        if (value !== this.inputValue) {
            this.inputValue = value;
            this.updateWidth();
            this.thyOnSearch.emit(this.inputValue);
        }
    }
    handleBackspace(event) {
        if (event.isComposing) {
            return;
        }
        if (this.inputValue.length === 0 && this.selectedOptions instanceof Array) {
            if (this.selectedOptions.length > 0) {
                this.removeHandle(this.selectedOptions[this.selectedOptions.length - 1], event);
            }
        }
    }
    updateWidth() {
        if (this.isMultiple && this.thyShowSearch) {
            if (this.inputValue || this.isComposing) {
                this.renderer.setStyle(this.inputElement.nativeElement, 'width', `${this.inputElement.nativeElement.scrollWidth}px`);
            }
            else {
                this.renderer.removeStyle(this.inputElement.nativeElement, 'width');
            }
        }
    }
    removeHandle(item, $event) {
        this.thyOnRemove.emit({ item: item, $eventOrigin: $event });
    }
    clearHandle($event) {
        this.thyOnClear.emit($event);
    }
    trackValue(_index, option) {
        return option.thyValue;
    }
}
ThySelectControlComponent.ɵfac = function ThySelectControlComponent_Factory(t) { return new (t || ThySelectControlComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UpdateHostClassService)); };
ThySelectControlComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThySelectControlComponent, selectors: [["thy-select-control"], ["", "thySelectControl", ""]], viewQuery: function ThySelectControlComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);
    } }, inputs: { thyAllowClear: "thyAllowClear", thyPlaceholder: "thyPlaceholder", thyPanelOpened: "thyPanelOpened", thyIsMultiple: "thyIsMultiple", thyShowSearch: "thyShowSearch", thySelectedOptions: "thySelectedOptions", thyDisabled: "thyDisabled", thySize: "thySize", customDisplayTemplate: "customDisplayTemplate" }, outputs: { thyOnSearch: "thyOnSearch", thyOnRemove: "thyOnRemove", thyOnClear: "thyOnClear" }, features: [ɵngcc0.ɵɵProvidersFeature([UpdateHostClassService])], decls: 10, vars: 4, consts: [["inputTemplate", ""], [1, "select-control-rendered"], ["class", "text-placeholder text-truncate", 3, "ngStyle", 4, "ngIf"], [4, "ngIf", "ngIfElse"], ["single", ""], [1, "select-control-arrow"], ["thyIconName", "angle-down", 1, "font-size-base"], ["class", "select-control-clear remove-link", 3, "click", 4, "ngIf"], ["autocomplete", "something-new", 3, "ngClass", "ngModel", "disabled", "compositionstart", "compositionend", "input", "ngModelChange", "keydown.backspace"], ["inputElement", ""], [1, "text-placeholder", "text-truncate", 3, "ngStyle"], ["class", "choice", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "select-control-search"], [3, "ngTemplateOutlet"], [1, "choice"], [3, "ngClass"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["customDisplay", ""], [1, "choice-remove", "font-size-base", 3, "click"], ["thyIconName", "close", 1, "font-size-sm"], [4, "ngIf"], [1, "selected-value", "text-truncate", 3, "ngStyle"], [1, "select-control-clear", "remove-link", 3, "click"], ["thyIconName", "close-circle-bold-fill", 1, "remove-link-icon", "font-size-base"]], template: function ThySelectControlComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ThySelectControlComponent_ng_template_0_Template, 2, 3, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementStart(2, "div", 1);
        ɵngcc0.ɵɵtemplate(3, ThySelectControlComponent_div_3_Template, 2, 2, "div", 2);
        ɵngcc0.ɵɵtemplate(4, ThySelectControlComponent_ng_container_4_Template, 5, 3, "ng-container", 3);
        ɵngcc0.ɵɵtemplate(5, ThySelectControlComponent_ng_template_5_Template, 3, 2, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "span", 5);
        ɵngcc0.ɵɵelement(8, "thy-icon", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(9, ThySelectControlComponent_span_9_Template, 2, 0, "span", 7);
    } if (rf & 2) {
        const _r4 = ɵngcc0.ɵɵreference(6);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isSelectedValue);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isMultiple)("ngIfElse", _r4);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showClearIcon);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.ThyIconComponent, ɵngcc4.DefaultValueAccessor, ɵngcc2.NgClass, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc2.NgStyle, ɵngcc2.NgForOf, ɵngcc2.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });
ThySelectControlComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef },
    { type: UpdateHostClassService }
];
ThySelectControlComponent.propDecorators = {
    thyPanelOpened: [{ type: Input }],
    thyIsMultiple: [{ type: Input }],
    thyShowSearch: [{ type: Input }],
    thySelectedOptions: [{ type: Input }],
    thyDisabled: [{ type: Input }],
    customDisplayTemplate: [{ type: Input }],
    thyAllowClear: [{ type: Input }],
    thyPlaceholder: [{ type: Input }],
    thySize: [{ type: Input }],
    thyOnSearch: [{ type: Output }],
    thyOnRemove: [{ type: Output }],
    thyOnClear: [{ type: Output }],
    inputElement: [{ type: ViewChild, args: ['inputElement',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThySelectControlComponent, [{
        type: Component,
        args: [{
                selector: 'thy-select-control,[thySelectControl]',
                template: "<ng-template #inputTemplate>\n  <input\n    #inputElement\n    (compositionstart)=\"isComposing = true\"\n    (compositionend)=\"isComposing = false\"\n    autocomplete=\"something-new\"\n    [ngClass]=\"searchInputControlClass\"\n    (input)=\"updateWidth()\"\n    [ngModel]=\"inputValue\"\n    (ngModelChange)=\"setInputValue($event)\"\n    (keydown.backspace)=\"handleBackspace($event)\"\n    [disabled]=\"thyDisabled\"\n  />\n</ng-template>\n\n<div class=\"select-control-rendered\">\n  <div class=\"text-placeholder text-truncate\" *ngIf=\"!isSelectedValue\" [ngStyle]=\"placeholderStyle\">\n    {{ thyPlaceholder }}\n  </div>\n  <ng-container *ngIf=\"isMultiple; else single\">\n    <ul>\n      <li class=\"choice\" *ngFor=\"let item of multipleSelectedValue; trackBy: trackValue\">\n        <div [ngClass]=\"choiceContentClass\">\n          <ng-template\n            #customDisplay\n            [ngTemplateOutlet]=\"customDisplayTemplate\"\n            [ngTemplateOutletContext]=\"{ $implicit: item.thyRawValue || item.thyValue || item }\"\n          ></ng-template>\n          <ng-container *ngIf=\"!customDisplayTemplate; else customDisplay\">\n            {{ item.thyLabelText }}\n          </ng-container>\n        </div>\n        <span class=\"choice-remove font-size-base\" (click)=\"removeHandle(item, $event)\">\n          <thy-icon thyIconName=\"close\" class=\"font-size-sm\"></thy-icon>\n        </span>\n      </li>\n      <li class=\"select-control-search\">\n        <ng-template [ngTemplateOutlet]=\"inputTemplate\"></ng-template>\n      </li>\n    </ul>\n  </ng-container>\n  <ng-template #single>\n    <ng-container *ngIf=\"isSelectedValue\">\n      <div class=\"selected-value text-truncate\" [ngStyle]=\"selectedValueStyle\">\n        <ng-template\n          #customDisplay\n          [ngTemplateOutlet]=\"customDisplayTemplate\"\n          [ngTemplateOutletContext]=\"{\n            $implicit: selectedValue.thyRawValue || selectedValue.thyValue || selectedValue\n          }\"\n        ></ng-template>\n        <ng-container *ngIf=\"!customDisplayTemplate; else customDisplay\">\n          {{ selectedValue?.thyLabelText }}\n        </ng-container>\n      </div>\n    </ng-container>\n    <div class=\"select-control-search\">\n      <ng-template [ngTemplateOutlet]=\"inputTemplate\"></ng-template>\n    </div>\n  </ng-template>\n</div>\n<span class=\"select-control-arrow\">\n  <thy-icon thyIconName=\"angle-down\" class=\"font-size-base\"></thy-icon>\n</span>\n<span class=\"select-control-clear remove-link\" *ngIf=\"showClearIcon\" (click)=\"clearHandle($event)\">\n  <thy-icon class=\"remove-link-icon font-size-base\" thyIconName=\"close-circle-bold-fill\"></thy-icon>\n</span>\n",
                providers: [UpdateHostClassService],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.UpdateHostClassService }]; }, { thyAllowClear: [{
            type: Input
        }], thyPlaceholder: [{
            type: Input
        }], thyOnSearch: [{
            type: Output
        }], thyOnRemove: [{
            type: Output
        }], thyOnClear: [{
            type: Output
        }], thyPanelOpened: [{
            type: Input
        }], thyIsMultiple: [{
            type: Input
        }], thyShowSearch: [{
            type: Input
        }], thySelectedOptions: [{
            type: Input
        }], thyDisabled: [{
            type: Input
        }], thySize: [{
            type: Input
        }], customDisplayTemplate: [{
            type: Input
        }], inputElement: [{
            type: ViewChild,
            args: ['inputElement']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWNvbnRyb2wuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvc2hhcmVkL3NlbGVjdC9zZWxlY3QtY29udHJvbC9zZWxlY3QtY29udHJvbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILFNBQVMsRUFDVCxLQUFLLEVBQ0wsV0FBVyxFQUNYLFlBQVksRUFDWixNQUFNLEVBQ04sU0FBUyxFQUNULFVBQVUsRUFDVixTQUFTLEVBRVQsdUJBQXVCLEVBQzFCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRXpELE9BQU8sRUFBVyxpQkFBaUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFVN0QsTUFBTSxPQUFPLHlCQUF5QjtBQUFHLElBaUxyQyxZQUFvQixRQUFtQixFQUFVLE9BQXdCLEVBQVUsc0JBQThDO0FBQ3JJLFFBRHdCLGFBQVEsR0FBUixRQUFRLENBQVc7QUFBQyxRQUFTLFlBQU8sR0FBUCxPQUFPLENBQWlCO0FBQUMsUUFBUywyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO0FBQUMsUUFoTGxJLGVBQVUsR0FBRyxFQUFFLENBQUM7QUFDcEIsUUFDSSxnQkFBVyxHQUFHLEtBQUssQ0FBQztBQUN4QixRQUNJLGdCQUFXLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLFFBQ0ksZUFBVSxHQUFHLEtBQUssQ0FBQztBQUN2QixRQUNJLGVBQVUsR0FBRyxLQUFLLENBQUM7QUFDdkIsUUFDSSxhQUFRLEdBQUcsS0FBSyxDQUFDO0FBQ3JCLFFBMkZJLGtCQUFhLEdBQUcsS0FBSyxDQUFDO0FBQzFCLFFB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VUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNyQyxJQUFJLENBQUM7QUFDTCxJQUNJLFVBQVUsQ0FBQyxNQUFjLEVBQUUsTUFBd0I7QUFBSSxRQUNuRCxPQUFPLE1BQU0sQ0FBQyxRQUFRLENBQUM7QUFDL0IsSUFBSSxDQUFDO0FBQ0w7cURBbFFDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsdUNBQXVDLGtCQUNqRDs7Ozs7Ozs7Ozs7O2NBQThDO0NBQzlDLFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDO1NBQ25DLGVBQWUsRUFBRTtLQUF1QixDQUFDLE1BQU0sY0FDbEQ7Ozs7Ozs7Ozs7bVBBQ0k7QUFBQztBQUFtRCxZQWhCckQsU0FBUztBQUNYLFlBRkUsVUFBVTtBQUNaLFlBSU8sc0JBQXNCO0FBQUc7QUFBRztBQUNiLDZCQWdDbkIsS0FBSztBQUNSLDRCQW1CRyxLQUFLO0FBQ1IsNEJBU0csS0FBSztBQUNSLGlDQVNHLEtBQUs7QUFDUiwwQkEyQkcsS0FBSztBQUNSLG9DQVNHLEtBQUs7QUFDUiw0QkFFRyxLQUFLO0FBQ1IsNkJBRUcsS0FBSztBQUNSLHNCQUVHLEtBQUs7QUFDUiwwQkFTRyxNQUFNO0FBQ1QsMEJBRUcsTUFBTTtBQUNULHlCQUVHLE1BQU07QUFDVCwyQkFFRyxTQUFTLFNBQUMsY0FBYztBQUN6Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENvbXBvbmVudCxcbiAgICBJbnB1dCxcbiAgICBUZW1wbGF0ZVJlZixcbiAgICBFdmVudEVtaXR0ZXIsXG4gICAgT3V0cHV0LFxuICAgIFZpZXdDaGlsZCxcbiAgICBFbGVtZW50UmVmLFxuICAgIFJlbmRlcmVyMixcbiAgICBPbkluaXQsXG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3lcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVcGRhdGVIb3N0Q2xhc3NTZXJ2aWNlIH0gZnJvbSAnbmd4LXRldGh5cy9jb3JlJztcbmltcG9ydCB7IFNlbGVjdE9wdGlvbkJhc2UgfSBmcm9tICcuLi8uLi9vcHRpb24vc2VsZWN0LW9wdGlvbi1iYXNlJztcbmltcG9ydCB7IGlzQXJyYXksIGlzVW5kZWZpbmVkT3JOdWxsIH0gZnJvbSAnbmd4LXRldGh5cy91dGlsJztcblxuZXhwb3J0IHR5cGUgU2VsZWN0Q29udHJvbFNpemUgPSAneHMnIHwgJ3NtJyB8ICdtZCcgfCAnbGcnIHwgJyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndGh5LXNlbGVjdC1jb250cm9sLFt0aHlTZWxlY3RDb250cm9sXScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3NlbGVjdC1jb250cm9sLmNvbXBvbmVudC5odG1sJyxcbiAgICBwcm92aWRlcnM6IFtVcGRhdGVIb3N0Q2xhc3NTZXJ2aWNlXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBUaHlTZWxlY3RDb250cm9sQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBpbnB1dFZhbHVlID0gJyc7XG5cbiAgICBpc0NvbXBvc2luZyA9IGZhbHNlO1xuXG4gICAgcGFuZWxPcGVuZWQgPSBmYWxzZTtcblxuICAgIGlzTXVsdGlwbGUgPSBmYWxzZTtcblxuICAgIHNob3dTZWFyY2ggPSBmYWxzZTtcblxuICAgIGRpc2FibGVkID0gZmFsc2U7XG5cbiAgICBzaXplOiBTZWxlY3RDb250cm9sU2l6ZTtcblxuICAgIHNlbGVjdGVkT3B0aW9uczogU2VsZWN0T3B0aW9uQmFzZSB8IFNlbGVjdE9wdGlvbkJhc2VbXTtcblxuICAgIHNlYXJjaElucHV0Q29udHJvbENsYXNzOiB7IFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfTtcblxuICAgIGNob2ljZUNvbnRlbnRDbGFzczogeyBba2V5OiBzdHJpbmddOiBib29sZWFuIH07XG5cbiAgICBASW5wdXQoKVxuICAgIGdldCB0aHlQYW5lbE9wZW5lZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFuZWxPcGVuZWQ7XG4gICAgfVxuXG4gICAgc2V0IHRoeVBhbmVsT3BlbmVkKHZhbHVlOiBib29sZWFuKSB7XG4gICAgICAgIHRoaXMucGFuZWxPcGVuZWQgPSB2YWx1ZTtcbiAgICAgICAgaWYgKHRoaXMucGFuZWxPcGVuZWQgJiYgdGhpcy50aHlTaG93U2VhcmNoKSB7XG4gICAgICAgICAgICBQcm9taXNlLnJlc29sdmUobnVsbCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLnBhbmVsT3BlbmVkICYmIHRoaXMudGh5U2hvd1NlYXJjaCkge1xuICAgICAgICAgICAgUHJvbWlzZS5yZXNvbHZlKG51bGwpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0SW5wdXRWYWx1ZSgnJyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldFNlbGVjdENvbnRyb2xDbGFzcygpO1xuICAgIH1cblxuICAgIEBJbnB1dCgpXG4gICAgZ2V0IHRoeUlzTXVsdGlwbGUoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmlzTXVsdGlwbGU7XG4gICAgfVxuXG4gICAgc2V0IHRoeUlzTXVsdGlwbGUodmFsdWU6IGJvb2xlYW4pIHtcbiAgICAgICAgdGhpcy5pc011bHRpcGxlID0gdmFsdWU7XG4gICAgICAgIHRoaXMuc2V0U2VsZWN0Q29udHJvbENsYXNzKCk7XG4gICAgfVxuXG4gICAgQElucHV0KClcbiAgICBnZXQgdGh5U2hvd1NlYXJjaCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2hvd1NlYXJjaDtcbiAgICB9XG5cbiAgICBzZXQgdGh5U2hvd1NlYXJjaCh2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLnNob3dTZWFyY2ggPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5zZXRTZWxlY3RDb250cm9sQ2xhc3MoKTtcbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIGdldCB0aHlTZWxlY3RlZE9wdGlvbnMoKTogU2VsZWN0T3B0aW9uQmFzZSB8IFNlbGVjdE9wdGlvbkJhc2VbXSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkT3B0aW9ucztcbiAgICB9XG5cbiAgICBzZXQgdGh5U2VsZWN0ZWRPcHRpb25zKHZhbHVlOiBTZWxlY3RPcHRpb25CYXNlIHwgU2VsZWN0T3B0aW9uQmFzZVtdKSB7XG4gICAgICAgIGxldCBzYW1lVmFsdWUgPSBmYWxzZTtcbiAgICAgICAgY29uc3Qgb2xkVmFsdWUgPSB0aGlzLnNlbGVjdGVkT3B0aW9ucztcbiAgICAgICAgaWYgKHRoaXMuaXNNdWx0aXBsZSkge1xuICAgICAgICAgICAgaWYgKG9sZFZhbHVlIGluc3RhbmNlb2YgQXJyYXkgJiYgdmFsdWUgaW5zdGFuY2VvZiBBcnJheSAmJiBvbGRWYWx1ZS5sZW5ndGggPT09IHZhbHVlLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHNhbWVWYWx1ZSA9IHZhbHVlLmV2ZXJ5KChvcHRpb24sIGluZGV4KSA9PiBvcHRpb24udGh5VmFsdWUgPT09IG9sZFZhbHVlW2luZGV4XS50aHlWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAob2xkVmFsdWUgJiYgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICBzYW1lVmFsdWUgPSAob2xkVmFsdWUgYXMgU2VsZWN0T3B0aW9uQmFzZSkudGh5VmFsdWUgPT09ICh2YWx1ZSBhcyBTZWxlY3RPcHRpb25CYXNlKS50aHlWYWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNlbGVjdGVkT3B0aW9ucyA9IHZhbHVlO1xuICAgICAgICBpZiAodGhpcy5wYW5lbE9wZW5lZCAmJiB0aGlzLnRoeVNob3dTZWFyY2gpIHtcbiAgICAgICAgICAgIGlmICghc2FtZVZhbHVlKSB7XG4gICAgICAgICAgICAgICAgUHJvbWlzZS5yZXNvbHZlKG51bGwpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldElucHV0VmFsdWUoJycpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQElucHV0KClcbiAgICBnZXQgdGh5RGlzYWJsZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmRpc2FibGVkO1xuICAgIH1cblxuICAgIHNldCB0aHlEaXNhYmxlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLmRpc2FibGVkID0gdmFsdWU7XG4gICAgICAgIHRoaXMuc2V0U2VsZWN0Q29udHJvbENsYXNzKCk7XG4gICAgfVxuXG4gICAgQElucHV0KClcbiAgICBjdXN0b21EaXNwbGF5VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICBASW5wdXQoKVxuICAgIHRoeUFsbG93Q2xlYXIgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgpXG4gICAgdGh5UGxhY2Vob2xkZXIgPSAnJztcblxuICAgIEBJbnB1dCgpXG4gICAgZ2V0IHRoeVNpemUoKTogU2VsZWN0Q29udHJvbFNpemUge1xuICAgICAgICByZXR1cm4gdGhpcy5zaXplO1xuICAgIH1cblxuICAgIHNldCB0aHlTaXplKHZhbHVlOiBTZWxlY3RDb250cm9sU2l6ZSkge1xuICAgICAgICB0aGlzLnNpemUgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5zZXRTZWxlY3RDb250cm9sQ2xhc3MoKTtcbiAgICB9XG5cbiAgICBAT3V0cHV0KClcbiAgICB0aHlPblNlYXJjaCA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuXG4gICAgQE91dHB1dCgpXG4gICAgcHVibGljIHRoeU9uUmVtb3ZlID0gbmV3IEV2ZW50RW1pdHRlcjx7IGl0ZW06IFNlbGVjdE9wdGlvbkJhc2U7ICRldmVudE9yaWdpbjogRXZlbnQgfT4oKTtcblxuICAgIEBPdXRwdXQoKVxuICAgIHB1YmxpYyB0aHlPbkNsZWFyID0gbmV3IEV2ZW50RW1pdHRlcjxFdmVudD4oKTtcblxuICAgIEBWaWV3Q2hpbGQoJ2lucHV0RWxlbWVudCcpXG4gICAgaW5wdXRFbGVtZW50OiBFbGVtZW50UmVmO1xuXG4gICAgZ2V0IHNlbGVjdGVkVmFsdWVTdHlsZSgpOiB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9IHtcbiAgICAgICAgbGV0IHNob3dTZWxlY3RlZFZhbHVlID0gZmFsc2U7XG4gICAgICAgIGlmICh0aGlzLnNob3dTZWFyY2gpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBhbmVsT3BlbmVkKSB7XG4gICAgICAgICAgICAgICAgc2hvd1NlbGVjdGVkVmFsdWUgPSAhKHRoaXMuaXNDb21wb3NpbmcgfHwgdGhpcy5pbnB1dFZhbHVlKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2hvd1NlbGVjdGVkVmFsdWUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2hvd1NlbGVjdGVkVmFsdWUgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGRpc3BsYXk6IHNob3dTZWxlY3RlZFZhbHVlID8gJ2Jsb2NrJyA6ICdub25lJyB9O1xuICAgIH1cblxuICAgIGdldCBwbGFjZWhvbGRlclN0eWxlKCk6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0ge1xuICAgICAgICBsZXQgcGxhY2Vob2xkZXIgPSB0cnVlO1xuICAgICAgICBpZiAodGhpcy5pc1NlbGVjdGVkVmFsdWUpIHtcbiAgICAgICAgICAgIHBsYWNlaG9sZGVyID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLnRoeVBsYWNlaG9sZGVyKSB7XG4gICAgICAgICAgICBwbGFjZWhvbGRlciA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmlzQ29tcG9zaW5nIHx8IHRoaXMuaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgcGxhY2Vob2xkZXIgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBkaXNwbGF5OiBwbGFjZWhvbGRlciA/ICdibG9jaycgOiAnbm9uZScgfTtcbiAgICB9XG5cbiAgICBnZXQgc2VsZWN0ZWRWYWx1ZSgpOiBhbnkge1xuICAgICAgICByZXR1cm4gdGhpcy50aHlTZWxlY3RlZE9wdGlvbnM7XG4gICAgfVxuXG4gICAgZ2V0IG11bHRpcGxlU2VsZWN0ZWRWYWx1ZSgpOiBhbnkge1xuICAgICAgICByZXR1cm4gdGhpcy50aHlTZWxlY3RlZE9wdGlvbnM7XG4gICAgfVxuXG4gICAgZ2V0IHNob3dDbGVhckljb24oKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnRoeUFsbG93Q2xlYXIgJiYgdGhpcy5pc1NlbGVjdGVkVmFsdWU7XG4gICAgfVxuXG4gICAgZ2V0IGlzU2VsZWN0ZWRWYWx1ZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICghdGhpcy5pc011bHRpcGxlICYmICFpc1VuZGVmaW5lZE9yTnVsbCh0aGlzLnRoeVNlbGVjdGVkT3B0aW9ucykpIHx8XG4gICAgICAgICAgICAodGhpcy5pc011bHRpcGxlICYmICg8U2VsZWN0T3B0aW9uQmFzZVtdPnRoaXMudGh5U2VsZWN0ZWRPcHRpb25zKS5sZW5ndGggPiAwKVxuICAgICAgICApO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcmVuZGVyZXI6IFJlbmRlcmVyMiwgcHJpdmF0ZSBlbGVtZW50OiBFbGVtZW50UmVmPGFueT4sIHByaXZhdGUgdXBkYXRlSG9zdENsYXNzU2VydmljZTogVXBkYXRlSG9zdENsYXNzU2VydmljZSkge1xuICAgICAgICB0aGlzLnVwZGF0ZUhvc3RDbGFzc1NlcnZpY2UuaW5pdGlhbGl6ZUVsZW1lbnQodGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQpO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLnNldFNlbGVjdENvbnRyb2xDbGFzcygpO1xuICAgIH1cblxuICAgIHNldFNlbGVjdENvbnRyb2xDbGFzcygpIHtcbiAgICAgICAgY29uc3QgbW9kZVR5cGUgPSB0aGlzLmlzTXVsdGlwbGUgPyAnbXVsdGlwbGUnIDogJ3NpbmdsZSc7XG4gICAgICAgIGNvbnN0IHNlbGVjdENvbnRyb2xDbGFzcyA9IHtcbiAgICAgICAgICAgIFtgZm9ybS1jb250cm9sYF06IHRydWUsXG4gICAgICAgICAgICBbYGZvcm0tY29udHJvbC0ke3RoaXMudGh5U2l6ZX1gXTogISF0aGlzLnRoeVNpemUsXG4gICAgICAgICAgICBbYGZvcm0tY29udHJvbC1jdXN0b21gXTogdHJ1ZSxcbiAgICAgICAgICAgIFtgc2VsZWN0LWNvbnRyb2xgXTogdHJ1ZSxcbiAgICAgICAgICAgIFtgc2VsZWN0LWNvbnRyb2wtJHttb2RlVHlwZX1gXTogdHJ1ZSxcbiAgICAgICAgICAgIFtgc2VsZWN0LWNvbnRyb2wtc2hvdy1zZWFyY2hgXTogdGhpcy5zaG93U2VhcmNoLFxuICAgICAgICAgICAgW2BwYW5lbC1pcy1vcGVuZWRgXTogdGhpcy5wYW5lbE9wZW5lZCxcbiAgICAgICAgICAgIFtgZGlzYWJsZWRgXTogdGhpcy5kaXNhYmxlZFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnVwZGF0ZUhvc3RDbGFzc1NlcnZpY2UudXBkYXRlQ2xhc3NCeU1hcChzZWxlY3RDb250cm9sQ2xhc3MpO1xuICAgICAgICB0aGlzLnNlYXJjaElucHV0Q29udHJvbENsYXNzID0ge1xuICAgICAgICAgICAgW2Bmb3JtLWNvbnRyb2xgXTogdHJ1ZSxcbiAgICAgICAgICAgIFtgZm9ybS1jb250cm9sLSR7dGhpcy50aHlTaXplfWBdOiAhIXRoaXMudGh5U2l6ZSxcbiAgICAgICAgICAgIFtgc2VhcmNoLWlucHV0LWZpZWxkYF06IHRydWUsXG4gICAgICAgICAgICBbYGhpZGRlbmBdOiAhdGhpcy50aHlTaG93U2VhcmNoXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5jaG9pY2VDb250ZW50Q2xhc3MgPSB7XG4gICAgICAgICAgICBbYGNob2ljZS1jb250ZW50YF06IHRydWUsXG4gICAgICAgICAgICBbYHRleHQtdHJ1bmNhdGVgXTogdHJ1ZSxcbiAgICAgICAgICAgIFtgZm9udC1zaXplLSR7dGhpcy50aHlTaXplfWBdOiAhIXRoaXMudGh5U2l6ZVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHNldElucHV0VmFsdWUodmFsdWU6IHN0cmluZykge1xuICAgICAgICBpZiAodmFsdWUgIT09IHRoaXMuaW5wdXRWYWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5pbnB1dFZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVdpZHRoKCk7XG4gICAgICAgICAgICB0aGlzLnRoeU9uU2VhcmNoLmVtaXQodGhpcy5pbnB1dFZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhhbmRsZUJhY2tzcGFjZShldmVudDogS2V5Ym9hcmRFdmVudCAmIHsgaXNDb21wb3Npbmc6IGJvb2xlYW4gfSkge1xuICAgICAgICBpZiAoZXZlbnQuaXNDb21wb3NpbmcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5pbnB1dFZhbHVlLmxlbmd0aCA9PT0gMCAmJiB0aGlzLnNlbGVjdGVkT3B0aW9ucyBpbnN0YW5jZW9mIEFycmF5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5zZWxlY3RlZE9wdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlSGFuZGxlKHRoaXMuc2VsZWN0ZWRPcHRpb25zW3RoaXMuc2VsZWN0ZWRPcHRpb25zLmxlbmd0aCAtIDFdLCBldmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB1cGRhdGVXaWR0aCgpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNNdWx0aXBsZSAmJiB0aGlzLnRoeVNob3dTZWFyY2gpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmlucHV0VmFsdWUgfHwgdGhpcy5pc0NvbXBvc2luZykge1xuICAgICAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudCwgJ3dpZHRoJywgYCR7dGhpcy5pbnB1dEVsZW1lbnQubmF0aXZlRWxlbWVudC5zY3JvbGxXaWR0aH1weGApO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZVN0eWxlKHRoaXMuaW5wdXRFbGVtZW50Lm5hdGl2ZUVsZW1lbnQsICd3aWR0aCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVtb3ZlSGFuZGxlKGl0ZW06IFNlbGVjdE9wdGlvbkJhc2UsICRldmVudDogRXZlbnQpIHtcbiAgICAgICAgdGhpcy50aHlPblJlbW92ZS5lbWl0KHsgaXRlbTogaXRlbSwgJGV2ZW50T3JpZ2luOiAkZXZlbnQgfSk7XG4gICAgfVxuXG4gICAgY2xlYXJIYW5kbGUoJGV2ZW50OiBFdmVudCkge1xuICAgICAgICB0aGlzLnRoeU9uQ2xlYXIuZW1pdCgkZXZlbnQpO1xuICAgIH1cblxuICAgIHRyYWNrVmFsdWUoX2luZGV4OiBudW1iZXIsIG9wdGlvbjogU2VsZWN0T3B0aW9uQmFzZSk6IGFueSB7XG4gICAgICAgIHJldHVybiBvcHRpb24udGh5VmFsdWU7XG4gICAgfVxufVxuIl19