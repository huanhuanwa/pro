import { transition, style, animate, trigger, state } from '@angular/animations';
const animationBody = [
    transition('void => offsetLeft', [style({ width: 0 }), animate('0.2s ease-in')]),
    transition('offsetLeft => exit', [animate('0.2s', style({ width: 0 }))]),
    transition('void => offsetRight', [style({ width: 0 }), animate('0.2s ease')]),
    transition('offsetRight => exit', [animate('0.2s', style({ width: 0 }))]),
    transition('void => offsetTop', [style({ height: 0 }), animate('0.2s ease-in')]),
    transition('offsetTop => exit', [animate('0.2s', style({ height: 0 }))]),
    transition('void => offsetBottom', [style({ height: 0 }), animate('0.2s ease-in')]),
    transition('offsetBottom => exit', [animate('0.2s', style({ height: 0 }))]),
    state('left right top bottom', style({ transform: '*' })),
    transition('void => left', [style({ transform: 'translateX(-100%)' }), animate('0.2s ease-in')]),
    transition('left => exit', [animate('0.2s', style({ transform: 'translateX(-100%)' }))]),
    transition('void => right', [style({ transform: 'translateX(100%)' }), animate('0.2s ease-in')]),
    transition('right => exit', [animate('0.2s', style({ transform: 'translateX(100%)' }))]),
    transition('void => top', [style({ transform: 'translateY(-100%)' }), animate('0.2s ease-in')]),
    transition('top => exit', [animate('0.2s', style({ transform: 'translateY(-100%)' }))]),
    transition('void => bottom', [style({ transform: 'translateY(100%)' }), animate('0.2s ease-in')]),
    transition('bottom => exit', [animate('0.2s', style({ transform: 'translateY(100%)' }))])
];
export const thySlideAnimations = {
    slideContainer: trigger('slideContainer', animationBody)
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGUtYW5pbWF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zbGlkZS9zbGlkZS1hbmltYXRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBNEIsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRTNHLE1BQU0sYUFBYSxHQUFHO0lBQ2xCLFVBQVUsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ2hGLFVBQVUsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3hFLFVBQVUsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQzlFLFVBQVUsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pFLFVBQVUsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ2hGLFVBQVUsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3hFLFVBQVUsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ25GLFVBQVUsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTNFLEtBQUssQ0FBQyx1QkFBdUIsRUFBRSxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztJQUN6RCxVQUFVLENBQUMsY0FBYyxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztJQUNoRyxVQUFVLENBQUMsY0FBYyxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4RixVQUFVLENBQUMsZUFBZSxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLGtCQUFrQixFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztJQUNoRyxVQUFVLENBQUMsZUFBZSxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4RixVQUFVLENBQUMsYUFBYSxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLG1CQUFtQixFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztJQUMvRixVQUFVLENBQUMsYUFBYSxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN2RixVQUFVLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxLQUFLLENBQUMsRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO0lBQ2pHLFVBQVUsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLGtCQUFrQixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7Q0FDNUYsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUUzQjtJQUNBLGNBQWMsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLEVBQUUsYUFBYSxDQUFDO0NBQzNELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0cmFuc2l0aW9uLCBzdHlsZSwgYW5pbWF0ZSwgQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhLCB0cmlnZ2VyLCBzdGF0ZSB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuXG5jb25zdCBhbmltYXRpb25Cb2R5ID0gW1xuICAgIHRyYW5zaXRpb24oJ3ZvaWQgPT4gb2Zmc2V0TGVmdCcsIFtzdHlsZSh7IHdpZHRoOiAwIH0pLCBhbmltYXRlKCcwLjJzIGVhc2UtaW4nKV0pLFxuICAgIHRyYW5zaXRpb24oJ29mZnNldExlZnQgPT4gZXhpdCcsIFthbmltYXRlKCcwLjJzJywgc3R5bGUoeyB3aWR0aDogMCB9KSldKSxcbiAgICB0cmFuc2l0aW9uKCd2b2lkID0+IG9mZnNldFJpZ2h0JywgW3N0eWxlKHsgd2lkdGg6IDAgfSksIGFuaW1hdGUoJzAuMnMgZWFzZScpXSksXG4gICAgdHJhbnNpdGlvbignb2Zmc2V0UmlnaHQgPT4gZXhpdCcsIFthbmltYXRlKCcwLjJzJywgc3R5bGUoeyB3aWR0aDogMCB9KSldKSxcbiAgICB0cmFuc2l0aW9uKCd2b2lkID0+IG9mZnNldFRvcCcsIFtzdHlsZSh7IGhlaWdodDogMCB9KSwgYW5pbWF0ZSgnMC4ycyBlYXNlLWluJyldKSxcbiAgICB0cmFuc2l0aW9uKCdvZmZzZXRUb3AgPT4gZXhpdCcsIFthbmltYXRlKCcwLjJzJywgc3R5bGUoeyBoZWlnaHQ6IDAgfSkpXSksXG4gICAgdHJhbnNpdGlvbigndm9pZCA9PiBvZmZzZXRCb3R0b20nLCBbc3R5bGUoeyBoZWlnaHQ6IDAgfSksIGFuaW1hdGUoJzAuMnMgZWFzZS1pbicpXSksXG4gICAgdHJhbnNpdGlvbignb2Zmc2V0Qm90dG9tID0+IGV4aXQnLCBbYW5pbWF0ZSgnMC4ycycsIHN0eWxlKHsgaGVpZ2h0OiAwIH0pKV0pLFxuXG4gICAgc3RhdGUoJ2xlZnQgcmlnaHQgdG9wIGJvdHRvbScsIHN0eWxlKHsgdHJhbnNmb3JtOiAnKicgfSkpLFxuICAgIHRyYW5zaXRpb24oJ3ZvaWQgPT4gbGVmdCcsIFtzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoLTEwMCUpJyB9KSwgYW5pbWF0ZSgnMC4ycyBlYXNlLWluJyldKSxcbiAgICB0cmFuc2l0aW9uKCdsZWZ0ID0+IGV4aXQnLCBbYW5pbWF0ZSgnMC4ycycsIHN0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWCgtMTAwJSknIH0pKV0pLFxuICAgIHRyYW5zaXRpb24oJ3ZvaWQgPT4gcmlnaHQnLCBbc3R5bGUoeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGVYKDEwMCUpJyB9KSwgYW5pbWF0ZSgnMC4ycyBlYXNlLWluJyldKSxcbiAgICB0cmFuc2l0aW9uKCdyaWdodCA9PiBleGl0JywgW2FuaW1hdGUoJzAuMnMnLCBzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVgoMTAwJSknIH0pKV0pLFxuICAgIHRyYW5zaXRpb24oJ3ZvaWQgPT4gdG9wJywgW3N0eWxlKHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtMTAwJSknIH0pLCBhbmltYXRlKCcwLjJzIGVhc2UtaW4nKV0pLFxuICAgIHRyYW5zaXRpb24oJ3RvcCA9PiBleGl0JywgW2FuaW1hdGUoJzAuMnMnLCBzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoLTEwMCUpJyB9KSldKSxcbiAgICB0cmFuc2l0aW9uKCd2b2lkID0+IGJvdHRvbScsIFtzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMTAwJSknIH0pLCBhbmltYXRlKCcwLjJzIGVhc2UtaW4nKV0pLFxuICAgIHRyYW5zaXRpb24oJ2JvdHRvbSA9PiBleGl0JywgW2FuaW1hdGUoJzAuMnMnLCBzdHlsZSh7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoMTAwJSknIH0pKV0pXG5dO1xuXG5leHBvcnQgY29uc3QgdGh5U2xpZGVBbmltYXRpb25zOiB7XG4gICAgcmVhZG9ubHkgc2xpZGVDb250YWluZXI6IEFuaW1hdGlvblRyaWdnZXJNZXRhZGF0YTtcbn0gPSB7XG4gICAgc2xpZGVDb250YWluZXI6IHRyaWdnZXIoJ3NsaWRlQ29udGFpbmVyJywgYW5pbWF0aW9uQm9keSlcbn07XG4iXX0=