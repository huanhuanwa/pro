import { Injectable } from '@angular/core';
import { ThyAbstractInternalOverlayRef, ThyAbstractOverlayRef } from 'ngx-tethys/core';
import { ThySlideContainerComponent } from './slide-container.component';
import { OverlayRef } from '@angular/cdk/overlay';
import { slideUpperOverlayOptions, ThySlideConfig } from './slide.config';
export class ThySlideRef extends ThyAbstractOverlayRef {
}
export class ThyInternalSlideRef extends ThyAbstractInternalOverlayRef {
    constructor(overlayRef, containerInstance, config) {
        super(slideUpperOverlayOptions, overlayRef, containerInstance, config);
    }
    updatePosition(position) {
        return this.updateGlobalPosition(position);
    }
}
ThyInternalSlideRef.decorators = [
    { type: Injectable }
];
ThyInternalSlideRef.ctorParameters = () => [
    { type: OverlayRef },
    { type: ThySlideContainerComponent },
    { type: ThySlideConfig }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGUtcmVmLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc2xpZGUvc2xpZGUtcmVmLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsNkJBQTZCLEVBQTJCLHFCQUFxQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEgsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDekUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ2xELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUxRSxNQUFNLE9BQWdCLFdBQThCLFNBQVEscUJBQTZEO0NBQUc7QUFHNUgsTUFBTSxPQUFPLG1CQUE0QyxTQUFRLDZCQUFxRTtJQUVsSSxZQUFZLFVBQXNCLEVBQUUsaUJBQTZDLEVBQUUsTUFBc0I7UUFDckcsS0FBSyxDQUFDLHdCQUF3QixFQUFFLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQsY0FBYyxDQUFDLFFBQWtDO1FBQzdDLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUM7OztZQVRKLFVBQVU7OztZQUxGLFVBQVU7WUFEViwwQkFBMEI7WUFFQSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGh5QWJzdHJhY3RJbnRlcm5hbE92ZXJsYXlSZWYsIFRoeVVwcGVyT3ZlcmxheVBvc2l0aW9uLCBUaHlBYnN0cmFjdE92ZXJsYXlSZWYgfSBmcm9tICduZ3gtdGV0aHlzL2NvcmUnO1xuaW1wb3J0IHsgVGh5U2xpZGVDb250YWluZXJDb21wb25lbnQgfSBmcm9tICcuL3NsaWRlLWNvbnRhaW5lci5jb21wb25lbnQnO1xuaW1wb3J0IHsgT3ZlcmxheVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9vdmVybGF5JztcbmltcG9ydCB7IHNsaWRlVXBwZXJPdmVybGF5T3B0aW9ucywgVGh5U2xpZGVDb25maWcgfSBmcm9tICcuL3NsaWRlLmNvbmZpZyc7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBUaHlTbGlkZVJlZjxULCBUUmVzdWx0ID0gYW55PiBleHRlbmRzIFRoeUFic3RyYWN0T3ZlcmxheVJlZjxULCBUaHlTbGlkZUNvbnRhaW5lckNvbXBvbmVudCwgVFJlc3VsdD4ge31cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRoeUludGVybmFsU2xpZGVSZWY8VCA9IGFueSwgVFJlc3VsdCA9IGFueT4gZXh0ZW5kcyBUaHlBYnN0cmFjdEludGVybmFsT3ZlcmxheVJlZjxULCBUaHlTbGlkZUNvbnRhaW5lckNvbXBvbmVudCwgVFJlc3VsdD5cbiAgICBpbXBsZW1lbnRzIFRoeVNsaWRlUmVmPFQ+IHtcbiAgICBjb25zdHJ1Y3RvcihvdmVybGF5UmVmOiBPdmVybGF5UmVmLCBjb250YWluZXJJbnN0YW5jZTogVGh5U2xpZGVDb250YWluZXJDb21wb25lbnQsIGNvbmZpZzogVGh5U2xpZGVDb25maWcpIHtcbiAgICAgICAgc3VwZXIoc2xpZGVVcHBlck92ZXJsYXlPcHRpb25zLCBvdmVybGF5UmVmLCBjb250YWluZXJJbnN0YW5jZSwgY29uZmlnKTtcbiAgICB9XG5cbiAgICB1cGRhdGVQb3NpdGlvbihwb3NpdGlvbj86IFRoeVVwcGVyT3ZlcmxheVBvc2l0aW9uKTogdGhpcyB7XG4gICAgICAgIHJldHVybiB0aGlzLnVwZGF0ZUdsb2JhbFBvc2l0aW9uKHBvc2l0aW9uKTtcbiAgICB9XG59XG4iXX0=