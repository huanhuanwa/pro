import { Injectable } from '@angular/core';
import { ThyAbstractInternalOverlayRef, ThyAbstractOverlayRef } from 'ngx-tethys/core';
import { ThySlideContainerComponent } from './slide-container.component';
import { OverlayRef } from '@angular/cdk/overlay';
import { slideUpperOverlayOptions, ThySlideConfig } from './slide.config';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/cdk/overlay';
import * as ɵngcc2 from './slide-container.component';
import * as ɵngcc3 from './slide.config';
export class ThySlideRef extends ThyAbstractOverlayRef {
}
export class ThyInternalSlideRef extends ThyAbstractInternalOverlayRef {
    constructor(overlayRef, containerInstance, config) {
        super(slideUpperOverlayOptions, overlayRef, containerInstance, config);
    }
    updatePosition(position) {
        return this.updateGlobalPosition(position);
    }
}
ThyInternalSlideRef.ɵfac = function ThyInternalSlideRef_Factory(t) { return new (t || ThyInternalSlideRef)(ɵngcc0.ɵɵinject(ɵngcc1.OverlayRef), ɵngcc0.ɵɵinject(ɵngcc2.ThySlideContainerComponent), ɵngcc0.ɵɵinject(ɵngcc3.ThySlideConfig)); };
ThyInternalSlideRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ThyInternalSlideRef, factory: ThyInternalSlideRef.ɵfac });
ThyInternalSlideRef.ctorParameters = () => [
    { type: OverlayRef },
    { type: ThySlideContainerComponent },
    { type: ThySlideConfig }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyInternalSlideRef, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.OverlayRef }, { type: ɵngcc2.ThySlideContainerComponent }, { type: ɵngcc3.ThySlideConfig }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGUtcmVmLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zbGlkZS9zbGlkZS1yZWYuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSw2QkFBNkIsRUFBMkIscUJBQXFCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoSCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN6RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDbEQsT0FBTyxFQUFFLHdCQUF3QixFQUFFLGNBQWMsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7OztBQUUxRSxNQUFNLE9BQWdCLFdBQThCLFNBQVEscUJBQTZEO0FBQUcsQ0FBQTtBQUc1SCxNQUFNLE9BQU8sbUJBQTRDLFNBQVEsNkJBQXFFO0FBQ3BJLElBQ0UsWUFBWSxVQUFzQixFQUFFLGlCQUE2QyxFQUFFLE1BQXNCO0FBQzdHLFFBQVEsS0FBSyxDQUFDLHdCQUF3QixFQUFFLFVBQVUsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUMvRSxJQUFJLENBQUM7QUFDTCxJQUNJLGNBQWMsQ0FBQyxRQUFrQztBQUFJLFFBQ2pELE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ25ELElBQUksQ0FBQztBQUNMOytDQVZDLFVBQVU7eUhBQ1Q7QUFBQztBQUE2QyxZQU52QyxVQUFVO0FBQUksWUFEZCwwQkFBMEI7QUFBSSxZQUVKLGNBQWM7QUFBRzs7O3lKQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUaHlBYnN0cmFjdEludGVybmFsT3ZlcmxheVJlZiwgVGh5VXBwZXJPdmVybGF5UG9zaXRpb24sIFRoeUFic3RyYWN0T3ZlcmxheVJlZiB9IGZyb20gJ25neC10ZXRoeXMvY29yZSc7XG5pbXBvcnQgeyBUaHlTbGlkZUNvbnRhaW5lckNvbXBvbmVudCB9IGZyb20gJy4vc2xpZGUtY29udGFpbmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPdmVybGF5UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL292ZXJsYXknO1xuaW1wb3J0IHsgc2xpZGVVcHBlck92ZXJsYXlPcHRpb25zLCBUaHlTbGlkZUNvbmZpZyB9IGZyb20gJy4vc2xpZGUuY29uZmlnJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFRoeVNsaWRlUmVmPFQsIFRSZXN1bHQgPSBhbnk+IGV4dGVuZHMgVGh5QWJzdHJhY3RPdmVybGF5UmVmPFQsIFRoeVNsaWRlQ29udGFpbmVyQ29tcG9uZW50LCBUUmVzdWx0PiB7fVxuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVGh5SW50ZXJuYWxTbGlkZVJlZjxUID0gYW55LCBUUmVzdWx0ID0gYW55PiBleHRlbmRzIFRoeUFic3RyYWN0SW50ZXJuYWxPdmVybGF5UmVmPFQsIFRoeVNsaWRlQ29udGFpbmVyQ29tcG9uZW50LCBUUmVzdWx0PlxuICAgIGltcGxlbWVudHMgVGh5U2xpZGVSZWY8VD4ge1xuICAgIGNvbnN0cnVjdG9yKG92ZXJsYXlSZWY6IE92ZXJsYXlSZWYsIGNvbnRhaW5lckluc3RhbmNlOiBUaHlTbGlkZUNvbnRhaW5lckNvbXBvbmVudCwgY29uZmlnOiBUaHlTbGlkZUNvbmZpZykge1xuICAgICAgICBzdXBlcihzbGlkZVVwcGVyT3ZlcmxheU9wdGlvbnMsIG92ZXJsYXlSZWYsIGNvbnRhaW5lckluc3RhbmNlLCBjb25maWcpO1xuICAgIH1cblxuICAgIHVwZGF0ZVBvc2l0aW9uKHBvc2l0aW9uPzogVGh5VXBwZXJPdmVybGF5UG9zaXRpb24pOiB0aGlzIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXBkYXRlR2xvYmFsUG9zaXRpb24ocG9zaXRpb24pO1xuICAgIH1cbn1cbiJdfQ==