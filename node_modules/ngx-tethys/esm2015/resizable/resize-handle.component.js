import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter, ChangeDetectorRef, ElementRef } from '@angular/core';
import { ThyResizableService } from './resizable.service';
import { takeUntil } from 'rxjs/operators';
import { MixinBase, mixinUnsubscribe } from 'ngx-tethys/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './resizable.service';

const _c0 = ["*"];
export class ThyResizeHandleMouseDownEvent {
    constructor(direction, mouseEvent) {
        this.direction = direction;
        this.mouseEvent = mouseEvent;
    }
}
const _MixinBase = mixinUnsubscribe(MixinBase);
export class ThyResizeHandleComponent extends _MixinBase {
    constructor(thyResizableService, cdr, elementRef) {
        super();
        this.thyResizableService = thyResizableService;
        this.cdr = cdr;
        this.elementRef = elementRef;
        this.thyDirection = 'bottomRight';
        this.thyMouseDown = new EventEmitter();
        this.entered = false;
        // TODO: move to host after View Engine deprecation
        this.elementRef.nativeElement.classList.add('thy-resizable-handle');
    }
    ngOnInit() {
        this.thyResizableService.mouseEntered$.pipe(takeUntil(this.ngUnsubscribe$)).subscribe(entered => {
            this.entered = entered;
            this.cdr.markForCheck();
        });
    }
    onMousedown(event) {
        this.thyResizableService.handleMouseDown$.next(new ThyResizeHandleMouseDownEvent(this.thyDirection, event));
    }
    ngOnDestroy() {
        super.ngOnDestroy();
    }
}
ThyResizeHandleComponent.ɵfac = function ThyResizeHandleComponent_Factory(t) { return new (t || ThyResizeHandleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyResizableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyResizeHandleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyResizeHandleComponent, selectors: [["thy-resize-handle"], ["", "thy-resize-handle", ""]], hostVars: 18, hostBindings: function ThyResizeHandleComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("mousedown", function ThyResizeHandleComponent_mousedown_HostBindingHandler($event) { return ctx.onMousedown($event); })("touchstart", function ThyResizeHandleComponent_touchstart_HostBindingHandler($event) { return ctx.onMousedown($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-resizable-handle-top", ctx.thyDirection === "top")("thy-resizable-handle-right", ctx.thyDirection === "right")("thy-resizable-handle-bottom", ctx.thyDirection === "bottom")("thy-resizable-handle-left", ctx.thyDirection === "left")("thy-resizable-handle-topRight", ctx.thyDirection === "topRight")("thy-resizable-handle-bottomRight", ctx.thyDirection === "bottomRight")("thy-resizable-handle-bottomLeft", ctx.thyDirection === "bottomLeft")("thy-resizable-handle-topLeft", ctx.thyDirection === "topLeft")("thy-resizable-handle-box-hover", ctx.entered);
    } }, inputs: { thyDirection: "thyDirection" }, outputs: { thyMouseDown: "thyMouseDown" }, exportAs: ["thyResizeHandle"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ThyResizeHandleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
ThyResizeHandleComponent.ctorParameters = () => [
    { type: ThyResizableService },
    { type: ChangeDetectorRef },
    { type: ElementRef }
];
ThyResizeHandleComponent.propDecorators = {
    thyDirection: [{ type: Input }],
    thyMouseDown: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyResizeHandleComponent, [{
        type: Component,
        args: [{
                selector: 'thy-resize-handle, [thy-resize-handle]',
                exportAs: 'thyResizeHandle',
                template: `
        <ng-content></ng-content>
    `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                host: {
                    '[class.thy-resizable-handle-top]': `thyDirection === 'top'`,
                    '[class.thy-resizable-handle-right]': `thyDirection === 'right'`,
                    '[class.thy-resizable-handle-bottom]': `thyDirection === 'bottom'`,
                    '[class.thy-resizable-handle-left]': `thyDirection === 'left'`,
                    '[class.thy-resizable-handle-topRight]': `thyDirection === 'topRight'`,
                    '[class.thy-resizable-handle-bottomRight]': `thyDirection === 'bottomRight'`,
                    '[class.thy-resizable-handle-bottomLeft]': `thyDirection === 'bottomLeft'`,
                    '[class.thy-resizable-handle-topLeft]': `thyDirection === 'topLeft'`,
                    '[class.thy-resizable-handle-box-hover]': 'entered',
                    '(mousedown)': 'onMousedown($event)',
                    '(touchstart)': 'onMousedown($event)'
                }
            }]
    }], function () { return [{ type: ɵngcc1.ThyResizableService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }]; }, { thyDirection: [{
            type: Input
        }], thyMouseDown: [{
            type: Output
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplLWhhbmRsZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yZXNpemFibGUvcmVzaXplLWhhbmRsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUdILFNBQVMsRUFDVCx1QkFBdUIsRUFDdkIsS0FBSyxFQUNMLE1BQU0sRUFDTixZQUFZLEVBQ1osaUJBQWlCLEVBQ2pCLFVBQVUsRUFDYixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUErQixTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7QUFFM0YsTUFBTSxPQUFPLDZCQUE2QjtBQUMxQyxJQUFJLFlBQW1CLFNBQTZCLEVBQVMsVUFBbUM7QUFBSSxRQUE3RSxjQUFTLEdBQVQsU0FBUyxDQUFvQjtBQUFDLFFBQVEsZUFBVSxHQUFWLFVBQVUsQ0FBeUI7QUFBQyxJQUFFLENBQUM7QUFDcEcsQ0FBQztBQUNELE1BQU0sVUFBVSxHQUFtRCxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQXVCL0YsTUFBTSxPQUFPLHdCQUF5QixTQUFRLFVBQVU7QUFBRyxJQU12RCxZQUFvQixtQkFBd0MsRUFBVSxHQUFzQixFQUFVLFVBQXNCO0FBQ2hJLFFBQVEsS0FBSyxFQUFFLENBQUM7QUFDaEIsUUFGd0Isd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtBQUFDLFFBQVMsUUFBRyxHQUFILEdBQUcsQ0FBbUI7QUFBQyxRQUFTLGVBQVUsR0FBVixVQUFVLENBQVk7QUFBQyxRQUxwSCxpQkFBWSxHQUF1QixhQUFhLENBQUM7QUFDOUQsUUFBdUIsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBaUMsQ0FBQztBQUN4RixRQUNJLFlBQU8sR0FBRyxLQUFLLENBQUM7QUFDcEIsUUFHUSxtREFBbUQ7QUFDM0QsUUFBUSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7QUFDNUUsSUFBSSxDQUFDO0FBQ0wsSUFDSSxRQUFRO0FBQUssUUFDVCxJQUFJLENBQUMsbUJBQW1CLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFO0FBQ3hHLFlBQVksSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7QUFDbkMsWUFBWSxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSxDQUFDO0FBQ3BDLFFBQVEsQ0FBQyxDQUFDLENBQUM7QUFDWCxJQUFJLENBQUM7QUFDTCxJQUNJLFdBQVcsQ0FBQyxLQUE4QjtBQUFJLFFBQzFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSw2QkFBNkIsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDcEgsSUFBSSxDQUFDO0FBQ0wsSUFDSSxXQUFXO0FBQUssUUFDWixLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDNUIsSUFBSSxDQUFDO0FBQ0w7b0RBL0NDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsd0NBQXdDLGtCQUNsRCxRQUFRLEVBQUUsaUJBQWlCLGtCQUMzQixRQUFRLEVBQUUseUNBRVQsa0JBQ0Q7UUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sa0JBQy9DLElBQUksRUFBRSxzQkFDRixrQ0FBa0MsRUFBRSx3QkFBd0Isc0JBQzVELG9DQUFvQyxFQUFFLDBCQUEwQixzQkFDaEU7aUNBQXFDLEVBQUUsMkJBQTJCLHNCQUNsRSxtQ0FBbUMsRUFBRSx5QkFBeUIsc0JBQzlELHVDQUF1QyxFQUFFLDZCQUE2QixzQkFDdEU7O1dBQTBDLEVBQUUsZ0NBQWdDLHNCQUM1RSx5Q0FBeUMsRUFBRSwrQkFBK0Isc0JBQzFFLHNDQUFzQyxFQUFFLDRCQUE0QixzQkFDcEUsd0NBQXdDLEVBQUUsU0FBUyxzQkFDbkQsYUFBYSxFQUFFLHFCQUFxQixzQkFDcEMsY0FBYyxFQUFFLHFCQUFxQixrQkFDeEMsY0FDSjs7OztpREFDSTtBQUFDO0FBQWtELFlBOUIvQyxtQkFBbUI7QUFBSSxZQUo1QixpQkFBaUI7QUFDbkIsWUFBRSxVQUFVO0FBQ1o7QUFBRztBQUNvQiwyQkFnQ3BCLEtBQUs7QUFBSywyQkFDVixNQUFNO0FBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgT25Jbml0LFxuICAgIE9uRGVzdHJveSxcbiAgICBDb21wb25lbnQsXG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgSW5wdXQsXG4gICAgT3V0cHV0LFxuICAgIEV2ZW50RW1pdHRlcixcbiAgICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgICBFbGVtZW50UmVmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGh5UmVzaXplRGlyZWN0aW9uIH0gZnJvbSAnLi9pbnRlcmZhY2UnO1xuaW1wb3J0IHsgVGh5UmVzaXphYmxlU2VydmljZSB9IGZyb20gJy4vcmVzaXphYmxlLnNlcnZpY2UnO1xuaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgQ29uc3RydWN0b3IsIFRoeVVuc3Vic2NyaWJlLCBNaXhpbkJhc2UsIG1peGluVW5zdWJzY3JpYmUgfSBmcm9tICduZ3gtdGV0aHlzL2NvcmUnO1xuXG5leHBvcnQgY2xhc3MgVGh5UmVzaXplSGFuZGxlTW91c2VEb3duRXZlbnQge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBkaXJlY3Rpb246IFRoeVJlc2l6ZURpcmVjdGlvbiwgcHVibGljIG1vdXNlRXZlbnQ6IE1vdXNlRXZlbnQgfCBUb3VjaEV2ZW50KSB7fVxufVxuY29uc3QgX01peGluQmFzZTogQ29uc3RydWN0b3I8VGh5VW5zdWJzY3JpYmU+ICYgdHlwZW9mIE1peGluQmFzZSA9IG1peGluVW5zdWJzY3JpYmUoTWl4aW5CYXNlKTtcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0aHktcmVzaXplLWhhbmRsZSwgW3RoeS1yZXNpemUtaGFuZGxlXScsXG4gICAgZXhwb3J0QXM6ICd0aHlSZXNpemVIYW5kbGUnLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICBgLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tjbGFzcy50aHktcmVzaXphYmxlLWhhbmRsZS10b3BdJzogYHRoeURpcmVjdGlvbiA9PT0gJ3RvcCdgLFxuICAgICAgICAnW2NsYXNzLnRoeS1yZXNpemFibGUtaGFuZGxlLXJpZ2h0XSc6IGB0aHlEaXJlY3Rpb24gPT09ICdyaWdodCdgLFxuICAgICAgICAnW2NsYXNzLnRoeS1yZXNpemFibGUtaGFuZGxlLWJvdHRvbV0nOiBgdGh5RGlyZWN0aW9uID09PSAnYm90dG9tJ2AsXG4gICAgICAgICdbY2xhc3MudGh5LXJlc2l6YWJsZS1oYW5kbGUtbGVmdF0nOiBgdGh5RGlyZWN0aW9uID09PSAnbGVmdCdgLFxuICAgICAgICAnW2NsYXNzLnRoeS1yZXNpemFibGUtaGFuZGxlLXRvcFJpZ2h0XSc6IGB0aHlEaXJlY3Rpb24gPT09ICd0b3BSaWdodCdgLFxuICAgICAgICAnW2NsYXNzLnRoeS1yZXNpemFibGUtaGFuZGxlLWJvdHRvbVJpZ2h0XSc6IGB0aHlEaXJlY3Rpb24gPT09ICdib3R0b21SaWdodCdgLFxuICAgICAgICAnW2NsYXNzLnRoeS1yZXNpemFibGUtaGFuZGxlLWJvdHRvbUxlZnRdJzogYHRoeURpcmVjdGlvbiA9PT0gJ2JvdHRvbUxlZnQnYCxcbiAgICAgICAgJ1tjbGFzcy50aHktcmVzaXphYmxlLWhhbmRsZS10b3BMZWZ0XSc6IGB0aHlEaXJlY3Rpb24gPT09ICd0b3BMZWZ0J2AsXG4gICAgICAgICdbY2xhc3MudGh5LXJlc2l6YWJsZS1oYW5kbGUtYm94LWhvdmVyXSc6ICdlbnRlcmVkJyxcbiAgICAgICAgJyhtb3VzZWRvd24pJzogJ29uTW91c2Vkb3duKCRldmVudCknLFxuICAgICAgICAnKHRvdWNoc3RhcnQpJzogJ29uTW91c2Vkb3duKCRldmVudCknXG4gICAgfVxufSlcbmV4cG9ydCBjbGFzcyBUaHlSZXNpemVIYW5kbGVDb21wb25lbnQgZXh0ZW5kcyBfTWl4aW5CYXNlIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIEBJbnB1dCgpIHRoeURpcmVjdGlvbjogVGh5UmVzaXplRGlyZWN0aW9uID0gJ2JvdHRvbVJpZ2h0JztcbiAgICBAT3V0cHV0KCkgcmVhZG9ubHkgdGh5TW91c2VEb3duID0gbmV3IEV2ZW50RW1pdHRlcjxUaHlSZXNpemVIYW5kbGVNb3VzZURvd25FdmVudD4oKTtcblxuICAgIGVudGVyZWQgPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgdGh5UmVzaXphYmxlU2VydmljZTogVGh5UmVzaXphYmxlU2VydmljZSwgcHJpdmF0ZSBjZHI6IENoYW5nZURldGVjdG9yUmVmLCBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgLy8gVE9ETzogbW92ZSB0byBob3N0IGFmdGVyIFZpZXcgRW5naW5lIGRlcHJlY2F0aW9uXG4gICAgICAgIHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3RoeS1yZXNpemFibGUtaGFuZGxlJyk7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudGh5UmVzaXphYmxlU2VydmljZS5tb3VzZUVudGVyZWQkLnBpcGUodGFrZVVudGlsKHRoaXMubmdVbnN1YnNjcmliZSQpKS5zdWJzY3JpYmUoZW50ZXJlZCA9PiB7XG4gICAgICAgICAgICB0aGlzLmVudGVyZWQgPSBlbnRlcmVkO1xuICAgICAgICAgICAgdGhpcy5jZHIubWFya0ZvckNoZWNrKCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIG9uTW91c2Vkb3duKGV2ZW50OiBNb3VzZUV2ZW50IHwgVG91Y2hFdmVudCk6IHZvaWQge1xuICAgICAgICB0aGlzLnRoeVJlc2l6YWJsZVNlcnZpY2UuaGFuZGxlTW91c2VEb3duJC5uZXh0KG5ldyBUaHlSZXNpemVIYW5kbGVNb3VzZURvd25FdmVudCh0aGlzLnRoeURpcmVjdGlvbiwgZXZlbnQpKTtcbiAgICB9XG5cbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIubmdPbkRlc3Ryb3koKTtcbiAgICB9XG59XG4iXX0=