import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
export const DEFAULT_RESIZE_DIRECTION = [
    'bottomRight',
    'topRight',
    'bottomLeft',
    'topLeft',
    'bottom',
    'right',
    'top',
    'left'
];
export class ThyResizeHandlesComponent {
    constructor() {
        this.thyDirections = DEFAULT_RESIZE_DIRECTION;
        this.directions = new Set(this.thyDirections);
    }
    ngOnChanges(changes) {
        if (changes.thyDirections) {
            this.directions = new Set(changes.thyDirections.currentValue);
        }
    }
}
ThyResizeHandlesComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-resize-handles',
                exportAs: 'thyResizeHandles',
                template: `
        <thy-resize-handle *ngFor="let dir of directions" [thyDirection]="dir"></thy-resize-handle>
    `,
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
ThyResizeHandlesComponent.ctorParameters = () => [];
ThyResizeHandlesComponent.propDecorators = {
    thyDirections: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzaXplLWhhbmRsZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Jlc2l6YWJsZS9yZXNpemUtaGFuZGxlcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBR3BHLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUF5QjtJQUMxRCxhQUFhO0lBQ2IsVUFBVTtJQUNWLFlBQVk7SUFDWixTQUFTO0lBQ1QsUUFBUTtJQUNSLE9BQU87SUFDUCxLQUFLO0lBQ0wsTUFBTTtDQUNULENBQUM7QUFVRixNQUFNLE9BQU8seUJBQXlCO0lBSWxDO1FBSFMsa0JBQWEsR0FBeUIsd0JBQXdCLENBQUM7UUFJcEUsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUM5QixJQUFJLE9BQU8sQ0FBQyxhQUFhLEVBQUU7WUFDdkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDO1NBQ2pFO0lBQ0wsQ0FBQzs7O1lBcEJKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5QixRQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixRQUFRLEVBQUU7O0tBRVQ7Z0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07YUFDbEQ7Ozs7NEJBRUksS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRoeVJlc2l6ZURpcmVjdGlvbiB9IGZyb20gJy4vaW50ZXJmYWNlJztcblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVTSVpFX0RJUkVDVElPTjogVGh5UmVzaXplRGlyZWN0aW9uW10gPSBbXG4gICAgJ2JvdHRvbVJpZ2h0JyxcbiAgICAndG9wUmlnaHQnLFxuICAgICdib3R0b21MZWZ0JyxcbiAgICAndG9wTGVmdCcsXG4gICAgJ2JvdHRvbScsXG4gICAgJ3JpZ2h0JyxcbiAgICAndG9wJyxcbiAgICAnbGVmdCdcbl07XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndGh5LXJlc2l6ZS1oYW5kbGVzJyxcbiAgICBleHBvcnRBczogJ3RoeVJlc2l6ZUhhbmRsZXMnLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDx0aHktcmVzaXplLWhhbmRsZSAqbmdGb3I9XCJsZXQgZGlyIG9mIGRpcmVjdGlvbnNcIiBbdGh5RGlyZWN0aW9uXT1cImRpclwiPjwvdGh5LXJlc2l6ZS1oYW5kbGU+XG4gICAgYCxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBUaHlSZXNpemVIYW5kbGVzQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgICBASW5wdXQoKSB0aHlEaXJlY3Rpb25zOiBUaHlSZXNpemVEaXJlY3Rpb25bXSA9IERFRkFVTFRfUkVTSVpFX0RJUkVDVElPTjtcbiAgICBkaXJlY3Rpb25zOiBTZXQ8VGh5UmVzaXplRGlyZWN0aW9uPjtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRpcmVjdGlvbnMgPSBuZXcgU2V0KHRoaXMudGh5RGlyZWN0aW9ucyk7XG4gICAgfVxuXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xuICAgICAgICBpZiAoY2hhbmdlcy50aHlEaXJlY3Rpb25zKSB7XG4gICAgICAgICAgICB0aGlzLmRpcmVjdGlvbnMgPSBuZXcgU2V0KGNoYW5nZXMudGh5RGlyZWN0aW9ucy5jdXJyZW50VmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19