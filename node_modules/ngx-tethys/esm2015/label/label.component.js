import { Component, ElementRef, Renderer2, Input, Output, EventEmitter, HostBinding } from '@angular/core';
import { coerceBooleanProperty } from 'ngx-tethys/util';
import { helpers } from 'ngx-tethys/util';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ngx-tethys/icon';

const _c0 = ["thyLabel", ""];
const _c1 = function (a0) { return { color: a0 }; };
function ThyLabelComponent_thy_icon_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 4);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r0.beforeIconName)("ngStyle", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r0._color));
} }
function ThyLabelComponent_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 5);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r1.beforeIconClass)("ngStyle", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r1._color));
} }
function ThyLabelComponent_thy_icon_4_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "thy-icon", 6);
    ɵngcc0.ɵɵlistener("click", function ThyLabelComponent_thy_icon_4_Template_thy_icon_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.remove(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r2.afterIconName)("ngStyle", ɵngcc0.ɵɵpureFunction1(2, _c1, ctx_r2._color));
} }
function ThyLabelComponent_i_5_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 7);
    ɵngcc0.ɵɵlistener("click", function ThyLabelComponent_i_5_Template_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.remove(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r3.afterIconClass);
} }
const _c2 = ["*", "*"];
const labelTypeClassesMap = {
    default: ['thy-label', 'thy-label-default'],
    primary: ['thy-label', 'thy-label-primary'],
    success: ['thy-label', 'thy-label-success'],
    info: ['thy-label', 'thy-label-info'],
    warning: ['thy-label', 'thy-label-warning'],
    danger: ['thy-label', 'thy-label-danger']
};
export class ThyLabelComponent {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this._thyHasHover = false;
        this._classNameSM = false;
        this._classNameDM = false;
        this._classNameLG = false;
        this._typeClassNames = [];
        this._backgroundOpacity = 0.1;
        this.thyOnRemove = new EventEmitter();
        this.nativeElement = this.el.nativeElement;
    }
    set thySize(value) {
        this._classNameSM = value === 'sm';
        this._classNameDM = value === 'md';
        this._classNameLG = value === 'lg';
    }
    set thyHasHover(value) {
        this._thyHasHover = coerceBooleanProperty(value);
    }
    set thyLabel(value) {
        this._type = value;
        this._setClassesByType();
    }
    set thyLabelColor(color) {
        this._color = color;
        this._setLabelCustomColor();
    }
    set thyBackgroundOpacity(opacity) {
        if (opacity && opacity > 0 && this._backgroundOpacity !== opacity) {
            this._backgroundOpacity = opacity;
            this._setLabelCustomColor();
        }
    }
    set thyLabelType(labelType) {
        this._labelType = labelType;
        this._setClassesByType();
    }
    set thyBeforeIcon(icon) {
        this._icon = icon;
        if (this._icon) {
            if (this._icon.includes('wtf')) {
                const iconPrefix = this.thyIconPrefix || 'wtf';
                this.beforeIconClass = [iconPrefix, `${this._icon}`];
            }
            else {
                this.beforeIconName = `${this._icon}`;
            }
        }
        else {
            this.beforeIconClass = null;
            this.beforeIconName = null;
        }
    }
    set thyAfterIcon(icon) {
        this._icon = icon;
        if (this._icon) {
            if (this._icon.includes('wtf')) {
                const iconPrefix = this.thyIconPrefix || 'wtf';
                this.afterIconClass = [iconPrefix, `${this._icon}`];
            }
            else {
                this.afterIconName = `${this._icon}`;
            }
        }
        else {
            this.afterIconClass = null;
            this.afterIconName = null;
        }
    }
    _setClassesByType() {
        let classNames = null;
        if (labelTypeClassesMap[this._type]) {
            classNames = labelTypeClassesMap[this._type];
        }
        else {
            classNames = ['thy-label'];
            classNames.push(`thy-label-${this._type}`);
        }
        if (this._labelType) {
            classNames = [...classNames, `thy-label-${this._labelType}`];
        }
        // remove old classes
        this._typeClassNames.forEach(className => {
            this._removeClass(className);
        });
        // add new classes
        this._typeClassNames = classNames;
        this._typeClassNames.forEach(className => {
            this._addClass(className);
        });
    }
    _setLabelCustomColor() {
        if (this._color) {
            if (this._type.indexOf('emboss') > -1) {
                if (this._type === 'emboss-status') {
                    this.el.nativeElement.style.color = '#333';
                }
                else {
                    this.el.nativeElement.style.color = this._color;
                }
                this.el.nativeElement.style.backgroundColor = helpers.hexToRgb(this._color, this._backgroundOpacity);
            }
            else if (this._type.indexOf('outline') > -1) {
                this.el.nativeElement.style.color = this._color;
                this.el.nativeElement.style.borderColor = this._color;
            }
            else {
                this.el.nativeElement.style.backgroundColor = this._color;
            }
        }
    }
    _addClass(className) {
        this.renderer.addClass(this.nativeElement, className);
    }
    _removeClass(className) {
        this.renderer.removeClass(this.nativeElement, className);
    }
    remove() {
        this.thyOnRemove.emit();
    }
}
ThyLabelComponent.ɵfac = function ThyLabelComponent_Factory(t) { return new (t || ThyLabelComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
ThyLabelComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyLabelComponent, selectors: [["", "thyLabel", ""]], hostVars: 8, hostBindings: function ThyLabelComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("label-has-hover", ctx._thyHasHover)("thy-label--sm", ctx._classNameSM)("thy-label--md", ctx._classNameDM)("thy-label--lg", ctx._classNameLG);
    } }, inputs: { thySize: "thySize", thyHasHover: "thyHasHover", thyLabel: "thyLabel", thyLabelColor: "thyLabelColor", thyBackgroundOpacity: "thyBackgroundOpacity", thyLabelType: "thyLabelType", thyBeforeIcon: "thyBeforeIcon", thyAfterIcon: "thyAfterIcon", thyIconPrefix: "thyIconPrefix" }, outputs: { thyOnRemove: "thyOnRemove" }, attrs: _c0, ngContentSelectors: _c2, decls: 6, vars: 4, consts: [["class", "mr-1", 3, "thyIconName", "ngStyle", 4, "ngIf"], ["class", "mr-1", 3, "ngClass", "ngStyle", 4, "ngIf"], ["class", "ml-1", 3, "thyIconName", "ngStyle", "click", 4, "ngIf"], ["class", "ml-1", 3, "ngClass", "click", 4, "ngIf"], [1, "mr-1", 3, "thyIconName", "ngStyle"], [1, "mr-1", 3, "ngClass", "ngStyle"], [1, "ml-1", 3, "thyIconName", "ngStyle", "click"], [1, "ml-1", 3, "ngClass", "click"]], template: function ThyLabelComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c2);
        ɵngcc0.ɵɵtemplate(0, ThyLabelComponent_thy_icon_0_Template, 1, 4, "thy-icon", 0);
        ɵngcc0.ɵɵtemplate(1, ThyLabelComponent_i_1_Template, 1, 4, "i", 1);
        ɵngcc0.ɵɵprojection(2);
        ɵngcc0.ɵɵprojection(3, 1);
        ɵngcc0.ɵɵtemplate(4, ThyLabelComponent_thy_icon_4_Template, 1, 4, "thy-icon", 2);
        ɵngcc0.ɵɵtemplate(5, ThyLabelComponent_i_5_Template, 1, 1, "i", 3);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.beforeIconName);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.beforeIconClass);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.afterIconName);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.afterIconClass);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ThyIconComponent, ɵngcc1.NgStyle, ɵngcc1.NgClass], encapsulation: 2 });
ThyLabelComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
ThyLabelComponent.propDecorators = {
    _thyHasHover: [{ type: HostBinding, args: ['class.label-has-hover',] }],
    _classNameSM: [{ type: HostBinding, args: ['class.thy-label--sm',] }],
    _classNameDM: [{ type: HostBinding, args: ['class.thy-label--md',] }],
    _classNameLG: [{ type: HostBinding, args: ['class.thy-label--lg',] }],
    thyIconPrefix: [{ type: Input }],
    thySize: [{ type: Input, args: ['thySize',] }],
    thyOnRemove: [{ type: Output }],
    thyHasHover: [{ type: Input, args: ['thyHasHover',] }],
    thyLabel: [{ type: Input }],
    thyLabelColor: [{ type: Input }],
    thyBackgroundOpacity: [{ type: Input }],
    thyLabelType: [{ type: Input }],
    thyBeforeIcon: [{ type: Input }],
    thyAfterIcon: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyLabelComponent, [{
        type: Component,
        args: [{
                selector: '[thyLabel]',
                template: "<thy-icon class=\"mr-1\" [thyIconName]=\"beforeIconName\" [ngStyle]=\"{ color: _color }\" *ngIf=\"beforeIconName\"></thy-icon>\n<i class=\"mr-1\" [ngClass]=\"beforeIconClass\" [ngStyle]=\"{ color: _color }\" *ngIf=\"beforeIconClass\"></i>\n<ng-content></ng-content>\n<ng-content></ng-content>\n<thy-icon\n  class=\"ml-1\"\n  [thyIconName]=\"afterIconName\"\n  (click)=\"remove()\"\n  [ngStyle]=\"{ color: _color }\"\n  *ngIf=\"afterIconName\"\n></thy-icon>\n<i class=\"ml-1\" [ngClass]=\"afterIconClass\" *ngIf=\"afterIconClass\" (click)=\"remove()\"></i>\n"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { _thyHasHover: [{
            type: HostBinding,
            args: ['class.label-has-hover']
        }], _classNameSM: [{
            type: HostBinding,
            args: ['class.thy-label--sm']
        }], _classNameDM: [{
            type: HostBinding,
            args: ['class.thy-label--md']
        }], _classNameLG: [{
            type: HostBinding,
            args: ['class.thy-label--lg']
        }], thyOnRemove: [{
            type: Output
        }], thySize: [{
            type: Input,
            args: ['thySize']
        }], thyHasHover: [{
            type: Input,
            args: ['thyHasHover']
        }], thyLabel: [{
            type: Input
        }], thyLabelColor: [{
            type: Input
        }], thyBackgroundOpacity: [{
            type: Input
        }], thyLabelType: [{
            type: Input
        }], thyBeforeIcon: [{
            type: Input
        }], thyAfterIcon: [{
            type: Input
        }], thyIconPrefix: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGFiZWwvbGFiZWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0csT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDeEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUkxQyxNQUFNLG1CQUFtQixHQUFRO0FBQ2pDLElBQUksT0FBTyxFQUFFLENBQUMsV0FBVyxFQUFFLG1CQUFtQixDQUFDO0FBQy9DLElBQUksT0FBTyxFQUFFLENBQUMsV0FBVyxFQUFFLG1CQUFtQixDQUFDO0FBQy9DLElBQUksT0FBTyxFQUFFLENBQUMsV0FBVyxFQUFFLG1CQUFtQixDQUFDO0FBQy9DLElBQUksSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLGdCQUFnQixDQUFDO0FBQ3pDLElBQUksT0FBTyxFQUFFLENBQUMsV0FBVyxFQUFFLG1CQUFtQixDQUFDO0FBQy9DLElBQUksTUFBTSxFQUFFLENBQUMsV0FBVyxFQUFFLGtCQUFrQixDQUFDO0FBQzdDLENBQUMsQ0FBQztBQUtGLE1BQU0sT0FBTyxpQkFBaUI7QUFDOUIsSUE0Q0ksWUFBb0IsRUFBYyxFQUFVLFFBQW1CO0FBQ25FLFFBRHdCLE9BQUUsR0FBRixFQUFFLENBQVk7QUFBQyxRQUFTLGFBQVEsR0FBUixRQUFRLENBQVc7QUFBQyxRQTVDMUIsaUJBQVksR0FBRyxLQUFLLENBQUM7QUFDL0QsUUFDd0MsaUJBQVksR0FBRyxLQUFLLENBQUM7QUFDN0QsUUFDd0MsaUJBQVksR0FBRyxLQUFLLENBQUM7QUFDN0QsUUFDd0MsaUJB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LDRCQUtHLEtBQUs7QUFDUixtQ0FLRyxLQUFLO0FBQ1IsMkJBT0csS0FBSztBQUNSLDRCQUtHLEtBQUs7QUFDUiwyQkFlRyxLQUFLO0FBQ1Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29lcmNlQm9vbGVhblByb3BlcnR5IH0gZnJvbSAnbmd4LXRldGh5cy91dGlsJztcbmltcG9ydCB7IGhlbHBlcnMgfSBmcm9tICduZ3gtdGV0aHlzL3V0aWwnO1xuXG5leHBvcnQgdHlwZSBUaHlMYWJlbFR5cGUgPSAnZGVmYXVsdCcgfCAncHJpbWFyeScgfCAnc3VjY2VzcycgfCAnaW5mbycgfCAnd2FybmluZycgfCAnZGFuZ2VyJztcblxuY29uc3QgbGFiZWxUeXBlQ2xhc3Nlc01hcDogYW55ID0ge1xuICAgIGRlZmF1bHQ6IFsndGh5LWxhYmVsJywgJ3RoeS1sYWJlbC1kZWZhdWx0J10sXG4gICAgcHJpbWFyeTogWyd0aHktbGFiZWwnLCAndGh5LWxhYmVsLXByaW1hcnknXSxcbiAgICBzdWNjZXNzOiBbJ3RoeS1sYWJlbCcsICd0aHktbGFiZWwtc3VjY2VzcyddLFxuICAgIGluZm86IFsndGh5LWxhYmVsJywgJ3RoeS1sYWJlbC1pbmZvJ10sXG4gICAgd2FybmluZzogWyd0aHktbGFiZWwnLCAndGh5LWxhYmVsLXdhcm5pbmcnXSxcbiAgICBkYW5nZXI6IFsndGh5LWxhYmVsJywgJ3RoeS1sYWJlbC1kYW5nZXInXVxufTtcbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnW3RoeUxhYmVsXScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xhYmVsLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaHlMYWJlbENvbXBvbmVudCB7XG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5sYWJlbC1oYXMtaG92ZXInKSBfdGh5SGFzSG92ZXIgPSBmYWxzZTtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MudGh5LWxhYmVsLS1zbScpIF9jbGFzc05hbWVTTSA9IGZhbHNlO1xuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy50aHktbGFiZWwtLW1kJykgX2NsYXNzTmFtZURNID0gZmFsc2U7XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLnRoeS1sYWJlbC0tbGcnKSBfY2xhc3NOYW1lTEcgPSBmYWxzZTtcblxuICAgIC8vIOWtl+S9k+WJjee8gO+8jOm7mOiupCB3dGZcbiAgICBASW5wdXQoKSB0aHlJY29uUHJlZml4OiBzdHJpbmc7XG5cbiAgICBASW5wdXQoJ3RoeVNpemUnKVxuICAgIHNldCB0aHlTaXplKHZhbHVlOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5fY2xhc3NOYW1lU00gPSB2YWx1ZSA9PT0gJ3NtJztcbiAgICAgICAgdGhpcy5fY2xhc3NOYW1lRE0gPSB2YWx1ZSA9PT0gJ21kJztcbiAgICAgICAgdGhpcy5fY2xhc3NOYW1lTEcgPSB2YWx1ZSA9PT0gJ2xnJztcbiAgICB9XG5cbiAgICBwcml2YXRlIG5hdGl2ZUVsZW1lbnQ6IEhUTUxFbGVtZW50O1xuXG4gICAgcHJpdmF0ZSBfdHlwZUNsYXNzTmFtZXM6IHN0cmluZ1tdID0gW107XG5cbiAgICBwcml2YXRlIF9sYWJlbENsYXNzPzogc3RyaW5nO1xuXG4gICAgcHJpdmF0ZSBfdHlwZT86IHN0cmluZztcblxuICAgIHByaXZhdGUgX2xhYmVsVHlwZT86IHN0cmluZztcblxuICAgIHByaXZhdGUgX2ljb246IHN0cmluZztcblxuICAgIHB1YmxpYyBiZWZvcmVJY29uTmFtZTogc3RyaW5nO1xuXG4gICAgcHVibGljIGJlZm9yZUljb25DbGFzczogc3RyaW5nW107XG5cbiAgICBwdWJsaWMgYWZ0ZXJJY29uTmFtZTogc3RyaW5nO1xuXG4gICAgcHVibGljIGFmdGVySWNvbkNsYXNzOiBzdHJpbmdbXTtcblxuICAgIHB1YmxpYyBfY29sb3I/OiBzdHJpbmc7XG5cbiAgICBwdWJsaWMgX2JhY2tncm91bmRPcGFjaXR5PzogbnVtYmVyID0gMC4xO1xuXG4gICAgQE91dHB1dCgpIHRoeU9uUmVtb3ZlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZiwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgICAgIHRoaXMubmF0aXZlRWxlbWVudCA9IHRoaXMuZWwubmF0aXZlRWxlbWVudDtcbiAgICB9XG5cbiAgICBASW5wdXQoJ3RoeUhhc0hvdmVyJylcbiAgICBzZXQgdGh5SGFzSG92ZXIodmFsdWU6IHN0cmluZykge1xuICAgICAgICB0aGlzLl90aHlIYXNIb3ZlciA9IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2YWx1ZSk7XG4gICAgfVxuXG4gICAgQElucHV0KClcbiAgICBzZXQgdGh5TGFiZWwodmFsdWU6IFRoeUxhYmVsVHlwZSkge1xuICAgICAgICB0aGlzLl90eXBlID0gdmFsdWU7XG4gICAgICAgIHRoaXMuX3NldENsYXNzZXNCeVR5cGUoKTtcbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlMYWJlbENvbG9yKGNvbG9yOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5fY29sb3IgPSBjb2xvcjtcbiAgICAgICAgdGhpcy5fc2V0TGFiZWxDdXN0b21Db2xvcigpO1xuICAgIH1cblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeUJhY2tncm91bmRPcGFjaXR5KG9wYWNpdHk6IG51bWJlcikge1xuICAgICAgICBpZiAob3BhY2l0eSAmJiBvcGFjaXR5ID4gMCAmJiB0aGlzLl9iYWNrZ3JvdW5kT3BhY2l0eSAhPT0gb3BhY2l0eSkge1xuICAgICAgICAgICAgdGhpcy5fYmFja2dyb3VuZE9wYWNpdHkgPSBvcGFjaXR5O1xuICAgICAgICAgICAgdGhpcy5fc2V0TGFiZWxDdXN0b21Db2xvcigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQElucHV0KClcbiAgICBzZXQgdGh5TGFiZWxUeXBlKGxhYmVsVHlwZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuX2xhYmVsVHlwZSA9IGxhYmVsVHlwZTtcbiAgICAgICAgdGhpcy5fc2V0Q2xhc3Nlc0J5VHlwZSgpO1xuICAgIH1cblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeUJlZm9yZUljb24oaWNvbjogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuX2ljb24gPSBpY29uO1xuICAgICAgICBpZiAodGhpcy5faWNvbikge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2ljb24uaW5jbHVkZXMoJ3d0ZicpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWNvblByZWZpeCA9IHRoaXMudGh5SWNvblByZWZpeCB8fCAnd3RmJztcbiAgICAgICAgICAgICAgICB0aGlzLmJlZm9yZUljb25DbGFzcyA9IFtpY29uUHJlZml4LCBgJHt0aGlzLl9pY29ufWBdO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmJlZm9yZUljb25OYW1lID0gYCR7dGhpcy5faWNvbn1gO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5iZWZvcmVJY29uQ2xhc3MgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5iZWZvcmVJY29uTmFtZSA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlBZnRlckljb24oaWNvbjogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuX2ljb24gPSBpY29uO1xuICAgICAgICBpZiAodGhpcy5faWNvbikge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2ljb24uaW5jbHVkZXMoJ3d0ZicpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWNvblByZWZpeCA9IHRoaXMudGh5SWNvblByZWZpeCB8fCAnd3RmJztcbiAgICAgICAgICAgICAgICB0aGlzLmFmdGVySWNvbkNsYXNzID0gW2ljb25QcmVmaXgsIGAke3RoaXMuX2ljb259YF07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuYWZ0ZXJJY29uTmFtZSA9IGAke3RoaXMuX2ljb259YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYWZ0ZXJJY29uQ2xhc3MgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5hZnRlckljb25OYW1lID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgX3NldENsYXNzZXNCeVR5cGUoKSB7XG4gICAgICAgIGxldCBjbGFzc05hbWVzOiBzdHJpbmdbXSA9IG51bGw7XG4gICAgICAgIGlmIChsYWJlbFR5cGVDbGFzc2VzTWFwW3RoaXMuX3R5cGVdKSB7XG4gICAgICAgICAgICBjbGFzc05hbWVzID0gbGFiZWxUeXBlQ2xhc3Nlc01hcFt0aGlzLl90eXBlXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZXMgPSBbJ3RoeS1sYWJlbCddO1xuICAgICAgICAgICAgY2xhc3NOYW1lcy5wdXNoKGB0aHktbGFiZWwtJHt0aGlzLl90eXBlfWApO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9sYWJlbFR5cGUpIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZXMgPSBbLi4uY2xhc3NOYW1lcywgYHRoeS1sYWJlbC0ke3RoaXMuX2xhYmVsVHlwZX1gXTtcbiAgICAgICAgfVxuICAgICAgICAvLyByZW1vdmUgb2xkIGNsYXNzZXNcbiAgICAgICAgdGhpcy5fdHlwZUNsYXNzTmFtZXMuZm9yRWFjaChjbGFzc05hbWUgPT4ge1xuICAgICAgICAgICAgdGhpcy5fcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIGFkZCBuZXcgY2xhc3Nlc1xuICAgICAgICB0aGlzLl90eXBlQ2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XG4gICAgICAgIHRoaXMuX3R5cGVDbGFzc05hbWVzLmZvckVhY2goY2xhc3NOYW1lID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2FkZENsYXNzKGNsYXNzTmFtZSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgX3NldExhYmVsQ3VzdG9tQ29sb3IoKSB7XG4gICAgICAgIGlmICh0aGlzLl9jb2xvcikge1xuICAgICAgICAgICAgaWYgKHRoaXMuX3R5cGUuaW5kZXhPZignZW1ib3NzJykgPiAtMSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl90eXBlID09PSAnZW1ib3NzLXN0YXR1cycpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnN0eWxlLmNvbG9yID0gJyMzMzMnO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS5jb2xvciA9IHRoaXMuX2NvbG9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gaGVscGVycy5oZXhUb1JnYih0aGlzLl9jb2xvciwgdGhpcy5fYmFja2dyb3VuZE9wYWNpdHkpO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLl90eXBlLmluZGV4T2YoJ291dGxpbmUnKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnN0eWxlLmNvbG9yID0gdGhpcy5fY29sb3I7XG4gICAgICAgICAgICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnN0eWxlLmJvcmRlckNvbG9yID0gdGhpcy5fY29sb3I7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLl9jb2xvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgX2FkZENsYXNzKGNsYXNzTmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5uYXRpdmVFbGVtZW50LCBjbGFzc05hbWUpO1xuICAgIH1cblxuICAgIHByaXZhdGUgX3JlbW92ZUNsYXNzKGNsYXNzTmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5uYXRpdmVFbGVtZW50LCBjbGFzc05hbWUpO1xuICAgIH1cblxuICAgIHJlbW92ZSgpIHtcbiAgICAgICAgdGhpcy50aHlPblJlbW92ZS5lbWl0KCk7XG4gICAgfVxufVxuIl19