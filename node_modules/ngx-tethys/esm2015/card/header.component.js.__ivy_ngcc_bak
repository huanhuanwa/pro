import { Component, HostBinding, Input, TemplateRef, ContentChild } from '@angular/core';
export class ThyCardHeaderComponent {
    constructor() {
        this.thyLayoutHeaderClass = true;
        this._thySizeSm = false;
        this._thySizeLg = false;
    }
    set thySize(value) {
        this._thySizeSm = value === 'sm';
        this._thySizeLg = value === 'lg';
    }
    ngOnInit() { }
}
ThyCardHeaderComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-card-header',
                preserveWhitespaces: false,
                template: "<div class=\"card-header-title\">\n  <ng-template [ngTemplateOutlet]=\"titleTemplateRef\"></ng-template>\n  <ng-container *ngIf=\"!titleTemplateRef\">\n    <span>{{ thyTitle }}</span>\n  </ng-container>\n</div>\n<div class=\"card-header-description\">\n  <ng-template [ngTemplateOutlet]=\"descriptionTemplateRef\"></ng-template>\n  <ng-container *ngIf=\"!descriptionTemplateRef\">\n    <span>{{ thyDescription }}</span>\n  </ng-container>\n</div>\n<div class=\"card-header-operation\">\n  <ng-template [ngTemplateOutlet]=\"operationTemplateRef\"></ng-template>\n</div>\n"
            },] }
];
ThyCardHeaderComponent.ctorParameters = () => [];
ThyCardHeaderComponent.propDecorators = {
    thyLayoutHeaderClass: [{ type: HostBinding, args: ['class.thy-card-header',] }],
    _thySizeSm: [{ type: HostBinding, args: ['class.thy-card-header--sm',] }],
    _thySizeLg: [{ type: HostBinding, args: ['class.thy-card-header--lg',] }],
    thyTitle: [{ type: Input, args: ['thyTitle',] }],
    thyDescription: [{ type: Input, args: ['thyDescription',] }],
    thySize: [{ type: Input, args: ['thySize',] }],
    titleTemplateRef: [{ type: ContentChild, args: ['headerTitle',] }],
    descriptionTemplateRef: [{ type: ContentChild, args: ['headerDescription',] }],
    operationTemplateRef: [{ type: ContentChild, args: ['headerOperation',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jYXJkL2hlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFVLFdBQVcsRUFBdUIsWUFBWSxFQUFvQixNQUFNLGVBQWUsQ0FBQztBQU14SSxNQUFNLE9BQU8sc0JBQXNCO0lBNEIvQjtRQXpCc0MseUJBQW9CLEdBQUcsSUFBSSxDQUFDO1FBRXhCLGVBQVUsR0FBRyxLQUFLLENBQUM7UUFFbkIsZUFBVSxHQUFHLEtBQUssQ0FBQztJQXFCOUMsQ0FBQztJQWZoQixJQUNJLE9BQU8sQ0FBQyxLQUFhO1FBQ3JCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxLQUFLLElBQUksQ0FBQztRQUNqQyxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssS0FBSyxJQUFJLENBQUM7SUFDckMsQ0FBQztJQWFELFFBQVEsS0FBSSxDQUFDOzs7WUFuQ2hCLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixtQkFBbUIsRUFBRSxLQUFLO2dCQUMxQixza0JBQXNDO2FBQ3pDOzs7O21DQUlJLFdBQVcsU0FBQyx1QkFBdUI7eUJBRW5DLFdBQVcsU0FBQywyQkFBMkI7eUJBRXZDLFdBQVcsU0FBQywyQkFBMkI7dUJBRXZDLEtBQUssU0FBQyxVQUFVOzZCQUVoQixLQUFLLFNBQUMsZ0JBQWdCO3NCQUV0QixLQUFLLFNBQUMsU0FBUzsrQkFNZixZQUFZLFNBQUMsYUFBYTtxQ0FHMUIsWUFBWSxTQUFDLG1CQUFtQjttQ0FHaEMsWUFBWSxTQUFDLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0LCBPbkluaXQsIFRlbXBsYXRlUmVmLCBPcHRpb25hbCwgVmlld0NoaWxkLCBDb250ZW50Q2hpbGQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndGh5LWNhcmQtaGVhZGVyJyxcbiAgICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbiAgICB0ZW1wbGF0ZVVybDogJy4vaGVhZGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaHlDYXJkSGVhZGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwdWJsaWMgaWNvbkNsYXNzOiBzdHJpbmc7XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLnRoeS1jYXJkLWhlYWRlcicpIHRoeUxheW91dEhlYWRlckNsYXNzID0gdHJ1ZTtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MudGh5LWNhcmQtaGVhZGVyLS1zbScpIF90aHlTaXplU20gPSBmYWxzZTtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MudGh5LWNhcmQtaGVhZGVyLS1sZycpIF90aHlTaXplTGcgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgndGh5VGl0bGUnKSB0aHlUaXRsZTogc3RyaW5nO1xuXG4gICAgQElucHV0KCd0aHlEZXNjcmlwdGlvbicpIHRoeURlc2NyaXB0aW9uOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoJ3RoeVNpemUnKVxuICAgIHNldCB0aHlTaXplKHZhbHVlOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5fdGh5U2l6ZVNtID0gdmFsdWUgPT09ICdzbSc7XG4gICAgICAgIHRoaXMuX3RoeVNpemVMZyA9IHZhbHVlID09PSAnbGcnO1xuICAgIH1cblxuICAgIEBDb250ZW50Q2hpbGQoJ2hlYWRlclRpdGxlJylcbiAgICBwdWJsaWMgdGl0bGVUZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIEBDb250ZW50Q2hpbGQoJ2hlYWRlckRlc2NyaXB0aW9uJylcbiAgICBwdWJsaWMgZGVzY3JpcHRpb25UZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIEBDb250ZW50Q2hpbGQoJ2hlYWRlck9wZXJhdGlvbicpXG4gICAgcHVibGljIG9wZXJhdGlvblRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgY29uc3RydWN0b3IoKSB7fVxuXG4gICAgbmdPbkluaXQoKSB7fVxufVxuIl19