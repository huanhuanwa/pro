import { Component, Input, HostBinding, ChangeDetectionStrategy, TemplateRef, ContentChild } from '@angular/core';
export class ThyListItemMetaComponent {
    constructor() {
        this.className = `thy-list-item-meta`;
    }
}
ThyListItemMetaComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-list-item-meta,[thy-list-item-meta]',
                template: "<div class=\"thy-list-item-meta-avatar\">\n  <ng-container *ngIf=\"thyAvatar; else avatarTemplateRef\">\n    <thy-avatar [thySrc]=\"thyAvatar\"></thy-avatar>\n  </ng-container>\n</div>\n<div class=\"thy-list-item-meta-content\">\n  <div class=\"thy-list-item-meta-title\">\n    <ng-container *ngIf=\"thyTitle; else titleTemplateRef\">{{ thyTitle }}</ng-container>\n  </div>\n  <div class=\"thy-list-item-meta-description\">\n    <ng-container *ngIf=\"thyDescription; else descriptionTemplateRef\">{{ thyDescription }}</ng-container>\n  </div>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
ThyListItemMetaComponent.ctorParameters = () => [];
ThyListItemMetaComponent.propDecorators = {
    thyAvatar: [{ type: Input }],
    thyTitle: [{ type: Input }],
    thyDescription: [{ type: Input }],
    avatarTemplateRef: [{ type: ContentChild, args: ['metaAvatar',] }],
    titleTemplateRef: [{ type: ContentChild, args: ['metaTitle',] }],
    descriptionTemplateRef: [{ type: ContentChild, args: ['metaDescription',] }],
    className: [{ type: HostBinding, args: ['class',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1pdGVtLW1ldGEuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpc3QvbGlzdC1pdGVtLW1ldGEuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSx1QkFBdUIsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT2xILE1BQU0sT0FBTyx3QkFBd0I7SUFrQmpDO1FBRnNCLGNBQVMsR0FBRyxvQkFBb0IsQ0FBQztJQUV4QyxDQUFDOzs7WUF2Qm5CLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUseUNBQXlDO2dCQUNuRCxvakJBQThDO2dCQUM5QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTthQUNsRDs7Ozt3QkFFSSxLQUFLO3VCQUVMLEtBQUs7NkJBRUwsS0FBSztnQ0FFTCxZQUFZLFNBQUMsWUFBWTsrQkFHekIsWUFBWSxTQUFDLFdBQVc7cUNBR3hCLFlBQVksU0FBQyxpQkFBaUI7d0JBRzlCLFdBQVcsU0FBQyxPQUFPIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgSG9zdEJpbmRpbmcsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBUZW1wbGF0ZVJlZiwgQ29udGVudENoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndGh5LWxpc3QtaXRlbS1tZXRhLFt0aHktbGlzdC1pdGVtLW1ldGFdJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbGlzdC1pdGVtLW1ldGEuY29tcG9uZW50Lmh0bWwnLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFRoeUxpc3RJdGVtTWV0YUNvbXBvbmVudCB7XG4gICAgQElucHV0KCkgdGh5QXZhdGFyOiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSB0aHlUaXRsZTogc3RyaW5nO1xuXG4gICAgQElucHV0KCkgdGh5RGVzY3JpcHRpb246IHN0cmluZztcblxuICAgIEBDb250ZW50Q2hpbGQoJ21ldGFBdmF0YXInKVxuICAgIHB1YmxpYyBhdmF0YXJUZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIEBDb250ZW50Q2hpbGQoJ21ldGFUaXRsZScpXG4gICAgcHVibGljIHRpdGxlVGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICBAQ29udGVudENoaWxkKCdtZXRhRGVzY3JpcHRpb24nKVxuICAgIHB1YmxpYyBkZXNjcmlwdGlvblRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcycpIGNsYXNzTmFtZSA9IGB0aHktbGlzdC1pdGVtLW1ldGFgO1xuXG4gICAgY29uc3RydWN0b3IoKSB7fVxufVxuIl19