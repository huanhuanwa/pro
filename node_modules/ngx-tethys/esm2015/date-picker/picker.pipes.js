import { Pipe } from '@angular/core';
import { DateHelperService } from './date-helper.service';
import { transformDateValue } from './picker.util';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './date-helper.service';
export class ThyDatePickerFormatPipe {
    constructor(dateHelper) {
        this.dateHelper = dateHelper;
    }
    transform(originalValue, formatStr) {
        const { value, withTime } = transformDateValue(originalValue);
        if (!formatStr) {
            formatStr = withTime ? 'yyyy-MM-dd HH:mm' : 'yyyy-MM-dd';
        }
        if (!Array.isArray(value)) {
            return this.dateHelper.format(value, formatStr);
        }
        else {
            return value.map(date => this.dateHelper.format(date, formatStr)).join(' ~ ');
        }
    }
}
ThyDatePickerFormatPipe.ɵfac = function ThyDatePickerFormatPipe_Factory(t) { return new (t || ThyDatePickerFormatPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DateHelperService)); };
ThyDatePickerFormatPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "thyDatePickerFormat", type: ThyDatePickerFormatPipe, pure: true });
ThyDatePickerFormatPipe.ctorParameters = () => [
    { type: DateHelperService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDatePickerFormatPipe, [{
        type: Pipe,
        args: [{ name: 'thyDatePickerFormat' }]
    }], function () { return [{ type: ɵngcc1.DateHelperService }]; }, null); })();
export class ThyDatePickerFormatStringPipe {
    constructor(dateHelper) {
        this.dateHelper = dateHelper;
    }
    transform(originalValue) {
        const { withTime } = transformDateValue(originalValue);
        return withTime ? 'yyyy-MM-dd HH:mm' : 'yyyy-MM-dd';
    }
}
ThyDatePickerFormatStringPipe.ɵfac = function ThyDatePickerFormatStringPipe_Factory(t) { return new (t || ThyDatePickerFormatStringPipe)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DateHelperService)); };
ThyDatePickerFormatStringPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: "thyDatePickerFormatString", type: ThyDatePickerFormatStringPipe, pure: true });
ThyDatePickerFormatStringPipe.ctorParameters = () => [
    { type: DateHelperService }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyDatePickerFormatStringPipe, [{
        type: Pipe,
        args: [{ name: 'thyDatePickerFormatString' }]
    }], function () { return [{ type: ɵngcc1.DateHelperService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGlja2VyLnBpcGVzLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZGF0ZS1waWNrZXIvcGlja2VyLnBpcGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTFELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBR25ELE1BQU0sT0FBTyx1QkFBdUI7QUFBRyxJQUNuQyxZQUFvQixVQUE2QjtBQUFJLFFBQWpDLGVBQVUsR0FBVixVQUFVLENBQW1CO0FBQUMsSUFBRSxDQUFDO0FBQ3pELElBQ0ksU0FBUyxDQUFDLGFBQXNELEVBQUUsU0FBa0I7QUFBSSxRQUNwRixNQUFNLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxHQUFHLGtCQUFrQixDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3RFLFFBQ1EsSUFBSSxDQUFDLFNBQVMsRUFBRTtBQUN4QixZQUFZLFNBQVMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUM7QUFDckUsU0FBUztBQUNULFFBQ1EsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDbkMsWUFBWSxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztBQUM1RCxTQUFTO0FBQUMsYUFBSztBQUNmLFlBQVksT0FBTyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzFGLFNBQVM7QUFDVCxJQUFJLENBQUM7QUFDTDttREFqQkMsSUFBSSxTQUFDLEVBQUUsSUFBSSxFQUFFLHFCQUFxQixFQUFFO2dJQUNoQztBQUFDO0FBQWlELFlBTDlDLGlCQUFpQjtBQUFHOzs7O2tGQUFFO0FBd0IvQixNQUFNLE9BQU8sNkJBQTZCO0FBQUcsSUFDekMsWUFBb0IsVUFBNkI7QUFBSSxRQUFqQyxlQUFVLEdBQVYsVUFBVSxDQUFtQjtBQUFDLElBQUUsQ0FBQztBQUN6RCxJQUNJLFNBQVMsQ0FBQyxhQUFzRDtBQUFJLFFBQ2hFLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxrQkFBa0IsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUMvRCxRQUNRLE9BQU8sUUFBUSxDQUFDLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDO0FBQzVELElBQUksQ0FBQztBQUNMO3lEQVRDLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSwyQkFBMkIsRUFBRTtrSkFDdEM7QUFBQztBQUF1RCxZQXhCcEQsaUJBQWlCO0FBQUc7Ozs7a0ZBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVIZWxwZXJTZXJ2aWNlIH0gZnJvbSAnLi9kYXRlLWhlbHBlci5zZXJ2aWNlJztcbmltcG9ydCB7IENvbXBhdGlibGVEYXRlLCBEYXRlRW50cnksIFJhbmdlRW50cnkgfSBmcm9tICcuL3N0YW5kYXJkLXR5cGVzJztcbmltcG9ydCB7IHRyYW5zZm9ybURhdGVWYWx1ZSB9IGZyb20gJy4vcGlja2VyLnV0aWwnO1xuXG5AUGlwZSh7IG5hbWU6ICd0aHlEYXRlUGlja2VyRm9ybWF0JyB9KVxuZXhwb3J0IGNsYXNzIFRoeURhdGVQaWNrZXJGb3JtYXRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBkYXRlSGVscGVyOiBEYXRlSGVscGVyU2VydmljZSkge31cblxuICAgIHRyYW5zZm9ybShvcmlnaW5hbFZhbHVlOiBDb21wYXRpYmxlRGF0ZSB8IERhdGVFbnRyeSB8IFJhbmdlRW50cnksIGZvcm1hdFN0cj86IHN0cmluZyk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IHsgdmFsdWUsIHdpdGhUaW1lIH0gPSB0cmFuc2Zvcm1EYXRlVmFsdWUob3JpZ2luYWxWYWx1ZSk7XG5cbiAgICAgICAgaWYgKCFmb3JtYXRTdHIpIHtcbiAgICAgICAgICAgIGZvcm1hdFN0ciA9IHdpdGhUaW1lID8gJ3l5eXktTU0tZGQgSEg6bW0nIDogJ3l5eXktTU0tZGQnO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGF0ZUhlbHBlci5mb3JtYXQodmFsdWUsIGZvcm1hdFN0cik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUubWFwKGRhdGUgPT4gdGhpcy5kYXRlSGVscGVyLmZvcm1hdChkYXRlLCBmb3JtYXRTdHIpKS5qb2luKCcgfiAnKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQFBpcGUoeyBuYW1lOiAndGh5RGF0ZVBpY2tlckZvcm1hdFN0cmluZycgfSlcbmV4cG9ydCBjbGFzcyBUaHlEYXRlUGlja2VyRm9ybWF0U3RyaW5nUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZGF0ZUhlbHBlcjogRGF0ZUhlbHBlclNlcnZpY2UpIHt9XG5cbiAgICB0cmFuc2Zvcm0ob3JpZ2luYWxWYWx1ZTogQ29tcGF0aWJsZURhdGUgfCBEYXRlRW50cnkgfCBSYW5nZUVudHJ5KTogc3RyaW5nIHtcbiAgICAgICAgY29uc3QgeyB3aXRoVGltZSB9ID0gdHJhbnNmb3JtRGF0ZVZhbHVlKG9yaWdpbmFsVmFsdWUpO1xuXG4gICAgICAgIHJldHVybiB3aXRoVGltZSA/ICd5eXl5LU1NLWRkIEhIOm1tJyA6ICd5eXl5LU1NLWRkJztcbiAgICB9XG59XG4iXX0=