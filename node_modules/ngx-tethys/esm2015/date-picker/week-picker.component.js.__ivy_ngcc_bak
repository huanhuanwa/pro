import { forwardRef, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Renderer2 } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { BasePickerComponent } from './base-picker.component';
export class ThyWeekPickerComponent extends BasePickerComponent {
    constructor(cdr, renderer, elementRef) {
        super(cdr);
        this.showWeek = true;
        renderer.addClass(elementRef.nativeElement, 'thy-calendar-picker');
    }
}
ThyWeekPickerComponent.decorators = [
    { type: Component, args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                selector: 'thy-week-picker',
                exportAs: 'thyWeekPicker',
                template: "<thy-picker\n  [isRange]=\"isRange\"\n  [value]=\"thyValue\"\n  (valueChange)=\"onValueChange($event)\"\n  [open]=\"thyOpen\"\n  [disabled]=\"thyDisabled\"\n  [format]=\"thyFormat\"\n  [allowClear]=\"thyAllowClear\"\n  [className]=\"thyOriginClassName\"\n  [autoFocus]=\"thyAutoFocus\"\n  [placeholder]=\"thyPlaceHolder\"\n  [readonly]=\"thyReadonly\"\n  [size]=\"thySize\"\n  [suffixIcon]=\"thySuffixIcon\"\n  [placement]=\"thyPlacement\"\n  (openChange)=\"onOpenChange($event)\"\n>\n  <date-popup\n    *ngIf=\"realOpenState\"\n    [isRange]=\"isRange\"\n    [showWeek]=\"showWeek\"\n    [panelMode]=\"thyMode\"\n    [defaultPickerValue]=\"thyDefaultPickerValue\"\n    (panelModeChange)=\"thyOnPanelChange.emit($event)\"\n    (showTimePickerChange)=\"onShowTimePickerChange($event)\"\n    [value]=\"thyValue\"\n    (valueChange)=\"onValueChange($event)\"\n    (calendarChange)=\"onCalendarChange($event)\"\n    [showTime]=\"thyShowTime\"\n    [mustShowTime]=\"withTime\"\n    [format]=\"thyFormat\"\n    [dateRender]=\"thyDateRender\"\n    [disabledDate]=\"thyDisabledDate\"\n    [minDate]=\"thyMinDate\"\n    [maxDate]=\"thyMaxDate\"\n    [className]=\"thyPanelClassName\"\n    (resultOk)=\"onResultOk()\"\n  ></date-popup>\n</thy-picker>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => ThyWeekPickerComponent)
                    }
                ]
            },] }
];
ThyWeekPickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: Renderer2 },
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2Vlay1waWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2RhdGUtcGlja2VyL3dlZWstcGlja2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0gsVUFBVSxFQUNWLHVCQUF1QixFQUN2QixpQkFBaUIsRUFDakIsU0FBUyxFQUNULFVBQVUsRUFDVixTQUFTLEVBQ1osTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFbkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFlOUQsTUFBTSxPQUFPLHNCQUF1QixTQUFRLG1CQUFtQjtJQUczRCxZQUFZLEdBQXNCLEVBQUUsUUFBbUIsRUFBRSxVQUFzQjtRQUMzRSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFIZixhQUFRLEdBQUcsSUFBSSxDQUFDO1FBSVosUUFBUSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLHFCQUFxQixDQUFDLENBQUM7SUFDdkUsQ0FBQzs7O1lBbkJKLFNBQVMsU0FBQztnQkFDUCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsUUFBUSxFQUFFLGlCQUFpQjtnQkFDM0IsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLHN1Q0FBMkM7Z0JBQzNDLFNBQVMsRUFBRTtvQkFDUDt3QkFDSSxPQUFPLEVBQUUsaUJBQWlCO3dCQUMxQixLQUFLLEVBQUUsSUFBSTt3QkFDWCxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHNCQUFzQixDQUFDO3FCQUN4RDtpQkFDSjthQUNKOzs7WUFyQkcsaUJBQWlCO1lBR2pCLFNBQVM7WUFEVCxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBmb3J3YXJkUmVmLFxuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENoYW5nZURldGVjdG9yUmVmLFxuICAgIENvbXBvbmVudCxcbiAgICBFbGVtZW50UmVmLFxuICAgIFJlbmRlcmVyMlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBCYXNlUGlja2VyQ29tcG9uZW50IH0gZnJvbSAnLi9iYXNlLXBpY2tlci5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBzZWxlY3RvcjogJ3RoeS13ZWVrLXBpY2tlcicsXG4gICAgZXhwb3J0QXM6ICd0aHlXZWVrUGlja2VyJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vYmFzZS1waWNrZXIuY29tcG9uZW50Lmh0bWwnLFxuICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7XG4gICAgICAgICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgICAgICAgIG11bHRpOiB0cnVlLFxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVGh5V2Vla1BpY2tlckNvbXBvbmVudClcbiAgICAgICAgfVxuICAgIF1cbn0pXG5leHBvcnQgY2xhc3MgVGh5V2Vla1BpY2tlckNvbXBvbmVudCBleHRlbmRzIEJhc2VQaWNrZXJDb21wb25lbnQge1xuICAgIHNob3dXZWVrID0gdHJ1ZTtcblxuICAgIGNvbnN0cnVjdG9yKGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcbiAgICAgICAgc3VwZXIoY2RyKTtcbiAgICAgICAgcmVuZGVyZXIuYWRkQ2xhc3MoZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAndGh5LWNhbGVuZGFyLXBpY2tlcicpO1xuICAgIH1cbn1cbiJdfQ==