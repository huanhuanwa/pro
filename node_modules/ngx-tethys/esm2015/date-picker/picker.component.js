import { getFlexiblePositions } from 'ngx-tethys/core';
import { CdkConnectedOverlay, CdkOverlayOrigin } from '@angular/cdk/overlay';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { DateHelperService } from './date-helper.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './date-helper.service';
import * as ɵngcc2 from '@angular/cdk/overlay';
import * as ɵngcc3 from 'ngx-tethys/input';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from 'ngx-tethys/icon';

const _c0 = ["origin"];
const _c1 = ["pickerInput"];
function ThyPickerComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ThyPickerComponent_ng_template_6_thy_icon_1_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "thy-icon", 9);
    ɵngcc0.ɵɵlistener("click", function ThyPickerComponent_ng_template_6_thy_icon_1_Template_thy_icon_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7.onClickClear($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate1("ngClass", "remove-link remove-link-", ctx_r6.size, "");
} }
function ThyPickerComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, ThyPickerComponent_ng_template_6_thy_icon_1_Template, 1, 1, "thy-icon", 7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "span");
    ɵngcc0.ɵɵelement(3, "thy-icon", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r4.prefixCls, "-picker-clear");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r4.disabled && !ctx_r4.isEmptyValue(ctx_r4.value) && ctx_r4.allowClear && !ctx_r4.readonly);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("", ctx_r4.prefixCls, "-picker-icon");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("ngClass", "remove-link-", ctx_r4.size, "");
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r4.suffixIcon);
} }
function ThyPickerComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} }
const _c2 = ["*"];
export class ThyPickerComponent {
    constructor(changeDetector, dateHelper) {
        this.changeDetector = changeDetector;
        this.dateHelper = dateHelper;
        this.isRange = false;
        this.open = undefined;
        this.placement = 'bottomLeft';
        this.valueChange = new EventEmitter();
        this.openChange = new EventEmitter(); // Emitted when overlay's open state change
        this.prefixCls = 'thy-calendar';
        this.animationOpenState = false;
        this.overlayOpen = false; // Available when "open"=undefined
        this.overlayPositions = getFlexiblePositions(this.placement, 4);
    }
    get realOpenState() {
        // The value that really decide the open state of overlay
        return this.isOpenHandledByUser() ? !!this.open : this.overlayOpen;
    }
    ngAfterViewInit() {
        this.overlayPositions = getFlexiblePositions(this.placement, 4);
        if (this.autoFocus) {
            this.focus();
        }
    }
    focus() {
        this.pickerInput.nativeElement.focus();
    }
    showOverlay() {
        if (!this.realOpenState) {
            this.overlayOpen = true;
            if (this.realOpenState) {
                this.animationOpenState = true;
            }
            this.openChange.emit(this.overlayOpen);
            setTimeout(() => {
                if (this.cdkConnectedOverlay && this.cdkConnectedOverlay.overlayRef) {
                    this.cdkConnectedOverlay.overlayRef.updatePosition();
                }
            });
        }
    }
    hideOverlay() {
        if (this.realOpenState) {
            this.overlayOpen = false;
            if (!this.realOpenState) {
                this.animationOpenState = false;
            }
            this.openChange.emit(this.overlayOpen);
            this.focus();
        }
    }
    onClickInputBox() {
        if (!this.disabled && !this.readonly && !this.isOpenHandledByUser()) {
            this.showOverlay();
        }
    }
    onClickBackdrop() {
        this.hideOverlay();
    }
    onOverlayDetach() {
        this.hideOverlay();
    }
    onPositionChange(position) {
        this.changeDetector.detectChanges();
    }
    onClickClear(event) {
        event.preventDefault();
        event.stopPropagation();
        this.value = this.isRange ? [] : null;
        this.valueChange.emit(this.value);
    }
    getPartTypeIndex(partType) {
        return { left: 0, right: 1 }[partType];
    }
    isEmptyValue(value) {
        if (value === null) {
            return true;
        }
        else if (this.isRange) {
            return !value || !Array.isArray(value) || value.every(val => !val);
        }
        else {
            return !value;
        }
    }
    // Whether open state is permanently controlled by user himself
    isOpenHandledByUser() {
        return this.open !== undefined;
    }
    getReadableValue() {
        let value;
        if (this.isRange) {
            const start = this.value[0] ? this.dateHelper.format(this.value[0].nativeDate, this.format) : '';
            const end = this.value[1] ? this.dateHelper.format(this.value[1].nativeDate, this.format) : '';
            return start && end ? `${start} ~ ${end}` : null;
        }
        else {
            value = this.value;
            return value ? this.dateHelper.format(value.nativeDate, this.format) : null;
        }
    }
    getPlaceholder() {
        return this.isRange && this.placeholder && Array.isArray(this.placeholder)
            ? this.placeholder.join(' ~ ')
            : this.placeholder;
    }
}
ThyPickerComponent.ɵfac = function ThyPickerComponent_Factory(t) { return new (t || ThyPickerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DateHelperService)); };
ThyPickerComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyPickerComponent, selectors: [["thy-picker"]], viewQuery: function ThyPickerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
        ɵngcc0.ɵɵstaticViewQuery(CdkConnectedOverlay, true);
        ɵngcc0.ɵɵstaticViewQuery(_c1, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.origin = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cdkConnectedOverlay = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.pickerInput = _t.first);
    } }, inputs: { isRange: "isRange", open: "open", placement: "placement", value: "value", disabled: "disabled", placeholder: "placeholder", readonly: "readonly", allowClear: "allowClear", autoFocus: "autoFocus", className: "className", format: "format", size: "size", suffixIcon: "suffixIcon" }, outputs: { valueChange: "valueChange", openChange: "openChange" }, exportAs: ["thyPicker"], ngContentSelectors: _c2, decls: 9, vars: 22, consts: [["cdkOverlayOrigin", "", 3, "click"], ["origin", "cdkOverlayOrigin"], ["thyInput", "", "readonly", "", 3, "thySize", "disabled", "value", "placeholder"], ["pickerInput", ""], [4, "ngTemplateOutlet"], ["tplRightRest", ""], ["cdkConnectedOverlay", "", "cdkConnectedOverlayBackdropClass", "cdk-overlay-transparent-backdrop", 3, "cdkConnectedOverlayOrigin", "cdkConnectedOverlayOpen", "cdkConnectedOverlayHasBackdrop", "cdkConnectedOverlayPositions", "positionChange", "backdropClick", "detach"], ["thyIconName", "close-circle-bold-fill", 3, "ngClass", "click", 4, "ngIf"], [3, "thyIconName", "ngClass"], ["thyIconName", "close-circle-bold-fill", 3, "ngClass", "click"], [2, "position", "relative"]], template: function ThyPickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "span", 0, 1);
        ɵngcc0.ɵɵlistener("click", function ThyPickerComponent_Template_span_click_0_listener() { return ctx.onClickInputBox(); });
        ɵngcc0.ɵɵelementContainerStart(2);
        ɵngcc0.ɵɵelement(3, "input", 2, 3);
        ɵngcc0.ɵɵtemplate(5, ThyPickerComponent_ng_container_5_Template, 1, 0, "ng-container", 4);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, ThyPickerComponent_ng_template_6_Template, 4, 9, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(8, ThyPickerComponent_ng_template_8_Template, 2, 0, "ng-template", 6);
        ɵngcc0.ɵɵlistener("positionChange", function ThyPickerComponent_Template_ng_template_positionChange_8_listener($event) { return ctx.onPositionChange($event); })("backdropClick", function ThyPickerComponent_Template_ng_template_backdropClick_8_listener() { return ctx.onClickBackdrop(); })("detach", function ThyPickerComponent_Template_ng_template_detach_8_listener() { return ctx.onOverlayDetach(); });
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(1);
        const _r3 = ɵngcc0.ɵɵreference(7);
        ɵngcc0.ɵɵclassMapInterpolate3("", ctx.prefixCls, "-picker ", ctx.size ? ctx.prefixCls + "-picker-" + ctx.size : "", " ", ctx.className, "");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵclassMapInterpolate2("form-control-", ctx.size, " form-control ", ctx.prefixCls, "-picker-input");
        ɵngcc0.ɵɵclassProp("thy-input-disabled", ctx.disabled)("thy-input-readonly", ctx.readonly);
        ɵngcc0.ɵɵpropertyInterpolate("value", ctx.getReadableValue());
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ctx.getPlaceholder());
        ɵngcc0.ɵɵproperty("thySize", ctx.size)("disabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("cdkConnectedOverlayOrigin", _r0)("cdkConnectedOverlayOpen", ctx.realOpenState)("cdkConnectedOverlayHasBackdrop", !ctx.isOpenHandledByUser())("cdkConnectedOverlayPositions", ctx.overlayPositions);
    } }, directives: [ɵngcc2.CdkOverlayOrigin, ɵngcc3.ThyInputDirective, ɵngcc4.NgTemplateOutlet, ɵngcc2.CdkConnectedOverlay, ɵngcc4.NgIf, ɵngcc5.ThyIconComponent, ɵngcc4.NgClass], encapsulation: 2, changeDetection: 0 });
ThyPickerComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: DateHelperService }
];
ThyPickerComponent.propDecorators = {
    isRange: [{ type: Input }],
    open: [{ type: Input }],
    disabled: [{ type: Input }],
    placeholder: [{ type: Input }],
    readonly: [{ type: Input }],
    allowClear: [{ type: Input }],
    autoFocus: [{ type: Input }],
    className: [{ type: Input }],
    format: [{ type: Input }],
    size: [{ type: Input }],
    value: [{ type: Input }],
    suffixIcon: [{ type: Input }],
    placement: [{ type: Input }],
    valueChange: [{ type: Output }],
    openChange: [{ type: Output }],
    origin: [{ type: ViewChild, args: ['origin', { static: true },] }],
    cdkConnectedOverlay: [{ type: ViewChild, args: [CdkConnectedOverlay, { static: true },] }],
    pickerInput: [{ type: ViewChild, args: ['pickerInput', { static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyPickerComponent, [{
        type: Component,
        args: [{
                selector: 'thy-picker',
                exportAs: 'thyPicker',
                template: "<span\n  cdkOverlayOrigin\n  #origin=\"cdkOverlayOrigin\"\n  class=\"{{ prefixCls }}-picker {{ size ? prefixCls + '-picker-' + size : '' }} {{ className }}\"\n  (click)=\"onClickInputBox()\"\n>\n  <ng-container>\n    <input\n      #pickerInput\n      thyInput\n      class=\"form-control-{{ size }} form-control {{ prefixCls }}-picker-input\"\n      [thySize]=\"size\"\n      [class.thy-input-disabled]=\"disabled\"\n      [class.thy-input-readonly]=\"readonly\"\n      [disabled]=\"disabled\"\n      readonly\n      value=\"{{ getReadableValue() }}\"\n      placeholder=\"{{ getPlaceholder() }}\"\n    />\n    <ng-container *ngTemplateOutlet=\"tplRightRest\"></ng-container>\n  </ng-container>\n</span>\n\n<!-- Right operator icons -->\n<ng-template #tplRightRest>\n  <span class=\"{{ prefixCls }}-picker-clear\">\n    <thy-icon\n      thyIconName=\"close-circle-bold-fill\"\n      *ngIf=\"!disabled && !isEmptyValue(value) && allowClear && !readonly\"\n      (click)=\"onClickClear($event)\"\n      ngClass=\"remove-link remove-link-{{ size }}\"\n    ></thy-icon>\n  </span>\n  <span class=\"{{ prefixCls }}-picker-icon\">\n    <thy-icon [thyIconName]=\"suffixIcon\" ngClass=\"remove-link-{{ size }}\"></thy-icon>\n  </span>\n</ng-template>\n\n<!-- Overlay -->\n<ng-template\n  cdkConnectedOverlay\n  [cdkConnectedOverlayOrigin]=\"origin\"\n  [cdkConnectedOverlayOpen]=\"realOpenState\"\n  [cdkConnectedOverlayHasBackdrop]=\"!isOpenHandledByUser()\"\n  [cdkConnectedOverlayPositions]=\"overlayPositions\"\n  cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n  (positionChange)=\"onPositionChange($event)\"\n  (backdropClick)=\"onClickBackdrop()\"\n  (detach)=\"onOverlayDetach()\"\n>\n  <div style=\"position: relative;\">\n    <!-- Compatible for overlay that not support offset dynamically and immediately -->\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.DateHelperService }]; }, { isRange: [{
            type: Input
        }], open: [{
            type: Input
        }], placement: [{
            type: Input
        }], valueChange: [{
            type: Output
        }], openChange: [{
            type: Output
        }], value: [{
            type: Input
        }], disabled: [{
            type: Input
        }], placeholder: [{
            type: Input
        }], readonly: [{
            type: Input
        }], allowClear: [{
            type: Input
        }], autoFocus: [{
            type: Input
        }], className: [{
            type: Input
        }], format: [{
            type: Input
        }], size: [{
            type: Input
        }], suffixIcon: [{
            type: Input
        }], origin: [{
            type: ViewChild,
            args: ['origin', { static: true }]
        }], cdkConnectedOverlay: [{
            type: ViewChild,
            args: [CdkConnectedOverlay, { static: true }]
        }], pickerInput: [{
            type: ViewChild,
            args: ['pickerInput', { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,