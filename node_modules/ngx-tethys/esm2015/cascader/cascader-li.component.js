import { Component, Input, HostBinding, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';
import { UpdateHostClassService } from 'ngx-tethys/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

const _c0 = ["thy-cascader-option", ""];
function ThyCascaderOptionComponent_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 1);
} }
export class ThyCascaderOptionComponent {
    constructor() {
        this.item = true;
        this.active = false;
    }
    get disabled() {
        return this.option.disabled;
    }
    get expand() {
        return this.option && !this.option.isLeaf;
    }
    getOptionLabel() {
        return this.option ? this.option[this.thyLabelProperty || 'label'] : '';
    }
    ngOnInit() { }
}
ThyCascaderOptionComponent.ɵfac = function ThyCascaderOptionComponent_Factory(t) { return new (t || ThyCascaderOptionComponent)(); };
ThyCascaderOptionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyCascaderOptionComponent, selectors: [["", "thy-cascader-option", ""]], hostVars: 8, hostBindings: function ThyCascaderOptionComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-cascader-menu-item", ctx.item)("thy-cascader-menu-item-active", ctx.active)("thy-cascader-menu-item-disabled", ctx.disabled)("thy-cascader-menu-item-expand", ctx.expand);
    } }, inputs: { active: "active", option: "option", thyLabelProperty: "thyLabelProperty" }, features: [ɵngcc0.ɵɵProvidersFeature([UpdateHostClassService])], attrs: _c0, decls: 3, vars: 2, consts: [["class", "wtf wtf-angle-right thy-cascader-menu-item-expand-icon", 4, "ngIf"], [1, "wtf", "wtf-angle-right", "thy-cascader-menu-item-expand-icon"]], template: function ThyCascaderOptionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵtemplate(2, ThyCascaderOptionComponent_span_2_Template, 1, 0, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.getOptionLabel(), "\n");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.option.isLeaf || ctx.option.children && ctx.option.children.length || ctx.option.loading);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2, changeDetection: 0 });
ThyCascaderOptionComponent.ctorParameters = () => [];
ThyCascaderOptionComponent.propDecorators = {
    option: [{ type: Input }],
    item: [{ type: HostBinding, args: ['class.thy-cascader-menu-item',] }],
    active: [{ type: HostBinding, args: ['class.thy-cascader-menu-item-active',] }, { type: Input }],
    disabled: [{ type: HostBinding, args: ['class.thy-cascader-menu-item-disabled',] }],
    expand: [{ type: HostBinding, args: ['class.thy-cascader-menu-item-expand',] }],
    thyLabelProperty: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyCascaderOptionComponent, [{
        type: Component,
        args: [{
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                selector: '[thy-cascader-option]',
                template: "<ng-container>\n    {{ getOptionLabel() }}\n</ng-container>\n<span *ngIf=\"!option.isLeaf || option.children && option.children.length || option.loading\" class=\"wtf wtf-angle-right thy-cascader-menu-item-expand-icon\">\n</span>",
                providers: [UpdateHostClassService]
            }]
    }], function () { return []; }, { item: [{
            type: HostBinding,
            args: ['class.thy-cascader-menu-item']
        }], active: [{
            type: HostBinding,
            args: ['class.thy-cascader-menu-item-active']
        }, {
            type: Input
        }], disabled: [{
            type: HostBinding,
            args: ['class.thy-cascader-menu-item-disabled']
        }], expand: [{
            type: HostBinding,
            args: ['class.thy-cascader-menu-item-expand']
        }], option: [{
            type: Input
        }], thyLabelProperty: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FzY2FkZXItbGkuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY2FzY2FkZXIvY2FzY2FkZXItbGkuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLFdBQVcsRUFBYyx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5SCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7Ozs7QUFTekQsTUFBTSxPQUFPLDBCQUEwQjtBQUFHLElBcUJ0QztBQUFnQixRQWxCNkIsU0FBSSxHQUFHLElBQUksQ0FBQztBQUM3RCxRQUdJLFdBQU0sR0FBRyxLQUFLLENBQUM7QUFDbkIsSUFhbUIsQ0FBQztBQUNwQixJQWJJLElBQ0ksUUFBUTtBQUNoQixRQUFRLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7QUFDcEMsSUFBSSxDQUFDO0FBQ0wsSUFDSSxJQUNJLE1BQU07QUFDZCxRQUFRLE9BQU8sSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQ2xELElBQUksQ0FBQztBQUNMLElBS1csY0FBYztBQUN6QixRQUFRLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLElBQUksT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztBQUNoRixJQUFJLENBQUM7QUFDTCxJQUNJLFFBQVEsS0FBSSxDQUFDO0FBQ2pCO3NEQW5DQyxTQUFTLFNBQUMsa0JBQ1AsZUFBZSxFQUFFLHVCQUF1QixDQUFDO0dBQU0sa0JBQy9DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJLGtCQUNyQyxRQUFRLEVBQUUsdUJBQXVCLGtCQUNqQzs4SEFBMkMsa0JBQzNDLFNBQVMsRUFBRSxDQUFDLHNCQUFzQixDQUFDLGNBQ3RDOzs7Ozs7Ozs7Ozs0RUFDSTtBQUFDO0FBQ047QUFFUSxxQkFGSCxLQUFLO0FBQUssbUJBRVYsV0FBVyxTQUFDLDhCQUE4QjtBQUFPLHFCQUVqRCxXQUFXLFNBQUMscUNBQXFDLGNBQ2pELEtBQUs7QUFDUix1QkFFRyxXQUFXLFNBQUMsdUNBQXVDO0FBQ25ELHFCQUlBLFdBQVcsU0FBQyxxQ0FBcUM7QUFDakQsK0JBSUEsS0FBSztBQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSW5wdXQsIEhvc3RCaW5kaW5nLCBFbGVtZW50UmVmLCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhc2NhZGVyT3B0aW9uIH0gZnJvbSAnLi9jYXNjYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgVXBkYXRlSG9zdENsYXNzU2VydmljZSB9IGZyb20gJ25neC10ZXRoeXMvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgc2VsZWN0b3I6ICdbdGh5LWNhc2NhZGVyLW9wdGlvbl0nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9jYXNjYWRlci1saS5jb21wb25lbnQuaHRtbCcsXG4gICAgcHJvdmlkZXJzOiBbVXBkYXRlSG9zdENsYXNzU2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgVGh5Q2FzY2FkZXJPcHRpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIEBJbnB1dCgpIG9wdGlvbjogQ2FzY2FkZXJPcHRpb247XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLnRoeS1jYXNjYWRlci1tZW51LWl0ZW0nKSBpdGVtID0gdHJ1ZTtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MudGh5LWNhc2NhZGVyLW1lbnUtaXRlbS1hY3RpdmUnKVxuICAgIEBJbnB1dCgpXG4gICAgYWN0aXZlID0gZmFsc2U7XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLnRoeS1jYXNjYWRlci1tZW51LWl0ZW0tZGlzYWJsZWQnKVxuICAgIGdldCBkaXNhYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uLmRpc2FibGVkO1xuICAgIH1cblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MudGh5LWNhc2NhZGVyLW1lbnUtaXRlbS1leHBhbmQnKVxuICAgIGdldCBleHBhbmQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm9wdGlvbiAmJiAhdGhpcy5vcHRpb24uaXNMZWFmO1xuICAgIH1cblxuICAgIEBJbnB1dCgpIHRoeUxhYmVsUHJvcGVydHk6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKCkge31cblxuICAgIHB1YmxpYyBnZXRPcHRpb25MYWJlbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3B0aW9uID8gdGhpcy5vcHRpb25bdGhpcy50aHlMYWJlbFByb3BlcnR5IHx8ICdsYWJlbCddIDogJyc7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7fVxufVxuIl19