import { Component, Input, HostBinding, ElementRef, TemplateRef, ContentChild } from '@angular/core';
import { coerceBooleanProperty } from 'ngx-tethys/util';
import { UpdateHostClassService } from 'ngx-tethys/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/core';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from 'ngx-tethys/icon';

const _c0 = ["voteIcon"];
function ThyVoteComponent_thy_icon_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 2);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r0.thyIcon)("thyIconType", ctx_r0._hasVoted ? "fill" : "");
} }
function ThyVoteComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 3);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r1.voteIcon);
} }
export class ThyVoteComponent {
    constructor(elementRef, updateHostClassService) {
        this.elementRef = elementRef;
        this.updateHostClassService = updateHostClassService;
        this._initialized = false;
        this._isRound = false;
        this.class = true;
        this._hasVoted = true;
        this.thyIcon = 'thumb-up';
        this.updateHostClassService.initializeElement(elementRef.nativeElement);
    }
    set thySize(value) {
        this._size = value;
        if (this._initialized) {
            this._setClassesByType();
        }
    }
    set thyVote(value) {
        this._type = value;
        if (this._initialized) {
            this._setClassesByType();
        }
    }
    set thyRound(value) {
        this._isRound = coerceBooleanProperty(value);
    }
    set thyLayout(value) {
        this._layout = value;
        if (this._initialized) {
            this._setClassesByType();
        }
    }
    set thyHasVoted(value) {
        this._hasVoted = coerceBooleanProperty(value);
        if (this._initialized) {
            this._setClassesByType();
        }
    }
    ngOnInit() {
        this._setClassesByType();
        this._initialized = true;
    }
    _setClassesByType() {
        const classNames = [];
        if (!this._type) {
            this._type = 'primary';
        }
        if (!this._layout) {
            this._layout = 'horizontal';
        }
        if (!this._size) {
            this._size = 'default';
        }
        if (this._isRound) {
            classNames.push('thy-vote-round');
        }
        classNames.push(`thy-vote-${this._type}`);
        classNames.push(`thy-vote-${this._layout}`);
        classNames.push(`thy-vote-${this._layout}-size-${this._size}`);
        this.updateHostClassService.updateClass(classNames);
    }
}
ThyVoteComponent.ɵfac = function ThyVoteComponent_Factory(t) { return new (t || ThyVoteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UpdateHostClassService)); };
ThyVoteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyVoteComponent, selectors: [["thy-vote"], ["", "thyVote", ""]], contentQueries: function ThyVoteComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.voteIcon = _t.first);
    } }, hostVars: 4, hostBindings: function ThyVoteComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-vote", ctx.class)("has-voted", ctx._hasVoted);
    } }, inputs: { thyIcon: "thyIcon", thySize: "thySize", thyVote: "thyVote", thyRound: "thyRound", thyLayout: "thyLayout", thyHasVoted: "thyHasVoted", thyVoteCount: "thyVoteCount" }, features: [ɵngcc0.ɵɵProvidersFeature([UpdateHostClassService])], decls: 4, vars: 3, consts: [[3, "thyIconName", "thyIconType", 4, "ngIf"], [3, "ngTemplateOutlet", 4, "ngIf"], [3, "thyIconName", "thyIconType"], [3, "ngTemplateOutlet"]], template: function ThyVoteComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ThyVoteComponent_thy_icon_0_Template, 1, 2, "thy-icon", 0);
        ɵngcc0.ɵɵtemplate(1, ThyVoteComponent_ng_container_1_Template, 1, 1, "ng-container", 1);
        ɵngcc0.ɵɵelementStart(2, "div");
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.voteIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.voteIcon);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.thyVoteCount);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.ThyIconComponent, ɵngcc2.NgTemplateOutlet], encapsulation: 2 });
ThyVoteComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: UpdateHostClassService }
];
ThyVoteComponent.propDecorators = {
    class: [{ type: HostBinding, args: [`class.thy-vote`,] }],
    _hasVoted: [{ type: HostBinding, args: [`class.has-voted`,] }],
    thySize: [{ type: Input }],
    thyVote: [{ type: Input }],
    thyRound: [{ type: Input }],
    thyLayout: [{ type: Input }],
    thyVoteCount: [{ type: Input }],
    thyIcon: [{ type: Input }],
    thyHasVoted: [{ type: Input }],
    voteIcon: [{ type: ContentChild, args: ['voteIcon',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyVoteComponent, [{
        type: Component,
        args: [{
                selector: 'thy-vote,[thyVote]',
                template: "<thy-icon *ngIf=\"!voteIcon\" [thyIconName]=\"thyIcon\" [thyIconType]=\"_hasVoted ? 'fill' : ''\"></thy-icon>\n<ng-container *ngIf=\"voteIcon\" [ngTemplateOutlet]=\"voteIcon\"></ng-container>\n<div>{{ thyVoteCount }}</div>\n",
                providers: [UpdateHostClassService]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.UpdateHostClassService }]; }, { class: [{
            type: HostBinding,
            args: [`class.thy-vote`]
        }], _hasVoted: [{
            type: HostBinding,
            args: [`class.has-voted`]
        }], thyIcon: [{
            type: Input
        }], thySize: [{
            type: Input
        }], thyVote: [{
            type: Input
        }], thyRound: [{
            type: Input
        }], thyLayout: [{
            type: Input
        }], thyHasVoted: [{
            type: Input
        }], thyVoteCount: [{
            type: Input
        }], voteIcon: [{
            type: ContentChild,
            args: ['voteIcon']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidm90ZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy92b3RlL3ZvdGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBVSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWF6RCxNQUFNLE9BQU8sZ0JBQWdCO0FBQUcsSUEwRDVCLFlBQW9CLFVBQXNCLEVBQVUsc0JBQThDO0FBQ3RHLFFBRHdCLGVBQVUsR0FBVixVQUFVLENBQVk7QUFBQyxRQUFTLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBd0I7QUFBQyxRQW5EbkcsaUJBQVksR0FBRyxLQUFLLENBQUM7QUFDekIsUUFDSSxhQUFRLEdBQUcsS0FBSyxDQUFDO0FBQ3JCLFFBQ21DLFVBQUssR0FBRyxJQUFJLENBQUM7QUFDaEQsUUFDb0MsY0FBUyxHQUFHLElBQUksQ0FBQztBQUNyRCxRQWdDYSxZQUFPLEdBQUcsVUFBVSxDQUFDO0FBQ2xDLFFBWVEsSUFBSSxDQUFDLHNCQUFzQixDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNoRixJQUFJLENBQUM7QUFDTCxJQTlDSSxJQUNJLE9BQU8sQ0FBQyxLQUFtQjtBQUNuQyxRQUFRLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0FBQzNCLFFBQVEsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO0FBQy9CLFlBQVksSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7QUFDckMsU0FBUztBQUNULElBQUksQ0FBQztBQUNMLElBQ0ksSUFDSSxPQUFPLENBQUMsS0FBa0I7QUFDbEMsUUFBUSxJ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Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgQ29tcG9uZW50LCBJbnB1dCwgSG9zdEJpbmRpbmcsIEVsZW1lbnRSZWYsIFRlbXBsYXRlUmVmLCBDb250ZW50Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ25neC10ZXRoeXMvdXRpbCc7XG5pbXBvcnQgeyBVcGRhdGVIb3N0Q2xhc3NTZXJ2aWNlIH0gZnJvbSAnbmd4LXRldGh5cy9jb3JlJztcblxuZXhwb3J0IHR5cGUgVGh5Vm90ZVNpemVzID0gJ2RlZmF1bHQnIHwgJ3NtJztcblxuZXhwb3J0IHR5cGUgVGh5Vm90ZVR5cGUgPSAncHJpbWFyeScgfCAnc3VjY2VzcycgfCAncHJpbWFyeS13ZWFrJyB8ICdzdWNjZXNzLXdlYWsnO1xuXG5leHBvcnQgdHlwZSBUaHlWb3RlTGF5b3V0ID0gJ3ZlcnRpY2FsJyB8ICdob3Jpem9udGFsJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0aHktdm90ZSxbdGh5Vm90ZV0nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi92b3RlLmNvbXBvbmVudC5odG1sJyxcbiAgICBwcm92aWRlcnM6IFtVcGRhdGVIb3N0Q2xhc3NTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBUaHlWb3RlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBfc2l6ZTogVGh5Vm90ZVNpemVzO1xuXG4gICAgX3R5cGU6IFRoeVZvdGVUeXBlO1xuXG4gICAgX2xheW91dDogVGh5Vm90ZUxheW91dDtcblxuICAgIF9pbml0aWFsaXplZCA9IGZhbHNlO1xuXG4gICAgX2lzUm91bmQgPSBmYWxzZTtcblxuICAgIEBIb3N0QmluZGluZyhgY2xhc3MudGh5LXZvdGVgKSBjbGFzcyA9IHRydWU7XG5cbiAgICBASG9zdEJpbmRpbmcoYGNsYXNzLmhhcy12b3RlZGApIF9oYXNWb3RlZCA9IHRydWU7XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlTaXplKHZhbHVlOiBUaHlWb3RlU2l6ZXMpIHtcbiAgICAgICAgdGhpcy5fc2l6ZSA9IHZhbHVlO1xuICAgICAgICBpZiAodGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX3NldENsYXNzZXNCeVR5cGUoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeVZvdGUodmFsdWU6IFRoeVZvdGVUeXBlKSB7XG4gICAgICAgIHRoaXMuX3R5cGUgPSB2YWx1ZTtcbiAgICAgICAgaWYgKHRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICB0aGlzLl9zZXRDbGFzc2VzQnlUeXBlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlSb3VuZCh2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLl9pc1JvdW5kID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlMYXlvdXQodmFsdWU6IFRoeVZvdGVMYXlvdXQpIHtcbiAgICAgICAgdGhpcy5fbGF5b3V0ID0gdmFsdWU7XG4gICAgICAgIGlmICh0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgICAgICAgdGhpcy5fc2V0Q2xhc3Nlc0J5VHlwZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQElucHV0KCkgdGh5Vm90ZUNvdW50OiBudW1iZXIgfCBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSB0aHlJY29uID0gJ3RodW1iLXVwJztcblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeUhhc1ZvdGVkKHZhbHVlOiBib29sZWFuKSB7XG4gICAgICAgIHRoaXMuX2hhc1ZvdGVkID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcbiAgICAgICAgaWYgKHRoaXMuX2luaXRpYWxpemVkKSB7XG4gICAgICAgICAgICB0aGlzLl9zZXRDbGFzc2VzQnlUeXBlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAQ29udGVudENoaWxkKCd2b3RlSWNvbicpIHZvdGVJY29uOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwcml2YXRlIHVwZGF0ZUhvc3RDbGFzc1NlcnZpY2U6IFVwZGF0ZUhvc3RDbGFzc1NlcnZpY2UpIHtcbiAgICAgICAgdGhpcy51cGRhdGVIb3N0Q2xhc3NTZXJ2aWNlLmluaXRpYWxpemVFbGVtZW50KGVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCk7XG4gICAgfVxuXG4gICAgbmdPbkluaXQoKSB7XG4gICAgICAgIHRoaXMuX3NldENsYXNzZXNCeVR5cGUoKTtcbiAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIF9zZXRDbGFzc2VzQnlUeXBlKCkge1xuICAgICAgICBjb25zdCBjbGFzc05hbWVzID0gW107XG4gICAgICAgIGlmICghdGhpcy5fdHlwZSkge1xuICAgICAgICAgICAgdGhpcy5fdHlwZSA9ICdwcmltYXJ5JztcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMuX2xheW91dCkge1xuICAgICAgICAgICAgdGhpcy5fbGF5b3V0ID0gJ2hvcml6b250YWwnO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5fc2l6ZSkge1xuICAgICAgICAgICAgdGhpcy5fc2l6ZSA9ICdkZWZhdWx0JztcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5faXNSb3VuZCkge1xuICAgICAgICAgICAgY2xhc3NOYW1lcy5wdXNoKCd0aHktdm90ZS1yb3VuZCcpO1xuICAgICAgICB9XG4gICAgICAgIGNsYXNzTmFtZXMucHVzaChgdGh5LXZvdGUtJHt0aGlzLl90eXBlfWApO1xuICAgICAgICBjbGFzc05hbWVzLnB1c2goYHRoeS12b3RlLSR7dGhpcy5fbGF5b3V0fWApO1xuICAgICAgICBjbGFzc05hbWVzLnB1c2goYHRoeS12b3RlLSR7dGhpcy5fbGF5b3V0fS1zaXplLSR7dGhpcy5fc2l6ZX1gKTtcbiAgICAgICAgdGhpcy51cGRhdGVIb3N0Q2xhc3NTZXJ2aWNlLnVwZGF0ZUNsYXNzKGNsYXNzTmFtZXMpO1xuICAgIH1cbn1cbiJdfQ==