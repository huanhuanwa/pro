import { Component, HostBinding, HostListener, Input, Optional, ChangeDetectorRef } from '@angular/core';
import { ThyTranslate } from 'ngx-tethys/core';
import { ThyRadioGroupComponent } from './../group/radio-group.component';
import { coerceBooleanProperty } from 'ngx-tethys/util';
import { ThyRadioComponent } from '../radio.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/core';
import * as ɵngcc2 from './../group/radio-group.component';

const _c0 = ["thy-radio-button", ""];
const _c1 = ["*"];
export class ThyRadioButtonComponent extends ThyRadioComponent {
    constructor(thyTranslate, thyRadioGroupComponent, changeDetectorRef) {
        super(thyTranslate, thyRadioGroupComponent, changeDetectorRef);
        this.isButton = true;
        this.isActive = false;
    }
    set thyChecked(value) {
        this.isActive = !!value;
        this.writeValue(coerceBooleanProperty(value));
    }
    ngOnInit() {
        this._isFormCheck = false;
        if (this.thyRadioGroupComponent) {
            this.thyRadioGroupComponent.addRadio(this);
            this.thyRadioGroupComponent.setGroup();
        }
    }
    click($event) {
        this.change();
    }
}
ThyRadioButtonComponent.ɵfac = function ThyRadioButtonComponent_Factory(t) { return new (t || ThyRadioButtonComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyTranslate), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ThyRadioGroupComponent, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ThyRadioButtonComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyRadioButtonComponent, selectors: [["", "thy-radio-button", ""], ["", "thyRadioButton", ""]], hostVars: 4, hostBindings: function ThyRadioButtonComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ThyRadioButtonComponent_click_HostBindingHandler($event) { return ctx.click($event); });
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("btn", ctx.isButton)("active", ctx.isActive);
    } }, inputs: { thyValue: "thyValue" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 3, vars: 1, template: function ThyRadioButtonComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementContainerStart(0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵprojection(2);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx._labelText, "");
    } }, encapsulation: 2 });
ThyRadioButtonComponent.ctorParameters = () => [
    { type: ThyTranslate },
    { type: ThyRadioGroupComponent, decorators: [{ type: Optional }] },
    { type: ChangeDetectorRef }
];
ThyRadioButtonComponent.propDecorators = {
    isButton: [{ type: HostBinding, args: ['class.btn',] }],
    isActive: [{ type: HostBinding, args: ['class.active',] }],
    thyValue: [{ type: Input }],
    click: [{ type: HostListener, args: ['click', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyRadioButtonComponent, [{
        type: Component,
        args: [{
                selector: '[thy-radio-button],[thyRadioButton]',
                template: "<ng-container> {{ _labelText }}</ng-container>\n<ng-content></ng-content>\n"
            }]
    }], function () { return [{ type: ɵngcc1.ThyTranslate }, { type: ɵngcc2.ThyRadioGroupComponent, decorators: [{
                type: Optional
            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { isButton: [{
            type: HostBinding,
            args: ['class.btn']
        }], isActive: [{
            type: HostBinding,
            args: ['class.active']
        }], click: [{
            type: HostListener,
            args: ['click', ['$event']]
        }], thyValue: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3JhZGlvL2J1dHRvbi9yYWRpby1idXR0b24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQXNCLFdBQVcsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU3SCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDMUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7Ozs7Ozs7QUFNdkQsTUFBTSxPQUFPLHVCQUF3QixTQUFRLGlCQUFpQjtBQUFHLElBYTdELFlBQ0ksWUFBMEIsRUFDZCxzQkFBOEMsRUFDMUQsaUJBQW9DO0FBQ3pDLFFBQ0ssS0FBSyxDQUFDLFlBQVksRUFBRSxzQkFBc0IsRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBQ3ZFLFFBbEI4QixhQUFRLEdBQUcsSUFBSSxDQUFDO0FBQzlDLFFBQWlDLGFBQVEsR0FBRyxLQUFLLENBQUM7QUFDbEQsSUFnQkksQ0FBQztBQUNMLElBWkksSUFBSSxVQUFVLENBQUMsS0FBYztBQUNqQyxRQUFRLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQztBQUNoQyxRQUFRLElBQUksQ0FBQyxVQUFVLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUN0RCxJQUFJLENBQUM7QUFDTCxJQVNJLFFBQVE7QUFDWixRQUFRLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO0FBQ2xDLFFBQVEsSUFBSSxJQUFJLENBQUMsc0JBQXNCLEVBQUU7QUFDekMsWUFBWSxJQUFJLENBQUMsc0JBQXNCLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3ZELFlBQVksSUFBSSxDQUFDLHNCQUFzQixDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ25ELFNBQVM7QUFDVCxJQUFJLENBQUM7QUFDTCxJQUVJLEtBQUssQ0FBQyxNQUFrQjtBQUM1QixRQUFRLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUN0QixJQUFJLENBQUM7QUFDTDttREFyQ0MsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSxxQ0FBcUMsa0JBQy9DLHVGQUE0QyxjQUMvQzs7Ozs7Ozs7Ozs7Ozs7NkJBQ0k7QUFBQztBQUFpRCxZQVQ5QyxZQUFZO0FBQUksWUFDaEIsc0JBQXNCLHVCQXVCdEIsUUFBUTtBQUFPLFlBMUI0RCxpQkFBaUI7QUFBRztBQUFHO0FBQ25GLHVCQVduQixXQUFXLFNBQUMsV0FBVztBQUFPLHVCQUM5QixXQUFXLFNBQUMsY0FBYztBQUFPLHVCQUlqQyxLQUFLO0FBQUssb0JBdUJWLFlBQVksU0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUM7QUFDakM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIGZvcndhcmRSZWYsIE9uSW5pdCwgSG9zdEJpbmRpbmcsIEhvc3RMaXN0ZW5lciwgSW5wdXQsIE9wdGlvbmFsLCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBUaHlUcmFuc2xhdGUgfSBmcm9tICduZ3gtdGV0aHlzL2NvcmUnO1xuaW1wb3J0IHsgVGh5UmFkaW9Hcm91cENvbXBvbmVudCB9IGZyb20gJy4vLi4vZ3JvdXAvcmFkaW8tZ3JvdXAuY29tcG9uZW50JztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ25neC10ZXRoeXMvdXRpbCc7XG5pbXBvcnQgeyBUaHlSYWRpb0NvbXBvbmVudCB9IGZyb20gJy4uL3JhZGlvLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnW3RoeS1yYWRpby1idXR0b25dLFt0aHlSYWRpb0J1dHRvbl0nLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9yYWRpby1idXR0b24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoeVJhZGlvQnV0dG9uQ29tcG9uZW50IGV4dGVuZHMgVGh5UmFkaW9Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuYnRuJykgaXNCdXR0b24gPSB0cnVlO1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuYWN0aXZlJykgaXNBY3RpdmUgPSBmYWxzZTtcblxuICAgIG5hbWU6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIHRoeVZhbHVlOiBzdHJpbmc7XG5cbiAgICBzZXQgdGh5Q2hlY2tlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLmlzQWN0aXZlID0gISF2YWx1ZTtcbiAgICAgICAgdGhpcy53cml0ZVZhbHVlKGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSh2YWx1ZSkpO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICB0aHlUcmFuc2xhdGU6IFRoeVRyYW5zbGF0ZSxcbiAgICAgICAgQE9wdGlvbmFsKCkgdGh5UmFkaW9Hcm91cENvbXBvbmVudDogVGh5UmFkaW9Hcm91cENvbXBvbmVudCxcbiAgICAgICAgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKHRoeVRyYW5zbGF0ZSwgdGh5UmFkaW9Hcm91cENvbXBvbmVudCwgY2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIH1cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLl9pc0Zvcm1DaGVjayA9IGZhbHNlO1xuICAgICAgICBpZiAodGhpcy50aHlSYWRpb0dyb3VwQ29tcG9uZW50KSB7XG4gICAgICAgICAgICB0aGlzLnRoeVJhZGlvR3JvdXBDb21wb25lbnQuYWRkUmFkaW8odGhpcyk7XG4gICAgICAgICAgICB0aGlzLnRoeVJhZGlvR3JvdXBDb21wb25lbnQuc2V0R3JvdXAoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJywgWyckZXZlbnQnXSlcbiAgICBjbGljaygkZXZlbnQ6IE1vdXNlRXZlbnQpIHtcbiAgICAgICAgdGhpcy5jaGFuZ2UoKTtcbiAgICB9XG59XG4iXX0=