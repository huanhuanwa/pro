import { Component, forwardRef, Input, Optional, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ThyTranslate } from 'ngx-tethys/core';
import { ThyFormCheckBaseComponent } from 'ngx-tethys/shared';
import { ThyRadioGroupComponent } from './group/radio-group.component';
import { coerceBooleanProperty } from 'ngx-tethys/util';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/core';
import * as ɵngcc2 from './group/radio-group.component';
import * as ɵngcc3 from '@angular/common';

const _c0 = ["thy-radio", ""];
function ThyRadioComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 2);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0._labelText);
} }
const _c1 = function (a0) { return { "form-check-no-label-text": a0 }; };
const _c2 = ["*"];
export class ThyRadioComponent extends ThyFormCheckBaseComponent {
    constructor(thyTranslate, thyRadioGroupComponent, changeDetectorRef) {
        super(thyTranslate, changeDetectorRef);
        this.thyTranslate = thyTranslate;
        this.thyRadioGroupComponent = thyRadioGroupComponent;
    }
    set thyChecked(value) {
        this.writeValue(coerceBooleanProperty(value));
        this.changeDetectorRef.markForCheck();
    }
    ngOnInit() {
        if (this.thyRadioGroupComponent) {
            this.thyRadioGroupComponent.addRadio(this);
        }
    }
    change() {
        if (this.thyRadioGroupComponent) {
            this.thyRadioGroupComponent.updateValue(this.thyValue, true);
        }
        else {
            this.updateValue(!this._innerValue);
        }
    }
}
ThyRadioComponent.ɵfac = function ThyRadioComponent_Factory(t) { return new (t || ThyRadioComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyTranslate), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ThyRadioGroupComponent, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ThyRadioComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyRadioComponent, selectors: [["", "thy-radio", ""], ["", "thyRadio", ""]], inputs: { thyValue: "thyValue" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => ThyRadioComponent),
                multi: true
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c2, decls: 3, vars: 7, consts: [["type", "radio", 1, "form-check-input", 3, "checked", "disabled", "ngClass", "change"], ["class", "form-check-label", 4, "ngIf"], [1, "form-check-label"]], template: function ThyRadioComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "input", 0);
        ɵngcc0.ɵɵlistener("change", function ThyRadioComponent_Template_input_change_0_listener() { return ctx.change(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(1, ThyRadioComponent_span_1_Template, 2, 1, "span", 1);
        ɵngcc0.ɵɵprojection(2);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("checked", ctx._isChecked)("disabled", ctx._disabled)("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c1, !ctx._labelText));
        ɵngcc0.ɵɵattribute("name", ctx.name);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx._labelText);
    } }, directives: [ɵngcc3.NgClass, ɵngcc3.NgIf], encapsulation: 2, changeDetection: 0 });
ThyRadioComponent.ctorParameters = () => [
    { type: ThyTranslate },
    { type: ThyRadioGroupComponent, decorators: [{ type: Optional }] },
    { type: ChangeDetectorRef }
];
ThyRadioComponent.propDecorators = {
    thyValue: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyRadioComponent, [{
        type: Component,
        args: [{
                selector: '[thy-radio],[thyRadio]',
                template: "<input\n  class=\"form-check-input\"\n  [checked]=\"_isChecked\"\n  (change)=\"change()\"\n  type=\"radio\"\n  [disabled]=\"_disabled\"\n  [attr.name]=\"name\"\n  [ngClass]=\"{ 'form-check-no-label-text': !_labelText }\"\n/>\n<span class=\"form-check-label\" *ngIf=\"_labelText\">{{ _labelText }}</span>\n<ng-content></ng-content>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => ThyRadioComponent),
                        multi: true
                    }
                ],
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc1.ThyTranslate }, { type: ɵngcc2.ThyRadioGroupComponent, decorators: [{
                type: Optional
            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { thyValue: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8uY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmFkaW8vcmFkaW8uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxTQUFTLEVBQ1QsVUFBVSxFQUlWLEtBQUssRUFFTCxRQUFRLEVBQ1IsdUJBQXVCLEVBQ3ZCLGlCQUFpQixFQUNwQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsaUJBQWlCLEVBQXdCLE1BQU0sZ0JBQWdCLENBQUM7QUFDekUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzlELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFjeEQsTUFBTSxPQUFPLGlCQUFrQixTQUFRLHlCQUF5QjtBQUFHLElBVS9ELFlBQ1csWUFBMEIsRUFDZCxzQkFBOEMsRUFDakUsaUJBQW9DO0FBQ3pDLFFBQ0ssS0FBSyxDQUFDLFlBQVksRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0FBQy9DLFFBTGUsaUJBQVksR0FBWixZQUFZLENBQWM7QUFBQyxRQUNmLDJCQUFzQixHQUF0QixzQkFBc0IsQ0FBd0I7QUFBQyxJQUl0RSxDQUFDO0FBQ0wsSUFaSSxJQUFJLFVBQVUsQ0FBQyxLQUFjO0FBQ2pDLFFBQVEsSUFBSSxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQ3RELFFBQVEsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFlBQVksRUFBRSxDQUFDO0FBQzlDLElBQUksQ0FBQztBQUNMLElBU0ksUUFBUTtBQUNaLFFBQVEsSUFBSSxJQUFJLENBQUMsc0JBQXNCLEVBQUU7QUFDekMsWUFBWSxJQUFJLENBQUMsc0JBQXNCLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3ZELFNBQVM7QUFDVCxJQUFJLENBQUM7QUFDTCxJQUNJLE1BQU07QUFDVixRQUFRLElBQUksSUFBSSxDQUFDLHNCQUFzQixFQUFFO0FBQ3pDLFlBQVksSUFBSSxDQUFDLHNCQUFzQixDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3pFLFNBQVM7QUFBQyxhQUFLO0FBQ2YsWUFBWSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ2hELFNBQVM7QUFDVCxJQUFJLENBQUM7QUFDTDs2Q0EzQ0MsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSx3QkFBd0Isa0JBQ2xDOztLQUFxQztTQUNyQyxTQUFTLEVBQUUsc0JBQ1A7d0JBQ0ksT0FBTyxFQUFFLGlCQUFpQjtVQUMxQixXQUFXLEVBQUU7S0FBVSxDQUFDLEdBQUcsRUFBRSxDQUFDO2VBQWlCLENBQUMsMEJBQ2hELEtBQUssRUFBRSxJQUFJLHNCQUNkLGtCQUNKLGtCQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNLGNBQ2xEOzs7Ozs7Ozs7Ozs7NEZBQ0k7QUFBQztBQUEyQyxZQWpCeEMsWUFBWTtBQUFJLFlBRWhCLHNCQUFzQix1QkEyQnRCLFFBQVE7QUFBTyxZQWhDcEIsaUJBQWlCO0FBQ25CO0FBQUc7QUFDYSx1QkFxQmIsS0FBSztBQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENvbXBvbmVudCxcbiAgICBmb3J3YXJkUmVmLFxuICAgIE9uSW5pdCxcbiAgICBIb3N0QmluZGluZyxcbiAgICBIb3N0TGlzdGVuZXIsXG4gICAgSW5wdXQsXG4gICAgRWxlbWVudFJlZixcbiAgICBPcHRpb25hbCxcbiAgICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgICBDaGFuZ2VEZXRlY3RvclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SLCBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IFRoeVRyYW5zbGF0ZSB9IGZyb20gJ25neC10ZXRoeXMvY29yZSc7XG5pbXBvcnQgeyBUaHlGb3JtQ2hlY2tCYXNlQ29tcG9uZW50IH0gZnJvbSAnbmd4LXRldGh5cy9zaGFyZWQnO1xuaW1wb3J0IHsgVGh5UmFkaW9Hcm91cENvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXAvcmFkaW8tZ3JvdXAuY29tcG9uZW50JztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ25neC10ZXRoeXMvdXRpbCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnW3RoeS1yYWRpb10sW3RoeVJhZGlvXScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3JhZGlvLmNvbXBvbmVudC5odG1sJyxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBUaHlSYWRpb0NvbXBvbmVudCksXG4gICAgICAgICAgICBtdWx0aTogdHJ1ZVxuICAgICAgICB9XG4gICAgXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBUaHlSYWRpb0NvbXBvbmVudCBleHRlbmRzIFRoeUZvcm1DaGVja0Jhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIG5hbWU6IHN0cmluZztcblxuICAgIEBJbnB1dCgpIHRoeVZhbHVlOiBzdHJpbmc7XG5cbiAgICBzZXQgdGh5Q2hlY2tlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLndyaXRlVmFsdWUoY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKSk7XG4gICAgICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCk7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyB0aHlUcmFuc2xhdGU6IFRoeVRyYW5zbGF0ZSxcbiAgICAgICAgQE9wdGlvbmFsKCkgcHVibGljIHRoeVJhZGlvR3JvdXBDb21wb25lbnQ6IFRoeVJhZGlvR3JvdXBDb21wb25lbnQsXG4gICAgICAgIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZlxuICAgICkge1xuICAgICAgICBzdXBlcih0aHlUcmFuc2xhdGUsIGNoYW5nZURldGVjdG9yUmVmKTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgaWYgKHRoaXMudGh5UmFkaW9Hcm91cENvbXBvbmVudCkge1xuICAgICAgICAgICAgdGhpcy50aHlSYWRpb0dyb3VwQ29tcG9uZW50LmFkZFJhZGlvKHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY2hhbmdlKCkge1xuICAgICAgICBpZiAodGhpcy50aHlSYWRpb0dyb3VwQ29tcG9uZW50KSB7XG4gICAgICAgICAgICB0aGlzLnRoeVJhZGlvR3JvdXBDb21wb25lbnQudXBkYXRlVmFsdWUodGhpcy50aHlWYWx1ZSwgdHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVZhbHVlKCF0aGlzLl9pbm5lclZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==