import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { ThySharedModule } from 'ngx-tethys/shared';
import { ThyIconModule } from 'ngx-tethys/icon';
import { ThyCalendarHeaderComponent } from './calendar-header.component';
import { ThyCalendarComponent } from './calendar.component';
import { ThyCalendarHeaderOperationDirective, ThyDateCellDirective, ThyDateFullCellDirective, ThyMonthCellDirective, ThyMonthFullCellDirective } from './calendar-cells';
import { LibPackerModule } from 'ngx-tethys/date-picker';
import { ThySelectModule } from 'ngx-tethys/select';
import { ThyRadioModule } from 'ngx-tethys/radio';
import { ThyButtonModule } from 'ngx-tethys/button';
import { ThyDateRangeModule } from 'ngx-tethys/date-range';
import * as ɵngcc0 from '@angular/core';
export class ThyCalendarModule {
}
ThyCalendarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyCalendarModule });
ThyCalendarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyCalendarModule_Factory(t) { return new (t || ThyCalendarModule)(); }, imports: [[
            CommonModule,
            FormsModule,
            ThySharedModule,
            ThyIconModule,
            LibPackerModule,
            ThySelectModule,
            ThyRadioModule,
            ThyButtonModule,
            ThyDateRangeModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyCalendarModule, { declarations: function () { return [ThyCalendarHeaderComponent,
        ThyCalendarComponent,
        ThyDateCellDirective,
        ThyDateFullCellDirective,
        ThyMonthCellDirective,
        ThyMonthFullCellDirective,
        ThyCalendarHeaderOperationDirective]; }, imports: function () { return [CommonModule,
        FormsModule,
        ThySharedModule,
        ThyIconModule,
        LibPackerModule,
        ThySelectModule,
        ThyRadioModule,
        ThyButtonModule,
        ThyDateRangeModule]; }, exports: function () { return [ThyCalendarHeaderComponent,
        ThyCalendarComponent,
        ThyDateCellDirective,
        ThyDateFullCellDirective,
        ThyMonthCellDirective,
        ThyMonthFullCellDirective,
        ThyCalendarHeaderOperationDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyCalendarModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    ThySharedModule,
                    ThyIconModule,
                    LibPackerModule,
                    ThySelectModule,
                    ThyRadioModule,
                    ThyButtonModule,
                    ThyDateRangeModule
                ],
                declarations: [
                    ThyCalendarHeaderComponent,
                    ThyCalendarComponent,
                    ThyDateCellDirective,
                    ThyDateFullCellDirective,
                    ThyMonthCellDirective,
                    ThyMonthFullCellDirective,
                    ThyCalendarHeaderOperationDirective
                ],
                exports: [
                    ThyCalendarHeaderComponent,
                    ThyCalendarComponent,
                    ThyDateCellDirective,
                    ThyDateFullCellDirective,
                    ThyMonthCellDirective,
                    ThyMonthFullCellDirective,
                    ThyCalendarHeaderOperationDirective
                ]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY2FsZW5kYXIvbW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzVELE9BQU8sRUFDSCxtQ0FBbUMsRUFDbkMsb0JBQW9CLEVBQ3BCLHdCQUF3QixFQUN4QixxQkFBcUIsRUFDckIseUJBQXlCLEVBQzVCLE1BQU0sa0JBQWtCLENBQUM7QUFDMUIsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDOztBQWlDM0QsTUFBTSxPQUFPLGlCQUFpQjtBQUFHOzZDQS9CaEMsUUFBUSxTQUFDO0NBQ04sT0FBTyxFQUFFLHNCQUNMLFlBQVksc0JBQ1osV0FBVyxzQkFDWCxlQUFlLHNCQUNmLGFBQWE7aUJBQ2I7TUFBZTtHQUNmLGVBQWU7V0FDZixjQUFjO29CQUNkO01BQWUsc0JBQ2Y7aUJBQWtCO09BQ3JCLGtCQUNEO1FBQVksRUFBRTtDQUNWO1lBQTBCLHNCQUMxQixvQkFBb0Isc0JBQ3BCLG9CQUFvQixzQkFDcEIsd0JBQXdCLHNCQUN4QjtRQUFxQjtBQUNyQix5QkFBeUI7aUJBQ3pCO2tCQUFtQztLQUN0QyxrQkFDRCxPQUFPLEVBQUU7bUJBQ0wsMEJBQTBCLHNCQUMxQixvQkFBb0I7ZUFDcEI7Y0FBb0I7V0FDcEI7WUFBd0I7U0FDeEI7S0FBcUI7R0FDckI7R0FBeUIsc0JBQ3pCLG1DQUFtQyxrQkFDdEM7Q0FDSjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgVGh5U2hhcmVkTW9kdWxlIH0gZnJvbSAnbmd4LXRldGh5cy9zaGFyZWQnO1xuaW1wb3J0IHsgVGh5SWNvbk1vZHVsZSB9IGZyb20gJ25neC10ZXRoeXMvaWNvbic7XG5pbXBvcnQgeyBUaHlDYWxlbmRhckhlYWRlckNvbXBvbmVudCB9IGZyb20gJy4vY2FsZW5kYXItaGVhZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUaHlDYWxlbmRhckNvbXBvbmVudCB9IGZyb20gJy4vY2FsZW5kYXIuY29tcG9uZW50JztcbmltcG9ydCB7XG4gICAgVGh5Q2FsZW5kYXJIZWFkZXJPcGVyYXRpb25EaXJlY3RpdmUsXG4gICAgVGh5RGF0ZUNlbGxEaXJlY3RpdmUsXG4gICAgVGh5RGF0ZUZ1bGxDZWxsRGlyZWN0aXZlLFxuICAgIFRoeU1vbnRoQ2VsbERpcmVjdGl2ZSxcbiAgICBUaHlNb250aEZ1bGxDZWxsRGlyZWN0aXZlXG59IGZyb20gJy4vY2FsZW5kYXItY2VsbHMnO1xuaW1wb3J0IHsgTGliUGFja2VyTW9kdWxlIH0gZnJvbSAnbmd4LXRldGh5cy9kYXRlLXBpY2tlcic7XG5pbXBvcnQgeyBUaHlTZWxlY3RNb2R1bGUgfSBmcm9tICduZ3gtdGV0aHlzL3NlbGVjdCc7XG5pbXBvcnQgeyBUaHlSYWRpb01vZHVsZSB9IGZyb20gJ25neC10ZXRoeXMvcmFkaW8nO1xuaW1wb3J0IHsgVGh5QnV0dG9uTW9kdWxlIH0gZnJvbSAnbmd4LXRldGh5cy9idXR0b24nO1xuaW1wb3J0IHsgVGh5RGF0ZVJhbmdlTW9kdWxlIH0gZnJvbSAnbmd4LXRldGh5cy9kYXRlLXJhbmdlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZSxcbiAgICAgICAgRm9ybXNNb2R1bGUsXG4gICAgICAgIFRoeVNoYXJlZE1vZHVsZSxcbiAgICAgICAgVGh5SWNvbk1vZHVsZSxcbiAgICAgICAgTGliUGFja2VyTW9kdWxlLFxuICAgICAgICBUaHlTZWxlY3RNb2R1bGUsXG4gICAgICAgIFRoeVJhZGlvTW9kdWxlLFxuICAgICAgICBUaHlCdXR0b25Nb2R1bGUsXG4gICAgICAgIFRoeURhdGVSYW5nZU1vZHVsZVxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFRoeUNhbGVuZGFySGVhZGVyQ29tcG9uZW50LFxuICAgICAgICBUaHlDYWxlbmRhckNvbXBvbmVudCxcbiAgICAgICAgVGh5RGF0ZUNlbGxEaXJlY3RpdmUsXG4gICAgICAgIFRoeURhdGVGdWxsQ2VsbERpcmVjdGl2ZSxcbiAgICAgICAgVGh5TW9udGhDZWxsRGlyZWN0aXZlLFxuICAgICAgICBUaHlNb250aEZ1bGxDZWxsRGlyZWN0aXZlLFxuICAgICAgICBUaHlDYWxlbmRhckhlYWRlck9wZXJhdGlvbkRpcmVjdGl2ZVxuICAgIF0sXG4gICAgZXhwb3J0czogW1xuICAgICAgICBUaHlDYWxlbmRhckhlYWRlckNvbXBvbmVudCxcbiAgICAgICAgVGh5Q2FsZW5kYXJDb21wb25lbnQsXG4gICAgICAgIFRoeURhdGVDZWxsRGlyZWN0aXZlLFxuICAgICAgICBUaHlEYXRlRnVsbENlbGxEaXJlY3RpdmUsXG4gICAgICAgIFRoeU1vbnRoQ2VsbERpcmVjdGl2ZSxcbiAgICAgICAgVGh5TW9udGhGdWxsQ2VsbERpcmVjdGl2ZSxcbiAgICAgICAgVGh5Q2FsZW5kYXJIZWFkZXJPcGVyYXRpb25EaXJlY3RpdmVcbiAgICBdXG59KVxuZXhwb3J0IGNsYXNzIFRoeUNhbGVuZGFyTW9kdWxlIHt9XG4iXX0=