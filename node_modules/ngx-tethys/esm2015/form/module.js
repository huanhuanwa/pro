import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { ThyFormDirective } from './form.directive';
import { ThyFormGroupComponent } from './form-group.component';
import { ThyFormGroupLabelDirective } from './form-group-label.directive';
import { ThyFormSubmitDirective } from './form-submit.directive';
import { ThyInputModule } from 'ngx-tethys/input';
import { ThyFormGroupFooterComponent } from './from-group-footer/form-group-footer.component';
import { ThyFormGroupErrorComponent } from './form-group-error/form-group-error.component';
import { ThyFormValidatorLoader } from './form-validator-loader';
import { THY_VALIDATOR_CONFIG, THY_FORM_CONFIG_PROVIDER } from './form.class';
import { ThyUniqueCheckValidator, ThyMaxDirective, ThyMinDirective, ThyConfirmValidatorDirective } from './validator/index';
import { ThyAlertModule } from 'ngx-tethys/alert';
import { ThyIconModule } from 'ngx-tethys/icon';
import * as ɵngcc0 from '@angular/core';
export class ThyFormModule {
    static forRoot(config) {
        return {
            ngModule: ThyFormModule,
            providers: [
                {
                    provide: THY_VALIDATOR_CONFIG,
                    useValue: config
                }
            ]
        };
    }
}
ThyFormModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyFormModule });
ThyFormModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyFormModule_Factory(t) { return new (t || ThyFormModule)(); }, providers: [ThyFormValidatorLoader, THY_FORM_CONFIG_PROVIDER], imports: [[CommonModule, FormsModule, ThyInputModule, ThyAlertModule, ThyIconModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyFormModule, { declarations: function () { return [ThyFormDirective,
        ThyFormGroupComponent,
        ThyFormGroupLabelDirective,
        ThyFormSubmitDirective,
        ThyFormGroupFooterComponent,
        ThyUniqueCheckValidator,
        ThyFormGroupErrorComponent,
        ThyMinDirective,
        ThyMaxDirective,
        ThyConfirmValidatorDirective]; }, imports: function () { return [CommonModule, FormsModule, ThyInputModule, ThyAlertModule, ThyIconModule]; }, exports: function () { return [ThyFormDirective,
        ThyFormGroupComponent,
        ThyFormGroupLabelDirective,
        ThyFormSubmitDirective,
        ThyFormGroupFooterComponent,
        ThyUniqueCheckValidator,
        ThyFormGroupErrorComponent,
        ThyMinDirective,
        ThyMaxDirective,
        ThyConfirmValidatorDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyFormModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, FormsModule, ThyInputModule, ThyAlertModule, ThyIconModule],
                declarations: [
                    ThyFormDirective,
                    ThyFormGroupComponent,
                    ThyFormGroupLabelDirective,
                    ThyFormSubmitDirective,
                    ThyFormGroupFooterComponent,
                    ThyUniqueCheckValidator,
                    ThyFormGroupErrorComponent,
                    ThyMinDirective,
                    ThyMaxDirective,
                    ThyConfirmValidatorDirective
                ],
                exports: [
                    ThyFormDirective,
                    ThyFormGroupComponent,
                    ThyFormGroupLabelDirective,
                    ThyFormSubmitDirective,
                    ThyFormGroupFooterComponent,
                    ThyUniqueCheckValidator,
                    ThyFormGroupErrorComponent,
                    ThyMinDirective,
                    ThyMaxDirective,
                    ThyConfirmValidatorDirective
                ],
                providers: [ThyFormValidatorLoader, THY_FORM_CONFIG_PROVIDER]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZm9ybS9tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNwRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMxRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDOUYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFDM0YsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDakUsT0FBTyxFQUFnQyxvQkFBb0IsRUFBbUIsd0JBQXdCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDN0gsT0FBTyxFQUFFLHVCQUF1QixFQUFFLGVBQWUsRUFBRSxlQUFlLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUM1SCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDOztBQThCaEQsTUFBTSxPQUFPLGFBQWE7QUFDMUIsSUFBSSxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQW9DO0FBQUksUUFDbkQsT0FBTztBQUNmLFlBQVksUUFBUSxFQUFFLGFBQWE7QUFDbkMsWUFBWSxTQUFTLEVBQUU7QUFDdkIsZ0JBQWdCO0FBQ2hCLG9CQUFvQixPQUFPLEVBQUUsb0JBQW9CO0FBQ2pELG9CQUFvQixRQUFRLEVBQUUsTUFBTTtBQUNwQyxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVMsQ0FBQztBQUNWLElBQUksQ0FBQztBQUNMO3lDQXhDQyxRQUFRLFNBQUM7S0FDTixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsYUFBYSxDQUFDLGtCQUNuRixZQUFZLEVBQUUsc0JBQ1YsZ0JBQWdCLHNCQUNoQixxQkFBcUIsc0JBQ3JCLDBCQUEwQixzQkFDMUI7VUFBc0Isc0JBQ3RCLDJCQUEyQixzQkFDM0IsdUJBQXVCLHNCQUN2QiwwQkFBMEI7V0FDMUIsZUFBZTtpQkFDZixlQUFlO2tCQUNmO2NBQTRCLGtCQUMvQjthQUNELE9BQU8sRUFBRTtXQUNMLGdCQUFnQjthQUNoQjtTQUFxQjtNQUNyQiwwQkFBMEIsc0JBQzFCLHNCQUFzQixzQkFDdEIsMkJBQTJCLHNCQUMzQix1QkFBdUIsc0JBQ3ZCO2tCQUEwQjtTQUMxQixlQUFlO1VBQ2YsZUFBZTtlQUNmO01BQTRCLGtCQUMvQjtTQUNELFNBQVMsRUFBRSxDQUFDO09BQXNCLEVBQUU7UUFBd0IsQ0FBQyxjQUNoRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBUaHlGb3JtRGlyZWN0aXZlIH0gZnJvbSAnLi9mb3JtLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUaHlGb3JtR3JvdXBDb21wb25lbnQgfSBmcm9tICcuL2Zvcm0tZ3JvdXAuY29tcG9uZW50JztcbmltcG9ydCB7IFRoeUZvcm1Hcm91cExhYmVsRGlyZWN0aXZlIH0gZnJvbSAnLi9mb3JtLWdyb3VwLWxhYmVsLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUaHlGb3JtU3VibWl0RGlyZWN0aXZlIH0gZnJvbSAnLi9mb3JtLXN1Ym1pdC5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgVGh5SW5wdXRNb2R1bGUgfSBmcm9tICduZ3gtdGV0aHlzL2lucHV0JztcbmltcG9ydCB7IFRoeUZvcm1Hcm91cEZvb3RlckNvbXBvbmVudCB9IGZyb20gJy4vZnJvbS1ncm91cC1mb290ZXIvZm9ybS1ncm91cC1mb290ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFRoeUZvcm1Hcm91cEVycm9yQ29tcG9uZW50IH0gZnJvbSAnLi9mb3JtLWdyb3VwLWVycm9yL2Zvcm0tZ3JvdXAtZXJyb3IuY29tcG9uZW50JztcbmltcG9ydCB7IFRoeUZvcm1WYWxpZGF0b3JMb2FkZXIgfSBmcm9tICcuL2Zvcm0tdmFsaWRhdG9yLWxvYWRlcic7XG5pbXBvcnQgeyBUaHlGb3JtVmFsaWRhdG9yR2xvYmFsQ29uZmlnLCBUSFlfVkFMSURBVE9SX0NPTkZJRywgVEhZX0ZPUk1fQ09ORklHLCBUSFlfRk9STV9DT05GSUdfUFJPVklERVIgfSBmcm9tICcuL2Zvcm0uY2xhc3MnO1xuaW1wb3J0IHsgVGh5VW5pcXVlQ2hlY2tWYWxpZGF0b3IsIFRoeU1heERpcmVjdGl2ZSwgVGh5TWluRGlyZWN0aXZlLCBUaHlDb25maXJtVmFsaWRhdG9yRGlyZWN0aXZlIH0gZnJvbSAnLi92YWxpZGF0b3IvaW5kZXgnO1xuaW1wb3J0IHsgVGh5QWxlcnRNb2R1bGUgfSBmcm9tICduZ3gtdGV0aHlzL2FsZXJ0JztcbmltcG9ydCB7IFRoeUljb25Nb2R1bGUgfSBmcm9tICduZ3gtdGV0aHlzL2ljb24nO1xuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIEZvcm1zTW9kdWxlLCBUaHlJbnB1dE1vZHVsZSwgVGh5QWxlcnRNb2R1bGUsIFRoeUljb25Nb2R1bGVdLFxuICAgIGRlY2xhcmF0aW9uczogW1xuICAgICAgICBUaHlGb3JtRGlyZWN0aXZlLFxuICAgICAgICBUaHlGb3JtR3JvdXBDb21wb25lbnQsXG4gICAgICAgIFRoeUZvcm1Hcm91cExhYmVsRGlyZWN0aXZlLFxuICAgICAgICBUaHlGb3JtU3VibWl0RGlyZWN0aXZlLFxuICAgICAgICBUaHlGb3JtR3JvdXBGb290ZXJDb21wb25lbnQsXG4gICAgICAgIFRoeVVuaXF1ZUNoZWNrVmFsaWRhdG9yLFxuICAgICAgICBUaHlGb3JtR3JvdXBFcnJvckNvbXBvbmVudCxcbiAgICAgICAgVGh5TWluRGlyZWN0aXZlLFxuICAgICAgICBUaHlNYXhEaXJlY3RpdmUsXG4gICAgICAgIFRoeUNvbmZpcm1WYWxpZGF0b3JEaXJlY3RpdmVcbiAgICBdLFxuICAgIGV4cG9ydHM6IFtcbiAgICAgICAgVGh5Rm9ybURpcmVjdGl2ZSxcbiAgICAgICAgVGh5Rm9ybUdyb3VwQ29tcG9uZW50LFxuICAgICAgICBUaHlGb3JtR3JvdXBMYWJlbERpcmVjdGl2ZSxcbiAgICAgICAgVGh5Rm9ybVN1Ym1pdERpcmVjdGl2ZSxcbiAgICAgICAgVGh5Rm9ybUdyb3VwRm9vdGVyQ29tcG9uZW50LFxuICAgICAgICBUaHlVbmlxdWVDaGVja1ZhbGlkYXRvcixcbiAgICAgICAgVGh5Rm9ybUdyb3VwRXJyb3JDb21wb25lbnQsXG4gICAgICAgIFRoeU1pbkRpcmVjdGl2ZSxcbiAgICAgICAgVGh5TWF4RGlyZWN0aXZlLFxuICAgICAgICBUaHlDb25maXJtVmFsaWRhdG9yRGlyZWN0aXZlXG4gICAgXSxcbiAgICBwcm92aWRlcnM6IFtUaHlGb3JtVmFsaWRhdG9yTG9hZGVyLCBUSFlfRk9STV9DT05GSUdfUFJPVklERVJdXG59KVxuZXhwb3J0IGNsYXNzIFRoeUZvcm1Nb2R1bGUge1xuICAgIHN0YXRpYyBmb3JSb290KGNvbmZpZzogVGh5Rm9ybVZhbGlkYXRvckdsb2JhbENvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8VGh5Rm9ybU1vZHVsZT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IFRoeUZvcm1Nb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3ZpZGU6IFRIWV9WQUxJREFUT1JfQ09ORklHLFxuICAgICAgICAgICAgICAgICAgICB1c2VWYWx1ZTogY29uZmlnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdfQ==