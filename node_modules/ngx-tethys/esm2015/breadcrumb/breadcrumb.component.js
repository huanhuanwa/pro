import { Component, ChangeDetectionStrategy, HostBinding, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from 'ngx-tethys/icon';

function ThyBreadcrumbComponent_div_0_thy_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 4);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r1.svgIconName);
} }
function ThyBreadcrumbComponent_div_0_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 5);
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r3.iconClasses);
} }
function ThyBreadcrumbComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, ThyBreadcrumbComponent_div_0_thy_icon_1_Template, 1, 1, "thy-icon", 2);
    ɵngcc0.ɵɵtemplate(2, ThyBreadcrumbComponent_div_0_ng_template_2_Template, 1, 1, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r2 = ɵngcc0.ɵɵreference(3);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.svgIconName)("ngIfElse", _r2);
} }
const _c0 = ["*"];
export class ThyBreadcrumbComponent {
    constructor() {
        this._isBreadcrumb = true;
        this.isSlash = false;
        this.isBackslash = false;
    }
    set thyIcon(icon) {
        this.setIcon(icon);
    }
    set thySeparator(type) {
        if (type === 'slash') {
            this.isSlash = true;
        }
        if (type === 'backslash') {
            this.isBackslash = true;
        }
    }
    setIcon(icon) {
        if (icon) {
            if (icon.includes('wtf')) {
                const classes = icon.split(' ');
                if (classes.length === 1) {
                    classes.unshift('wtf');
                }
                this.iconClasses = classes;
            }
            else {
                this.svgIconName = icon;
            }
        }
        else {
            this.iconClasses = null;
            this.svgIconName = null;
        }
    }
}
ThyBreadcrumbComponent.ɵfac = function ThyBreadcrumbComponent_Factory(t) { return new (t || ThyBreadcrumbComponent)(); };
ThyBreadcrumbComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyBreadcrumbComponent, selectors: [["thy-breadcrumb"]], hostVars: 6, hostBindings: function ThyBreadcrumbComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-breadcrumb", ctx._isBreadcrumb)("separator-slash", ctx.isSlash)("separator-backslash", ctx.isBackslash);
    } }, inputs: { thyIcon: "thyIcon", thySeparator: "thySeparator" }, exportAs: ["ThyBreadcrumb"], ngContentSelectors: _c0, decls: 2, vars: 1, consts: [["class", "thy-breadcrumb-icon", 4, "ngIf"], [1, "thy-breadcrumb-icon"], [3, "thyIconName", 4, "ngIf", "ngIfElse"], ["iconFont", ""], [3, "thyIconName"], [3, "ngClass"]], template: function ThyBreadcrumbComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, ThyBreadcrumbComponent_div_0_Template, 4, 2, "div", 0);
        ɵngcc0.ɵɵprojection(1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.svgIconName || ctx.iconClasses);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.ThyIconComponent, ɵngcc1.NgClass], encapsulation: 2, changeDetection: 0 });
ThyBreadcrumbComponent.propDecorators = {
    _isBreadcrumb: [{ type: HostBinding, args: [`class.thy-breadcrumb`,] }],
    isSlash: [{ type: HostBinding, args: [`class.separator-slash`,] }],
    isBackslash: [{ type: HostBinding, args: [`class.separator-backslash`,] }],
    thyIcon: [{ type: Input }],
    thySeparator: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyBreadcrumbComponent, [{
        type: Component,
        args: [{
                selector: 'thy-breadcrumb',
                template: `
        <div class="thy-breadcrumb-icon" *ngIf="svgIconName || iconClasses">
            <thy-icon *ngIf="svgIconName; else iconFont" [thyIconName]="svgIconName"></thy-icon>
            <ng-template #iconFont>
                <i [ngClass]="iconClasses"></i>
            </ng-template>
        </div>
        <ng-content></ng-content>
    `,
                exportAs: 'ThyBreadcrumb',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { _isBreadcrumb: [{
            type: HostBinding,
            args: [`class.thy-breadcrumb`]
        }], isSlash: [{
            type: HostBinding,
            args: [`class.separator-slash`]
        }], isBackslash: [{
            type: HostBinding,
            args: [`class.separator-backslash`]
        }], thyIcon: [{
            type: Input
        }], thySeparator: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9icmVhZGNydW1iL2JyZWFkY3J1bWIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQnZGLE1BQU0sT0FBTyxzQkFBc0I7QUFDbkMsSUFmQTtBQUNHLFFBY3NDLGtCQUFhLEdBQUcsSUFBSSxDQUFDO0FBQzlELFFBQTBDLFlBQU8sR0FBRyxLQUFLLENBQUM7QUFDMUQsUUFBOEMsZ0JBQVcsR0FBRyxLQUFLLENBQUM7QUFDbEUsSUFtQ0EsQ0FBQztBQUNELElBaENJLElBQ0ksT0FBTyxDQUFDLElBQVk7QUFDNUIsUUFBUSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzNCLElBQUksQ0FBQztBQUNMLElBQ0ksSUFDSSxZQUFZLENBQUMsSUFBWTtBQUNqQyxRQUFRLElBQUksSUFBSSxLQUFLLE9BQU8sRUFBRTtBQUM5QixZQUFZLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0FBQ2hDLFNBQVM7QUFDVCxRQUFRLElBQUksSUFBSSxLQUFLLFdBQVcsRUFBRTtBQUNsQyxZQUFZLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO0FBQ3BDLFNBQVM7QUFDVCxJQUFJLENBQUM7QUFDTCxJQUNZLE9BQU8sQ0FBQyxJQUFZO0FBQ2hDLFFBQVEsSUFBSSxJQUFJLEVBQUU7QUFDbEIsWUFBWSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDdEMsZ0JBQWdCLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDaEQsZ0JBQWdCLElBQUksT0FBTyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7QUFDMUMsb0JBQW9CLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDM0MsaUJBQWlCO0FBQ2pCLGdCQUFnQixJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQztBQUMzQyxhQUFhO0FBQUMsaUJBQUs7QUFDbkIsZ0JBQWdCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO0FBQ3hDLGFBQWE7QUFDYixTQUFTO0FBQUMsYUFBSztBQUNmLFlBQVksSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7QUFDcEMsWUFBWSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztBQUNwQyxTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0w7a0RBckRDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUUsZ0JBQWdCO1FBQzFCLFFBQVEsRUFBRTs7S0FRVCxrQkFDRCxRQUFRLEVBQUUsZUFBZSxrQkFDekIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sY0FDbEQ7Ozs7OztxSEFDSTtBQUFDO0FBQ0ksNEJBQUwsV0FBVyxTQUFDLHNCQUFzQjtBQUFPLHNCQUN6QyxXQUFXLFNBQUMsdUJBQXVCO0FBQU8sMEJBQzFDLFdBQVcsU0FBQywyQkFBMkI7QUFBTyxzQkFLOUMsS0FBSztBQUNSLDJCQUlHLEtBQUs7QUFDVDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0aHktYnJlYWRjcnVtYicsXG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGRpdiBjbGFzcz1cInRoeS1icmVhZGNydW1iLWljb25cIiAqbmdJZj1cInN2Z0ljb25OYW1lIHx8IGljb25DbGFzc2VzXCI+XG4gICAgICAgICAgICA8dGh5LWljb24gKm5nSWY9XCJzdmdJY29uTmFtZTsgZWxzZSBpY29uRm9udFwiIFt0aHlJY29uTmFtZV09XCJzdmdJY29uTmFtZVwiPjwvdGh5LWljb24+XG4gICAgICAgICAgICA8bmctdGVtcGxhdGUgI2ljb25Gb250PlxuICAgICAgICAgICAgICAgIDxpIFtuZ0NsYXNzXT1cImljb25DbGFzc2VzXCI+PC9pPlxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICBgLFxuICAgIGV4cG9ydEFzOiAnVGh5QnJlYWRjcnVtYicsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgVGh5QnJlYWRjcnVtYkNvbXBvbmVudCB7XG4gICAgQEhvc3RCaW5kaW5nKGBjbGFzcy50aHktYnJlYWRjcnVtYmApIF9pc0JyZWFkY3J1bWIgPSB0cnVlO1xuICAgIEBIb3N0QmluZGluZyhgY2xhc3Muc2VwYXJhdG9yLXNsYXNoYCkgaXNTbGFzaCA9IGZhbHNlO1xuICAgIEBIb3N0QmluZGluZyhgY2xhc3Muc2VwYXJhdG9yLWJhY2tzbGFzaGApIGlzQmFja3NsYXNoID0gZmFsc2U7XG5cbiAgICBpY29uQ2xhc3Nlczogc3RyaW5nW107XG4gICAgc3ZnSWNvbk5hbWU6IHN0cmluZztcblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeUljb24oaWNvbjogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuc2V0SWNvbihpY29uKTtcbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlTZXBhcmF0b3IodHlwZTogc3RyaW5nKSB7XG4gICAgICAgIGlmICh0eXBlID09PSAnc2xhc2gnKSB7XG4gICAgICAgICAgICB0aGlzLmlzU2xhc2ggPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAnYmFja3NsYXNoJykge1xuICAgICAgICAgICAgdGhpcy5pc0JhY2tzbGFzaCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIHNldEljb24oaWNvbjogc3RyaW5nKSB7XG4gICAgICAgIGlmIChpY29uKSB7XG4gICAgICAgICAgICBpZiAoaWNvbi5pbmNsdWRlcygnd3RmJykpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjbGFzc2VzID0gaWNvbi5zcGxpdCgnICcpO1xuICAgICAgICAgICAgICAgIGlmIChjbGFzc2VzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBjbGFzc2VzLnVuc2hpZnQoJ3d0ZicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmljb25DbGFzc2VzID0gY2xhc3NlcztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zdmdJY29uTmFtZSA9IGljb247XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmljb25DbGFzc2VzID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuc3ZnSWNvbk5hbWUgPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19