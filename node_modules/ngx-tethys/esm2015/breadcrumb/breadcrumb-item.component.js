import { Component, ChangeDetectionStrategy, HostBinding } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/icon';

const _c0 = ["*"];
export class ThyBreadcrumbItemComponent {
    constructor() {
        this._isBreadcrumbItem = true;
    }
}
ThyBreadcrumbItemComponent.ɵfac = function ThyBreadcrumbItemComponent_Factory(t) { return new (t || ThyBreadcrumbItemComponent)(); };
ThyBreadcrumbItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyBreadcrumbItemComponent, selectors: [["thy-breadcrumb-item"], ["", "thyBreadcrumbItem", ""]], hostVars: 2, hostBindings: function ThyBreadcrumbItemComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-breadcrumb-item", ctx._isBreadcrumbItem);
    } }, exportAs: ["ThyBreadcrumbItem"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [["thyIconName", "angle-right", 1, "default-icon"]], template: function ThyBreadcrumbItemComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵelement(1, "thy-icon", 0);
    } }, directives: [ɵngcc1.ThyIconComponent], encapsulation: 2, changeDetection: 0 });
ThyBreadcrumbItemComponent.propDecorators = {
    _isBreadcrumbItem: [{ type: HostBinding, args: [`class.thy-breadcrumb-item`,] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyBreadcrumbItemComponent, [{
        type: Component,
        args: [{
                selector: 'thy-breadcrumb-item,[thyBreadcrumbItem]',
                template: '<ng-content></ng-content><thy-icon class="default-icon" thyIconName="angle-right"></thy-icon>',
                exportAs: 'ThyBreadcrumbItem',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return []; }, { _isBreadcrumbItem: [{
            type: HostBinding,
            args: [`class.thy-breadcrumb-item`]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFRaEYsTUFBTSxPQUFPLDBCQUEwQjtBQUN2QyxJQVBBO0FBQ0csUUFNMkMsc0JBQWlCLEdBQUcsSUFBSSxDQUFDO0FBQ3ZFLElBQUEsQ0FBQztBQUNEO3NEQVRDLFNBQVMsU0FBQyxrQkFDUCxRQUFRLEVBQUU7T0FBeUMsa0JBQ25ELFFBQVEsRUFBRSwrRkFBK0Ysa0JBQ3pHLFFBQVEsRUFBRSxtQkFBbUIsa0JBQzdCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNLGNBQ2xEOzs7Ozs7d0ZBQ0k7QUFBQztBQUNJLGdDQUFMLFdBQVcsU0FBQywyQkFBMkI7QUFBTTs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RoeS1icmVhZGNydW1iLWl0ZW0sW3RoeUJyZWFkY3J1bWJJdGVtXScsXG4gICAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+PHRoeS1pY29uIGNsYXNzPVwiZGVmYXVsdC1pY29uXCIgdGh5SWNvbk5hbWU9XCJhbmdsZS1yaWdodFwiPjwvdGh5LWljb24+JyxcbiAgICBleHBvcnRBczogJ1RoeUJyZWFkY3J1bWJJdGVtJyxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBUaHlCcmVhZGNydW1iSXRlbUNvbXBvbmVudCB7XG4gICAgQEhvc3RCaW5kaW5nKGBjbGFzcy50aHktYnJlYWRjcnVtYi1pdGVtYCkgX2lzQnJlYWRjcnVtYkl0ZW0gPSB0cnVlO1xufVxuIl19