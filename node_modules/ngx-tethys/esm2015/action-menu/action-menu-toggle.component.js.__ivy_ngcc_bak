import { Directive, Input, HostListener, TemplateRef } from '@angular/core';
import { ThyPopover } from 'ngx-tethys/popover';
import { camelCase } from 'ngx-tethys/util';
import { coerceBooleanProperty } from 'ngx-tethys/util';
export var ActionEnum;
(function (ActionEnum) {
    ActionEnum["click"] = "click";
    ActionEnum["contextmenu"] = "contextmenu";
})(ActionEnum || (ActionEnum = {}));
export class ThyActionMenuToggleDirective {
    constructor(thyPopover) {
        this.thyPopover = thyPopover;
        this._action = ActionEnum.click;
        this._stopPropagation = false;
        this._thyContainerClass = '';
    }
    set thyActionMenuToggle(value) {
        this._templateRef = value;
    }
    set thyPlacement(value) {
        this._placement = value;
    }
    set thyAction(value) {
        this._action = value;
    }
    set thyStopPropagation(value) {
        this._stopPropagation = coerceBooleanProperty(value);
    }
    set thyContainerClass(value) {
        this._thyContainerClass = value;
    }
    onClick(event) {
        if (this._action === ActionEnum.click) {
            this._show.bind(this)(event);
        }
    }
    onRightClick(event) {
        if (this._action === ActionEnum.contextmenu) {
            this._show.bind(this)(event);
            return false;
        }
        return true;
    }
    _show(event) {
        if (this._stopPropagation) {
            event.stopPropagation();
        }
        this.thyPopover.open(this._templateRef, {
            origin: event.currentTarget,
            insideClosable: true,
            placement: this._placement ? camelCase(this._placement.split(' ')) : 'bottomLeft',
            panelClass: this._thyContainerClass,
            originActiveClass: this.thyOriginActiveClass
        });
    }
}
ThyActionMenuToggleDirective.decorators = [
    { type: Directive, args: [{
                selector: '[thyActionMenuToggle]'
            },] }
];
ThyActionMenuToggleDirective.ctorParameters = () => [
    { type: ThyPopover }
];
ThyActionMenuToggleDirective.propDecorators = {
    thyActionMenuToggle: [{ type: Input }],
    thyPlacement: [{ type: Input }],
    thyAction: [{ type: Input }],
    thyStopPropagation: [{ type: Input }],
    thyContainerClass: [{ type: Input }],
    thyOriginActiveClass: [{ type: Input }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],
    onRightClick: [{ type: HostListener, args: ['contextmenu', ['$event'],] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLW1lbnUtdG9nZ2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hY3Rpb24tbWVudS9hY3Rpb24tbWVudS10b2dnbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRWhELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM1QyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV4RCxNQUFNLENBQU4sSUFBWSxVQUdYO0FBSEQsV0FBWSxVQUFVO0lBQ2xCLDZCQUFlLENBQUE7SUFDZix5Q0FBMkIsQ0FBQTtBQUMvQixDQUFDLEVBSFcsVUFBVSxLQUFWLFVBQVUsUUFHckI7QUFLRCxNQUFNLE9BQU8sNEJBQTRCO0lBc0NyQyxZQUFvQixVQUFzQjtRQUF0QixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBakNsQyxZQUFPLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQztRQUUzQixxQkFBZ0IsR0FBRyxLQUFLLENBQUM7UUFFekIsdUJBQWtCLEdBQUcsRUFBRSxDQUFDO0lBNkJhLENBQUM7SUEzQjlDLElBQ0ksbUJBQW1CLENBQUMsS0FBdUI7UUFDM0MsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7SUFDOUIsQ0FBQztJQUVELElBQ0ksWUFBWSxDQUFDLEtBQWE7UUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDNUIsQ0FBQztJQUVELElBQ0ksU0FBUyxDQUFDLEtBQWlCO1FBQzNCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxJQUNJLGtCQUFrQixDQUFDLEtBQWM7UUFDakMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFRCxJQUNJLGlCQUFpQixDQUFDLEtBQWE7UUFDL0IsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQztJQUNwQyxDQUFDO0lBT0QsT0FBTyxDQUFDLEtBQVU7UUFDZCxJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssVUFBVSxDQUFDLEtBQUssRUFBRTtZQUNuQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNoQztJQUNMLENBQUM7SUFHRCxZQUFZLENBQUMsS0FBVTtRQUNuQixJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssVUFBVSxDQUFDLFdBQVcsRUFBRTtZQUN6QyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM3QixPQUFPLEtBQUssQ0FBQztTQUNoQjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFTyxLQUFLLENBQUMsS0FBVTtRQUNwQixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtZQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7U0FDM0I7UUFDRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3BDLE1BQU0sRUFBRSxLQUFLLENBQUMsYUFBYTtZQUMzQixjQUFjLEVBQUUsSUFBSTtZQUNwQixTQUFTLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUUsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFrQixDQUFDLENBQUMsQ0FBQyxZQUFZO1lBQ25HLFVBQVUsRUFBRSxJQUFJLENBQUMsa0JBQWtCO1lBQ25DLGlCQUFpQixFQUFFLElBQUksQ0FBQyxvQkFBb0I7U0FDL0MsQ0FBQyxDQUFDO0lBQ1AsQ0FBQzs7O1lBdEVKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsdUJBQXVCO2FBQ3BDOzs7WUFaUSxVQUFVOzs7a0NBd0JkLEtBQUs7MkJBS0wsS0FBSzt3QkFLTCxLQUFLO2lDQUtMLEtBQUs7Z0NBS0wsS0FBSzttQ0FLTCxLQUFLO3NCQUlMLFlBQVksU0FBQyxPQUFPLEVBQUUsQ0FBQyxRQUFRLENBQUM7MkJBT2hDLFlBQVksU0FBQyxhQUFhLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBIb3N0TGlzdGVuZXIsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUaHlQb3BvdmVyIH0gZnJvbSAnbmd4LXRldGh5cy9wb3BvdmVyJztcbmltcG9ydCB7IFRoeVBsYWNlbWVudCB9IGZyb20gJ25neC10ZXRoeXMvY29yZSc7XG5pbXBvcnQgeyBjYW1lbENhc2UgfSBmcm9tICduZ3gtdGV0aHlzL3V0aWwnO1xuaW1wb3J0IHsgY29lcmNlQm9vbGVhblByb3BlcnR5IH0gZnJvbSAnbmd4LXRldGh5cy91dGlsJztcblxuZXhwb3J0IGVudW0gQWN0aW9uRW51bSB7XG4gICAgY2xpY2sgPSAnY2xpY2snLFxuICAgIGNvbnRleHRtZW51ID0gJ2NvbnRleHRtZW51J1xufVxuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0aHlBY3Rpb25NZW51VG9nZ2xlXSdcbn0pXG5leHBvcnQgY2xhc3MgVGh5QWN0aW9uTWVudVRvZ2dsZURpcmVjdGl2ZSB7XG4gICAgcHJpdmF0ZSBfdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICBwcml2YXRlIF9wbGFjZW1lbnQ6IHN0cmluZztcblxuICAgIHByaXZhdGUgX2FjdGlvbiA9IEFjdGlvbkVudW0uY2xpY2s7XG5cbiAgICBwcml2YXRlIF9zdG9wUHJvcGFnYXRpb24gPSBmYWxzZTtcblxuICAgIHByaXZhdGUgX3RoeUNvbnRhaW5lckNsYXNzID0gJyc7XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlBY3Rpb25NZW51VG9nZ2xlKHZhbHVlOiBUZW1wbGF0ZVJlZjxhbnk+KSB7XG4gICAgICAgIHRoaXMuX3RlbXBsYXRlUmVmID0gdmFsdWU7XG4gICAgfVxuXG4gICAgQElucHV0KClcbiAgICBzZXQgdGh5UGxhY2VtZW50KHZhbHVlOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5fcGxhY2VtZW50ID0gdmFsdWU7XG4gICAgfVxuXG4gICAgQElucHV0KClcbiAgICBzZXQgdGh5QWN0aW9uKHZhbHVlOiBBY3Rpb25FbnVtKSB7XG4gICAgICAgIHRoaXMuX2FjdGlvbiA9IHZhbHVlO1xuICAgIH1cblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeVN0b3BQcm9wYWdhdGlvbih2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLl9zdG9wUHJvcGFnYXRpb24gPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuICAgIH1cblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeUNvbnRhaW5lckNsYXNzKHZhbHVlOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5fdGh5Q29udGFpbmVyQ2xhc3MgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBASW5wdXQoKSB0aHlPcmlnaW5BY3RpdmVDbGFzczogc3RyaW5nIHwgc3RyaW5nW107XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRoeVBvcG92ZXI6IFRoeVBvcG92ZXIpIHt9XG5cbiAgICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXG4gICAgb25DbGljayhldmVudDogYW55KTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9hY3Rpb24gPT09IEFjdGlvbkVudW0uY2xpY2spIHtcbiAgICAgICAgICAgIHRoaXMuX3Nob3cuYmluZCh0aGlzKShldmVudCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBASG9zdExpc3RlbmVyKCdjb250ZXh0bWVudScsIFsnJGV2ZW50J10pXG4gICAgb25SaWdodENsaWNrKGV2ZW50OiBhbnkpOiBib29sZWFuIHtcbiAgICAgICAgaWYgKHRoaXMuX2FjdGlvbiA9PT0gQWN0aW9uRW51bS5jb250ZXh0bWVudSkge1xuICAgICAgICAgICAgdGhpcy5fc2hvdy5iaW5kKHRoaXMpKGV2ZW50KTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBwcml2YXRlIF9zaG93KGV2ZW50OiBhbnkpIHtcbiAgICAgICAgaWYgKHRoaXMuX3N0b3BQcm9wYWdhdGlvbikge1xuICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50aHlQb3BvdmVyLm9wZW4odGhpcy5fdGVtcGxhdGVSZWYsIHtcbiAgICAgICAgICAgIG9yaWdpbjogZXZlbnQuY3VycmVudFRhcmdldCxcbiAgICAgICAgICAgIGluc2lkZUNsb3NhYmxlOiB0cnVlLFxuICAgICAgICAgICAgcGxhY2VtZW50OiB0aGlzLl9wbGFjZW1lbnQgPyAoY2FtZWxDYXNlKHRoaXMuX3BsYWNlbWVudC5zcGxpdCgnICcpKSBhcyBUaHlQbGFjZW1lbnQpIDogJ2JvdHRvbUxlZnQnLFxuICAgICAgICAgICAgcGFuZWxDbGFzczogdGhpcy5fdGh5Q29udGFpbmVyQ2xhc3MsXG4gICAgICAgICAgICBvcmlnaW5BY3RpdmVDbGFzczogdGhpcy50aHlPcmlnaW5BY3RpdmVDbGFzc1xuICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=