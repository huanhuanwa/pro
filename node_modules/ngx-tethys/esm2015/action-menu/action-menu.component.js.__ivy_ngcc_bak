import { Directive, HostBinding, Input, Component, ViewEncapsulation } from '@angular/core';
export class ThyActionMenuComponent {
    constructor() {
        this.className = true;
        this.themeClassName = false;
        this.styleWidth = '';
    }
    set thyTheme(value) {
        this.themeClassName = value === 'group';
    }
    set thyWidth(value) {
        this.styleWidth = value;
    }
}
ThyActionMenuComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-action-menu',
                template: `
        <ng-content></ng-content>
    `,
                encapsulation: ViewEncapsulation.None
            },] }
];
ThyActionMenuComponent.ctorParameters = () => [];
ThyActionMenuComponent.propDecorators = {
    className: [{ type: HostBinding, args: ['class.action-menu',] }],
    themeClassName: [{ type: HostBinding, args: ['class.action-menu--group',] }],
    styleWidth: [{ type: HostBinding, args: ['style.width',] }],
    thyTheme: [{ type: Input }],
    thyWidth: [{ type: Input }]
};
export class ThyActionMenuGroupComponent {
    constructor() {
        this.isGroup = true;
    }
    set thyTitle(value) {
        this.groupTitle = value;
    }
}
ThyActionMenuGroupComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-action-menu-group',
                template: `
        <div class="action-menu-group-title">{{ groupTitle }}</div>
        <ng-content></ng-content>
    `
            },] }
];
ThyActionMenuGroupComponent.ctorParameters = () => [];
ThyActionMenuGroupComponent.propDecorators = {
    isGroup: [{ type: HostBinding, args: ['class.action-menu-group',] }],
    thyTitle: [{ type: Input }]
};
export class ThyActionMenuDividerComponent {
    constructor() {
        this.className = true;
        this.isCrossing = false;
    }
    set thyTitle(value) {
        this.title = value;
    }
    set thyType(value) {
        this.isCrossing = value === 'crossing';
    }
}
ThyActionMenuDividerComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-action-menu-divider',
                template: `
        <div class="action-menu-divider-title">{{ title }}</div>
    `
            },] }
];
ThyActionMenuDividerComponent.ctorParameters = () => [];
ThyActionMenuDividerComponent.propDecorators = {
    className: [{ type: HostBinding, args: ['class.action-menu-divider',] }],
    isCrossing: [{ type: HostBinding, args: ['class.action-menu-divider-crossing',] }],
    thyTitle: [{ type: Input }],
    thyType: [{ type: Input }]
};
export class ThyActionMenuDividerTitleDirective {
    constructor() {
        this.className = true;
    }
}
ThyActionMenuDividerTitleDirective.decorators = [
    { type: Directive, args: [{
                selector: '[thyActionMenuDividerTitle]'
            },] }
];
ThyActionMenuDividerTitleDirective.ctorParameters = () => [];
ThyActionMenuDividerTitleDirective.propDecorators = {
    className: [{ type: HostBinding, args: ['class.action-menu-divider-title',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLW1lbnUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FjdGlvbi1tZW51L2FjdGlvbi1tZW51LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFnQixpQkFBaUIsRUFBYyxNQUFNLGVBQWUsQ0FBQztBQWV0SCxNQUFNLE9BQU8sc0JBQXNCO0lBZ0IvQjtRQWZrQyxjQUFTLEdBQUcsSUFBSSxDQUFDO1FBRVYsbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFFcEMsZUFBVSxHQUFHLEVBQUUsQ0FBQztJQVc3QixDQUFDO0lBVGhCLElBQ0ksUUFBUSxDQUFDLEtBQXlCO1FBQ2xDLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxLQUFLLE9BQU8sQ0FBQztJQUM1QyxDQUFDO0lBRUQsSUFBYSxRQUFRLENBQUMsS0FBYTtRQUMvQixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztJQUM1QixDQUFDOzs7WUFyQkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxpQkFBaUI7Z0JBQzNCLFFBQVEsRUFBRTs7S0FFVDtnQkFDRCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTthQUN4Qzs7Ozt3QkFFSSxXQUFXLFNBQUMsbUJBQW1COzZCQUUvQixXQUFXLFNBQUMsMEJBQTBCO3lCQUV0QyxXQUFXLFNBQUMsYUFBYTt1QkFFekIsS0FBSzt1QkFLTCxLQUFLOztBQWNWLE1BQU0sT0FBTywyQkFBMkI7SUFVcEM7UUFQd0MsWUFBTyxHQUFHLElBQUksQ0FBQztJQU94QyxDQUFDO0lBTGhCLElBQ0ksUUFBUSxDQUFDLEtBQWE7UUFDdEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDNUIsQ0FBQzs7O1lBZkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSx1QkFBdUI7Z0JBQ2pDLFFBQVEsRUFBRTs7O0tBR1Q7YUFDSjs7OztzQkFJSSxXQUFXLFNBQUMseUJBQXlCO3VCQUVyQyxLQUFLOztBQWNWLE1BQU0sT0FBTyw2QkFBNkI7SUFtQnRDO1FBZDBDLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFFUixlQUFVLEdBQUcsS0FBSyxDQUFDO0lBWXZELENBQUM7SUFWaEIsSUFDSSxRQUFRLENBQUMsS0FBYTtRQUN0QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFDSSxPQUFPLENBQUMsS0FBK0I7UUFDdkMsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLEtBQUssVUFBVSxDQUFDO0lBQzNDLENBQUM7OztZQXZCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsUUFBUSxFQUFFOztLQUVUO2FBQ0o7Ozs7d0JBTUksV0FBVyxTQUFDLDJCQUEyQjt5QkFFdkMsV0FBVyxTQUFDLG9DQUFvQzt1QkFFaEQsS0FBSztzQkFLTCxLQUFLOztBQVdWLE1BQU0sT0FBTyxrQ0FBa0M7SUFHM0M7UUFGZ0QsY0FBUyxHQUFHLElBQUksQ0FBQztJQUVsRCxDQUFDOzs7WUFObkIsU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSw2QkFBNkI7YUFDMUM7Ozs7d0JBRUksV0FBVyxTQUFDLGlDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSG9zdEJpbmRpbmcsIElucHV0LCBDb21wb25lbnQsIEhvc3RMaXN0ZW5lciwgVmlld0VuY2Fwc3VsYXRpb24sIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGZyb21FdmVudCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZGVib3VuY2VUaW1lLCBzaGFyZVJlcGxheSB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuZXhwb3J0IHR5cGUgVGh5QWN0aW9uTWVudVRoZW1lID0gJ2RlZmF1bHQnIHwgJ2dyb3VwJztcblxuZXhwb3J0IHR5cGUgVGh5QWN0aW9uTWVudURpdmlkZXJUeXBlID0gJ2RlZmF1bHQnIHwgJ2Nyb3NzaW5nJztcblxuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICd0aHktYWN0aW9uLW1lbnUnLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICBgLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgVGh5QWN0aW9uTWVudUNvbXBvbmVudCB7XG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hY3Rpb24tbWVudScpIGNsYXNzTmFtZSA9IHRydWU7XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFjdGlvbi1tZW51LS1ncm91cCcpIHRoZW1lQ2xhc3NOYW1lID0gZmFsc2U7XG5cbiAgICBASG9zdEJpbmRpbmcoJ3N0eWxlLndpZHRoJykgc3R5bGVXaWR0aCA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBzZXQgdGh5VGhlbWUodmFsdWU6IFRoeUFjdGlvbk1lbnVUaGVtZSkge1xuICAgICAgICB0aGlzLnRoZW1lQ2xhc3NOYW1lID0gdmFsdWUgPT09ICdncm91cCc7XG4gICAgfVxuXG4gICAgQElucHV0KCkgc2V0IHRoeVdpZHRoKHZhbHVlOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5zdHlsZVdpZHRoID0gdmFsdWU7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoKSB7fVxufVxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RoeS1hY3Rpb24tbWVudS1ncm91cCcsXG4gICAgdGVtcGxhdGU6IGBcbiAgICAgICAgPGRpdiBjbGFzcz1cImFjdGlvbi1tZW51LWdyb3VwLXRpdGxlXCI+e3sgZ3JvdXBUaXRsZSB9fTwvZGl2PlxuICAgICAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4gICAgYFxufSlcbmV4cG9ydCBjbGFzcyBUaHlBY3Rpb25NZW51R3JvdXBDb21wb25lbnQge1xuICAgIGdyb3VwVGl0bGU6IHN0cmluZztcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuYWN0aW9uLW1lbnUtZ3JvdXAnKSBpc0dyb3VwID0gdHJ1ZTtcblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeVRpdGxlKHZhbHVlOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5ncm91cFRpdGxlID0gdmFsdWU7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoKSB7fVxufVxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RoeS1hY3Rpb24tbWVudS1kaXZpZGVyJyxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8ZGl2IGNsYXNzPVwiYWN0aW9uLW1lbnUtZGl2aWRlci10aXRsZVwiPnt7IHRpdGxlIH19PC9kaXY+XG4gICAgYFxufSlcbmV4cG9ydCBjbGFzcyBUaHlBY3Rpb25NZW51RGl2aWRlckNvbXBvbmVudCB7XG4gICAgdGl0bGU6IHN0cmluZztcblxuICAgIHR5cGU6IFRoeUFjdGlvbk1lbnVEaXZpZGVyVHlwZTtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuYWN0aW9uLW1lbnUtZGl2aWRlcicpIGNsYXNzTmFtZSA9IHRydWU7XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFjdGlvbi1tZW51LWRpdmlkZXItY3Jvc3NpbmcnKSBpc0Nyb3NzaW5nID0gZmFsc2U7XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlUaXRsZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMudGl0bGUgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlUeXBlKHZhbHVlOiBUaHlBY3Rpb25NZW51RGl2aWRlclR5cGUpIHtcbiAgICAgICAgdGhpcy5pc0Nyb3NzaW5nID0gdmFsdWUgPT09ICdjcm9zc2luZyc7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoKSB7fVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgICBzZWxlY3RvcjogJ1t0aHlBY3Rpb25NZW51RGl2aWRlclRpdGxlXSdcbn0pXG5leHBvcnQgY2xhc3MgVGh5QWN0aW9uTWVudURpdmlkZXJUaXRsZURpcmVjdGl2ZSB7XG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hY3Rpb24tbWVudS1kaXZpZGVyLXRpdGxlJykgY2xhc3NOYW1lID0gdHJ1ZTtcblxuICAgIGNvbnN0cnVjdG9yKCkge31cbn1cbiJdfQ==