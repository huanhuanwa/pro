import { Directive, Input, HostListener, TemplateRef } from '@angular/core';
import { ThyPopover } from 'ngx-tethys/popover';
import { camelCase } from 'ngx-tethys/util';
import { coerceBooleanProperty } from 'ngx-tethys/util';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/popover';
export var ActionEnum;
(function (ActionEnum) {
    ActionEnum["click"] = "click";
    ActionEnum["contextmenu"] = "contextmenu";
})(ActionEnum || (ActionEnum = {}));
export class ThyActionMenuToggleDirective {
    constructor(thyPopover) {
        this.thyPopover = thyPopover;
        this._action = ActionEnum.click;
        this._stopPropagation = false;
        this._thyContainerClass = '';
    }
    set thyActionMenuToggle(value) {
        this._templateRef = value;
    }
    set thyPlacement(value) {
        this._placement = value;
    }
    set thyAction(value) {
        this._action = value;
    }
    set thyStopPropagation(value) {
        this._stopPropagation = coerceBooleanProperty(value);
    }
    set thyContainerClass(value) {
        this._thyContainerClass = value;
    }
    onClick(event) {
        if (this._action === ActionEnum.click) {
            this._show.bind(this)(event);
        }
    }
    onRightClick(event) {
        if (this._action === ActionEnum.contextmenu) {
            this._show.bind(this)(event);
            return false;
        }
        return true;
    }
    _show(event) {
        if (this._stopPropagation) {
            event.stopPropagation();
        }
        this.thyPopover.open(this._templateRef, {
            origin: event.currentTarget,
            insideClosable: true,
            placement: this._placement ? camelCase(this._placement.split(' ')) : 'bottomLeft',
            panelClass: this._thyContainerClass,
            originActiveClass: this.thyOriginActiveClass
        });
    }
}
ThyActionMenuToggleDirective.ɵfac = function ThyActionMenuToggleDirective_Factory(t) { return new (t || ThyActionMenuToggleDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyPopover)); };
ThyActionMenuToggleDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: ThyActionMenuToggleDirective, selectors: [["", "thyActionMenuToggle", ""]], hostBindings: function ThyActionMenuToggleDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ThyActionMenuToggleDirective_click_HostBindingHandler($event) { return ctx.onClick($event); })("contextmenu", function ThyActionMenuToggleDirective_contextmenu_HostBindingHandler($event) { return ctx.onRightClick($event); });
    } }, inputs: { thyActionMenuToggle: "thyActionMenuToggle", thyPlacement: "thyPlacement", thyAction: "thyAction", thyStopPropagation: "thyStopPropagation", thyContainerClass: "thyContainerClass", thyOriginActiveClass: "thyOriginActiveClass" } });
ThyActionMenuToggleDirective.ctorParameters = () => [
    { type: ThyPopover }
];
ThyActionMenuToggleDirective.propDecorators = {
    thyActionMenuToggle: [{ type: Input }],
    thyPlacement: [{ type: Input }],
    thyAction: [{ type: Input }],
    thyStopPropagation: [{ type: Input }],
    thyContainerClass: [{ type: Input }],
    thyOriginActiveClass: [{ type: Input }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],
    onRightClick: [{ type: HostListener, args: ['contextmenu', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyActionMenuToggleDirective, [{
        type: Directive,
        args: [{
                selector: '[thyActionMenuToggle]'
            }]
    }], function () { return [{ type: ɵngcc1.ThyPopover }]; }, { thyActionMenuToggle: [{
            type: Input
        }], thyPlacement: [{
            type: Input
        }], thyAction: [{
            type: Input
        }], thyStopPropagation: [{
            type: Input
        }], thyContainerClass: [{
            type: Input
        }], onClick: [{
            type: HostListener,
            args: ['click', ['$event']]
        }], onRightClick: [{
            type: HostListener,
            args: ['contextmenu', ['$event']]
        }], thyOriginActiveClass: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLW1lbnUtdG9nZ2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FjdGlvbi1tZW51L2FjdGlvbi1tZW51LXRvZ2dsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM1RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFaEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGlCQUFpQixDQUFDOzs7QUFFeEQsTUFBTSxDQUFOLElBQVksVUFHWDtBQUhELFdBQVksVUFBVTtBQUNyQixJQUFHLDZCQUFlLENBQUE7QUFBQyxJQUNoQix5Q0FBMkIsQ0FBQTtBQUMvQixDQUFDLEVBSFcsVUFBVSxLQUFWLFVBQVUsUUFHckI7QUFLRCxNQUFNLE9BQU8sNEJBQTRCO0FBQ3pDLElBcUNJLFlBQW9CLFVBQXNCO0FBQUksUUFBMUIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtBQUFDLFFBakNuQyxZQUFPLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQztBQUN2QyxRQUNZLHFCQUFnQixHQUFHLEtBQUssQ0FBQztBQUNyQyxRQUNZLHVCQUFrQixHQUFHLEVBQUUsQ0FBQztBQUNwQyxJQTRCaUQsQ0FBQztBQUNsRCxJQTVCSSxJQUNJLG1CQUFtQixDQUFDLEtBQXVCO0FBQ25ELFFBQVEsSUFBSSxDQUFDLFlBQVksR0FBRyxLQUFLLENBQUM7QUFDbEMsSUFBSSxDQUFDO0FBQ0wsSUFDSSxJQUNJLFlBQVksQ0FBQyxLQUFhO0FBQ2xDLFFBQVEsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7QUFDaEMsSUFBSSxDQUFDO0FBQ0wsSUFDSSxJQUNJLFNBQVMsQ0FBQyxLQUFpQjtBQUNuQyxRQUFRLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0FBQzdCLElBQUksQ0FBQztBQUNMLElBQ0ksSUFDSSxrQkFBa0IsQ0FBQyxLQUFjO0FBQ3pDLFFBQVEsSUFBSSxDQUFDLGdCQUFnQixHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzdELElBQUksQ0FBQztBQUNMLElBQ0ksSUFDSSxpQkFBaUIsQ0FBQyxLQUFhO0FBQ3ZDLFFBQVEsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQztBQUN4QyxJQUFJLENBQUM7QUFDTCxJQU1JLE9BQU8sQ0FBQyxLQUFVO0FBQUksUUFDbEIsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLFVBQVUsQ0FBQyxLQUFLLEVBQUU7QUFDL0MsWUFBWSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN6QyxTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0wsSUFFSSxZQUFZLENBQUMsS0FBVTtBQUFJLFFBQ3ZCLElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxVQUFVLENBQUMsV0FBVyxFQUFFO0FBQ3JELFlBQVksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDekMsWUFBWSxPQUFPLEtBQUssQ0FBQztBQUN6QixTQUFTO0FBQ1QsUUFBUSxPQUFPLElBQUksQ0FBQztBQUNwQixJQUFJLENBQUM7QUFDTCxJQUNZLEtBQUssQ0FBQyxLQUFVO0FBQzVCLFFBQVEsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7QUFDbkMsWUFBWSxLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7QUFDcEMsU0FBUztBQUNULFFBQVEsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRTtBQUNoRCxZQUFZLE1BQU0sRUFBRSxLQUFLLENBQUMsYUFBYTtBQUN2QyxZQUFZLGNBQWMsRUFBRSxJQUFJO0FBQ2hDLFlBQVksU0FBUyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFFLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBa0IsQ0FBQyxDQUFDLENBQUMsWUFBWTtBQUMvRyxZQUFZLFVBQVUsRUFBRSxJQUFJLENBQUMsa0JBQWtCO0FBQy9DLFlBQVksaUJBQWlCLEVBQUUsSUFBSSxDQUFDLG9CQUFvQjtBQUN4RCxTQUFTLENBQUMsQ0FBQztBQUNYLElBQUksQ0FBQztBQUNMO3dEQXZFQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLHVCQUF1QixjQUNwQzs7O3lQQUNJO0FBQUM7QUFDVSxZQWRQLFVBQVU7QUFBRztBQUFHO0FBQ0Qsa0NBdUJuQixLQUFLO0FBQ1IsMkJBSUcsS0FBSztBQUNSLHdCQUlHLEtBQUs7QUFDUixpQ0FJRyxLQUFLO0FBQ1IsZ0NBSUcsS0FBSztBQUNSLG1DQUlHLEtBQUs7QUFBSyxzQkFJVixZQUFZLFNBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDO0FBQ2hDLDJCQU1BLFlBQVksU0FBQyxhQUFhLEVBQUUsQ0FBQyxRQUFRLENBQUM7QUFDdkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgSG9zdExpc3RlbmVyLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGh5UG9wb3ZlciB9IGZyb20gJ25neC10ZXRoeXMvcG9wb3Zlcic7XG5pbXBvcnQgeyBUaHlQbGFjZW1lbnQgfSBmcm9tICduZ3gtdGV0aHlzL2NvcmUnO1xuaW1wb3J0IHsgY2FtZWxDYXNlIH0gZnJvbSAnbmd4LXRldGh5cy91dGlsJztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ25neC10ZXRoeXMvdXRpbCc7XG5cbmV4cG9ydCBlbnVtIEFjdGlvbkVudW0ge1xuICAgIGNsaWNrID0gJ2NsaWNrJyxcbiAgICBjb250ZXh0bWVudSA9ICdjb250ZXh0bWVudSdcbn1cblxuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbdGh5QWN0aW9uTWVudVRvZ2dsZV0nXG59KVxuZXhwb3J0IGNsYXNzIFRoeUFjdGlvbk1lbnVUb2dnbGVEaXJlY3RpdmUge1xuICAgIHByaXZhdGUgX3RlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgcHJpdmF0ZSBfcGxhY2VtZW50OiBzdHJpbmc7XG5cbiAgICBwcml2YXRlIF9hY3Rpb24gPSBBY3Rpb25FbnVtLmNsaWNrO1xuXG4gICAgcHJpdmF0ZSBfc3RvcFByb3BhZ2F0aW9uID0gZmFsc2U7XG5cbiAgICBwcml2YXRlIF90aHlDb250YWluZXJDbGFzcyA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBzZXQgdGh5QWN0aW9uTWVudVRvZ2dsZSh2YWx1ZTogVGVtcGxhdGVSZWY8YW55Pikge1xuICAgICAgICB0aGlzLl90ZW1wbGF0ZVJlZiA9IHZhbHVlO1xuICAgIH1cblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeVBsYWNlbWVudCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuX3BsYWNlbWVudCA9IHZhbHVlO1xuICAgIH1cblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeUFjdGlvbih2YWx1ZTogQWN0aW9uRW51bSkge1xuICAgICAgICB0aGlzLl9hY3Rpb24gPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlTdG9wUHJvcGFnYXRpb24odmFsdWU6IGJvb2xlYW4pIHtcbiAgICAgICAgdGhpcy5fc3RvcFByb3BhZ2F0aW9uID0gY29lcmNlQm9vbGVhblByb3BlcnR5KHZhbHVlKTtcbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlDb250YWluZXJDbGFzcyh2YWx1ZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuX3RoeUNvbnRhaW5lckNsYXNzID0gdmFsdWU7XG4gICAgfVxuXG4gICAgQElucHV0KCkgdGh5T3JpZ2luQWN0aXZlQ2xhc3M6IHN0cmluZyB8IHN0cmluZ1tdO1xuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSB0aHlQb3BvdmVyOiBUaHlQb3BvdmVyKSB7fVxuXG4gICAgQEhvc3RMaXN0ZW5lcignY2xpY2snLCBbJyRldmVudCddKVxuICAgIG9uQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5fYWN0aW9uID09PSBBY3Rpb25FbnVtLmNsaWNrKSB7XG4gICAgICAgICAgICB0aGlzLl9zaG93LmJpbmQodGhpcykoZXZlbnQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQEhvc3RMaXN0ZW5lcignY29udGV4dG1lbnUnLCBbJyRldmVudCddKVxuICAgIG9uUmlnaHRDbGljayhldmVudDogYW55KTogYm9vbGVhbiB7XG4gICAgICAgIGlmICh0aGlzLl9hY3Rpb24gPT09IEFjdGlvbkVudW0uY29udGV4dG1lbnUpIHtcbiAgICAgICAgICAgIHRoaXMuX3Nob3cuYmluZCh0aGlzKShldmVudCk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfc2hvdyhldmVudDogYW55KSB7XG4gICAgICAgIGlmICh0aGlzLl9zdG9wUHJvcGFnYXRpb24pIHtcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudGh5UG9wb3Zlci5vcGVuKHRoaXMuX3RlbXBsYXRlUmVmLCB7XG4gICAgICAgICAgICBvcmlnaW46IGV2ZW50LmN1cnJlbnRUYXJnZXQsXG4gICAgICAgICAgICBpbnNpZGVDbG9zYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHBsYWNlbWVudDogdGhpcy5fcGxhY2VtZW50ID8gKGNhbWVsQ2FzZSh0aGlzLl9wbGFjZW1lbnQuc3BsaXQoJyAnKSkgYXMgVGh5UGxhY2VtZW50KSA6ICdib3R0b21MZWZ0JyxcbiAgICAgICAgICAgIHBhbmVsQ2xhc3M6IHRoaXMuX3RoeUNvbnRhaW5lckNsYXNzLFxuICAgICAgICAgICAgb3JpZ2luQWN0aXZlQ2xhc3M6IHRoaXMudGh5T3JpZ2luQWN0aXZlQ2xhc3NcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl19