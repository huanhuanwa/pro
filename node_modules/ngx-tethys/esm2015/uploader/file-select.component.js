import { Component, Input, Output, Inject, ViewChild, ElementRef, HostListener, EventEmitter } from '@angular/core';
import { coerceBooleanProperty } from 'ngx-tethys/util';
import { mimeTypeConvert } from './util';
import { THY_UPLOADER_DEFAULT_OPTIONS } from './uploader.config';
import { FileSelectBaseComponent } from './file-select-base';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["fileInput"];
const _c1 = ["thyFileSelect", ""];
const _c2 = ["*"];
export class ThyFileSelectComponent extends FileSelectBaseComponent {
    constructor(elementRef, defaultConfig) {
        super(elementRef, defaultConfig);
        this.elementRef = elementRef;
        this.defaultConfig = defaultConfig;
        this.thyOnFileSelect = new EventEmitter();
    }
    set thyMultiple(value) {
        this.multiple = coerceBooleanProperty(value);
        if (this.multiple) {
            this.fileInput.nativeElement.setAttribute('multiple', '');
        }
        else {
            this.fileInput.nativeElement.removeAttribute('multiple');
        }
    }
    set thyAcceptFolder(value) {
        this.acceptFolder = coerceBooleanProperty(value);
        if (this.acceptFolder) {
            this.fileInput.nativeElement.setAttribute('webkitdirectory', '');
        }
        else {
            this.fileInput.nativeElement.removeAttribute('webkitdirectory');
        }
    }
    set thyAcceptType(value) {
        this.acceptType = mimeTypeConvert(value);
    }
    set thySizeThreshold(value) {
        this.sizeThreshold = value;
    }
    click($event) {
        this.fileInput.nativeElement.click();
    }
    selectFile($event) {
        const files = this.fileInput.nativeElement.files;
        if (files && files.length > 0) {
            this.selectFiles($event, Array.from(files), this.thyOnFileSelect);
            this.fileInput.nativeElement.value = '';
        }
    }
    ngOnInit() { }
    ngOnDestroy() { }
}
ThyFileSelectComponent.ɵfac = function ThyFileSelectComponent_Factory(t) { return new (t || ThyFileSelectComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(THY_UPLOADER_DEFAULT_OPTIONS)); };
ThyFileSelectComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyFileSelectComponent, selectors: [["", "thyFileSelect", ""], ["thy-file-select"]], viewQuery: function ThyFileSelectComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);
    } }, hostBindings: function ThyFileSelectComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function ThyFileSelectComponent_click_HostBindingHandler($event) { return ctx.click($event); });
    } }, inputs: { thyMultiple: "thyMultiple", thyAcceptFolder: "thyAcceptFolder", thyAcceptType: "thyAcceptType", thySizeThreshold: "thySizeThreshold" }, outputs: { thyOnFileSelect: "thyOnFileSelect" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c1, ngContentSelectors: _c2, decls: 3, vars: 2, consts: [["thyStopPropagation", "true", "type", "file", 2, "width", "0", "height", "0", 3, "hidden", "change"], ["fileInput", ""]], template: function ThyFileSelectComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵelementStart(1, "input", 0, 1);
        ɵngcc0.ɵɵlistener("change", function ThyFileSelectComponent_Template_input_change_1_listener($event) { return ctx.selectFile($event); });
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("hidden", "true");
        ɵngcc0.ɵɵattribute("accept", ctx.acceptType);
    } }, encapsulation: 2 });
ThyFileSelectComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: undefined, decorators: [{ type: Inject, args: [THY_UPLOADER_DEFAULT_OPTIONS,] }] }
];
ThyFileSelectComponent.propDecorators = {
    thyOnFileSelect: [{ type: Output }],
    fileInput: [{ type: ViewChild, args: ['fileInput', { static: true },] }],
    thyMultiple: [{ type: Input }],
    thyAcceptFolder: [{ type: Input }],
    thyAcceptType: [{ type: Input }],
    thySizeThreshold: [{ type: Input }],
    click: [{ type: HostListener, args: ['click', ['$event'],] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyFileSelectComponent, [{
        type: Component,
        args: [{
                selector: '[thyFileSelect],thy-file-select',
                template: "<ng-content></ng-content>\n<input style=\"width: 0; height: 0\" thyStopPropagation=\"true\" [hidden]=\"'true'\" #fileInput type=\"file\" (change)=\"selectFile($event)\"\n    [attr.accept]=\"acceptType\">\n"
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{
                type: Inject,
                args: [THY_UPLOADER_DEFAULT_OPTIONS]
            }] }]; }, { thyOnFileSelect: [{
            type: Output
        }], thyMultiple: [{
            type: Input
        }], thyAcceptFolder: [{
            type: Input
        }], thyAcceptType: [{
            type: Input
        }], thySizeThreshold: [{
            type: Input
        }], click: [{
            type: HostListener,
            args: ['click', ['$event']]
        }], fileInput: [{
            type: ViewChild,
            args: ['fileInput', { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZS1zZWxlY3QuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXBsb2FkZXIvZmlsZS1zZWxlY3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxTQUFTLEVBQ1QsS0FBSyxFQUNMLE1BQU0sRUFFTixNQUFNLEVBQ04sU0FBUyxFQUNULFVBQVUsRUFHVixZQUFZLEVBQ1osWUFBWSxFQUNmLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxxQkFBcUIsRUFBcUIsTUFBTSxpQkFBaUIsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBRXpDLE9BQU8sRUFBRSw0QkFBNEIsRUFBcUIsTUFBTSxtQkFBbUIsQ0FBQztBQUNwRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7Ozs7O0FBTTdELE1BQU0sT0FBTyxzQkFBdUIsU0FBUSx1QkFBdUI7QUFBRyxJQTJDbEUsWUFBbUIsVUFBc0IsRUFBK0MsYUFBZ0M7QUFDNUgsUUFBUSxLQUFLLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxDQUFDO0FBQ3pDLFFBRnVCLGVBQVUsR0FBVixVQUFVLENBQVk7QUFBQyxRQUE4QyxrQkFBYSxHQUFiLGFBQWEsQ0FBbUI7QUFBQyxRQXRDL0csb0JBQWUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ25ELElBdUNJLENBQUM7QUFDTCxJQXJDSSxJQUNJLFdBQVcsQ0FBQyxLQUFjO0FBQ2xDLFFBQVEsSUFBSSxDQUFDLFFBQVEsR0FBRyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNyRCxRQUFRLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtBQUMzQixZQUFZLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDdEUsU0FBUztBQUFDLGFBQUs7QUFDZixZQUFZLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNyRSxTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0wsSUFDSSxJQUNJLGVBQWUsQ0FBQyxLQUFjO0FBQ3RDLFFBQVEsSUFBSSxDQUFDLFlBQVksR0FBRyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN6RCxRQUFRLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtBQUMvQixZQUFZLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUM3RSxTQUFTO0FBQUMsYUFBSztBQUNmLFlBQVksSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFDNUUsU0FBUztBQUNULElBQUksQ0FBQztBQUNMLElBQ0ksSUFDSSxhQUFhLENBQUMsS0FBNkI7QUFDbkQsUUFBUSxJQUFJLENBQUMsVUFBVSxHQUFHLGVBQWUsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUNqRCxJQUFJLENBQUM7QUFDTCxJQUNJLElBQWEsZ0JBQWdCLENBQUMsS0FBYTtBQUMvQyxRQUFRLElBQUksQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO0FBQ25DLElBQUksQ0FBQztBQUNMLElBRUksS0FBSyxDQUFDLE1BQWE7QUFDdkIsUUFBUSxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUM3QyxJQUFJLENBQUM7QUFDTCxJQUtJLFVBQVUsQ0FBQyxNQUFhO0FBQzVCLFFBQVEsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDO0FBQ3pELFFBQVEsSUFBSSxLQUFLLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7QUFDdkMsWUFBWSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUM5RSxZQUFZLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7QUFDcEQsU0FBUztBQUNULElBQUksQ0FBQztBQUNMLElBQ0ksUUFBUSxLQUFJLENBQUM7QUFDakIsSUFDSSxXQUFXLEtBQUksQ0FBQztBQUNwQjtrREE5REMsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSxpQ0FBaUMsa0JBQzNDOytJQUEyQyxjQUM5Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7NkJBQ0k7QUFBQztBQUFnRCxZQWhCbEQsVUFBVTtBQUNaLDRDQTBEOEMsTUFBTSxTQUFDLDRCQUE0QjtBQUFRO0FBQUc7QUFDdEYsOEJBdkNILE1BQU07QUFBSyx3QkFFWCxTQUFTLFNBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtBQUFPLDBCQUU5QyxLQUFLO0FBQ1IsOEJBU0csS0FBSztBQUNSLDRCQVNHLEtBQUs7QUFDUiwrQkFJRyxLQUFLO0FBQUssb0JBSVYsWUFBWSxTQUFDLE9BQU8sRUFBRSxDQUFDLFFBQVEsQ0FBQztBQUNqQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgQ29tcG9uZW50LFxuICAgIElucHV0LFxuICAgIE91dHB1dCxcbiAgICBSZW5kZXJlcjIsXG4gICAgSW5qZWN0LFxuICAgIFZpZXdDaGlsZCxcbiAgICBFbGVtZW50UmVmLFxuICAgIE9uSW5pdCxcbiAgICBPbkRlc3Ryb3ksXG4gICAgSG9zdExpc3RlbmVyLFxuICAgIEV2ZW50RW1pdHRlclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSwgaXNBcnJheSwgaXNTdHJpbmcgfSBmcm9tICduZ3gtdGV0aHlzL3V0aWwnO1xuaW1wb3J0IHsgbWltZVR5cGVDb252ZXJ0IH0gZnJvbSAnLi91dGlsJztcbmltcG9ydCB7IFRoeVNpemVFeGNlZWRzSGFuZGxlciB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgVEhZX1VQTE9BREVSX0RFRkFVTFRfT1BUSU9OUywgVGh5VXBsb2FkZXJDb25maWcgfSBmcm9tICcuL3VwbG9hZGVyLmNvbmZpZyc7XG5pbXBvcnQgeyBGaWxlU2VsZWN0QmFzZUNvbXBvbmVudCB9IGZyb20gJy4vZmlsZS1zZWxlY3QtYmFzZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnW3RoeUZpbGVTZWxlY3RdLHRoeS1maWxlLXNlbGVjdCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2ZpbGUtc2VsZWN0LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaHlGaWxlU2VsZWN0Q29tcG9uZW50IGV4dGVuZHMgRmlsZVNlbGVjdEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBtdWx0aXBsZTogYm9vbGVhbjtcblxuICAgIHByaXZhdGUgYWNjZXB0Rm9sZGVyOiBib29sZWFuO1xuXG4gICAgQE91dHB1dCgpIHRoeU9uRmlsZVNlbGVjdCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIEBWaWV3Q2hpbGQoJ2ZpbGVJbnB1dCcsIHsgc3RhdGljOiB0cnVlIH0pIGZpbGVJbnB1dDogRWxlbWVudFJlZjxIVE1MSW5wdXRFbGVtZW50PjtcblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeU11bHRpcGxlKHZhbHVlOiBib29sZWFuKSB7XG4gICAgICAgIHRoaXMubXVsdGlwbGUgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuICAgICAgICBpZiAodGhpcy5tdWx0aXBsZSkge1xuICAgICAgICAgICAgdGhpcy5maWxlSW5wdXQubmF0aXZlRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ211bHRpcGxlJywgJycpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5maWxlSW5wdXQubmF0aXZlRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ211bHRpcGxlJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlBY2NlcHRGb2xkZXIodmFsdWU6IGJvb2xlYW4pIHtcbiAgICAgICAgdGhpcy5hY2NlcHRGb2xkZXIgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuICAgICAgICBpZiAodGhpcy5hY2NlcHRGb2xkZXIpIHtcbiAgICAgICAgICAgIHRoaXMuZmlsZUlucHV0Lm5hdGl2ZUVsZW1lbnQuc2V0QXR0cmlidXRlKCd3ZWJraXRkaXJlY3RvcnknLCAnJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmZpbGVJbnB1dC5uYXRpdmVFbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnd2Via2l0ZGlyZWN0b3J5Jyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlBY2NlcHRUeXBlKHZhbHVlOiBBcnJheTxzdHJpbmc+IHwgc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuYWNjZXB0VHlwZSA9IG1pbWVUeXBlQ29udmVydCh2YWx1ZSk7XG4gICAgfVxuXG4gICAgQElucHV0KCkgc2V0IHRoeVNpemVUaHJlc2hvbGQodmFsdWU6IG51bWJlcikge1xuICAgICAgICB0aGlzLnNpemVUaHJlc2hvbGQgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBASG9zdExpc3RlbmVyKCdjbGljaycsIFsnJGV2ZW50J10pXG4gICAgY2xpY2soJGV2ZW50OiBFdmVudCkge1xuICAgICAgICB0aGlzLmZpbGVJbnB1dC5uYXRpdmVFbGVtZW50LmNsaWNrKCk7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIEBJbmplY3QoVEhZX1VQTE9BREVSX0RFRkFVTFRfT1BUSU9OUykgcHVibGljIGRlZmF1bHRDb25maWc6IFRoeVVwbG9hZGVyQ29uZmlnKSB7XG4gICAgICAgIHN1cGVyKGVsZW1lbnRSZWYsIGRlZmF1bHRDb25maWcpO1xuICAgIH1cblxuICAgIHNlbGVjdEZpbGUoJGV2ZW50OiBFdmVudCkge1xuICAgICAgICBjb25zdCBmaWxlcyA9IHRoaXMuZmlsZUlucHV0Lm5hdGl2ZUVsZW1lbnQuZmlsZXM7XG4gICAgICAgIGlmIChmaWxlcyAmJiBmaWxlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdEZpbGVzKCRldmVudCwgQXJyYXkuZnJvbShmaWxlcyksIHRoaXMudGh5T25GaWxlU2VsZWN0KTtcbiAgICAgICAgICAgIHRoaXMuZmlsZUlucHV0Lm5hdGl2ZUVsZW1lbnQudmFsdWUgPSAnJztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIG5nT25Jbml0KCkge31cblxuICAgIG5nT25EZXN0cm95KCkge31cbn1cbiJdfQ==