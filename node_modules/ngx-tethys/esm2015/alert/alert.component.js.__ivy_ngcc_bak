import { Component, Input, ContentChild, TemplateRef, HostBinding } from '@angular/core';
import { isString } from 'ngx-tethys/util';
export class ThyAlertComponent {
    constructor() {
        // @ViewChild(TemplateRef) content: TemplateRef<any>;
        this._typeIcon = {
            success: 'check-circle-fill',
            warning: 'waring-fill',
            danger: 'close-circle-fill',
            info: 'minus-circle-fill',
            'primary-week': 'question-circle-fill',
            'success-week': 'check-circle-fill',
            'warning-week': 'waring-fill',
            'danger-week': 'close-circle-fill',
            'primary-weak': 'question-circle-fill',
            'success-weak': 'check-circle-fill',
            'warning-weak': 'waring-fill',
            'danger-weak': 'close-circle-fill'
        };
        this._showIcon = true;
        this._type = 'info';
    }
    set thyType(value) {
        if (value && value.indexOf('-week') !== -1) {
            console.warn('The type "xxx-week" will be removed, please use "xxx-weak" instead.');
        }
        this._type = value;
    }
    set thyMessage(value) {
        if (value instanceof TemplateRef) {
            this.messageTemplate = value;
        }
        else {
            this.messageText = value;
        }
    }
    set thyIcon(value) {
        if (value) {
            this._showIcon = true;
            this._icon = isString(value) ? value.toString() : null;
        }
        else {
            this._showIcon = false;
        }
    }
    get thyIcon() {
        if (this._showIcon) {
            return this._icon || this._typeIcon[this._type];
        }
        else {
            return null;
        }
    }
    ngOnInit() {
        this.class = `thy-alert thy-alert-${this._type}`;
    }
    closeAlert() {
        this.class = `${this.class} thy-alert-hidden`;
    }
}
ThyAlertComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-alert',
                template: "<div class=\"thy-alert-content\">\n  <thy-icon *ngIf=\"thyIcon\" class=\"thy-alert-icon\" [thyIconName]=\"thyIcon\"></thy-icon>\n  <ng-container *ngIf=\"messageTemplate\">\n    <ng-template *ngTemplateOutlet=\"messageTemplate\"></ng-template>\n  </ng-container>\n  <span *ngIf=\"messageText\">{{ messageText }}</span>\n  <div class=\"thy-alert-operation\" *ngIf=\"alertOperation\">\n    <ng-container [ngTemplateOutlet]=\"alertOperation\"></ng-container>\n  </div>\n</div>\n<a href=\"javascript:;\" class=\"thy-alert-close\" *ngIf=\"thyCloseable\" (click)=\"closeAlert()\">\n  <thy-icon thyIconName=\"close\"></thy-icon>\n</a>\n"
            },] }
];
ThyAlertComponent.ctorParameters = () => [];
ThyAlertComponent.propDecorators = {
    class: [{ type: HostBinding, args: ['class',] }],
    thyType: [{ type: Input }],
    thyMessage: [{ type: Input }],
    thyIcon: [{ type: Input }],
    thyCloseable: [{ type: Input }],
    alertOperation: [{ type: ContentChild, args: ['operation',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FsZXJ0L2FsZXJ0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxZQUFZLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFxQjNDLE1BQU0sT0FBTyxpQkFBaUI7SUFtRTFCO1FBdkJBLHFEQUFxRDtRQUU3QyxjQUFTLEdBQXVCO1lBQ3BDLE9BQU8sRUFBRSxtQkFBbUI7WUFDNUIsT0FBTyxFQUFFLGFBQWE7WUFDdEIsTUFBTSxFQUFFLG1CQUFtQjtZQUMzQixJQUFJLEVBQUUsbUJBQW1CO1lBQ3pCLGNBQWMsRUFBRSxzQkFBc0I7WUFDdEMsY0FBYyxFQUFFLG1CQUFtQjtZQUNuQyxjQUFjLEVBQUUsYUFBYTtZQUM3QixhQUFhLEVBQUUsbUJBQW1CO1lBQ2xDLGNBQWMsRUFBRSxzQkFBc0I7WUFDdEMsY0FBYyxFQUFFLG1CQUFtQjtZQUNuQyxjQUFjLEVBQUUsYUFBYTtZQUM3QixhQUFhLEVBQUUsbUJBQW1CO1NBQ3JDLENBQUM7UUFFTSxjQUFTLEdBQUcsSUFBSSxDQUFDO1FBSWpCLFVBQUssR0FBaUIsTUFBTSxDQUFDO0lBRXRCLENBQUM7SUE1RGhCLElBQWEsT0FBTyxDQUFDLEtBQW1CO1FBQ3BDLElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDeEMsT0FBTyxDQUFDLElBQUksQ0FBQyxxRUFBcUUsQ0FBQyxDQUFDO1NBQ3ZGO1FBQ0QsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztJQUVELElBQWEsVUFBVSxDQUFDLEtBQXdDO1FBQzVELElBQUksS0FBSyxZQUFZLFdBQVcsRUFBRTtZQUM5QixJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztTQUNoQzthQUFNO1lBQ0gsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7U0FDNUI7SUFDTCxDQUFDO0lBRUQsSUFDSSxPQUFPLENBQUMsS0FBdUI7UUFDL0IsSUFBSSxLQUFLLEVBQUU7WUFDUCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztZQUN0QixJQUFJLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7U0FDMUQ7YUFBTTtZQUNILElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO1NBQzFCO0lBQ0wsQ0FBQztJQUVELElBQUksT0FBTztRQUNQLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDbkQ7YUFBTTtZQUNILE9BQU8sSUFBSSxDQUFDO1NBQ2Y7SUFDTCxDQUFDO0lBK0JELFFBQVE7UUFDSixJQUFJLENBQUMsS0FBSyxHQUFHLHVCQUF1QixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDckQsQ0FBQztJQUVELFVBQVU7UUFDTixJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssbUJBQW1CLENBQUM7SUFDbEQsQ0FBQzs7O1lBL0VKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsV0FBVztnQkFDckIsZ29CQUFxQzthQUN4Qzs7OztvQkFFSSxXQUFXLFNBQUMsT0FBTztzQkFNbkIsS0FBSzt5QkFPTCxLQUFLO3NCQVFMLEtBQUs7MkJBa0JMLEtBQUs7NkJBRUwsWUFBWSxTQUFDLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIENvbnRlbnRDaGlsZCwgVGVtcGxhdGVSZWYsIEhvc3RCaW5kaW5nIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJ25neC10ZXRoeXMvdXRpbCc7XG5pbXBvcnQgeyBEaWN0aW9uYXJ5IH0gZnJvbSAnbmd4LXRldGh5cy90eXBlcyc7XG5cbnR5cGUgVGh5QWxlcnRUeXBlID1cbiAgICB8ICdzdWNjZXNzJ1xuICAgIHwgJ3dhcm5pbmcnXG4gICAgfCAnZGFuZ2VyJ1xuICAgIHwgJ2luZm8nXG4gICAgfCAncHJpbWFyeS13ZWVrJ1xuICAgIHwgJ3N1Y2Nlc3Mtd2VlaydcbiAgICB8ICd3YXJuaW5nLXdlZWsnXG4gICAgfCAnZGFuZ2VyLXdlZWsnXG4gICAgfCAncHJpbWFyeS13ZWFrJ1xuICAgIHwgJ3N1Y2Nlc3Mtd2VhaydcbiAgICB8ICd3YXJuaW5nLXdlYWsnXG4gICAgfCAnZGFuZ2VyLXdlYWsnO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RoeS1hbGVydCcsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2FsZXJ0LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUaHlBbGVydENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcycpIGNsYXNzOiBzdHJpbmc7XG5cbiAgICBtZXNzYWdlVGVtcGxhdGU6IFRlbXBsYXRlUmVmPEhUTUxFbGVtZW50PjtcblxuICAgIG1lc3NhZ2VUZXh0OiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSBzZXQgdGh5VHlwZSh2YWx1ZTogVGh5QWxlcnRUeXBlKSB7XG4gICAgICAgIGlmICh2YWx1ZSAmJiB2YWx1ZS5pbmRleE9mKCctd2VlaycpICE9PSAtMSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdUaGUgdHlwZSBcInh4eC13ZWVrXCIgd2lsbCBiZSByZW1vdmVkLCBwbGVhc2UgdXNlIFwieHh4LXdlYWtcIiBpbnN0ZWFkLicpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3R5cGUgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBASW5wdXQoKSBzZXQgdGh5TWVzc2FnZSh2YWx1ZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8SFRNTEVsZW1lbnQ+KSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmKSB7XG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VUZW1wbGF0ZSA9IHZhbHVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tZXNzYWdlVGV4dCA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQElucHV0KClcbiAgICBzZXQgdGh5SWNvbih2YWx1ZTogYm9vbGVhbiB8IHN0cmluZykge1xuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMuX3Nob3dJY29uID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuX2ljb24gPSBpc1N0cmluZyh2YWx1ZSkgPyB2YWx1ZS50b1N0cmluZygpIDogbnVsbDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX3Nob3dJY29uID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgdGh5SWNvbigpIHtcbiAgICAgICAgaWYgKHRoaXMuX3Nob3dJY29uKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5faWNvbiB8fCB0aGlzLl90eXBlSWNvblt0aGlzLl90eXBlXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQElucHV0KCkgdGh5Q2xvc2VhYmxlOiBib29sZWFuO1xuXG4gICAgQENvbnRlbnRDaGlsZCgnb3BlcmF0aW9uJykgYWxlcnRPcGVyYXRpb246IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICAvLyBAVmlld0NoaWxkKFRlbXBsYXRlUmVmKSBjb250ZW50OiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgcHJpdmF0ZSBfdHlwZUljb246IERpY3Rpb25hcnk8c3RyaW5nPiA9IHtcbiAgICAgICAgc3VjY2VzczogJ2NoZWNrLWNpcmNsZS1maWxsJyxcbiAgICAgICAgd2FybmluZzogJ3dhcmluZy1maWxsJyxcbiAgICAgICAgZGFuZ2VyOiAnY2xvc2UtY2lyY2xlLWZpbGwnLFxuICAgICAgICBpbmZvOiAnbWludXMtY2lyY2xlLWZpbGwnLFxuICAgICAgICAncHJpbWFyeS13ZWVrJzogJ3F1ZXN0aW9uLWNpcmNsZS1maWxsJyxcbiAgICAgICAgJ3N1Y2Nlc3Mtd2Vlayc6ICdjaGVjay1jaXJjbGUtZmlsbCcsXG4gICAgICAgICd3YXJuaW5nLXdlZWsnOiAnd2FyaW5nLWZpbGwnLFxuICAgICAgICAnZGFuZ2VyLXdlZWsnOiAnY2xvc2UtY2lyY2xlLWZpbGwnLFxuICAgICAgICAncHJpbWFyeS13ZWFrJzogJ3F1ZXN0aW9uLWNpcmNsZS1maWxsJyxcbiAgICAgICAgJ3N1Y2Nlc3Mtd2Vhayc6ICdjaGVjay1jaXJjbGUtZmlsbCcsXG4gICAgICAgICd3YXJuaW5nLXdlYWsnOiAnd2FyaW5nLWZpbGwnLFxuICAgICAgICAnZGFuZ2VyLXdlYWsnOiAnY2xvc2UtY2lyY2xlLWZpbGwnXG4gICAgfTtcblxuICAgIHByaXZhdGUgX3Nob3dJY29uID0gdHJ1ZTtcblxuICAgIHByaXZhdGUgX2ljb246IHN0cmluZztcblxuICAgIHByaXZhdGUgX3R5cGU6IFRoeUFsZXJ0VHlwZSA9ICdpbmZvJztcblxuICAgIGNvbnN0cnVjdG9yKCkge31cblxuICAgIG5nT25Jbml0KCkge1xuICAgICAgICB0aGlzLmNsYXNzID0gYHRoeS1hbGVydCB0aHktYWxlcnQtJHt0aGlzLl90eXBlfWA7XG4gICAgfVxuXG4gICAgY2xvc2VBbGVydCgpIHtcbiAgICAgICAgdGhpcy5jbGFzcyA9IGAke3RoaXMuY2xhc3N9IHRoeS1hbGVydC1oaWRkZW5gO1xuICAgIH1cbn1cbiJdfQ==