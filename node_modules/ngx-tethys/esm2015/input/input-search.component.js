import { ChangeDetectorRef, Component, EventEmitter, forwardRef, HostBinding, Input, Output, ViewEncapsulation } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { UpdateHostClassService } from 'ngx-tethys/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/icon';
import * as ɵngcc2 from 'ngx-tethys/shared';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from './input.directive';
import * as ɵngcc5 from '@angular/common';

function ThyInputSearchComponent_a_2_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 3);
    ɵngcc0.ɵɵlistener("click", function ThyInputSearchComponent_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.clearSearchText($event); });
    ɵngcc0.ɵɵelement(1, "thy-icon", 4);
    ɵngcc0.ɵɵelementEnd();
} }
export const CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef(() => ThyInputSearchComponent),
    multi: true
};
const noop = () => { };
const ɵ0 = noop;
export class ThyInputSearchComponent {
    constructor(cdr) {
        this.cdr = cdr;
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
        this.disabled = false;
        this.autoFocus = false;
        this._isSearchContainer = true;
        this._isSearchEllipse = false;
        this.name = '';
        this.placeholder = '';
        this.clear = new EventEmitter();
    }
    set thyTheme(value) {
        if (value === 'ellipse') {
            this._isSearchEllipse = true;
        }
    }
    set thySearchFocus(value) {
        this.autoFocus = value;
    }
    writeValue(value) {
        this.searchText = value;
        this.cdr.markForCheck();
    }
    registerOnChange(fn) {
        this.onChangeCallback = fn;
    }
    registerOnTouched(fn) {
        this.onTouchedCallback = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    searchModelChange() {
        this.onChangeCallback(this.searchText);
    }
    clearSearchText(event) {
        event.stopPropagation();
        if (this.disabled) {
            return;
        }
        this.searchText = '';
        this.onChangeCallback(this.searchText);
        this.clear.emit(event);
    }
}
ThyInputSearchComponent.ɵfac = function ThyInputSearchComponent_Factory(t) { return new (t || ThyInputSearchComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ThyInputSearchComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyInputSearchComponent, selectors: [["thy-input-search"]], hostVars: 4, hostBindings: function ThyInputSearchComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("input-search-container", ctx._isSearchContainer)("input-search-ellipse", ctx._isSearchEllipse);
    } }, inputs: { name: "name", placeholder: "placeholder", thyTheme: "thyTheme", thySearchFocus: "thySearchFocus", thySize: "thySize" }, outputs: { clear: "clear" }, features: [ɵngcc0.ɵɵProvidersFeature([UpdateHostClassService, CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR])], decls: 3, vars: 7, consts: [["thyIconName", "search", 1, "input-prefix-icon"], ["thyInput", "", 1, "input-search-control", 3, "name", "placeholder", "disabled", "thyAutofocus", "ngModel", "thySize", "ngModelChange", "blur"], ["class", "close input-suffix-icon", "href", "javascript:;", 3, "click", 4, "ngIf"], ["href", "javascript:;", 1, "close", "input-suffix-icon", 3, "click"], ["thyIconName", "close"]], template: function ThyInputSearchComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "thy-icon", 0);
        ɵngcc0.ɵɵelementStart(1, "input", 1);
        ɵngcc0.ɵɵlistener("ngModelChange", function ThyInputSearchComponent_Template_input_ngModelChange_1_listener($event) { return ctx.searchText = $event; })("ngModelChange", function ThyInputSearchComponent_Template_input_ngModelChange_1_listener() { return ctx.searchModelChange(); })("blur", function ThyInputSearchComponent_Template_input_blur_1_listener() { return ctx.onTouchedCallback(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, ThyInputSearchComponent_a_2_Template, 2, 0, "a", 2);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("name", ctx.name)("placeholder", ctx.placeholder)("disabled", ctx.disabled)("thyAutofocus", ctx.autoFocus)("ngModel", ctx.searchText)("thySize", ctx.thySize);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.searchText);
    } }, directives: [ɵngcc1.ThyIconComponent, ɵngcc2.ThyAutofocusDirective, ɵngcc3.DefaultValueAccessor, ɵngcc4.ThyInputDirective, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc5.NgIf], encapsulation: 2 });
ThyInputSearchComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
ThyInputSearchComponent.propDecorators = {
    _isSearchContainer: [{ type: HostBinding, args: ['class.input-search-container',] }],
    _isSearchEllipse: [{ type: HostBinding, args: ['class.input-search-ellipse',] }],
    name: [{ type: Input }],
    placeholder: [{ type: Input }],
    thyTheme: [{ type: Input }],
    thySearchFocus: [{ type: Input }],
    thySize: [{ type: Input }],
    clear: [{ type: Output }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyInputSearchComponent, [{
        type: Component,
        args: [{
                selector: 'thy-input-search',
                template: "<thy-icon class=\"input-prefix-icon\" thyIconName=\"search\"></thy-icon>\n<input\n  class=\"input-search-control\"\n  thyInput\n  [name]=\"name\"\n  [placeholder]=\"placeholder\"\n  [disabled]=\"disabled\"\n  [thyAutofocus]=\"autoFocus\"\n  [(ngModel)]=\"searchText\"\n  (ngModelChange)=\"searchModelChange()\"\n  (blur)=\"onTouchedCallback()\"\n  [thySize]=\"thySize\"\n/>\n<a *ngIf=\"searchText\" class=\"close input-suffix-icon\" href=\"javascript:;\" (click)=\"clearSearchText($event)\">\n  <thy-icon thyIconName=\"close\"></thy-icon>\n</a>\n",
                providers: [UpdateHostClassService, CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR],
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { _isSearchContainer: [{
            type: HostBinding,
            args: ['class.input-search-container']
        }], _isSearchEllipse: [{
            type: HostBinding,
            args: ['class.input-search-ellipse']
        }], name: [{
            type: Input
        }], placeholder: [{
            type: Input
        }], clear: [{
            type: Output
        }], thyTheme: [{
            type: Input
        }], thySearchFocus: [{
            type: Input
        }], thySize: [{
            type: Input
        }] }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtc2VhcmNoLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2lucHV0L2lucHV0LXNlYXJjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RJLE9BQU8sRUFBd0IsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O0FBS3pELE1BQU0sQ0FBQyxNQUFNLDBDQUEwQyxHQUFRO0FBQy9ELElBQUksT0FBTyxFQUFFLGlCQUFpQjtBQUM5QixJQUFJLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsdUJBQXVCLENBQUM7QUFDMUQsSUFBSSxLQUFLLEVBQUUsSUFBSTtBQUNmLENBQUMsQ0FBQztBQUVGLE1BQU0sSUFBSSxHQUFHLEdBQUcsRUFBRSxHQUFFLENBQUMsQ0FBQztBQUN0QjtBQU9BLE1BQU0sT0FBTyx1QkFBdUI7QUFBRyxJQW1DbkMsWUFBb0IsR0FBc0I7QUFBSSxRQUExQixRQUFHLEdBQUgsR0FBRyxDQUFtQjtBQUFDLFFBbENwQyxzQkFBaUIsR0FBZSxJQUFJLENBQUM7QUFDaEQsUUFDWSxxQkFBZ0IsR0FBcUIsSUFBSSxDQUFDO0FBQ3RELFFBQ1csYUFBUSxHQUFHLEtBQUssQ0FBQztBQUM1QixRQUNXLGNBQVMsR0FBRyxLQUFLLENBQUM7QUFDN0IsUUFDaUQsdUJBQWtCLEdBQUcsSUFBSSxDQUFDO0FBQzNFLFFBQytDLHFCQUFnQixHQUFHLEtBQUssQ0FBQztBQUN4RSxRQUdhLFNBQUksR0FBRyxFQUFFLENBQUM7QUFDdkIsUUFDYSxnQkFBVyxHQUFHLEVBQUUsQ0FBQztBQUM5QixRQWVjLFVBQUssR0FBd0IsSUFBSSxZQUFZLEVBQVMsQ0FBQztBQUNyRSxJQUNpRCxDQUFDO0FBQ2xELElBakJJLElBQ0ksUUFBUSxDQUFDLEtBQXVCO0FBQ3hDLFFBQVEsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO0FBQ2pDLFlBQVksSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztBQUN6QyxTQUFTO0FBQ1QsSUFBSSxDQUFDO0FBQ0wsSUFDSSxJQUNJLGNBQWMsQ0FBQyxLQUFjO0FBQ3JDLFFBQVEsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7QUFDL0IsSUFBSSxDQUFDO0FBQ0wsSUFPSSxVQUFVLENBQUMsS0FBVTtBQUFJLFFBQ3JCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ2hDLFFBQVEsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztBQUNoQyxJQUFJLENBQUM7QUFDTCxJQUNJLGdCQUFnQixDQUFDLEVBQU87QUFBSSxRQUN4QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0FBQ25DLElBQUksQ0FBQztBQUNMLElBQ0ksaUJBQWlCLENBQUMsRUFBTztBQUFJLFFBQ3pCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxFQUFFLENBQUM7QUFDcEMsSUFBSSxDQUFDO0FBQ0wsSUFDSSxnQkFBZ0IsQ0FBRSxVQUFtQjtBQUFJLFFBQ3JDLElBQUksQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDO0FBQ25DLElBQUksQ0FBQztBQUNMLElBQ0ksaUJBQWlCO0FBQ3JCLFFBQVEsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUMvQyxJQUFJLENBQUM7QUFDTCxJQUNJLGVBQWUsQ0FBQyxLQUFZO0FBQ2hDLFFBQVEsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO0FBQ2hDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO0FBQzNCLFlBQVksT0FBTztBQUNuQixTQUFTO0FBQ1QsUUFBUSxJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztBQUM3QixRQUFRLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDL0MsUUFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMvQixJQUFJLENBQUM7QUFDTDttREF6RUMsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSxrQkFBa0Isa0JBQzVCOzs7MEtBQTRDLGtCQUM1QyxTQUFTLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSwwQ0FBMEMsQ0FBQyxrQkFDL0UsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUksY0FDeEM7Ozs7Ozs7Ozs7OzhNQUNJO0FBQUM7QUFBaUQsWUFyQjlDLGlCQUFpQjtBQUFHO0FBQUc7QUFBMkMsaUNBOEJ0RSxXQUFXLFNBQUMsOEJBQThCO0FBQU8sK0JBRWpELFdBQVcsU0FBQyw0QkFBNEI7QUFBTyxtQkFJL0MsS0FBSztBQUFLLDBCQUVWLEtBQUs7QUFBSyx1QkFFVixLQUFLO0FBQ1IsNkJBTUcsS0FBSztBQUNSLHNCQUlHLEtBQUs7QUFBSyxvQkFFVixNQUFNO0FBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDO0FBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIGZvcndhcmRSZWYsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT3V0cHV0LCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgVXBkYXRlSG9zdENsYXNzU2VydmljZSB9IGZyb20gJ25neC10ZXRoeXMvY29yZSc7XG5pbXBvcnQgeyBJbnB1dFNpemUgfSBmcm9tICcuL2lucHV0LmRpcmVjdGl2ZSc7XG5cbmV4cG9ydCB0eXBlIElucHV0U2VhcmNoVGhlbWUgPSAnZWxsaXBzZScgfCAnJztcblxuZXhwb3J0IGNvbnN0IENVU1RPTV9JTlBVVF9TRUFSQ0hfQ09OVFJPTF9WQUxVRV9BQ0NFU1NPUjogYW55ID0ge1xuICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFRoeUlucHV0U2VhcmNoQ29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZVxufTtcblxuY29uc3Qgbm9vcCA9ICgpID0+IHt9O1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RoeS1pbnB1dC1zZWFyY2gnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9pbnB1dC1zZWFyY2guY29tcG9uZW50Lmh0bWwnLFxuICAgIHByb3ZpZGVyczogW1VwZGF0ZUhvc3RDbGFzc1NlcnZpY2UsIENVU1RPTV9JTlBVVF9TRUFSQ0hfQ09OVFJPTF9WQUxVRV9BQ0NFU1NPUl0sXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBUaHlJbnB1dFNlYXJjaENvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgICBwdWJsaWMgb25Ub3VjaGVkQ2FsbGJhY2s6ICgpID0+IHZvaWQgPSBub29wO1xuXG4gICAgcHJpdmF0ZSBvbkNoYW5nZUNhbGxiYWNrOiAoXzogYW55KSA9PiB2b2lkID0gbm9vcDtcblxuICAgIHB1YmxpYyBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgcHVibGljIGF1dG9Gb2N1cyA9IGZhbHNlO1xuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pbnB1dC1zZWFyY2gtY29udGFpbmVyJykgX2lzU2VhcmNoQ29udGFpbmVyID0gdHJ1ZTtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaW5wdXQtc2VhcmNoLWVsbGlwc2UnKSBfaXNTZWFyY2hFbGxpcHNlID0gZmFsc2U7XG5cbiAgICBzZWFyY2hUZXh0OiBzdHJpbmc7XG5cbiAgICBASW5wdXQoKSBuYW1lID0gJyc7XG5cbiAgICBASW5wdXQoKSBwbGFjZWhvbGRlciA9ICcnO1xuXG4gICAgQElucHV0KClcbiAgICBzZXQgdGh5VGhlbWUodmFsdWU6IElucHV0U2VhcmNoVGhlbWUpIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSAnZWxsaXBzZScpIHtcbiAgICAgICAgICAgIHRoaXMuX2lzU2VhcmNoRWxsaXBzZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBASW5wdXQoKVxuICAgIHNldCB0aHlTZWFyY2hGb2N1cyh2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLmF1dG9Gb2N1cyA9IHZhbHVlO1xuICAgIH1cblxuICAgIEBJbnB1dCgpIHRoeVNpemU6IElucHV0U2l6ZTtcblxuICAgIEBPdXRwdXQoKSBjbGVhcjogRXZlbnRFbWl0dGVyPEV2ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXI8RXZlbnQ+KCk7XG5cbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG5cbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zZWFyY2hUZXh0ID0gdmFsdWU7XG4gICAgICAgIHRoaXMuY2RyLm1hcmtGb3JDaGVjaygpO1xuICAgIH1cblxuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IGFueSk6IHZvaWQge1xuICAgICAgICB0aGlzLm9uQ2hhbmdlQ2FsbGJhY2sgPSBmbjtcbiAgICB9XG5cbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KTogdm9pZCB7XG4gICAgICAgIHRoaXMub25Ub3VjaGVkQ2FsbGJhY2sgPSBmbjtcbiAgICB9XG5cbiAgICBzZXREaXNhYmxlZFN0YXRlPyhpc0Rpc2FibGVkOiBib29sZWFuKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZGlzYWJsZWQgPSBpc0Rpc2FibGVkO1xuICAgIH1cblxuICAgIHNlYXJjaE1vZGVsQ2hhbmdlKCkge1xuICAgICAgICB0aGlzLm9uQ2hhbmdlQ2FsbGJhY2sodGhpcy5zZWFyY2hUZXh0KTtcbiAgICB9XG5cbiAgICBjbGVhclNlYXJjaFRleHQoZXZlbnQ6IEV2ZW50KSB7XG4gICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2VhcmNoVGV4dCA9ICcnO1xuICAgICAgICB0aGlzLm9uQ2hhbmdlQ2FsbGJhY2sodGhpcy5zZWFyY2hUZXh0KTtcbiAgICAgICAgdGhpcy5jbGVhci5lbWl0KGV2ZW50KTtcbiAgICB9XG59XG4iXX0=