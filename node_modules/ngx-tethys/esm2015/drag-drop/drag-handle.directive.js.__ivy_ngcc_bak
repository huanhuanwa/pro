import { Directive, ElementRef, Input, Optional } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { ThyDragDirective } from './drag.directive';
export class ThyDragHandleDirective {
    constructor(element, drag) {
        this.element = element;
        this._disabled = false;
        if (drag) {
            drag.dragRef.withHandles(this);
        }
    }
    get disabled() {
        return this._disabled;
    }
    set disabled(value) {
        this._disabled = coerceBooleanProperty(value);
    }
}
ThyDragHandleDirective.decorators = [
    { type: Directive, args: [{
                selector: 'thy-drag-handle,[thyDragHandle]'
            },] }
];
ThyDragHandleDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: ThyDragDirective, decorators: [{ type: Optional }] }
];
ThyDragHandleDirective.propDecorators = {
    disabled: [{ type: Input, args: ['thyDisabled',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhZy1oYW5kbGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2RyYWctZHJvcC9kcmFnLWhhbmRsZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUtwRCxNQUFNLE9BQU8sc0JBQXNCO0lBVy9CLFlBQW1CLE9BQWdDLEVBQWMsSUFBc0I7UUFBcEUsWUFBTyxHQUFQLE9BQU8sQ0FBeUI7UUFWM0MsY0FBUyxHQUFHLEtBQUssQ0FBQztRQVd0QixJQUFJLElBQUksRUFBRTtZQUNOLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2xDO0lBQ0wsQ0FBQztJQVpELElBQ0ksUUFBUTtRQUNSLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxQixDQUFDO0lBQ0QsSUFBSSxRQUFRLENBQUMsS0FBYztRQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xELENBQUM7OztZQVpKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsaUNBQWlDO2FBQzlDOzs7WUFObUIsVUFBVTtZQUVyQixnQkFBZ0IsdUJBZ0JpQyxRQUFROzs7dUJBUjdELEtBQUssU0FBQyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGNvZXJjZUJvb2xlYW5Qcm9wZXJ0eSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9jb2VyY2lvbic7XG5pbXBvcnQgeyBUaHlEcmFnRGlyZWN0aXZlIH0gZnJvbSAnLi9kcmFnLmRpcmVjdGl2ZSc7XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiAndGh5LWRyYWctaGFuZGxlLFt0aHlEcmFnSGFuZGxlXSdcbn0pXG5leHBvcnQgY2xhc3MgVGh5RHJhZ0hhbmRsZURpcmVjdGl2ZSB7XG4gICAgcHJpdmF0ZSBfZGlzYWJsZWQgPSBmYWxzZTtcblxuICAgIEBJbnB1dCgndGh5RGlzYWJsZWQnKVxuICAgIGdldCBkaXNhYmxlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2Rpc2FibGVkO1xuICAgIH1cbiAgICBzZXQgZGlzYWJsZWQodmFsdWU6IGJvb2xlYW4pIHtcbiAgICAgICAgdGhpcy5fZGlzYWJsZWQgPSBjb2VyY2VCb29sZWFuUHJvcGVydHkodmFsdWUpO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50OiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PiwgQE9wdGlvbmFsKCkgZHJhZzogVGh5RHJhZ0RpcmVjdGl2ZSkge1xuICAgICAgICBpZiAoZHJhZykge1xuICAgICAgICAgICAgZHJhZy5kcmFnUmVmLndpdGhIYW5kbGVzKHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19