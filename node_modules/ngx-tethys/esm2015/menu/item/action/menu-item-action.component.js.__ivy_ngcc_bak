import { Component, HostBinding, ElementRef, Input, Renderer2 } from '@angular/core';
import { ThyPopover } from 'ngx-tethys/popover';
export class ThyMenuItemActionComponent {
    constructor(popover, renderer, elementRef) {
        this.popover = popover;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this._boundEvent = false;
        this.isThyMenuItemIconMore = true;
        this.thyStopPropagation = true;
    }
    set thyActionMenu(value) {
        this._actionMenu = value;
        if (this._actionMenu) {
            this.bindClickEvent();
        }
    }
    bindClickEvent() {
        if (this._boundEvent) {
            return;
        }
        this._boundEvent = true;
        this.renderer.listen(this.elementRef.nativeElement, 'click', event => {
            if (this.thyStopPropagation) {
                event.stopPropagation();
            }
            if (this._actionMenu) {
                this.popover.open(this._actionMenu, {
                    origin: event.currentTarget,
                    insideClosable: true,
                    placement: 'bottom'
                });
            }
        });
    }
    ngOnInit() { }
}
ThyMenuItemActionComponent.decorators = [
    { type: Component, args: [{
                selector: 'thy-menu-item-action,[thy-menu-item-action],[thyMenuItemAction]',
                template: "<ng-content></ng-content>"
            },] }
];
ThyMenuItemActionComponent.ctorParameters = () => [
    { type: ThyPopover },
    { type: Renderer2 },
    { type: ElementRef }
];
ThyMenuItemActionComponent.propDecorators = {
    isThyMenuItemIconMore: [{ type: HostBinding, args: ['class.thy-menu-item-action',] }],
    thyActionMenu: [{ type: Input }],
    thyStopPropagation: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1pdGVtLWFjdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbWVudS9pdGVtL2FjdGlvbi9tZW51LWl0ZW0tYWN0aW9uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLFdBQVcsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBZSxNQUFNLGVBQWUsQ0FBQztBQUUxRyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFNaEQsTUFBTSxPQUFPLDBCQUEwQjtJQW9DbkMsWUFBb0IsT0FBbUIsRUFBVSxRQUFtQixFQUFVLFVBQXNCO1FBQWhGLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFBVSxhQUFRLEdBQVIsUUFBUSxDQUFXO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQW5DcEcsZ0JBQVcsR0FBRyxLQUFLLENBQUM7UUFJdUIsMEJBQXFCLEdBQUcsSUFBSSxDQUFDO1FBVS9ELHVCQUFrQixHQUFHLElBQUksQ0FBQztJQXFCb0UsQ0FBQztJQTdCeEcsSUFDSSxhQUFhLENBQUMsS0FBNEM7UUFDMUQsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUN6QjtJQUNMLENBQUM7SUFJTyxjQUFjO1FBQ2xCLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNsQixPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztRQUN4QixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLEVBQUU7WUFDakUsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEVBQUU7Z0JBQ3pCLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQzthQUMzQjtZQUNELElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtnQkFDbEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRTtvQkFDaEMsTUFBTSxFQUFFLEtBQUssQ0FBQyxhQUE0QjtvQkFDMUMsY0FBYyxFQUFFLElBQUk7b0JBQ3BCLFNBQVMsRUFBRSxRQUFRO2lCQUN0QixDQUFDLENBQUM7YUFDTjtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUlELFFBQVEsS0FBVSxDQUFDOzs7WUExQ3RCLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsaUVBQWlFO2dCQUMzRSxxQ0FBZ0Q7YUFDbkQ7OztZQUxRLFVBQVU7WUFGeUMsU0FBUztZQUE1QixVQUFVOzs7b0NBYTlDLFdBQVcsU0FBQyw0QkFBNEI7NEJBRXhDLEtBQUs7aUNBUUwsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBIb3N0QmluZGluZywgRWxlbWVudFJlZiwgSW5wdXQsIFJlbmRlcmVyMiwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbXBvbmVudFR5cGUgfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcbmltcG9ydCB7IFRoeVBvcG92ZXIgfSBmcm9tICduZ3gtdGV0aHlzL3BvcG92ZXInO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3RoeS1tZW51LWl0ZW0tYWN0aW9uLFt0aHktbWVudS1pdGVtLWFjdGlvbl0sW3RoeU1lbnVJdGVtQWN0aW9uXScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL21lbnUtaXRlbS1hY3Rpb24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFRoeU1lbnVJdGVtQWN0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBfYm91bmRFdmVudCA9IGZhbHNlO1xuXG4gICAgX2FjdGlvbk1lbnU6IENvbXBvbmVudFR5cGU8YW55PiB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLnRoeS1tZW51LWl0ZW0tYWN0aW9uJykgaXNUaHlNZW51SXRlbUljb25Nb3JlID0gdHJ1ZTtcblxuICAgIEBJbnB1dCgpXG4gICAgc2V0IHRoeUFjdGlvbk1lbnUodmFsdWU6IENvbXBvbmVudFR5cGU8YW55PiB8IFRlbXBsYXRlUmVmPGFueT4pIHtcbiAgICAgICAgdGhpcy5fYWN0aW9uTWVudSA9IHZhbHVlO1xuICAgICAgICBpZiAodGhpcy5fYWN0aW9uTWVudSkge1xuICAgICAgICAgICAgdGhpcy5iaW5kQ2xpY2tFdmVudCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQElucHV0KCkgdGh5U3RvcFByb3BhZ2F0aW9uID0gdHJ1ZTtcblxuICAgIHByaXZhdGUgYmluZENsaWNrRXZlbnQoKSB7XG4gICAgICAgIGlmICh0aGlzLl9ib3VuZEV2ZW50KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fYm91bmRFdmVudCA9IHRydWU7XG4gICAgICAgIHRoaXMucmVuZGVyZXIubGlzdGVuKHRoaXMuZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50LCAnY2xpY2snLCBldmVudCA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy50aHlTdG9wUHJvcGFnYXRpb24pIHtcbiAgICAgICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLl9hY3Rpb25NZW51KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3BvdmVyLm9wZW4odGhpcy5fYWN0aW9uTWVudSwge1xuICAgICAgICAgICAgICAgICAgICBvcmlnaW46IGV2ZW50LmN1cnJlbnRUYXJnZXQgYXMgSFRNTEVsZW1lbnQsXG4gICAgICAgICAgICAgICAgICAgIGluc2lkZUNsb3NhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBwbGFjZW1lbnQ6ICdib3R0b20nXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcG9wb3ZlcjogVGh5UG9wb3ZlciwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLCBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHt9XG5cbiAgICBuZ09uSW5pdCgpOiB2b2lkIHt9XG59XG4iXX0=