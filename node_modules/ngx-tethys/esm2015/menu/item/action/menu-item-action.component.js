import { Component, HostBinding, ElementRef, Input, Renderer2 } from '@angular/core';
import { ThyPopover } from 'ngx-tethys/popover';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/popover';

const _c0 = ["*"];
export class ThyMenuItemActionComponent {
    constructor(popover, renderer, elementRef) {
        this.popover = popover;
        this.renderer = renderer;
        this.elementRef = elementRef;
        this._boundEvent = false;
        this.isThyMenuItemIconMore = true;
        this.thyStopPropagation = true;
    }
    set thyActionMenu(value) {
        this._actionMenu = value;
        if (this._actionMenu) {
            this.bindClickEvent();
        }
    }
    bindClickEvent() {
        if (this._boundEvent) {
            return;
        }
        this._boundEvent = true;
        this.renderer.listen(this.elementRef.nativeElement, 'click', event => {
            if (this.thyStopPropagation) {
                event.stopPropagation();
            }
            if (this._actionMenu) {
                this.popover.open(this._actionMenu, {
                    origin: event.currentTarget,
                    insideClosable: true,
                    placement: 'bottom'
                });
            }
        });
    }
    ngOnInit() { }
}
ThyMenuItemActionComponent.ɵfac = function ThyMenuItemActionComponent_Factory(t) { return new (t || ThyMenuItemActionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyPopover), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ThyMenuItemActionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyMenuItemActionComponent, selectors: [["thy-menu-item-action"], ["", "thy-menu-item-action", ""], ["", "thyMenuItemAction", ""]], hostVars: 2, hostBindings: function ThyMenuItemActionComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-menu-item-action", ctx.isThyMenuItemIconMore);
    } }, inputs: { thyStopPropagation: "thyStopPropagation", thyActionMenu: "thyActionMenu" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ThyMenuItemActionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
ThyMenuItemActionComponent.ctorParameters = () => [
    { type: ThyPopover },
    { type: Renderer2 },
    { type: ElementRef }
];
ThyMenuItemActionComponent.propDecorators = {
    isThyMenuItemIconMore: [{ type: HostBinding, args: ['class.thy-menu-item-action',] }],
    thyActionMenu: [{ type: Input }],
    thyStopPropagation: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyMenuItemActionComponent, [{
        type: Component,
        args: [{
                selector: 'thy-menu-item-action,[thy-menu-item-action],[thyMenuItemAction]',
                template: "<ng-content></ng-content>"
            }]
    }], function () { return [{ type: ɵngcc1.ThyPopover }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ElementRef }]; }, { isThyMenuItemIconMore: [{
            type: HostBinding,
            args: ['class.thy-menu-item-action']
        }], thyStopPropagation: [{
            type: Input
        }], thyActionMenu: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1pdGVtLWFjdGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9tZW51L2l0ZW0vYWN0aW9uL21lbnUtaXRlbS1hY3Rpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsV0FBVyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBRTFHLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7Ozs7QUFNaEQsTUFBTSxPQUFPLDBCQUEwQjtBQUFHLElBb0N0QyxZQUFvQixPQUFtQixFQUFVLFFBQW1CLEVBQVUsVUFBc0I7QUFBSSxRQUFwRixZQUFPLEdBQVAsT0FBTyxDQUFZO0FBQUMsUUFBUyxhQUFRLEdBQVIsUUFBUSxDQUFXO0FBQUMsUUFBUyxlQUFVLEdBQVYsVUFBVSxDQUFZO0FBQUMsUUFuQ3JHLGdCQUFXLEdBQUcsS0FBSyxDQUFDO0FBQ3hCLFFBRytDLDBCQUFxQixHQUFHLElBQUksQ0FBQztBQUM1RSxRQVNhLHVCQUFrQixHQUFHLElBQUksQ0FBQztBQUN2QyxJQW9CMkcsQ0FBQztBQUM1RyxJQTlCSSxJQUNJLGFBQWEsQ0FBQyxLQUE0QztBQUNsRSxRQUFRLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO0FBQ2pDLFFBQVEsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO0FBQzlCLFlBQVksSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0FBQ2xDLFNBQVM7QUFDVCxJQUFJLENBQUM7QUFDTCxJQUdZLGNBQWM7QUFDMUIsUUFBUSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7QUFDOUIsWUFBWSxPQUFPO0FBQ25CLFNBQVM7QUFDVCxRQUFRLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO0FBQ2hDLFFBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLEtBQUssQ0FBQyxFQUFFO0FBQzdFLFlBQVksSUFBSSxJQUFJLENBQUMsa0JBQWtCLEVBQUU7QUFDekMsZ0JBQWdCLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztBQUN4QyxhQUFhO0FBQ2IsWUFBWSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7QUFDbEMsZ0JBQWdCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUU7QUFDcEQsb0JBQW9CLE1BQU0sRUFBRSxLQUFLLENBQUMsYUFBNEI7QUFDOUQsb0JBQW9CLGNBQWMsRUFBRSxJQUFJO0FBQ3hDLG9CQUFvQixTQUFTLEVBQUUsUUFBUTtBQUN2QyxpQkFBaUIsQ0FBQyxDQUFDO0FBQ25CLGFBQWE7QUFDYixRQUFRLENBQUMsQ0FBQyxDQUFDO0FBQ1gsSUFBSSxDQUFDO0FBQ0wsSUFHSSxRQUFRLEtBQVUsQ0FBQztBQUN2QjtzREEzQ0MsU0FBUyxTQUFDLGtCQUNQLFFBQVEsRUFBRSxpRUFBaUUsa0JBQzNFLHFDQUFnRCxjQUNuRDs7Ozs7OzZCQUNJO0FBQUM7QUFBb0QsWUFOakQsVUFBVTtBQUFJLFlBRnFDLFNBQVM7QUFBSSxZQUFoQyxVQUFVO0FBQUc7QUFBRztBQUE4QyxvQ0FhbEcsV0FBVyxTQUFDLDRCQUE0QjtBQUFPLDRCQUUvQyxLQUFLO0FBQ1IsaUNBT0csS0FBSztBQUFJOzs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEhvc3RCaW5kaW5nLCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tcG9uZW50VHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wb3J0YWwnO1xuaW1wb3J0IHsgVGh5UG9wb3ZlciB9IGZyb20gJ25neC10ZXRoeXMvcG9wb3Zlcic7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAndGh5LW1lbnUtaXRlbS1hY3Rpb24sW3RoeS1tZW51LWl0ZW0tYWN0aW9uXSxbdGh5TWVudUl0ZW1BY3Rpb25dJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbWVudS1pdGVtLWFjdGlvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVGh5TWVudUl0ZW1BY3Rpb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIF9ib3VuZEV2ZW50ID0gZmFsc2U7XG5cbiAgICBfYWN0aW9uTWVudTogQ29tcG9uZW50VHlwZTxhbnk+IHwgVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MudGh5LW1lbnUtaXRlbS1hY3Rpb24nKSBpc1RoeU1lbnVJdGVtSWNvbk1vcmUgPSB0cnVlO1xuXG4gICAgQElucHV0KClcbiAgICBzZXQgdGh5QWN0aW9uTWVudSh2YWx1ZTogQ29tcG9uZW50VHlwZTxhbnk+IHwgVGVtcGxhdGVSZWY8YW55Pikge1xuICAgICAgICB0aGlzLl9hY3Rpb25NZW51ID0gdmFsdWU7XG4gICAgICAgIGlmICh0aGlzLl9hY3Rpb25NZW51KSB7XG4gICAgICAgICAgICB0aGlzLmJpbmRDbGlja0V2ZW50KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBASW5wdXQoKSB0aHlTdG9wUHJvcGFnYXRpb24gPSB0cnVlO1xuXG4gICAgcHJpdmF0ZSBiaW5kQ2xpY2tFdmVudCgpIHtcbiAgICAgICAgaWYgKHRoaXMuX2JvdW5kRXZlbnQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9ib3VuZEV2ZW50ID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5yZW5kZXJlci5saXN0ZW4odGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdjbGljaycsIGV2ZW50ID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLnRoeVN0b3BQcm9wYWdhdGlvbikge1xuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuX2FjdGlvbk1lbnUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBvcG92ZXIub3Blbih0aGlzLl9hY3Rpb25NZW51LCB7XG4gICAgICAgICAgICAgICAgICAgIG9yaWdpbjogZXZlbnQuY3VycmVudFRhcmdldCBhcyBIVE1MRWxlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgaW5zaWRlQ2xvc2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHBsYWNlbWVudDogJ2JvdHRvbSdcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBwb3BvdmVyOiBUaHlQb3BvdmVyLCBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsIHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cblxuICAgIG5nT25Jbml0KCk6IHZvaWQge31cbn1cbiJdfQ==