import { Component, Input, Output, ViewEncapsulation, HostBinding, EventEmitter, TemplateRef, IterableDiffers } from '@angular/core';
import { ThyTransferComponent } from './transfer.component';
import { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './transfer.component';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/cdk/drag-drop';
import * as ɵngcc4 from 'ngx-tethys/list';
import * as ɵngcc5 from 'ngx-tethys/shared';

function ThyTransferListComponent_ng_container_3_ng_container_2_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 11);
} }
function ThyTransferListComponent_ng_container_3_ng_container_2_thy_list_item_5_ng_template_1_Template(rf, ctx) { }
const _c0 = function (a0) { return { active: a0 }; };
const _c1 = function (a0) { return { $implicit: a0 }; };
function ThyTransferListComponent_ng_container_3_ng_container_2_thy_list_item_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "thy-list-item", 12);
    ɵngcc0.ɵɵtemplate(1, ThyTransferListComponent_ng_container_3_ng_container_2_thy_list_item_5_ng_template_1_Template, 0, 0, "ng-template", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r8 = ctx.$implicit;
    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("cdkDragData", item_r8)("ngClass", ɵngcc0.ɵɵpureFunction1(4, _c0, item_r8.checked));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r7.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(6, _c1, item_r8));
} }
function ThyTransferListComponent_ng_container_3_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 9);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "thy-list", 10);
    ɵngcc0.ɵɵlistener("cdkDropListDropped", function ThyTransferListComponent_ng_container_3_ng_container_2_Template_thy_list_cdkDropListDropped_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ctx_r10.drop($event); });
    ɵngcc0.ɵɵtemplate(4, ThyTransferListComponent_ng_container_3_ng_container_2_div_4_Template, 1, 0, "div", 7);
    ɵngcc0.ɵɵtemplate(5, ThyTransferListComponent_ng_container_3_ng_container_2_thy_list_item_5_Template, 2, 8, "thy-list-item", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 9);
    ɵngcc0.ɵɵtext(7, "\u672A\u9501\u5B9A");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1("\u9501\u5B9A (\u4E0A\u9650", ctx_r3.maxLock, "\u4E2A)");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkDropListData", ctx_r3.lockItems)("cdkDropListEnterPredicate", ctx_r3.lockListEnterPredicate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.lockItems.length === 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r3.lockItems);
} }
function ThyTransferListComponent_ng_container_3_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 11);
} }
function ThyTransferListComponent_ng_container_3_thy_list_item_5_ng_template_1_Template(rf, ctx) { }
function ThyTransferListComponent_ng_container_3_thy_list_item_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "thy-list-item", 12);
    ɵngcc0.ɵɵtemplate(1, ThyTransferListComponent_ng_container_3_thy_list_item_5_ng_template_1_Template, 0, 0, "ng-template", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r12 = ctx.$implicit;
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("cdkDragData", item_r12)("ngClass", ɵngcc0.ɵɵpureFunction1(4, _c0, item_r12.checked));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r5.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(6, _c1, item_r12));
} }
function ThyTransferListComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 4);
    ɵngcc0.ɵɵtemplate(2, ThyTransferListComponent_ng_container_3_ng_container_2_Template, 8, 5, "ng-container", 5);
    ɵngcc0.ɵɵelementStart(3, "thy-list", 6);
    ɵngcc0.ɵɵlistener("cdkDropListDropped", function ThyTransferListComponent_ng_container_3_Template_thy_list_cdkDropListDropped_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.drop($event); });
    ɵngcc0.ɵɵtemplate(4, ThyTransferListComponent_ng_container_3_div_4_Template, 1, 0, "div", 7);
    ɵngcc0.ɵɵtemplate(5, ThyTransferListComponent_ng_container_3_thy_list_item_5_Template, 2, 8, "thy-list-item", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkDropListGroupDisabled", !ctx_r0.draggable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.canLock);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("cdkDropListDisabled", !ctx_r0.draggable)("cdkDropListData", ctx_r0.unlockItems);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.unlockItems.length === 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.unlockItems);
} }
function ThyTransferListComponent_ng_template_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c2 = function (a0, a1, a2) { return { $implicit: a0, onSelectItem: a1, onUnselectItem: a2 }; };
function ThyTransferListComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 14);
    ɵngcc0.ɵɵtemplate(1, ThyTransferListComponent_ng_template_4_ng_container_1_Template, 1, 0, "ng-container", 15);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r2.contentRef)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c2, ctx_r2.items, ctx_r2.onSelectItem, ctx_r2.onUnselectItem));
} }
export class ThyTransferListComponent {
    constructor(root, differs) {
        this.root = root;
        this.differs = differs;
        this.lockItems = [];
        this.unlockItems = [];
        this.draggableUpdate = new EventEmitter();
        this.selectItem = new EventEmitter();
        this.unselectItem = new EventEmitter();
        this.hostClass = 'thy-transfer-list';
        this.lockListEnterPredicate = () => {
            return this.lockItems.length < this.maxLock;
        };
        this.onSelectItem = (item) => {
            this.selectItem.emit({ item });
        };
        this.onUnselectItem = (item) => {
            this.unselectItem.emit({ item });
        };
    }
    ngOnInit() {
        this._combineTransferData();
        if (this.canLock) {
            this._lockDiff = this.differs.find(this.lockItems).create();
            this._unlockDiff = this.differs.find(this.unlockItems).create();
        }
        else {
            this._unlockDiff = this.differs.find(this.unlockItems).create();
        }
        this._diff = this.differs.find(this.items).create();
    }
    _combineTransferData() {
        this.lockItems = [];
        this.unlockItems = [];
        if (this.canLock) {
            (this.items || []).forEach(item => {
                if (item.isLock) {
                    this.lockItems.push(item);
                }
                else {
                    this.unlockItems.push(item);
                }
            });
        }
        else {
            this.unlockItems = this.items;
        }
    }
    _afterChangeItems(changes, items) {
        // 数据发生变化时，更改order值
        changes.forEachAddedItem(record => {
            record.item.order = record.currentIndex;
        });
        changes.forEachRemovedItem(() => {
            items.forEach((item, index) => {
                item.order = index;
            });
        });
        changes.forEachMovedItem(() => {
            items.forEach((item, index) => {
                item.order = index;
            });
        });
    }
    ngDoCheck() {
        const changes = this._diff.diff(this.items);
        if (changes) {
            this._afterChangeItems(changes, this.items);
            this._combineTransferData();
        }
        if (this._lockDiff) {
            const lockChanges = this._lockDiff.diff(this.lockItems);
            if (lockChanges) {
                this._afterChangeItems(lockChanges, this.lockItems);
            }
        }
        const unlockChanges = this._unlockDiff.diff(this.unlockItems);
        if (unlockChanges) {
            this._afterChangeItems(unlockChanges, this.unlockItems);
        }
    }
    drop(event) {
        if (event.previousContainer === event.container) {
            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);
        }
        else {
            transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);
            (event.previousContainer.data || []).forEach(item => {
                item.isLock = event.previousContainer.id === 'lock';
            });
            (event.container.data || []).forEach(item => {
                item.isLock = event.container.id === 'lock';
            });
        }
        const dragEvent = {
            model: event.item.data,
            models: event.container.data,
            oldIndex: event.previousIndex,
            newIndex: event.currentIndex
        };
        this.draggableUpdate.emit({
            dragEvent: dragEvent,
            listData: { lock: this.lockItems, unlock: this.unlockItems }
        });
    }
}
ThyTransferListComponent.ɵfac = function ThyTransferListComponent_Factory(t) { return new (t || ThyTransferListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyTransferComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };
ThyTransferListComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyTransferListComponent, selectors: [["thy-transfer-list"]], hostVars: 2, hostBindings: function ThyTransferListComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.hostClass);
    } }, inputs: { title: "title", items: "items", draggable: "draggable", canLock: "canLock", maxLock: "maxLock", template: "template", contentRef: ["renderContentRef", "contentRef"] }, outputs: { draggableUpdate: "draggableUpdate", selectItem: "selectItem", unselectItem: "unselectItem" }, decls: 6, vars: 4, consts: [[1, "thy-transfer-list-header"], [1, "thy-transfer-list-header-title"], [4, "ngIf", "ngIfElse"], ["renderContent", ""], ["cdkDropListGroup", "", 1, "thy-transfer-list-body", 3, "cdkDropListGroupDisabled"], [4, "ngIf"], ["cdkDropList", "", "thyDragDrop", "", "id", "unlock", 1, "thy-transfer-list-content", 3, "cdkDropListDisabled", "cdkDropListData", "cdkDropListDropped"], ["class", "cdk-drop-list-empty", 4, "ngIf"], ["class", "thy-transfer-list-content-item text-truncate", "cdkDrag", "", 3, "cdkDragData", "ngClass", 4, "ngFor", "ngForOf"], [1, "thy-transfer-list-group-name"], ["cdkDropList", "", "thyDragDrop", "", "id", "lock", 1, "thy-transfer-list-content", 3, "cdkDropListData", "cdkDropListEnterPredicate", "cdkDropListDropped"], [1, "cdk-drop-list-empty"], ["cdkDrag", "", 1, "thy-transfer-list-content-item", "text-truncate", 3, "cdkDragData", "ngClass"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "thy-transfer-list-body"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"]], template: function ThyTransferListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "span", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(3, ThyTransferListComponent_ng_container_3_Template, 6, 6, "ng-container", 2);
        ɵngcc0.ɵɵtemplate(4, ThyTransferListComponent_ng_template_4_Template, 2, 6, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(5);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate2("", ctx.title, " \u00B7 ", ctx.items == null ? null : ctx.items.length, "");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.contentRef)("ngIfElse", _r1);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.CdkDropListGroup, ɵngcc4.ThyListComponent, ɵngcc3.CdkDropList, ɵngcc5.ThyDragDropDirective, ɵngcc2.NgForOf, ɵngcc4.ThyListItemComponent, ɵngcc3.CdkDrag, ɵngcc2.NgClass, ɵngcc2.NgTemplateOutlet], encapsulation: 2 });
ThyTransferListComponent.ctorParameters = () => [
    { type: ThyTransferComponent },
    { type: IterableDiffers }
];
ThyTransferListComponent.propDecorators = {
    title: [{ type: Input }],
    items: [{ type: Input }],
    draggable: [{ type: Input }],
    canLock: [{ type: Input }],
    maxLock: [{ type: Input }],
    template: [{ type: Input }],
    contentRef: [{ type: Input, args: ['renderContentRef',] }],
    draggableUpdate: [{ type: Output }],
    selectItem: [{ type: Output }],
    unselectItem: [{ type: Output }],
    hostClass: [{ type: HostBinding, args: ['class',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyTransferListComponent, [{
        type: Component,
        args: [{
                selector: 'thy-transfer-list',
                template: "<div class=\"thy-transfer-list-header\">\n  <span class=\"thy-transfer-list-header-title\">{{ title }} \u00B7 {{ items?.length }}</span>\n</div>\n<ng-container *ngIf=\"!contentRef; else renderContent\">\n  <div class=\"thy-transfer-list-body\" cdkDropListGroup [cdkDropListGroupDisabled]=\"!draggable\">\n    <ng-container *ngIf=\"canLock\">\n      <div class=\"thy-transfer-list-group-name\">\u9501\u5B9A (\u4E0A\u9650{{ maxLock }}\u4E2A)</div>\n      <thy-list\n        class=\"thy-transfer-list-content\"\n        cdkDropList\n        thyDragDrop\n        id=\"lock\"\n        [cdkDropListData]=\"lockItems\"\n        (cdkDropListDropped)=\"drop($event)\"\n        [cdkDropListEnterPredicate]=\"lockListEnterPredicate\"\n      >\n        <div class=\"cdk-drop-list-empty\" *ngIf=\"lockItems.length === 0\"></div>\n        <thy-list-item\n          class=\"thy-transfer-list-content-item text-truncate\"\n          cdkDrag\n          [cdkDragData]=\"item\"\n          *ngFor=\"let item of lockItems\"\n          [ngClass]=\"{ active: item.checked }\"\n        >\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n        </thy-list-item>\n      </thy-list>\n\n      <div class=\"thy-transfer-list-group-name\">\u672A\u9501\u5B9A</div>\n    </ng-container>\n    <thy-list\n      class=\"thy-transfer-list-content\"\n      cdkDropList\n      thyDragDrop\n      [cdkDropListDisabled]=\"!draggable\"\n      id=\"unlock\"\n      [cdkDropListData]=\"unlockItems\"\n      (cdkDropListDropped)=\"drop($event)\"\n    >\n      <div class=\"cdk-drop-list-empty\" *ngIf=\"unlockItems.length === 0\"></div>\n      <thy-list-item\n        class=\"thy-transfer-list-content-item text-truncate\"\n        cdkDrag\n        [cdkDragData]=\"item\"\n        *ngFor=\"let item of unlockItems\"\n        [ngClass]=\"{ active: item.checked }\"\n      >\n        <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n      </thy-list-item>\n    </thy-list>\n  </div>\n</ng-container>\n\n<ng-template #renderContent>\n  <div class=\"thy-transfer-list-body\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        contentRef;\n        context: {\n          $implicit: items,\n          onSelectItem: onSelectItem,\n          onUnselectItem: onUnselectItem\n        }\n      \"\n    ></ng-container>\n  </div>\n</ng-template>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.ThyTransferComponent }, { type: ɵngcc0.IterableDiffers }]; }, { draggableUpdate: [{
            type: Output
        }], selectItem: [{
            type: Output
        }], unselectItem: [{
            type: Output
        }], hostClass: [{
            type: HostBinding,
            args: ['class']
        }], title: [{
            type: Input
        }], items: [{
            type: Input
        }], draggable: [{
            type: Input
        }], canLock: [{
            type: Input
        }], maxLock: [{
            type: Input
        }], template: [{
            type: Input
        }], contentRef: [{
            type: Input,
            args: ['renderContentRef']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,