import { Component, Input, Output, ViewEncapsulation, HostBinding, EventEmitter, ContentChild, TemplateRef } from '@angular/core';
import { TransferDirection } from './transfer.interface';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["renderTemplate"];
const _c1 = ["renderLeftTemplate"];
const _c2 = ["renderRightTemplate"];
function ThyTransferComponent_ng_template_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "thy-icon", 14);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ThyTransferComponent_ng_template_1_ng_template_3_Template(rf, ctx) { }
function ThyTransferComponent_ng_template_1_thy_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 15);
} }
const _c3 = function (a0) { return { "un-select-item": a0 }; };
const _c4 = function (a0) { return { $implicit: a0 }; };
function ThyTransferComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵlistener("click", function ThyTransferComponent_ng_template_1_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const item_r6 = ctx.$implicit; const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onSelect(item_r6.direction === "left" ? "left" : "right", { item: item_r6 }); });
    ɵngcc0.ɵɵtemplate(1, ThyTransferComponent_ng_template_1_ng_container_1_Template, 2, 0, "ng-container", 10);
    ɵngcc0.ɵɵelementStart(2, "div", 11);
    ɵngcc0.ɵɵtemplate(3, ThyTransferComponent_ng_template_1_ng_template_3_Template, 0, 0, "ng-template", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, ThyTransferComponent_ng_template_1_thy_icon_4_Template, 1, 0, "thy-icon", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r6 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    const _r4 = ɵngcc0.ɵɵreference(12);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.thyLeftDraggable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(5, _c3, item_r6.direction !== "right"));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(7, _c4, item_r6));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r6.direction === "right");
} }
function ThyTransferComponent_ng_template_9_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "thy-icon", 14);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ThyTransferComponent_ng_template_9_ng_template_2_Template(rf, ctx) { }
function ThyTransferComponent_ng_template_9_a_3_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 18);
    ɵngcc0.ɵɵlistener("click", function ThyTransferComponent_ng_template_9_a_3_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); const item_r12 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.onSelect("right", { item: item_r12 }); });
    ɵngcc0.ɵɵelement(1, "thy-icon", 19);
    ɵngcc0.ɵɵelementEnd();
} }
function ThyTransferComponent_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThyTransferComponent_ng_template_9_ng_container_0_Template, 2, 0, "ng-container", 10);
    ɵngcc0.ɵɵelementStart(1, "div", 16);
    ɵngcc0.ɵɵtemplate(2, ThyTransferComponent_ng_template_9_ng_template_2_Template, 0, 0, "ng-template", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, ThyTransferComponent_ng_template_9_a_3_Template, 2, 0, "a", 17);
} if (rf & 2) {
    const item_r12 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    const _r4 = ɵngcc0.ɵɵreference(12);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.thyRightDraggable);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r4)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(4, _c4, item_r12));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r12.direction === "right" && !item_r12.isFixed);
} }
function ThyTransferComponent_ng_template_11_0_ng_template_0_Template(rf, ctx) { }
function ThyTransferComponent_ng_template_11_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThyTransferComponent_ng_template_11_0_ng_template_0_Template, 0, 0, "ng-template", 12);
} if (rf & 2) {
    const item_r19 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r20 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r20.templateRef)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c4, item_r19));
} }
function ThyTransferComponent_ng_template_11_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "thy-flexible-text", 20);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const item_r19 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("thyTooltipContent", item_r19.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", item_r19.title, " ");
} }
function ThyTransferComponent_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ThyTransferComponent_ng_template_11_0_Template, 1, 4, undefined, 10);
    ɵngcc0.ɵɵtemplate(1, ThyTransferComponent_ng_template_11_ng_container_1_Template, 3, 2, "ng-container", 10);
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.templateRef);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r5.templateRef);
} }
export class ThyTransferComponent {
    constructor() {
        this.hostClass = 'thy-transfer';
        this.leftDataSource = [];
        this.rightDataSource = [];
        this.allDataSource = [];
        this.rightDraggable = false;
        this._autoMove = true;
        this.thyDraggableUpdate = new EventEmitter();
        this.thyChange = new EventEmitter();
    }
    set thyData(value) {
        if (value) {
            this.initializeTransferData(value);
        }
    }
    // @Input() transferToRight
    set thyTitles(value) {
        this.leftTitle = value[0] || '';
        this.rightTitle = value[1] || '';
    }
    // Currently not implemented, in order to support the selections move
    set thyAutoMove(value) {
        this._autoMove = value;
    }
    ngOnInit() { }
    initializeTransferData(data = []) {
        this.allDataSource = [];
        this.leftDataSource = [];
        this.rightDataSource = [];
        data.forEach(item => {
            this.allDataSource.push(item);
            if (item.direction === TransferDirection.left) {
                this.leftDataSource.push(item);
            }
            if (item.direction === TransferDirection.right) {
                this.rightDataSource.push(item);
            }
        });
    }
    onSelect(from, event) {
        if (event.item.isFixed) {
            return;
        }
        const to = from === TransferDirection.left ? TransferDirection.right : TransferDirection.left;
        event.item.checked = !event.item.checked;
        if (this._autoMove) {
            this.onMove(to);
        }
    }
    selectItem(event) {
        this.onSelect(TransferDirection.left, event);
    }
    unselectItem(event) {
        this.onSelect(TransferDirection.right, event);
    }
    groupListByIsLock(list = []) {
        const lock = [], unlock = [];
        list.forEach(item => {
            if (item.isLock) {
                lock.push(item);
            }
            else {
                unlock.push(item);
            }
        });
        return { lock: lock, unlock: unlock };
    }
    onMove(to) {
        const fromDataSource = to === TransferDirection.right ? this.leftDataSource : this.rightDataSource;
        const toDataSource = to === TransferDirection.right ? this.rightDataSource : this.leftDataSource;
        const selections = fromDataSource.filter(item => item.checked);
        const changeEvent = {
            from: to === TransferDirection.right ? TransferDirection.left : TransferDirection.right,
            to: to,
            items: [...selections]
        };
        selections.forEach(item => {
            const index = fromDataSource.indexOf(item);
            const removed = fromDataSource.splice(index, 1)[0];
            removed.checked = !removed.checked;
            removed.direction = to;
            toDataSource.push(removed);
        });
        this.thyChange.emit(Object.assign(Object.assign({}, changeEvent), { left: this.groupListByIsLock(this.leftDataSource), right: this.groupListByIsLock(this.rightDataSource) }));
    }
    onDragUpdate(direction, event) {
        const otherDirectionData = direction === TransferDirection.left ? this.rightDataSource : this.leftDataSource;
        const otherListData = this.groupListByIsLock(otherDirectionData);
        this.thyDraggableUpdate.emit(Object.assign(Object.assign({}, event.dragEvent), { left: direction === TransferDirection.left ? event.listData : otherListData, right: direction === TransferDirection.right ? event.listData : otherListData }));
    }
}
ThyTransferComponent.ɵfac = function ThyTransferComponent_Factory(t) { return new (t || ThyTransferComponent)(); };
ThyTransferComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyTransferComponent, selectors: [["thy-transfer"]], contentQueries: function ThyTransferComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c1, true);
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c2, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.leftContentRef = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rightContentRef = _t.first);
    } }, hostVars: 2, hostBindings: function ThyTransferComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.hostClass);
    } }, inputs: { thyData: "thyData", thyTitles: "thyTitles", thyAutoMove: "thyAutoMove", thyrenderLeftTemplateRef: "thyrenderLeftTemplateRef", thyrenderRightTemplateRef: "thyrenderRightTemplateRef", thyRightCanLock: "thyRightCanLock", thyRightLockMax: "thyRightLockMax", thyLeftDraggable: "thyLeftDraggable", thyRightDraggable: "thyRightDraggable" }, outputs: { thyDraggableUpdate: "thyDraggableUpdate", thyChange: "thyChange" }, decls: 13, vars: 12, consts: [[3, "items", "title", "draggable", "renderContentRef", "template", "draggableUpdate", "selectItem", "unselectItem"], ["leftTemplateRef", ""], [1, "thy-transfer-operation"], [1, "thy-transfer-operation-body"], ["thyIconName", "angle-right", 1, "operation-link"], ["thyIconName", "angle-left", 1, "operation-link"], [3, "items", "title", "draggable", "canLock", "maxLock", "template", "renderContentRef", "draggableUpdate", "selectItem", "unselectItem"], ["rightTemplateRef", ""], ["thyTransferListItem", ""], [1, "list-item-content", 3, "click"], [4, "ngIf"], [1, "item-name", 3, "ngClass"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["class", "text-primary item-status", "thyIconName", "check", 4, "ngIf"], ["thyIconName", "drag", 1, "drag-handle"], ["thyIconName", "check", 1, "text-primary", "item-status"], [1, "item-name"], ["class", "link-secondary", 3, "click", 4, "ngIf"], [1, "link-secondary", 3, "click"], ["thyIconName", "close", 1, "item-status"], [3, "thyTooltipContent"]], template: function ThyTransferComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "thy-transfer-list", 0);
        ɵngcc0.ɵɵlistener("draggableUpdate", function ThyTransferComponent_Template_thy_transfer_list_draggableUpdate_0_listener($event) { return ctx.onDragUpdate("left", $event); })("selectItem", function ThyTransferComponent_Template_thy_transfer_list_selectItem_0_listener($event) { return ctx.selectItem($event); })("unselectItem", function ThyTransferComponent_Template_thy_transfer_list_unselectItem_0_listener($event) { return ctx.unselectItem($event); });
        ɵngcc0.ɵɵtemplate(1, ThyTransferComponent_ng_template_1_Template, 5, 9, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵelement(5, "thy-icon", 4);
        ɵngcc0.ɵɵelement(6, "br");
        ɵngcc0.ɵɵelement(7, "thy-icon", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "thy-transfer-list", 6);
        ɵngcc0.ɵɵlistener("draggableUpdate", function ThyTransferComponent_Template_thy_transfer_list_draggableUpdate_8_listener($event) { return ctx.onDragUpdate("right", $event); })("selectItem", function ThyTransferComponent_Template_thy_transfer_list_selectItem_8_listener($event) { return ctx.selectItem($event); })("unselectItem", function ThyTransferComponent_Template_thy_transfer_list_unselectItem_8_listener($event) { return ctx.unselectItem($event); });
        ɵngcc0.ɵɵtemplate(9, ThyTransferComponent_ng_template_9_Template, 4, 6, "ng-template", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(11, ThyTransferComponent_ng_template_11_Template, 2, 2, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(2);
        const _r2 = ɵngcc0.ɵɵreference(10);
        ɵngcc0.ɵɵproperty("items", ctx.allDataSource)("title", ctx.leftTitle)("draggable", ctx.thyLeftDraggable)("renderContentRef", ctx.leftContentRef)("template", _r0);
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵproperty("items", ctx.rightDataSource)("title", ctx.rightTitle)("draggable", ctx.thyRightDraggable)("canLock", ctx.thyRightCanLock)("maxLock", ctx.thyRightLockMax)("template", _r2)("renderContentRef", ctx.rightContentRef);
    } }, encapsulation: 2 });
ThyTransferComponent.propDecorators = {
    hostClass: [{ type: HostBinding, args: ['class',] }],
    thyData: [{ type: Input }],
    thyrenderLeftTemplateRef: [{ type: Input }],
    thyrenderRightTemplateRef: [{ type: Input }],
    thyTitles: [{ type: Input }],
    thyRightCanLock: [{ type: Input }],
    thyRightLockMax: [{ type: Input }],
    thyAutoMove: [{ type: Input }],
    thyLeftDraggable: [{ type: Input }],
    thyRightDraggable: [{ type: Input }],
    thyDraggableUpdate: [{ type: Output }],
    thyChange: [{ type: Output }],
    templateRef: [{ type: ContentChild, args: ['renderTemplate',] }],
    leftContentRef: [{ type: ContentChild, args: ['renderLeftTemplate',] }],
    rightContentRef: [{ type: ContentChild, args: ['renderRightTemplate',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyTransferComponent, [{
        type: Component,
        args: [{
                selector: 'thy-transfer',
                template: "<thy-transfer-list\n  [items]=\"allDataSource\"\n  [title]=\"leftTitle\"\n  [draggable]=\"thyLeftDraggable\"\n  [renderContentRef]=\"leftContentRef\"\n  (draggableUpdate)=\"onDragUpdate('left', $event)\"\n  [template]=\"leftTemplateRef\"\n  (selectItem)=\"selectItem($event)\"\n  (unselectItem)=\"unselectItem($event)\"\n>\n  <ng-template #leftTemplateRef let-item>\n    <div (click)=\"onSelect(item.direction === 'left' ? 'left' : 'right', { item: item })\" class=\"list-item-content\">\n      <ng-container *ngIf=\"thyLeftDraggable\">\n        <thy-icon thyIconName=\"drag\" class=\"drag-handle\"></thy-icon>\n      </ng-container>\n      <div class=\"item-name\" [ngClass]=\"{ 'un-select-item': item.direction !== 'right' }\">\n        <ng-template [ngTemplateOutlet]=\"thyTransferListItem\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n      </div>\n      <thy-icon *ngIf=\"item.direction === 'right'\" class=\"text-primary item-status\" thyIconName=\"check\"></thy-icon>\n    </div>\n  </ng-template>\n</thy-transfer-list>\n\n<div class=\"thy-transfer-operation\">\n  <div class=\"thy-transfer-operation-body\">\n    <thy-icon thyIconName=\"angle-right\" class=\"operation-link\"></thy-icon>\n    <br />\n    <thy-icon thyIconName=\"angle-left\" class=\"operation-link\"></thy-icon>\n  </div>\n</div>\n\n<thy-transfer-list\n  [items]=\"rightDataSource\"\n  [title]=\"rightTitle\"\n  [draggable]=\"thyRightDraggable\"\n  (draggableUpdate)=\"onDragUpdate('right', $event)\"\n  [canLock]=\"thyRightCanLock\"\n  [maxLock]=\"thyRightLockMax\"\n  [template]=\"rightTemplateRef\"\n  [renderContentRef]=\"rightContentRef\"\n  (selectItem)=\"selectItem($event)\"\n  (unselectItem)=\"unselectItem($event)\"\n>\n  <ng-template #rightTemplateRef let-item>\n    <ng-container *ngIf=\"thyRightDraggable\">\n      <thy-icon thyIconName=\"drag\" class=\"drag-handle\"></thy-icon>\n    </ng-container>\n    <div class=\"item-name\">\n      <ng-template [ngTemplateOutlet]=\"thyTransferListItem\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n    </div>\n    <a class=\"link-secondary\" *ngIf=\"item.direction === 'right' && !item.isFixed\" (click)=\"onSelect('right', { item: item })\">\n      <thy-icon class=\"item-status\" thyIconName=\"close\"></thy-icon>\n    </a>\n  </ng-template>\n</thy-transfer-list>\n\n<ng-template #thyTransferListItem let-item>\n  <ng-template *ngIf=\"templateRef\" [ngTemplateOutlet]=\"templateRef\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n  <ng-container *ngIf=\"!templateRef\">\n    <thy-flexible-text [thyTooltipContent]=\"item.title\">\n      {{ item.title }}\n    </thy-flexible-text>\n  </ng-container>\n</ng-template>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return []; }, { hostClass: [{
            type: HostBinding,
            args: ['class']
        }], thyDraggableUpdate: [{
            type: Output
        }], thyChange: [{
            type: Output
        }], thyData: [{
            type: Input
        }], thyTitles: [{
            type: Input
        }], thyAutoMove: [{
            type: Input
        }], thyrenderLeftTemplateRef: [{
            type: Input
        }], thyrenderRightTemplateRef: [{
            type: Input
        }], thyRightCanLock: [{
            type: Input
        }], thyRightLockMax: [{
            type: Input
        }], thyLeftDraggable: [{
            type: Input
        }], thyRightDraggable: [{
            type: Input
        }], templateRef: [{
            type: ContentChild,
            args: ['renderTemplate']
        }], leftContentRef: [{
            type: ContentChild,
            args: ['renderLeftTemplate']
        }], rightContentRef: [{
            type: ContentChild,
            args: ['renderRightTemplate']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,