import { NgModule, NgModuleRef } from '@angular/core';
import { ROOT_STATE_TOKEN, FEATURE_STATE_TOKEN } from './types';
import { clearInjector, setInjector } from './internals/static-injector';
export class ThyRootStoreModule {
    constructor(ngModuleRef) {
        setInjector(ngModuleRef.injector);
        ngModuleRef.onDestroy(clearInjector);
    }
}
ThyRootStoreModule.decorators = [
    { type: NgModule }
];
ThyRootStoreModule.ctorParameters = () => [
    { type: NgModuleRef }
];
export class ThyFeatureStoreModule {
}
ThyFeatureStoreModule.decorators = [
    { type: NgModule }
];
export class ThyStoreModule {
    static forRoot(stores = []) {
        return {
            ngModule: ThyRootStoreModule,
            providers: [
                ...stores,
                {
                    provide: ROOT_STATE_TOKEN,
                    useValue: stores
                }
            ]
        };
    }
    static forFeature(stores = []) {
        return {
            ngModule: ThyFeatureStoreModule,
            providers: [
                ...stores,
                {
                    provide: FEATURE_STATE_TOKEN,
                    multi: true,
                    useValue: stores
                }
            ]
        };
    }
}
ThyStoreModule.decorators = [
    { type: NgModule, args: [{},] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0b3JlL21vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QyxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0YsT0FBTyxFQUFFLGdCQUFnQixFQUFFLG1CQUFtQixFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRWhFLE9BQU8sRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFHekUsTUFBTSxPQUFPLGtCQUFrQjtJQUMzQixZQUFZLFdBQTZCO1FBQ3JDLFdBQVcsQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbEMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN6QyxDQUFDOzs7WUFMSixRQUFROzs7WUFMK0MsV0FBVzs7QUFjbkUsTUFBTSxPQUFPLHFCQUFxQjs7O1lBRGpDLFFBQVE7O0FBSVQsTUFBTSxPQUFPLGNBQWM7SUFDdkIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUF3QixFQUFFO1FBQ3JDLE9BQU87WUFDSCxRQUFRLEVBQUUsa0JBQWtCO1lBQzVCLFNBQVMsRUFBRTtnQkFDUCxHQUFHLE1BQU07Z0JBQ1Q7b0JBQ0ksT0FBTyxFQUFFLGdCQUFnQjtvQkFDekIsUUFBUSxFQUFFLE1BQU07aUJBQ25CO2FBQ0o7U0FDSixDQUFDO0lBQ04sQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUFVLENBQUMsU0FBd0IsRUFBRTtRQUN4QyxPQUFPO1lBQ0gsUUFBUSxFQUFFLHFCQUFxQjtZQUMvQixTQUFTLEVBQUU7Z0JBQ1AsR0FBRyxNQUFNO2dCQUNUO29CQUNJLE9BQU8sRUFBRSxtQkFBbUI7b0JBQzVCLEtBQUssRUFBRSxJQUFJO29CQUNYLFFBQVEsRUFBRSxNQUFNO2lCQUNuQjthQUNKO1NBQ0osQ0FBQztJQUNOLENBQUM7OztZQTNCSixRQUFRLFNBQUMsRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBUeXBlLCBJbmplY3RvciwgTmdNb2R1bGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJPT1RfU1RBVEVfVE9LRU4sIEZFQVRVUkVfU1RBVEVfVE9LRU4gfSBmcm9tICcuL3R5cGVzJztcbmltcG9ydCB7IFN0b3JlIH0gZnJvbSAnLi9zdG9yZSc7XG5pbXBvcnQgeyBjbGVhckluamVjdG9yLCBzZXRJbmplY3RvciB9IGZyb20gJy4vaW50ZXJuYWxzL3N0YXRpYy1pbmplY3Rvcic7XG5cbkBOZ01vZHVsZSgpXG5leHBvcnQgY2xhc3MgVGh5Um9vdFN0b3JlTW9kdWxlIHtcbiAgICBjb25zdHJ1Y3RvcihuZ01vZHVsZVJlZjogTmdNb2R1bGVSZWY8YW55Pikge1xuICAgICAgICBzZXRJbmplY3RvcihuZ01vZHVsZVJlZi5pbmplY3Rvcik7XG4gICAgICAgIG5nTW9kdWxlUmVmLm9uRGVzdHJveShjbGVhckluamVjdG9yKTtcbiAgICB9XG59XG5cbkBOZ01vZHVsZSgpXG5leHBvcnQgY2xhc3MgVGh5RmVhdHVyZVN0b3JlTW9kdWxlIHt9XG5cbkBOZ01vZHVsZSh7fSlcbmV4cG9ydCBjbGFzcyBUaHlTdG9yZU1vZHVsZSB7XG4gICAgc3RhdGljIGZvclJvb3Qoc3RvcmVzOiBUeXBlPFN0b3JlPltdID0gW10pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFRoeVJvb3RTdG9yZU1vZHVsZT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IFRoeVJvb3RTdG9yZU1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIC4uLnN0b3JlcyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3ZpZGU6IFJPT1RfU1RBVEVfVE9LRU4sXG4gICAgICAgICAgICAgICAgICAgIHVzZVZhbHVlOiBzdG9yZXNcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgc3RhdGljIGZvckZlYXR1cmUoc3RvcmVzOiBUeXBlPFN0b3JlPltdID0gW10pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFRoeUZlYXR1cmVTdG9yZU1vZHVsZT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmdNb2R1bGU6IFRoeUZlYXR1cmVTdG9yZU1vZHVsZSxcbiAgICAgICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAgICAgIC4uLnN0b3JlcyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHByb3ZpZGU6IEZFQVRVUkVfU1RBVEVfVE9LRU4sXG4gICAgICAgICAgICAgICAgICAgIG11bHRpOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB1c2VWYWx1ZTogc3RvcmVzXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdfQ==