import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ThyTreeComponent } from './tree.component';
import { ThyTreeNodeComponent } from './tree-node.component';
import { ThyTreeReplaceRegionComponent } from './tree-replace-region.component';
import { ThyInputModule } from 'ngx-tethys/input';
import { ThyButtonModule } from 'ngx-tethys/button';
import { ThySharedModule } from 'ngx-tethys/shared';
import { ThyTreeService } from './tree.service';
import { ThyListModule } from 'ngx-tethys/list';
import { ThyOptionModule } from 'ngx-tethys/shared';
import { FormsModule } from '@angular/forms';
import { ThyLoadingModule } from 'ngx-tethys/loading';
import { ThyIconModule } from 'ngx-tethys/icon';
import { ThyDragDropModule } from 'ngx-tethys/drag-drop';
import { ThyCheckboxModule } from 'ngx-tethys/checkbox';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-tethys/drag-drop';
import * as ɵngcc2 from '@angular/common';
export class ThyTreeModule {
}
ThyTreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ThyTreeModule });
ThyTreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ThyTreeModule_Factory(t) { return new (t || ThyTreeModule)(); }, providers: [ThyTreeService], imports: [[
            CommonModule,
            ThyInputModule,
            ThyButtonModule,
            ThySharedModule,
            FormsModule,
            ThyListModule,
            ThyOptionModule,
            ThyLoadingModule,
            ThyIconModule,
            ThyDragDropModule,
            ThyCheckboxModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThyTreeModule, { declarations: function () { return [ThyTreeComponent, ThyTreeNodeComponent, ThyTreeReplaceRegionComponent]; }, imports: function () { return [CommonModule,
        ThyInputModule,
        ThyButtonModule,
        ThySharedModule,
        FormsModule,
        ThyListModule,
        ThyOptionModule,
        ThyLoadingModule,
        ThyIconModule,
        ThyDragDropModule,
        ThyCheckboxModule]; }, exports: function () { return [ThyTreeComponent, ThyTreeNodeComponent, ThyTreeReplaceRegionComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyTreeModule, [{
        type: NgModule,
        args: [{
                declarations: [ThyTreeComponent, ThyTreeNodeComponent, ThyTreeReplaceRegionComponent],
                imports: [
                    CommonModule,
                    ThyInputModule,
                    ThyButtonModule,
                    ThySharedModule,
                    FormsModule,
                    ThyListModule,
                    ThyOptionModule,
                    ThyLoadingModule,
                    ThyIconModule,
                    ThyDragDropModule,
                    ThyCheckboxModule
                ],
                entryComponents: [ThyTreeComponent],
                exports: [ThyTreeComponent, ThyTreeNodeComponent, ThyTreeReplaceRegionComponent],
                providers: [ThyTreeService]
            }]
    }], null, null); })();
ɵngcc0.ɵɵsetComponentScope(ThyTreeComponent, [ɵngcc1.ThyDropContainerDirective, ɵngcc2.NgForOf, ThyTreeNodeComponent, ɵngcc1.ThyDragDirective], []);

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90cmVlL3RyZWUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzdELE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDcEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDekQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7QUFxQnhELE1BQU0sT0FBTyxhQUFhO0FBQUc7eUNBbkI1QixRQUFRLFNBQUM7S0FDTixZQUFZLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxvQkFBb0IsRUFBRSw2QkFBNkIsQ0FBQyxrQkFDckYsT0FBTyxFQUFFLHNCQUNMLFlBQVk7RUFDWixjQUFjO1lBQ2QsZUFBZTtxQkFDZjtPQUFlO0FBQ2YsV0FBVztRQUNYLGFBQWE7Z0JBQ2I7RUFBZSxzQkFDZjtVQUFnQjtLQUNoQixhQUFhO1NBQ2IsaUJBQWlCOztHQUNqQixpQkFBaUIsa0JBQ3BCLGtCQUNELGVBQWUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLGtCQUNuQyxPQUFPLEVBQUUsQ0FBQyxnQkFBZ0IsRUFBRSxvQkFBb0IsRUFBRSw2QkFBNkIsQ0FBQyxrQkFDaEYsU0FBUyxFQUFFLENBQUMsY0FBYyxDQUFDLGNBQzlCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0pBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgVGh5VHJlZUNvbXBvbmVudCB9IGZyb20gJy4vdHJlZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGh5VHJlZU5vZGVDb21wb25lbnQgfSBmcm9tICcuL3RyZWUtbm9kZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGh5VHJlZVJlcGxhY2VSZWdpb25Db21wb25lbnQgfSBmcm9tICcuL3RyZWUtcmVwbGFjZS1yZWdpb24uY29tcG9uZW50JztcbmltcG9ydCB7IFRoeUlucHV0TW9kdWxlIH0gZnJvbSAnbmd4LXRldGh5cy9pbnB1dCc7XG5pbXBvcnQgeyBUaHlCdXR0b25Nb2R1bGUgfSBmcm9tICduZ3gtdGV0aHlzL2J1dHRvbic7XG5pbXBvcnQgeyBUaHlTaGFyZWRNb2R1bGUgfSBmcm9tICduZ3gtdGV0aHlzL3NoYXJlZCc7XG5pbXBvcnQgeyBUaHlUcmVlU2VydmljZSB9IGZyb20gJy4vdHJlZS5zZXJ2aWNlJztcbmltcG9ydCB7IFRoeUxpc3RNb2R1bGUgfSBmcm9tICduZ3gtdGV0aHlzL2xpc3QnO1xuaW1wb3J0IHsgVGh5T3B0aW9uTW9kdWxlIH0gZnJvbSAnbmd4LXRldGh5cy9zaGFyZWQnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBUaHlMb2FkaW5nTW9kdWxlIH0gZnJvbSAnbmd4LXRldGh5cy9sb2FkaW5nJztcbmltcG9ydCB7IFRoeUljb25Nb2R1bGUgfSBmcm9tICduZ3gtdGV0aHlzL2ljb24nO1xuaW1wb3J0IHsgVGh5RHJhZ0Ryb3BNb2R1bGUgfSBmcm9tICduZ3gtdGV0aHlzL2RyYWctZHJvcCc7XG5pbXBvcnQgeyBUaHlDaGVja2JveE1vZHVsZSB9IGZyb20gJ25neC10ZXRoeXMvY2hlY2tib3gnO1xuXG5ATmdNb2R1bGUoe1xuICAgIGRlY2xhcmF0aW9uczogW1RoeVRyZWVDb21wb25lbnQsIFRoeVRyZWVOb2RlQ29tcG9uZW50LCBUaHlUcmVlUmVwbGFjZVJlZ2lvbkNvbXBvbmVudF0sXG4gICAgaW1wb3J0czogW1xuICAgICAgICBDb21tb25Nb2R1bGUsXG4gICAgICAgIFRoeUlucHV0TW9kdWxlLFxuICAgICAgICBUaHlCdXR0b25Nb2R1bGUsXG4gICAgICAgIFRoeVNoYXJlZE1vZHVsZSxcbiAgICAgICAgRm9ybXNNb2R1bGUsXG4gICAgICAgIFRoeUxpc3RNb2R1bGUsXG4gICAgICAgIFRoeU9wdGlvbk1vZHVsZSxcbiAgICAgICAgVGh5TG9hZGluZ01vZHVsZSxcbiAgICAgICAgVGh5SWNvbk1vZHVsZSxcbiAgICAgICAgVGh5RHJhZ0Ryb3BNb2R1bGUsXG4gICAgICAgIFRoeUNoZWNrYm94TW9kdWxlXG4gICAgXSxcbiAgICBlbnRyeUNvbXBvbmVudHM6IFtUaHlUcmVlQ29tcG9uZW50XSxcbiAgICBleHBvcnRzOiBbVGh5VHJlZUNvbXBvbmVudCwgVGh5VHJlZU5vZGVDb21wb25lbnQsIFRoeVRyZWVSZXBsYWNlUmVnaW9uQ29tcG9uZW50XSxcbiAgICBwcm92aWRlcnM6IFtUaHlUcmVlU2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgVGh5VHJlZU1vZHVsZSB7fVxuIl19