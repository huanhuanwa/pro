import { Component, ViewEncapsulation, ContentChild, TemplateRef, Input, HostBinding, ViewChild, ElementRef, Output, EventEmitter, NgZone, ChangeDetectorRef } from '@angular/core';
import { ThyTreeComponent } from './tree.component';
import { ThyTreeNodeCheckState } from './tree.class';
import { ThyTreeNode } from './tree-node.class';
import { ThyTreeService } from './tree.service';
import { takeUntil, filter } from 'rxjs/operators';
import { Subject } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './tree.component';
import * as ɵngcc2 from './tree.service';
import * as ɵngcc3 from 'ngx-tethys/drag-drop';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from 'ngx-tethys/icon';
import * as ɵngcc6 from 'ngx-tethys/loading';

const _c0 = ["childrenTree"];
const _c1 = ["title"];
function ThyTreeNodeComponent_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 7);
    ɵngcc0.ɵɵelement(1, "thy-icon", 8);
    ɵngcc0.ɵɵelementEnd();
} }
function ThyTreeNodeComponent_ng_container_3_ng_container_1_thy_icon_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 11);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("thyIconName", ctx_r7.node.isExpanded ? ctx_r7.root.thyIcons.expand : ctx_r7.root.thyIcons.collapse);
} }
function ThyTreeNodeComponent_ng_container_3_ng_container_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-icon", 12);
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵclassProp("collapse", !ctx_r9.node.isExpanded);
} }
function ThyTreeNodeComponent_ng_container_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ThyTreeNodeComponent_ng_container_3_ng_container_1_thy_icon_1_Template, 1, 1, "thy-icon", 9);
    ɵngcc0.ɵɵtemplate(2, ThyTreeNodeComponent_ng_container_3_ng_container_1_ng_template_2_Template, 1, 2, "ng-template", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r8 = ɵngcc0.ɵɵreference(3);
    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r6.root.thyIcons == null ? null : ctx_r6.root.thyIcons.expand) && (ctx_r6.root.thyIcons == null ? null : ctx_r6.root.thyIcons.collapse))("ngIfElse", _r8);
} }
function ThyTreeNodeComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ThyTreeNodeComponent_ng_container_3_ng_container_1_Template, 4, 2, "ng-container", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.node.children && ctx_r1.node.children.length > 0 || ctx_r1.thyAsync || ctx_r1.emptyChildrenTemplateRef);
} }
function ThyTreeNodeComponent_input_5_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "input", 13);
    ɵngcc0.ɵɵlistener("click", function ThyTreeNodeComponent_input_5_Template_input_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.clickNodeCheck($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("form-check-indeterminate", ctx_r2.node.isChecked === ctx_r2.checkState.indeterminate);
    ɵngcc0.ɵɵproperty("checked", ctx_r2.node.isChecked === ctx_r2.checkState.checked)("disabled", ctx_r2.node.isDisabled);
} }
function ThyTreeNodeComponent_ng_container_6_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "span", 15);
    ɵngcc0.ɵɵelement(2, "i", 16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r12.nodeIcon)("ngStyle", ctx_r12.nodeIconStyle);
} }
function ThyTreeNodeComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ThyTreeNodeComponent_ng_container_6_ng_container_1_Template, 3, 2, "ng-container", 3);
    ɵngcc0.ɵɵelementStart(2, "span", 14);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r3.nodeIcon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("truncate", ctx_r3.thyTitleTruncate);
    ɵngcc0.ɵɵproperty("title", ctx_r3.node.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r3.node.title, "");
} }
function ThyTreeNodeComponent_ng_container_7_ng_template_1_Template(rf, ctx) { }
const _c2 = function (a0, a1, a2) { return { $implicit: a0, node: a1, origin: a2 }; };
function ThyTreeNodeComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ThyTreeNodeComponent_ng_container_7_ng_template_1_Template, 0, 0, "ng-template", 17);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r4.templateRef)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction3(2, _c2, ctx_r4.node, ctx_r4.node, ctx_r4.node == null ? null : ctx_r4.node.origin));
} }
function ThyTreeNodeComponent_div_8_thy_tree_node_1_Template(rf, ctx) { if (rf & 1) {
    const _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "thy-tree-node", 20);
    ɵngcc0.ɵɵlistener("thyOnClick", function ThyTreeNodeComponent_div_8_thy_tree_node_1_Template_thy_tree_node_thyOnClick_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18.thyOnClick.emit($event); })("thyOnCheckboxChange", function ThyTreeNodeComponent_div_8_thy_tree_node_1_Template_thy_tree_node_thyOnCheckboxChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.thyOnCheckboxChange.emit($event); })("thyOnExpandChange", function ThyTreeNodeComponent_div_8_thy_tree_node_1_Template_thy_tree_node_thyOnExpandChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r21 = ɵngcc0.ɵɵnextContext(2); return ctx_r21.thyOnExpandChange.emit($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const node_r16 = ctx.$implicit;
    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("node", node_r16)("thyDrag", node_r16)("templateRef", ctx_r14.templateRef)("thyAsync", ctx_r14.thyAsync)("thyMultiple", ctx_r14.thyMultiple)("thyDraggable", ctx_r14.thyDraggable)("thyCheckable", ctx_r14.thyCheckable)("thyTitleTruncate", ctx_r14.thyTitleTruncate);
} }
function ThyTreeNodeComponent_div_8_ng_container_2_thy_loading_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "thy-loading", 22);
} if (rf & 2) {
    const ctx_r22 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("thyDone", !ctx_r22.node.isLoading);
} }
function ThyTreeNodeComponent_div_8_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ThyTreeNodeComponent_div_8_ng_container_2_thy_loading_1_Template, 1, 1, "thy-loading", 21);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r15.node.isLoading);
} }
function ThyTreeNodeComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵlistener("thyDragDropped", function ThyTreeNodeComponent_div_8_Template_div_thyDragDropped_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.root.onDragDrop($event); })("thyDragStarted", function ThyTreeNodeComponent_div_8_Template_div_thyDragStarted_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r24); const ctx_r25 = ɵngcc0.ɵɵnextContext(); return ctx_r25.root.onDragStart($event); });
    ɵngcc0.ɵɵtemplate(1, ThyTreeNodeComponent_div_8_thy_tree_node_1_Template, 1, 8, "thy-tree-node", 19);
    ɵngcc0.ɵɵtemplate(2, ThyTreeNodeComponent_div_8_ng_container_2_Template, 2, 1, "ng-container", 3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("thyDropContainer", ctx_r5.node.children)("thyDropContainerDisabled", !ctx_r5.root.thyDraggable)("thyBeforeDragStart", ctx_r5.root.thyBeforeDragStart)("thyBeforeDragOver", ctx_r5.root.beforeDragOver)("thyBeforeDragDrop", ctx_r5.root.thyBeforeDragDrop);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.node.children)("ngForTrackBy", ctx_r5.root.trackByFn);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r5.thyAsync);
} }
export class ThyTreeNodeComponent {
    constructor(root, thyTreeService, ngZone, cdr) {
        this.root = root;
        this.thyTreeService = thyTreeService;
        this.ngZone = ngZone;
        this.cdr = cdr;
        this.thyAsync = false;
        this.thyMultiple = false;
        this.thyDraggable = false;
        this.thyCheckable = false;
        this.thyOnClick = new EventEmitter();
        this.thyOnExpandChange = new EventEmitter();
        this.thyOnCheckboxChange = new EventEmitter();
        this.thyTreeNodeClass = true;
        this.destroy$ = new Subject();
        this.checkState = ThyTreeNodeCheckState;
        this.thyTreeService
            .statusChanged()
            .pipe(filter(data => data.node.key === this.node.key), takeUntil(this.destroy$))
            .subscribe(() => {
            this.markForCheck();
        });
    }
    get nodeIcon() {
        return this.node.origin.icon;
    }
    get nodeIconStyle() {
        return this.node.origin.iconStyle;
    }
    markForCheck() {
        this.cdr.markForCheck();
    }
    changeDragIconVisibility(event, showDragIcon) {
        const nodeElement = event.target;
        const dragIcon = nodeElement.querySelector('.thy-tree-drag-icon');
        if (dragIcon) {
            dragIcon.style.visibility = showDragIcon ? 'visible' : 'hidden';
        }
    }
    nodeMouseEnter(event) {
        if (!this.root.thyDraggable || this.node.isDisabled) {
            return;
        }
        else if (this.root.thyDraggable && !this.root.thyBeforeDragStart) {
            this.changeDragIconVisibility(event, true);
        }
        else {
            const containerItems = this.node.getParentNode() ? this.node.getParentNode().getChildren() : this.root.treeNodes;
            const dragStartEvent = {
                event: event,
                item: this.node,
                containerItems,
                currentIndex: containerItems.indexOf(this.node)
            };
            this.changeDragIconVisibility(event, this.root.thyBeforeDragStart(dragStartEvent));
        }
    }
    nodeMouseLeave(event) {
        if (!this.root.thyDraggable || this.node.isDisabled) {
            return;
        }
        else {
            this.changeDragIconVisibility(event, false);
        }
    }
    clickNode(event) {
        if (!this.root.thyMultiple) {
            this.root.selectTreeNode(this.node);
        }
        else {
            this.root.toggleTreeNode(this.node);
        }
        this.thyOnClick.emit({
            eventName: 'click',
            event: event,
            node: this.node
        });
    }
    clickNodeCheck(event) {
        event.stopPropagation();
        if (this.node.isChecked === ThyTreeNodeCheckState.unchecked || this.node.isChecked === ThyTreeNodeCheckState.indeterminate) {
            this.node.setChecked(true);
        }
        else {
            this.node.setChecked(false);
        }
        this.thyOnCheckboxChange.emit({
            eventName: 'checkboxChange',
            event: event,
            node: this.node
        });
    }
    expandNode(event) {
        event.stopPropagation();
        this.node.setExpanded(!this.node.isExpanded);
        if (this.root.thyShowExpand) {
            this.thyOnExpandChange.emit({
                eventName: 'expand',
                event: event,
                node: this.node
            });
            if (this.thyAsync && this.node.children.length === 0) {
                this.node.setLoading(true);
            }
        }
    }
    isShowExpand(node) {
        return this.root.isShowExpand(node);
    }
    ngOnDestroy() {
        this.destroy$.next();
        this.destroy$.complete();
    }
}
ThyTreeNodeComponent.ɵfac = function ThyTreeNodeComponent_Factory(t) { return new (t || ThyTreeNodeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyTreeComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ThyTreeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
ThyTreeNodeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyTreeNodeComponent, selectors: [["thy-tree-node"]], contentQueries: function ThyTreeNodeComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, _c0, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.childrenTreeTemplateRef = _t.first);
    } }, viewQuery: function ThyTreeNodeComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c1, true);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleInputElementRef = _t.first);
    } }, hostVars: 2, hostBindings: function ThyTreeNodeComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("thy-tree-node", ctx.thyTreeNodeClass);
    } }, inputs: { thyAsync: "thyAsync", thyMultiple: "thyMultiple", thyDraggable: "thyDraggable", thyCheckable: "thyCheckable", node: "node", thyTitleTruncate: "thyTitleTruncate", templateRef: "templateRef", emptyChildrenTemplateRef: "emptyChildrenTemplateRef" }, outputs: { thyOnClick: "thyOnClick", thyOnExpandChange: "thyOnExpandChange", thyOnCheckboxChange: "thyOnCheckboxChange" }, decls: 9, vars: 10, consts: [["thyDragContent", "", 1, "thy-tree-node-wrapper", "thy-sortable-item", 3, "click", "mouseenter", "mouseleave"], ["class", "thy-tree-drag-icon thy-sortable-handle", 4, "ngIf"], [1, "thy-tree-expand", 3, "click"], [4, "ngIf"], [1, "thy-tree-node-content"], ["type", "checkbox", "class", "thy-tree-node-check", 3, "form-check-indeterminate", "checked", "disabled", "click", 4, "ngIf"], ["class", "thy-tree-node-children", 3, "thyDropContainer", "thyDropContainerDisabled", "thyBeforeDragStart", "thyBeforeDragOver", "thyBeforeDragDrop", "thyDragDropped", "thyDragStarted", 4, "ngIf"], [1, "thy-tree-drag-icon", "thy-sortable-handle"], ["thyIconName", "drag"], ["class", "thy-tree-expand-icon", 3, "thyIconName", 4, "ngIf", "ngIfElse"], ["defaultIcon", ""], [1, "thy-tree-expand-icon", 3, "thyIconName"], ["thyIconName", "caret-right-down", 1, "thy-tree-expand-icon"], ["type", "checkbox", 1, "thy-tree-node-check", 3, "checked", "disabled", "click"], [1, "thy-tree-node-title", 3, "title"], [1, "thy-tree-node-icon"], [3, "ngClass", "ngStyle"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "thy-tree-node-children", 3, "thyDropContainer", "thyDropContainerDisabled", "thyBeforeDragStart", "thyBeforeDragOver", "thyBeforeDragDrop", "thyDragDropped", "thyDragStarted"], [3, "node", "thyDrag", "templateRef", "thyAsync", "thyMultiple", "thyDraggable", "thyCheckable", "thyTitleTruncate", "thyOnClick", "thyOnCheckboxChange", "thyOnExpandChange", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "node", "thyDrag", "templateRef", "thyAsync", "thyMultiple", "thyDraggable", "thyCheckable", "thyTitleTruncate", "thyOnClick", "thyOnCheckboxChange", "thyOnExpandChange"], [3, "thyDone", 4, "ngIf"], [3, "thyDone"]], template: function ThyTreeNodeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("click", function ThyTreeNodeComponent_Template_div_click_0_listener($event) { return ctx.clickNode($event); })("mouseenter", function ThyTreeNodeComponent_Template_div_mouseenter_0_listener($event) { return ctx.nodeMouseEnter($event); })("mouseleave", function ThyTreeNodeComponent_Template_div_mouseleave_0_listener($event) { return ctx.nodeMouseLeave($event); });
        ɵngcc0.ɵɵtemplate(1, ThyTreeNodeComponent_span_1_Template, 2, 0, "span", 1);
        ɵngcc0.ɵɵelementStart(2, "span", 2);
        ɵngcc0.ɵɵlistener("click", function ThyTreeNodeComponent_Template_span_click_2_listener($event) { return ctx.expandNode($event); });
        ɵngcc0.ɵɵtemplate(3, ThyTreeNodeComponent_ng_container_3_Template, 2, 1, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "span", 4);
        ɵngcc0.ɵɵtemplate(5, ThyTreeNodeComponent_input_5_Template, 1, 4, "input", 5);
        ɵngcc0.ɵɵtemplate(6, ThyTreeNodeComponent_ng_container_6_Template, 4, 5, "ng-container", 3);
        ɵngcc0.ɵɵtemplate(7, ThyTreeNodeComponent_ng_container_7_Template, 2, 6, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, ThyTreeNodeComponent_div_8_Template, 3, 8, "div", 6);
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("active", ctx.root.isSelected(ctx.node))("disabled", ctx.node.isDisabled);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.thyDraggable);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isShowExpand(ctx.node));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.thyCheckable);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.templateRef);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.templateRef);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isShowExpand(ctx.node) && ctx.node.isExpanded);
    } }, directives: [ɵngcc3.ThyDragContentDirective, ɵngcc4.NgIf, ɵngcc5.ThyIconComponent, ɵngcc4.NgClass, ɵngcc4.NgStyle, ɵngcc4.NgTemplateOutlet, ɵngcc3.ThyDropContainerDirective, ɵngcc4.NgForOf, ThyTreeNodeComponent, ɵngcc3.ThyDragDirective, ɵngcc6.ThyLoadingComponent], encapsulation: 2 });
ThyTreeNodeComponent.ctorParameters = () => [
    { type: ThyTreeComponent },
    { type: ThyTreeService },
    { type: NgZone },
    { type: ChangeDetectorRef }
];
ThyTreeNodeComponent.propDecorators = {
    node: [{ type: Input }],
    thyAsync: [{ type: Input }],
    thyMultiple: [{ type: Input }],
    thyDraggable: [{ type: Input }],
    thyCheckable: [{ type: Input }],
    thyTitleTruncate: [{ type: Input }],
    templateRef: [{ type: Input }],
    emptyChildrenTemplateRef: [{ type: Input }],
    thyOnClick: [{ type: Output }],
    thyOnExpandChange: [{ type: Output }],
    thyOnCheckboxChange: [{ type: Output }],
    childrenTreeTemplateRef: [{ type: ContentChild, args: ['childrenTree',] }],
    titleInputElementRef: [{ type: ViewChild, args: ['title',] }],
    thyTreeNodeClass: [{ type: HostBinding, args: ['class.thy-tree-node',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyTreeNodeComponent, [{
        type: Component,
        args: [{
                selector: 'thy-tree-node',
                template: "<div\n  thyDragContent\n  class=\"thy-tree-node-wrapper thy-sortable-item\"\n  [class.active]=\"root.isSelected(node)\"\n  [class.disabled]=\"node.isDisabled\"\n  (click)=\"clickNode($event)\"\n  (mouseenter)=\"nodeMouseEnter($event)\"\n  (mouseleave)=\"nodeMouseLeave($event)\"\n>\n  <span *ngIf=\"thyDraggable\" class=\"thy-tree-drag-icon thy-sortable-handle\">\n    <thy-icon thyIconName=\"drag\"></thy-icon>\n  </span>\n  <span class=\"thy-tree-expand\" (click)=\"expandNode($event)\">\n    <ng-container *ngIf=\"isShowExpand(node)\">\n      <ng-container *ngIf=\"(node.children && node.children.length > 0) || thyAsync || emptyChildrenTemplateRef\">\n        <thy-icon\n          *ngIf=\"root.thyIcons?.expand && root.thyIcons?.collapse; else defaultIcon\"\n          class=\"thy-tree-expand-icon\"\n          [thyIconName]=\"node.isExpanded ? root.thyIcons.expand : root.thyIcons.collapse\"\n        ></thy-icon>\n        <ng-template #defaultIcon>\n          <thy-icon class=\"thy-tree-expand-icon\" [class.collapse]=\"!node.isExpanded\" thyIconName=\"caret-right-down\"></thy-icon>\n        </ng-template>\n      </ng-container>\n    </ng-container>\n  </span>\n\n  <span class=\"thy-tree-node-content\">\n    <input\n      *ngIf=\"thyCheckable\"\n      type=\"checkbox\"\n      class=\"thy-tree-node-check\"\n      [class.form-check-indeterminate]=\"node.isChecked === checkState.indeterminate\"\n      [checked]=\"node.isChecked === checkState.checked\"\n      [disabled]=\"node.isDisabled\"\n      (click)=\"clickNodeCheck($event)\"\n    />\n    <ng-container *ngIf=\"!templateRef\">\n      <ng-container *ngIf=\"nodeIcon\">\n        <span class=\"thy-tree-node-icon\"> <i [ngClass]=\"nodeIcon\" [ngStyle]=\"nodeIconStyle\"></i></span>\n      </ng-container>\n      <span [title]=\"node.title\" class=\"thy-tree-node-title\" [class.truncate]=\"thyTitleTruncate\"> {{ node.title }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"templateRef\">\n      <ng-template\n        [ngTemplateOutlet]=\"templateRef\"\n        [ngTemplateOutletContext]=\"{ $implicit: node, node: node, origin: node?.origin }\"\n      ></ng-template>\n    </ng-container>\n  </span>\n</div>\n<div\n  class=\"thy-tree-node-children\"\n  *ngIf=\"isShowExpand(node) && node.isExpanded\"\n  [thyDropContainer]=\"node.children\"\n  [thyDropContainerDisabled]=\"!root.thyDraggable\"\n  [thyBeforeDragStart]=\"root.thyBeforeDragStart\"\n  [thyBeforeDragOver]=\"root.beforeDragOver\"\n  [thyBeforeDragDrop]=\"root.thyBeforeDragDrop\"\n  (thyDragDropped)=\"root.onDragDrop($event)\"\n  (thyDragStarted)=\"root.onDragStart($event)\"\n>\n  <thy-tree-node\n    *ngFor=\"let node of node.children; trackBy: root.trackByFn; let i = index\"\n    [node]=\"node\"\n    [thyDrag]=\"node\"\n    [templateRef]=\"templateRef\"\n    [thyAsync]=\"thyAsync\"\n    [thyMultiple]=\"thyMultiple\"\n    [thyDraggable]=\"thyDraggable\"\n    [thyCheckable]=\"thyCheckable\"\n    [thyTitleTruncate]=\"thyTitleTruncate\"\n    (thyOnClick)=\"thyOnClick.emit($event)\"\n    (thyOnCheckboxChange)=\"thyOnCheckboxChange.emit($event)\"\n    (thyOnExpandChange)=\"thyOnExpandChange.emit($event)\"\n  >\n  </thy-tree-node>\n  <ng-container *ngIf=\"thyAsync\">\n    <thy-loading *ngIf=\"node.isLoading\" [thyDone]=\"!node.isLoading\"></thy-loading>\n  </ng-container>\n</div>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.ThyTreeComponent }, { type: ɵngcc2.ThyTreeService }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }]; }, { thyAsync: [{
            type: Input
        }], thyMultiple: [{
            type: Input
        }], thyDraggable: [{
            type: Input
        }], thyCheckable: [{
            type: Input
        }], thyOnClick: [{
            type: Output
        }], thyOnExpandChange: [{
            type: Output
        }], thyOnCheckboxChange: [{
            type: Output
        }], thyTreeNodeClass: [{
            type: HostBinding,
            args: ['class.thy-tree-node']
        }], node: [{
            type: Input
        }], thyTitleTruncate: [{
            type: Input
        }], templateRef: [{
            type: Input
        }], emptyChildrenTemplateRef: [{
            type: Input
        }], childrenTreeTemplateRef: [{
            type: ContentChild,
            args: ['childrenTree']
        }], titleInputElementRef: [{
            type: ViewChild,
            args: ['title']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,