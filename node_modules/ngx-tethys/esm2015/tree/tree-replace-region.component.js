import { Component, ViewEncapsulation, ViewContainerRef, Input } from '@angular/core';
import { ThyTreeComponent } from './tree.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './tree.component';

const _c0 = ["ThyTreeReplaceRegion", ""];
const _c1 = ["*"];
export class ThyTreeReplaceRegionComponent {
    constructor(root, viewRef) {
        this.root = root;
        this.viewRef = viewRef;
    }
    ngOnInit() { }
}
ThyTreeReplaceRegionComponent.ɵfac = function ThyTreeReplaceRegionComponent_Factory(t) { return new (t || ThyTreeReplaceRegionComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ThyTreeComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };
ThyTreeReplaceRegionComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ThyTreeReplaceRegionComponent, selectors: [["", "ThyTreeReplaceRegion", ""]], inputs: { thyInstance: "thyInstance" }, attrs: _c0, ngContentSelectors: _c1, decls: 1, vars: 0, template: function ThyTreeReplaceRegionComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
ThyTreeReplaceRegionComponent.ctorParameters = () => [
    { type: ThyTreeComponent },
    { type: ViewContainerRef }
];
ThyTreeReplaceRegionComponent.propDecorators = {
    thyInstance: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ThyTreeReplaceRegionComponent, [{
        type: Component,
        args: [{
                selector: '[ThyTreeReplaceRegion]',
                template: '<ng-content></ng-content>',
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.ThyTreeComponent }, { type: ɵngcc0.ViewContainerRef }]; }, { thyInstance: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS1yZXBsYWNlLXJlZ2lvbi5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90cmVlL3RyZWUtcmVwbGFjZS1yZWdpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxTQUFTLEVBQ1QsaUJBQWlCLEVBR2pCLGdCQUFnQixFQUNoQixLQUFLLEVBRVIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7OztBQU9wRCxNQUFNLE9BQU8sNkJBQTZCO0FBQUcsSUFHekMsWUFDWSxJQUFzQixFQUN0QixPQUF5QjtBQUN0QyxRQUZhLFNBQUksR0FBSixJQUFJLENBQWtCO0FBQUMsUUFDdkIsWUFBTyxHQUFQLE9BQU8sQ0FBa0I7QUFDekMsSUFBTyxDQUFDO0FBQ1IsSUFDSSxRQUFRLEtBQVUsQ0FBQztBQUN2Qjt5REFkQyxTQUFTLFNBQUMsa0JBQ1AsUUFBUSxFQUFFLHdCQUF3QixrQkFDbEMsUUFBUSxFQUFFLDJCQUEyQixrQkFDckMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7UUFDeEM7Ozs2QkFDSTtBQUFDO0FBQXVELFlBUHBELGdCQUFnQjtBQUFJLFlBSnpCLGdCQUFnQjtBQUNuQjtBQUFHO0FBR0csMEJBUUYsS0FBSztBQUFJOzs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENvbXBvbmVudCxcbiAgICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgICBDb250ZW50Q2hpbGQsXG4gICAgVGVtcGxhdGVSZWYsXG4gICAgVmlld0NvbnRhaW5lclJlZixcbiAgICBJbnB1dCxcbiAgICBPbkluaXRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUaHlUcmVlQ29tcG9uZW50IH0gZnJvbSAnLi90cmVlLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnW1RoeVRyZWVSZXBsYWNlUmVnaW9uXScsXG4gICAgdGVtcGxhdGU6ICc8bmctY29udGVudD48L25nLWNvbnRlbnQ+JyxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFRoeVRyZWVSZXBsYWNlUmVnaW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBASW5wdXQoKSB0aHlJbnN0YW5jZTogYW55O1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgcm9vdDogVGh5VHJlZUNvbXBvbmVudCxcbiAgICAgICAgcHJpdmF0ZSB2aWV3UmVmOiBWaWV3Q29udGFpbmVyUmVmXG4gICAgKSB7fVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7fVxufVxuIl19