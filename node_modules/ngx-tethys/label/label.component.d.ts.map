{"version":3,"file":"label.component.d.ts","sources":["label.component.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer2, EventEmitter } from '@angular/core';\nexport declare type ThyLabelType = 'default' | 'primary' | 'success' | 'info' | 'warning' | 'danger';\nexport declare class ThyLabelComponent {\n    private el;\n    private renderer;\n    _thyHasHover: boolean;\n    _classNameSM: boolean;\n    _classNameDM: boolean;\n    _classNameLG: boolean;\n    thyIconPrefix: string;\n    set thySize(value: string);\n    private nativeElement;\n    private _typeClassNames;\n    private _labelClass?;\n    private _type?;\n    private _labelType?;\n    private _icon;\n    beforeIconName: string;\n    beforeIconClass: string[];\n    afterIconName: string;\n    afterIconClass: string[];\n    _color?: string;\n    _backgroundOpacity?: number;\n    thyOnRemove: EventEmitter<any>;\n    constructor(el: ElementRef, renderer: Renderer2);\n    set thyHasHover(value: string);\n    set thyLabel(value: ThyLabelType);\n    set thyLabelColor(color: string);\n    set thyBackgroundOpacity(opacity: number);\n    set thyLabelType(labelType: string);\n    set thyBeforeIcon(icon: string);\n    set thyAfterIcon(icon: string);\n    private _setClassesByType;\n    private _setLabelCustomColor;\n    private _addClass;\n    private _removeClass;\n    remove(): void;\n}\n"]}