import ts, { ImportDeclaration, SourceFile, StringLiteral, Program } from 'typescript';
import { UpdateFileService } from '../utils';
import { createCssSelectorForTs } from 'cyia-code-util';
export declare abstract class MigrationBase {
    protected sourceFile: SourceFile;
    protected updateFileService: UpdateFileService;
    protected program: Program;
    constructor(sourceFile: SourceFile, updateFileService: UpdateFileService, program: Program);
    private printer;
    protected selector: ReturnType<typeof createCssSelectorForTs>;
    abstract run(): void;
    createImportDeclaration(importNameList: string[], importPackageName: string, commentOptions?: {
        kind?: ts.SyntaxKind.SingleLineCommentTrivia | ts.SyntaxKind.MultiLineCommentTrivia;
        content: string;
        newLine?: boolean;
    }): ts.ImportDeclaration;
    createNamedImports(importSpecifierList: ts.ImportSpecifier[]): ts.NamedImports;
    printNodeContent(node: ts.Node): string;
    createStringLiteral(string: string): ts.StringLiteral;
    getImportDeclarationList(): ts.ImportDeclaration[];
    getImportDeclarationPackageName(importDeclaration: ts.ImportDeclaration): string;
    getImportDeclarationImportSpecifierList(importDeclaration: ImportDeclaration): ts.ImportSpecifier[];
    addComment(node: ts.Node, commentOptions: {
        kind?: ts.SyntaxKind.SingleLineCommentTrivia | ts.SyntaxKind.MultiLineCommentTrivia;
        content: string;
        newLine?: boolean;
    }): ts.Node;
    /** 更新引入声明,因为ts 4.0设置为readonly的原因,无法直接赋值 */
    updateImportDeclaration(node: ts.ImportDeclaration, moduleSpecifier?: StringLiteral, importClause?: ts.ImportClause): ts.ImportDeclaration;
    /** 更新引入声明,因为ts 4.0设置为readonly的原因,无法直接赋值 */
    updateImportClause(node: ts.ImportClause, namedImports: ts.NamedImportBindings): ts.ImportClause;
}
