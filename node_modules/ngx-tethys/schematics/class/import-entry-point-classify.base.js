"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportEntryPointClassifyMigrationBase = void 0;
const types_1 = require("../types");
const base_1 = require("./base");
class ImportEntryPointClassifyMigrationBase extends base_1.MigrationBase {
    run() {
        const importDeclarationList = this.getImportDeclarationList().filter(item => this.getImportDeclarationPackageName(item) === 'ngx-tethys');
        if (!importDeclarationList.length) {
            return;
        }
        const contentChangeList = [];
        for (const importDeclaration of importDeclarationList) {
            const newImportDeclarationSourceGroup = {};
            const warningList = [];
            this.getImportDeclarationImportSpecifierList(importDeclaration).forEach(item => {
                if (this.relation[item.name.text] !== undefined) {
                    const list = newImportDeclarationSourceGroup[this.relation[item.name.text]] || [];
                    list.push(item.name.text);
                    newImportDeclarationSourceGroup[this.relation[item.name.text]] = list;
                }
                else {
                    warningList.push(item.name.text);
                }
            });
            if (Object.entries(newImportDeclarationSourceGroup).length) {
                contentChangeList.push(new types_1.ReplaceContentChange(importDeclaration.getStart(), importDeclaration.getWidth(), Object.entries(newImportDeclarationSourceGroup)
                    .map(([key, value], index) => this.printNodeContent(this.createImportDeclaration(value, ['ngx-tethys', key].filter(a => !!a).join('/'), {
                    content: warningList.length && !index
                        ? ` WARN: ${warningList.join(',')}没有找到对应的二级入口点`
                        : undefined
                })))
                    .join('\n')));
            }
            else if (warningList.length) {
                contentChangeList.push(new types_1.ReplaceContentChange(importDeclaration.getStart(), importDeclaration.getWidth(), `// WARN: ${warningList.join(',')}没有找到对应的二级入口点`));
            }
        }
        if (!contentChangeList.length) {
            return;
        }
        this.updateFileService.change(this.sourceFile.fileName, contentChangeList);
    }
}
exports.ImportEntryPointClassifyMigrationBase = ImportEntryPointClassifyMigrationBase;
