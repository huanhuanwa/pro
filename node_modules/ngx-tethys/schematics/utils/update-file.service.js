"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createUpdateFileService = exports.UpdateFileService = void 0;
const types_1 = require("../types");
class UpdateFileService {
    constructor(tree) {
        this.tree = tree;
    }
    update(filePath, change) {
        try {
            const recorder = this.tree.beginUpdate(filePath);
            recorder.insertLeft(change.pos, change.content);
            this.tree.commitUpdate(recorder);
        }
        catch (error) {
            console.error('update fail', error);
        }
    }
    remove(filePath, change) {
        try {
            const recorder = this.tree.beginUpdate(filePath);
            recorder.remove(change.pos, change.length);
            this.tree.commitUpdate(recorder);
        }
        catch (error) {
            console.error('remove fail', error);
        }
    }
    replace(filePath, change) {
        try {
            const recorder = this.tree.beginUpdate(filePath);
            recorder.remove(change.pos, change.length);
            recorder.insertRight(change.pos, change.content);
            this.tree.commitUpdate(recorder);
        }
        catch (error) {
            console.error('replace fail', error);
        }
    }
    change(filePath, changeList) {
        changeList
            .sort((a, b) => b.pos - a.pos)
            .forEach(change => {
            if (change instanceof types_1.UpdateContentChange) {
                this.update(filePath, change);
            }
            else if (change instanceof types_1.ReplaceContentChange) {
                this.replace(filePath, change);
            }
            else if (change instanceof types_1.RemoveContentChange) {
                this.remove(filePath, change);
            }
        });
    }
}
exports.UpdateFileService = UpdateFileService;
function createUpdateFileService(tree) {
    return new UpdateFileService(tree);
}
exports.createUpdateFileService = createUpdateFileService;
