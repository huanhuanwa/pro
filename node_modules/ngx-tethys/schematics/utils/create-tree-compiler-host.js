"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTreeCompilerHost = void 0;
const tslib_1 = require("tslib");
const typescript_1 = tslib_1.__importDefault(require("typescript"));
function createTreeCompilerHost(options, tree) {
    const host = typescript_1.default.createCompilerHost(options, true);
    host.readFile = fileName => {
        return tree.get(fileName).content.toString();
    };
    host.readDirectory = fileName => {
        return tree.getDir(fileName).subfiles.map(item => item);
    };
    host.fileExists = fileName => {
        return tree.exists(fileName);
    };
    host.directoryExists = fileName => {
        if (fileName.includes('node_modules')) {
            return false;
        }
        try {
            const dir = tree.getDir(fileName);
            return !!dir.subdirs.length || !!dir.subfiles.length;
        }
        catch (error) {
            return false;
        }
    };
    host.getCurrentDirectory = () => '/';
    host.getCanonicalFileName = fileName => fileName;
    return host;
}
exports.createTreeCompilerHost = createTreeCompilerHost;
