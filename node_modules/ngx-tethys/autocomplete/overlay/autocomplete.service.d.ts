import { ComponentType, Overlay, OverlayConfig, OverlayRef, ScrollDispatcher, OverlayContainer } from '@angular/cdk/overlay';
import { TemplateRef, Injector, OnDestroy, NgZone } from '@angular/core';
import { ThyAutocompleteContainerComponent } from './autocomplete-container.component';
import { ThyAutocompleteConfig } from './autocomplete.config';
import { ThyAutocompleteRef, ThyInternalAutocompleteRef } from './autocomplete-ref';
import { ThyAbstractOverlayService } from 'ngx-tethys/core';
import { ViewportRuler } from '@angular/cdk/scrolling';
import { Platform } from '@angular/cdk/platform';
import * as ɵngcc0 from '@angular/core';
export declare class ThyAutocompleteService extends ThyAbstractOverlayService<ThyAutocompleteConfig, ThyAutocompleteContainerComponent> implements OnDestroy {
    private scrollDispatcher;
    private ngZone;
    private _viewportRuler;
    private _document;
    private _platform;
    private _overlayContainer;
    private readonly ngUnsubscribe$;
    private originInstancesMap;
    private buildPositionStrategy;
    protected buildOverlayConfig<TData>(config: ThyAutocompleteConfig<TData>): OverlayConfig;
    protected attachUpperOverlayContainer(overlay: OverlayRef, config: ThyAutocompleteConfig<any>): ThyAutocompleteContainerComponent;
    protected createUpperOverlayRef<T>(overlayRef: OverlayRef, containerInstance: ThyAutocompleteContainerComponent, config: ThyAutocompleteConfig<any>): ThyInternalAutocompleteRef<T>;
    protected createInjector<T>(config: ThyAutocompleteConfig, autocompleteRef: ThyAutocompleteRef<T>, autocompleteContainer: ThyAutocompleteContainerComponent): Injector;
    private originElementAddActiveClass;
    private originElementRemoveActiveClass;
    constructor(overlay: Overlay, injector: Injector, defaultConfig: ThyAutocompleteConfig, scrollDispatcher: ScrollDispatcher, ngZone: NgZone, _viewportRuler: ViewportRuler, _document: any, _platform: Platform, _overlayContainer: OverlayContainer);
    open<T, TData = any, TResult = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>, config?: ThyAutocompleteConfig<TData>): ThyAutocompleteRef<T, TResult>;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyAutocompleteService, never>;
}

//# sourceMappingURL=autocomplete.service.d.ts.map