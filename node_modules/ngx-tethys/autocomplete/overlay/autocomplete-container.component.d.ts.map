{"version":3,"file":"autocomplete-container.component.d.ts","sources":["autocomplete-container.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, ChangeDetectorRef, AfterViewInit, NgZone } from '@angular/core';\nimport { CdkPortalOutlet } from '@angular/cdk/portal';\nimport { AnimationEvent } from '@angular/animations';\nimport { ThyAutocompleteConfig } from './autocomplete.config';\nimport { ThyAbstractOverlayContainer } from 'ngx-tethys/core';\nimport { Observable } from 'rxjs';\nimport { ThyClickDispatcher } from 'ngx-tethys/core';\nexport declare class ThyAutocompleteContainerComponent extends ThyAbstractOverlayContainer implements AfterViewInit {\n    private elementRef;\n    private document;\n    config: ThyAutocompleteConfig;\n    private thyClickDispatcher;\n    private ngZone;\n    portalOutlet: CdkPortalOutlet;\n    /** State of the autocomplete animation. */\n    animationState: 'void' | 'enter' | 'exit';\n    /** Emits when an animation state changes. */\n    animationStateChanged: EventEmitter<AnimationEvent>;\n    animationOpeningDone: Observable<AnimationEvent>;\n    animationClosingDone: Observable<AnimationEvent>;\n    beforeAttachPortal(): void;\n    constructor(elementRef: ElementRef, document: any, config: ThyAutocompleteConfig, changeDetectorRef: ChangeDetectorRef, thyClickDispatcher: ThyClickDispatcher, ngZone: NgZone);\n    ngAfterViewInit(): void;\n    /** Callback, invoked whenever an animation on the host completes. */\n    onAnimationDone(event: AnimationEvent): void;\n    /** Callback, invoked when an animation on the host starts. */\n    onAnimationStart(event: AnimationEvent): void;\n    startExitAnimation(): void;\n}\n"]}