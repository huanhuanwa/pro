import { ElementRef, NgZone, OnDestroy, OnInit, ViewContainerRef, ChangeDetectorRef } from '@angular/core';
import { OverlayRef, Overlay } from '@angular/cdk/overlay';
import { ThyPlacement } from 'ngx-tethys/core';
import { ThyAutocompleteService } from './overlay/autocomplete.service';
import { ThyAutocompleteComponent } from './autocomplete.component';
import { ThyOptionComponent, ThyOptionSelectionChangeEvent } from 'ngx-tethys/shared';
import { Observable } from 'rxjs';
export declare class ThyAutocompleteTriggerDirective implements OnInit, OnDestroy {
    private elementRef;
    private ngZone;
    private overlay;
    private autocompleteService;
    private viewContainerRef;
    private document;
    private cdr;
    protected overlayRef: OverlayRef;
    private autocompleteRef;
    private readonly closeKeyEventStream;
    private closingActionsSubscription;
    private _autocompleteComponent;
    panelOpened: boolean;
    set autocompleteComponent(data: ThyAutocompleteComponent);
    set autocomplete(data: ThyAutocompleteComponent);
    get autocompleteComponent(): ThyAutocompleteComponent;
    thyOffset: number;
    thyAutocompleteWidth: number;
    thyPlacement: ThyPlacement;
    get activeOption(): ThyOptionComponent | null;
    get panelClosingActions(): Observable<ThyOptionSelectionChangeEvent | null>;
    constructor(elementRef: ElementRef, ngZone: NgZone, overlay: Overlay, autocompleteService: ThyAutocompleteService, viewContainerRef: ViewContainerRef, document: any, cdr: ChangeDetectorRef);
    ngOnInit(): void;
    onFocus(): void;
    onKeydown(event: KeyboardEvent): void;
    handleInput(event: KeyboardEvent): void;
    openPanel(): void;
    closePanel(): void;
    createOverlay(): OverlayRef;
    /**
     * This method listens to a stream of panel closing actions and resets the
     * stream every time the option list changes.
     */
    private subscribeToClosingActions;
    private setValueAndClose;
    /** Stream of clicks outside of the autocomplete panel. */
    private getOutsideClickStream;
    private setValue;
    private canOpen;
    private resetActiveItem;
    private destroyPanel;
    ngOnDestroy(): void;
}
