import { EventEmitter, OnInit, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
export interface ThyArrowSwitcherEvent {
    index: number;
    event: Event;
}
export declare class ThyArrowSwitcherComponent implements OnInit, ControlValueAccessor {
    private cd;
    _isArrowSwitcher: boolean;
    _isSmallSize: boolean;
    total: number;
    thyPrevious: EventEmitter<ThyArrowSwitcherEvent>;
    thyNext: EventEmitter<ThyArrowSwitcherEvent>;
    set thyTotal(value: number);
    set thySize(size: string);
    index: number;
    disabled: boolean;
    previousDisabled: boolean;
    nextDisabled: boolean;
    private onModelChange;
    private onModelTouched;
    constructor(cd: ChangeDetectorRef);
    ngOnInit(): void;
    writeValue(value: number): void;
    registerOnChange(fn: () => void): void;
    registerOnTouched(fn: () => void): void;
    setDisabledState(isDisable: boolean): void;
    getDisabled(): void;
    onPreviousClick(event: Event): void;
    onNextClick(event: Event): void;
}
