{"version":3,"file":"base-picker.component.d.ts","sources":["base-picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ThyPlacement } from 'ngx-tethys/core';\nimport { FunctionProp, TinyDate } from 'ngx-tethys/util';\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, TemplateRef } from '@angular/core';\nimport { AbstractPickerComponent } from './abstract-picker.component';\nimport { CompatibleValue, PanelMode } from './standard-types';\nexport declare class BasePickerComponent extends AbstractPickerComponent implements OnInit, OnChanges {\n    showWeek: boolean;\n    thyDateRender: FunctionProp<TemplateRef<Date> | string>;\n    thyMode: PanelMode | PanelMode[];\n    readonly thyOnPanelChange: EventEmitter<\"month\" | \"year\" | \"date\" | \"decade\" | PanelMode[]>;\n    readonly thyOnCalendarChange: EventEmitter<Date[]>;\n    private _showTime;\n    get thyShowTime(): object | boolean;\n    set thyShowTime(value: object | boolean);\n    thyMustShowTime: boolean;\n    thyPlacement: ThyPlacement;\n    readonly thyOnOk: EventEmitter<Date | Date[]>;\n    constructor(cdr: ChangeDetectorRef);\n    ngOnInit(): void;\n    onValueChange(value: CompatibleValue): void;\n    setDefaultTimePickerState(): void;\n    restoreTimePickerState(value: CompatibleValue | null): void;\n    onCalendarChange(value: TinyDate[]): void;\n    onShowTimePickerChange(show: boolean): void;\n    onResultOk(): void;\n    onOpenChange(open: boolean): void;\n}\n"]}