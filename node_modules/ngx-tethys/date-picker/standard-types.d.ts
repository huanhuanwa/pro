import { TemplateRef } from '@angular/core';
import { TinyDate } from 'ngx-tethys/util';
export declare type DisabledDateFn = (d: Date) => boolean;
export declare type DisabledTimePartial = 'start' | 'end';
export declare type PanelMode = 'decade' | 'year' | 'month' | 'date';
export declare type CompatibleValue = TinyDate[] | TinyDate;
export declare type CompatibleDate = Date | Date[];
export declare type DisabledTimeFn = (current: Date | Date[], partial?: DisabledTimePartial) => DisabledTimeConfig;
export interface DateEntry {
    date: number | null | Date;
    with_time: 0 | 1;
}
export interface RangeEntry {
    begin: number | null | Date;
    end: number | null | Date;
}
export declare type DateType = number | DateEntry;
export declare function instanceOfDateEntry(object: DateEntry): object is DateEntry;
export declare function instanceOfRangeEntry(object: RangeEntry): object is RangeEntry;
export interface DisabledTimeConfig {
    thyDisabledHours(): number[];
    thyDisabledMinutes(hour: number): number[];
    thyDisabledSeconds(hour: number, minute: number): number[];
}
export interface SupportTimeOptions {
    thyFormat?: string;
    thyHourStep?: number;
    thyMinuteStep?: number;
    thySecondStep?: number;
    thyUse12Hours?: boolean;
    thyHideDisabledOptions?: boolean;
    thyDefaultOpenValue?: Date;
    thyAddOn?: TemplateRef<void>;
    thyDisabledHours?(): number[];
    thyDisabledMinutes?(hour: number): number[];
    thyDisabledSeconds?(hour: number, minute: number): number[];
}
