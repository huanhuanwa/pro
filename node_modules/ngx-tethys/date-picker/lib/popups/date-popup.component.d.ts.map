{"version":3,"file":"date-popup.component.d.ts","sources":["date-popup.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { FunctionProp, TinyDate } from 'ngx-tethys/util';\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\nimport { CompatibleDate, CompatibleValue, DisabledDateFn, PanelMode, SupportTimeOptions } from '../../standard-types';\nexport declare class DatePopupComponent implements OnChanges, OnInit {\n    private cdr;\n    isRange: boolean;\n    showWeek: boolean;\n    format: string;\n    disabledDate: DisabledDateFn;\n    minDate: Date | number;\n    maxDate: Date | number;\n    showToday: boolean;\n    showTime: SupportTimeOptions | boolean;\n    mustShowTime: boolean;\n    dateRender: FunctionProp<TemplateRef<Date> | string>;\n    className: string;\n    panelMode: PanelMode | PanelMode[];\n    value: CompatibleValue;\n    defaultPickerValue: CompatibleDate | number;\n    readonly panelModeChange: EventEmitter<\"month\" | \"year\" | \"date\" | \"decade\" | PanelMode[]>;\n    readonly calendarChange: EventEmitter<TinyDate | TinyDate[]>;\n    readonly valueChange: EventEmitter<TinyDate | TinyDate[]>;\n    readonly resultOk: EventEmitter<void>;\n    readonly showTimePickerChange: EventEmitter<boolean>;\n    prefixCls: string;\n    showTimePicker: boolean;\n    timeOptions: SupportTimeOptions | SupportTimeOptions[] | null;\n    valueForRangeShow: TinyDate[];\n    selectedValue: TinyDate[];\n    hoverValue: TinyDate[];\n    private partTypeMap;\n    [property: string]: any;\n    constructor(cdr: ChangeDetectorRef);\n    setProperty<T extends keyof DatePopupComponent>(key: T, value: this[T]): void;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    reInitializeRangeRelatedValue(): void;\n    initDisabledDate(): void;\n    onShowTimePickerChange(show: boolean): void;\n    onClickOk(): void;\n    onClickRemove(): void;\n    onDayHover(value: TinyDate): void;\n    onPanelModeChange(mode: PanelMode, partType?: RangePartType): void;\n    onHeaderChange(value: TinyDate, partType?: RangePartType): void;\n    onSelectTime(value: TinyDate, partType?: RangePartType): void;\n    changeValueFromSelect(value: TinyDate): void;\n    enablePrevNext(direction: 'prev' | 'next', partType?: RangePartType): boolean;\n    getPanelMode(partType?: RangePartType): PanelMode;\n    getValueBySelector(partType?: RangePartType): TinyDate;\n    getPartTypeIndex(partType?: RangePartType): number;\n    private clearHoverValue;\n    private setValue;\n    private normalizeRangeValue;\n    private setRangeValue;\n    private cloneRangeDate;\n    private initialArray;\n}\nexport declare type RangePartType = 'left' | 'right';\n"]}