import { EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { TinyDate } from 'ngx-tethys/util';
import * as ɵngcc0 from '@angular/core';
export declare class DecadePanelComponent implements OnChanges {
    value: TinyDate;
    readonly valueChange: EventEmitter<TinyDate>;
    get startYear(): number;
    get endYear(): number;
    prefixCls: string;
    panelDecades: PanelDecadeData[][];
    constructor();
    ngOnChanges(changes: SimpleChanges): void;
    previousCentury(): void;
    nextCentury(): void;
    trackPanelDecade(_index: number, decadeData: PanelDecadeData): string;
    private render;
    private gotoYear;
    private chooseDecade;
    private makePanelDecades;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DecadePanelComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DecadePanelComponent, "decade-panel", ["decadePanel"], { "value": "value"; }, { "valueChange": "valueChange"; }, never, never>;
}
export interface PanelDecadeData {
    content: string;
    title: string;
    isCurrent: boolean;
    isLowerThanStart: boolean;
    isBiggerThanEnd: boolean;
    classMap?: object | null;
    onClick: VoidFunction | null;
}

//# sourceMappingURL=decade-panel.component.d.ts.map