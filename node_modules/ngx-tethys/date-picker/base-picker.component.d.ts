import { ThyPlacement } from 'ngx-tethys/core';
import { FunctionProp, TinyDate } from 'ngx-tethys/util';
import { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, TemplateRef } from '@angular/core';
import { AbstractPickerComponent } from './abstract-picker.component';
import { CompatibleValue, PanelMode } from './standard-types';
import * as ɵngcc0 from '@angular/core';
export declare class BasePickerComponent extends AbstractPickerComponent implements OnInit, OnChanges {
    showWeek: boolean;
    thyDateRender: FunctionProp<TemplateRef<Date> | string>;
    thyMode: PanelMode | PanelMode[];
    readonly thyOnPanelChange: EventEmitter<"month" | "year" | "date" | "decade" | PanelMode[]>;
    readonly thyOnCalendarChange: EventEmitter<Date[]>;
    private _showTime;
    get thyShowTime(): object | boolean;
    set thyShowTime(value: object | boolean);
    thyMustShowTime: boolean;
    thyPlacement: ThyPlacement;
    readonly thyOnOk: EventEmitter<Date | Date[]>;
    constructor(cdr: ChangeDetectorRef);
    ngOnInit(): void;
    onValueChange(value: CompatibleValue): void;
    setDefaultTimePickerState(): void;
    restoreTimePickerState(value: CompatibleValue | null): void;
    onCalendarChange(value: TinyDate[]): void;
    onShowTimePickerChange(show: boolean): void;
    onResultOk(): void;
    onOpenChange(open: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BasePickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BasePickerComponent, "ng-component", never, { "thyMustShowTime": "thyMustShowTime"; "thyPlacement": "thyPlacement"; "thyShowTime": "thyShowTime"; "thyDateRender": "thyDateRender"; "thyMode": "thyMode"; }, { "thyOnPanelChange": "thyOnPanelChange"; "thyOnCalendarChange": "thyOnCalendarChange"; "thyOnOk": "thyOnOk"; }, never, never>;
}

//# sourceMappingURL=base-picker.component.d.ts.map