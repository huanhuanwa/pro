{"version":3,"file":"picker.component.d.ts","sources":["picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ThyPlacement } from 'ngx-tethys/core';\nimport { TinyDate } from 'ngx-tethys/util';\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';\nimport { DateHelperService } from './date-helper.service';\nimport { CompatibleValue } from './standard-types';\nexport declare type RangePartType = 'left' | 'right';\nexport declare class ThyPickerComponent implements AfterViewInit {\n    private changeDetector;\n    private dateHelper;\n    isRange: boolean;\n    open: boolean | undefined;\n    disabled: boolean;\n    placeholder: string | string[];\n    readonly: boolean;\n    allowClear: boolean;\n    autoFocus: boolean;\n    className: string;\n    format: string;\n    size: 'sm' | 'xs' | 'lg' | 'md' | 'default';\n    value: TinyDate | TinyDate[] | null;\n    suffixIcon: string;\n    placement: ThyPlacement;\n    readonly valueChange: EventEmitter<TinyDate | TinyDate[]>;\n    readonly openChange: EventEmitter<boolean>;\n    origin: CdkOverlayOrigin;\n    cdkConnectedOverlay: CdkConnectedOverlay;\n    pickerInput: ElementRef;\n    prefixCls: string;\n    animationOpenState: boolean;\n    overlayOpen: boolean;\n    overlayPositions: import(\"@angular/cdk/overlay\").ConnectionPositionPair[];\n    get realOpenState(): boolean;\n    constructor(changeDetector: ChangeDetectorRef, dateHelper: DateHelperService);\n    ngAfterViewInit(): void;\n    focus(): void;\n    showOverlay(): void;\n    hideOverlay(): void;\n    onClickInputBox(): void;\n    onClickBackdrop(): void;\n    onOverlayDetach(): void;\n    onPositionChange(position: ConnectedOverlayPositionChange): void;\n    onClickClear(event: MouseEvent): void;\n    getPartTypeIndex(partType: RangePartType): number;\n    isEmptyValue(value: CompatibleValue | null): boolean;\n    isOpenHandledByUser(): boolean;\n    getReadableValue(): string | null;\n    getPlaceholder(): string;\n}\n"]}