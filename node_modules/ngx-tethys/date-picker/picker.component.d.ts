import { ThyPlacement } from 'ngx-tethys/core';
import { TinyDate } from 'ngx-tethys/util';
import { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';
import { DateHelperService } from './date-helper.service';
import { CompatibleValue } from './standard-types';
import * as ɵngcc0 from '@angular/core';
export declare type RangePartType = 'left' | 'right';
export declare class ThyPickerComponent implements AfterViewInit {
    private changeDetector;
    private dateHelper;
    isRange: boolean;
    open: boolean | undefined;
    disabled: boolean;
    placeholder: string | string[];
    readonly: boolean;
    allowClear: boolean;
    autoFocus: boolean;
    className: string;
    format: string;
    size: 'sm' | 'xs' | 'lg' | 'md' | 'default';
    value: TinyDate | TinyDate[] | null;
    suffixIcon: string;
    placement: ThyPlacement;
    readonly valueChange: EventEmitter<TinyDate | TinyDate[]>;
    readonly openChange: EventEmitter<boolean>;
    origin: CdkOverlayOrigin;
    cdkConnectedOverlay: CdkConnectedOverlay;
    pickerInput: ElementRef;
    prefixCls: string;
    animationOpenState: boolean;
    overlayOpen: boolean;
    overlayPositions: import("@angular/cdk/overlay").ConnectionPositionPair[];
    get realOpenState(): boolean;
    constructor(changeDetector: ChangeDetectorRef, dateHelper: DateHelperService);
    ngAfterViewInit(): void;
    focus(): void;
    showOverlay(): void;
    hideOverlay(): void;
    onClickInputBox(): void;
    onClickBackdrop(): void;
    onOverlayDetach(): void;
    onPositionChange(position: ConnectedOverlayPositionChange): void;
    onClickClear(event: MouseEvent): void;
    getPartTypeIndex(partType: RangePartType): number;
    isEmptyValue(value: CompatibleValue | null): boolean;
    isOpenHandledByUser(): boolean;
    getReadableValue(): string | null;
    getPlaceholder(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyPickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ThyPickerComponent, "thy-picker", ["thyPicker"], { "isRange": "isRange"; "open": "open"; "placement": "placement"; "value": "value"; "disabled": "disabled"; "placeholder": "placeholder"; "readonly": "readonly"; "allowClear": "allowClear"; "autoFocus": "autoFocus"; "className": "className"; "format": "format"; "size": "size"; "suffixIcon": "suffixIcon"; }, { "valueChange": "valueChange"; "openChange": "openChange"; }, never, ["*"]>;
}

//# sourceMappingURL=picker.component.d.ts.map