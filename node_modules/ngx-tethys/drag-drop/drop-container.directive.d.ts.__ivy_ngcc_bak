import { OnInit, EventEmitter, QueryList, AfterContentInit, NgZone } from '@angular/core';
import { ThyDragDirective } from './drag.directive';
import { MixinBase, Constructor, ThyUnsubscribe } from 'ngx-tethys/core';
import { ThyDragDropEvent, ThyDragStartEvent, ThyDragEndEvent, ThyDragOverEvent } from './drag-drop.class';
import { IThyDropContainerDirective } from './drop-container.class';
declare const _MixinBase: Constructor<ThyUnsubscribe> & typeof MixinBase;
export declare class ThyDropContainerDirective<T = any> extends _MixinBase implements OnInit, AfterContentInit, IThyDropContainerDirective {
    private ngZone;
    set dragContainer(data: T[]);
    data: T[];
    disabled: boolean;
    beforeStart: (e: ThyDragStartEvent<T>) => boolean;
    beforeOver: (e: ThyDragOverEvent<T>) => boolean;
    beforeDrop: (e: ThyDragDropEvent<T>) => boolean;
    started: EventEmitter<ThyDragStartEvent<ThyDragDirective<any>>>;
    ended: EventEmitter<ThyDragEndEvent<ThyDragDirective<any>>>;
    overed: EventEmitter<ThyDragOverEvent<ThyDragDirective<any>>>;
    dropped: EventEmitter<ThyDragDropEvent<ThyDragDirective<any>>>;
    draggables: QueryList<ThyDragDirective>;
    constructor(ngZone: NgZone);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    private draggableChanges;
    private resetDraggableChanges;
}
export {};
