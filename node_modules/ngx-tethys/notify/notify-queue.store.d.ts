import { Store } from 'ngx-tethys/store';
import { NotifyPlacement, ThyNotifyOptions } from './notify-option.interface';
import * as ɵngcc0 from '@angular/core';
export interface NotifyQueueState {
    topLeftQueue: ThyNotifyOptions[];
    topRightQueue: ThyNotifyOptions[];
    bottomLeftQueue: ThyNotifyOptions[];
    bottomRightQueue: ThyNotifyOptions[];
}
export declare const notifyQueueInitialState: NotifyQueueState;
export declare class NotifyQueueStore extends Store<NotifyQueueState> {
    static topRightSelector(state: NotifyQueueState): ThyNotifyOptions[];
    static topLeftSelector(state: NotifyQueueState): ThyNotifyOptions[];
    static bottomLeftSelector(state: NotifyQueueState): ThyNotifyOptions[];
    static bottomRightSelector(state: NotifyQueueState): ThyNotifyOptions[];
    constructor();
    private convertQueueKey;
    addNotify(placement: NotifyPlacement, options: ThyNotifyOptions): void;
    removeNotify(id: number, placement?: NotifyPlacement): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NotifyQueueStore, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<NotifyQueueStore>;
}

//# sourceMappingURL=notify-queue.store.d.ts.map