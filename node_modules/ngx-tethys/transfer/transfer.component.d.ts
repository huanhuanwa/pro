import { EventEmitter, TemplateRef, OnInit } from '@angular/core';
import { ThyTransferItem, ThyTransferChangeEvent, ThyTransferSelectEvent, ThyTransferDragEvent, InnerTransferDragEvent, Direction } from './transfer.interface';
import * as ɵngcc0 from '@angular/core';
export declare class ThyTransferComponent implements OnInit {
    hostClass: string;
    leftDataSource: ThyTransferItem[];
    rightDataSource: ThyTransferItem[];
    allDataSource: ThyTransferItem[];
    leftTitle: string;
    rightTitle: string;
    rightDraggable: boolean;
    private _autoMove;
    set thyData(value: ThyTransferItem[]);
    thyrenderLeftTemplateRef: TemplateRef<any>;
    thyrenderRightTemplateRef: TemplateRef<any>;
    set thyTitles(value: string[]);
    thyRightCanLock: boolean;
    thyRightLockMax: number;
    set thyAutoMove(value: boolean);
    thyLeftDraggable: boolean;
    thyRightDraggable: boolean;
    thyDraggableUpdate: EventEmitter<ThyTransferDragEvent>;
    thyChange: EventEmitter<ThyTransferChangeEvent>;
    templateRef: TemplateRef<any>;
    leftContentRef: TemplateRef<any>;
    rightContentRef: TemplateRef<any>;
    ngOnInit(): void;
    initializeTransferData(data?: ThyTransferItem[]): void;
    onSelect(from: Direction, event: ThyTransferSelectEvent): void;
    selectItem(event: ThyTransferSelectEvent): void;
    unselectItem(event: ThyTransferSelectEvent): void;
    private groupListByIsLock;
    onMove(to: Direction): void;
    onDragUpdate(direction: Direction, event: InnerTransferDragEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyTransferComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ThyTransferComponent, "thy-transfer", never, { "thyData": "thyData"; "thyTitles": "thyTitles"; "thyAutoMove": "thyAutoMove"; "thyrenderLeftTemplateRef": "thyrenderLeftTemplateRef"; "thyrenderRightTemplateRef": "thyrenderRightTemplateRef"; "thyRightCanLock": "thyRightCanLock"; "thyRightLockMax": "thyRightLockMax"; "thyLeftDraggable": "thyLeftDraggable"; "thyRightDraggable": "thyRightDraggable"; }, { "thyDraggableUpdate": "thyDraggableUpdate"; "thyChange": "thyChange"; }, ["templateRef", "leftContentRef", "rightContentRef"], never>;
}

//# sourceMappingURL=transfer.component.d.ts.map