import { Type } from '@angular/core';
import { ThyPlacement } from 'ngx-tethys/core';
export interface ThyGuiderStep<TData = any> {
    key: string;
    target?: string | [number, number];
    data: TData;
    route?: string;
    hintPlacement?: ThyPlacement;
    hintOffset?: number;
    pointOffset?: [number, number];
}
export declare class ThyGuiderConfig {
    /** hint Component,default is ThyGuiderHintComponent */
    hintComponent?: Type<unknown>;
    /** steps info */
    steps: ThyGuiderStep[];
    /** hint default position when step info not set hintPlacement */
    hintPlacement?: ThyPlacement;
    /** useful when without target */
    defaultPosition?: [number, number];
    /** setting default point offset */
    pointOffset?: [number, number];
    /** like popover offset */
    hintOffset?: number;
    /** popover active class */
    hintClass?: string | string[];
    /** guider point class */
    pointClass?: string | string[];
}
export declare const defaultGuiderPositionConfig: {
    hintComponent: Type<unknown>;
    hintPlacement: string;
    defaultPosition: number[];
    pointOffset: number[];
    hintOffset: number;
};
