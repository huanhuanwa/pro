import { Router } from '@angular/router';
import { ThyPopover } from 'ngx-tethys/popover';
import { ThyGuiderManager } from './guider-manager';
import { Observable, Subject } from 'rxjs';
import { ThyGuiderConfig, ThyGuiderStep } from './guider.class';
import { NgZone, RendererFactory2 } from '@angular/core';
import { Overlay } from '@angular/cdk/overlay';
export declare class ThyGuiderRef {
    config: ThyGuiderConfig;
    private rendererFactory;
    private popover;
    private router;
    private guiderManager;
    private ngZone;
    private overlay;
    private document;
    steps: ThyGuiderStep[];
    private stepChange$;
    private guiderEnded$;
    private closed$;
    private targetClicked$;
    private currentStep;
    private currentStepIndex;
    private stepsRef;
    constructor(config: ThyGuiderConfig, rendererFactory: RendererFactory2, popover: ThyPopover, router: Router, guiderManager: ThyGuiderManager, ngZone: NgZone, overlay: Overlay, document: any);
    stepChange(): Observable<ThyGuiderStep>;
    ended(): Subject<unknown>;
    closed(): Subject<ThyGuiderStep<any>>;
    targetClicked(): Subject<ThyGuiderStep<any>>;
    start(startWith?: number): Observable<ThyGuiderStep<any>>;
    next(): void;
    previous(): void;
    active(indexOrKey: number | string): void;
    private to;
    close(): void;
    end(): void;
    private removeManagerActiveKey;
    private notifyStepClicked;
    private drawStep;
    private notifyGuiderIsFinished;
    private removeExistedStep;
}
