import { ThyAbstractOverlayConfig, ThyUpperOverlayOptions } from 'ngx-tethys/core';
import { ElementRef, InjectionToken } from '@angular/core';
export declare type ThySlideFromTypes = 'left' | 'right' | 'top' | 'bottom' | 'void' | 'exit' | 'offsetLeft' | 'offsetRight' | 'offsetTop' | 'offsetBottom';
export declare type ThySlideMode = 'over' | 'push' | 'side';
export declare class ThySlideConfig extends ThyAbstractOverlayConfig {
    /**
     * Origin Element, for overlay flexible connected to
     */
    origin?: ElementRef<any> | HTMLElement | any;
    /**
     * set the direction when slide enter
     */
    from?: ThySlideFromTypes;
    /**
     * 从距离屏幕边缘 offset 出滑入滑出, 单位 px
     */
    offset?: number;
    /**
     * set class to trigger element.
     */
    originActiveClass?: string | string[];
    /**
     * set the drawerContainer by id、HTMLElement or ElementRef<HTMLElement>. e.g. drawerContainer = '#offset-host'
     */
    drawerContainer?: string | HTMLElement | ElementRef<HTMLElement>;
    /**
     * set the render way. one of 'over' or 'push'. Default is 'over'
     */
    mode?: ThySlideMode;
}
export declare class ThySlideOption extends ThySlideConfig {
}
export declare const THY_SLIDE_DEFAULT_CONFIG: InjectionToken<ThySlideConfig>;
export declare const slideUpperOverlayOptions: ThyUpperOverlayOptions;
export declare const slideDefaultConfigValue: {
    hasBackdrop: boolean;
    backdropClass: string;
    backdropClosable: boolean;
    closeOnNavigation: boolean;
    autoFocus: boolean;
    restoreFocus: boolean;
    from: string;
    panelClass: string;
    containerClass: string;
    role: string;
    offset: number;
    originActiveClass: string;
    mode: string;
    drawerContainer: string;
};
export declare const THY_SLIDE_DEFAULT_CONFIG_PROVIDER: {
    provide: InjectionToken<ThySlideConfig>;
    useValue: {};
};
