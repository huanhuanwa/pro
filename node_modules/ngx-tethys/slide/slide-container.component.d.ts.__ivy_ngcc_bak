import { ElementRef, ChangeDetectorRef, Renderer2, OnDestroy } from '@angular/core';
import { CdkPortalOutlet } from '@angular/cdk/portal';
import { ThyAbstractOverlayContainer } from 'ngx-tethys/core';
import { Observable } from 'rxjs';
import { AnimationEvent } from '@angular/animations';
import { ThySlideConfig, ThySlideFromTypes } from './slide.config';
import { ViewportRuler } from '@angular/cdk/overlay';
export declare class ThySlideContainerComponent extends ThyAbstractOverlayContainer implements OnDestroy {
    private elementRef;
    private document;
    config: ThySlideConfig;
    private renderer;
    private viewportRuler;
    portalOutlet: CdkPortalOutlet;
    animationOpeningDone: Observable<AnimationEvent>;
    animationClosingDone: Observable<AnimationEvent>;
    animationState: ThySlideFromTypes;
    slideContainerStyles: {
        width?: number;
        height?: number;
    };
    private drawerContainerElement;
    private ngUnsubscribe$;
    get isPush(): boolean;
    get isSide(): boolean;
    private get isLeftOrRight();
    private get hostOffset();
    private get transform();
    private get drawerContainerElementClass();
    constructor(elementRef: ElementRef, document: any, config: ThySlideConfig, changeDetectorRef: ChangeDetectorRef, renderer: Renderer2, viewportRuler: ViewportRuler);
    private setDrawerContainerElement;
    private setSlideContainerStyles;
    private checkContainerWithinViewport;
    private addDrawerContainerElementClass;
    private removeDrawerContainerElementClass;
    private setDrawerContainerElementStyle;
    private removeDrawerContainerElementStyle;
    beforeAttachPortal(): void;
    beforeDetachPortal(): void;
    onAnimationDone(event: AnimationEvent): void;
    onAnimationStart(event: AnimationEvent): void;
    ngOnDestroy(): void;
}
