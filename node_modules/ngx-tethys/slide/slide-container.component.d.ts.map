{"version":3,"file":"slide-container.component.d.ts","sources":["slide-container.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ChangeDetectorRef, Renderer2, OnDestroy } from '@angular/core';\nimport { CdkPortalOutlet } from '@angular/cdk/portal';\nimport { ThyAbstractOverlayContainer } from 'ngx-tethys/core';\nimport { Observable } from 'rxjs';\nimport { AnimationEvent } from '@angular/animations';\nimport { ThySlideConfig, ThySlideFromTypes } from './slide.config';\nimport { ViewportRuler } from '@angular/cdk/overlay';\nexport declare class ThySlideContainerComponent extends ThyAbstractOverlayContainer implements OnDestroy {\n    private elementRef;\n    private document;\n    config: ThySlideConfig;\n    private renderer;\n    private viewportRuler;\n    portalOutlet: CdkPortalOutlet;\n    animationOpeningDone: Observable<AnimationEvent>;\n    animationClosingDone: Observable<AnimationEvent>;\n    animationState: ThySlideFromTypes;\n    slideContainerStyles: {\n        width?: number;\n        height?: number;\n    };\n    private drawerContainerElement;\n    private ngUnsubscribe$;\n    get isPush(): boolean;\n    get isSide(): boolean;\n    private get isLeftOrRight();\n    private get hostOffset();\n    private get transform();\n    private get drawerContainerElementClass();\n    constructor(elementRef: ElementRef, document: any, config: ThySlideConfig, changeDetectorRef: ChangeDetectorRef, renderer: Renderer2, viewportRuler: ViewportRuler);\n    private setDrawerContainerElement;\n    private setSlideContainerStyles;\n    private checkContainerWithinViewport;\n    private addDrawerContainerElementClass;\n    private removeDrawerContainerElementClass;\n    private setDrawerContainerElementStyle;\n    private removeDrawerContainerElementStyle;\n    beforeAttachPortal(): void;\n    beforeDetachPortal(): void;\n    onAnimationDone(event: AnimationEvent): void;\n    onAnimationStart(event: AnimationEvent): void;\n    ngOnDestroy(): void;\n}\n"]}