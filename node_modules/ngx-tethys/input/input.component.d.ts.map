{"version":3,"file":"input.component.d.ts","sources":["input.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, TemplateRef, NgZone, OnInit } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any;\nexport declare class ThyInputComponent implements ControlValueAccessor, OnInit {\n    private ngZone;\n    placeholder: string;\n    thySize: string;\n    thyAutofocus: boolean;\n    type: string;\n    set thyType(value: string);\n    thyLabelText: string;\n    readonly: boolean;\n    set thyAutocomplete(value: boolean);\n    focus: EventEmitter<Event>;\n    blur: EventEmitter<Event>;\n    appendTemplate: TemplateRef<any>;\n    prependTemplate: TemplateRef<any>;\n    eyeTemplate: TemplateRef<any>;\n    _type: string;\n    value: string;\n    autocomplete: boolean;\n    showLabel: boolean;\n    private onTouchedCallback;\n    private onChangeCallback;\n    _isSearchContainer: boolean;\n    _isFormControl: boolean;\n    _isFocus: boolean;\n    disabled: boolean;\n    constructor(ngZone: NgZone);\n    ngOnInit(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState?(isDisabled: boolean): void;\n    onModelChange(): void;\n    onInputFocus(event: Event): void;\n    onInputBlur(event: Event): void;\n    isPassword(value: string): boolean;\n    togglePasswordType(): void;\n}\n"]}