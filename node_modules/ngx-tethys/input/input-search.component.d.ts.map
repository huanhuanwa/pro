{"version":3,"file":"input-search.component.d.ts","sources":["input-search.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { InputSize } from './input.directive';\nexport declare type InputSearchTheme = 'ellipse' | '';\nexport declare const CUSTOM_INPUT_SEARCH_CONTROL_VALUE_ACCESSOR: any;\nexport declare class ThyInputSearchComponent implements ControlValueAccessor {\n    private cdr;\n    onTouchedCallback: () => void;\n    private onChangeCallback;\n    disabled: boolean;\n    autoFocus: boolean;\n    _isSearchContainer: boolean;\n    _isSearchEllipse: boolean;\n    searchText: string;\n    name: string;\n    placeholder: string;\n    set thyTheme(value: InputSearchTheme);\n    set thySearchFocus(value: boolean);\n    thySize: InputSize;\n    clear: EventEmitter<Event>;\n    constructor(cdr: ChangeDetectorRef);\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState?(isDisabled: boolean): void;\n    searchModelChange(): void;\n    clearSearchText(event: Event): void;\n}\n"]}