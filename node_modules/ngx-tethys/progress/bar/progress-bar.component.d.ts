import { ElementRef, InjectionToken, TemplateRef } from '@angular/core';
import { ThyProgressTypes } from '../interfaces';
import { UpdateHostClassService } from 'ngx-tethys/core';
import * as ɵngcc0 from '@angular/core';
export interface ThyParentProgress {
    max: number;
    bars: ThyProgressBarComponent[];
}
export declare const THY_PROGRESS_COMPONENT: InjectionToken<ThyParentProgress>;
export declare class ThyProgressBarComponent {
    private updateHostClassService;
    private progress;
    private value;
    isProgressBar: boolean;
    percent: number;
    color: string;
    thyTips: string | TemplateRef<HTMLElement>;
    set thyType(type: ThyProgressTypes);
    set thyValue(value: number);
    set thyColor(color: string);
    constructor(updateHostClassService: UpdateHostClassService, elementRef: ElementRef, progress: ThyParentProgress);
    recalculatePercentage(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ThyProgressBarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ThyProgressBarComponent, "thy-progress-bar", never, { "thyType": "thyType"; "thyValue": "thyValue"; "thyColor": "thyColor"; "thyTips": "thyTips"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=progress-bar.component.d.ts.map