{"version":3,"file":"form.directive.d.ts","sources":["form.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnInit, Renderer2, OnDestroy, NgZone } from '@angular/core';\nimport { UpdateHostClassService } from 'ngx-tethys/core';\nimport { NgForm } from '@angular/forms';\nimport { ThyFormLayout, ThyFormValidatorConfig, ThyFormConfig } from './form.class';\nimport { ThyFormValidatorService } from './form-validator.service';\nexport declare enum ThyEnterKeyMode {\n    submit = \"submit\",\n    alwaysSubmit = \"alwaysSubmit\",\n    forbidSubmit = \"forbidSubmit\"\n}\nexport declare class ThyFormDirective implements OnInit, OnDestroy {\n    private ngForm;\n    private elementRef;\n    private renderer;\n    private ngZone;\n    private updateHostClassService;\n    validator: ThyFormValidatorService;\n    private config;\n    private layout;\n    private initialized;\n    set thyLayout(value: ThyFormLayout);\n    get thyLayout(): ThyFormLayout;\n    get isHorizontal(): boolean;\n    thyEnterKeyMode: ThyEnterKeyMode;\n    set thyFormValidatorConfig(config: ThyFormValidatorConfig);\n    wasValidated: boolean;\n    onSubmitSuccess: ($event: any) => void;\n    private _unsubscribe;\n    constructor(ngForm: NgForm, elementRef: ElementRef, renderer: Renderer2, ngZone: NgZone, updateHostClassService: UpdateHostClassService, validator: ThyFormValidatorService, config: ThyFormConfig);\n    ngOnInit(): void;\n    submit($event: Event): void;\n    updateClasses(): void;\n    submitRunInZone($event: any): void;\n    onKeydown($event: KeyboardEvent): void;\n    ngOnDestroy(): void;\n}\n"]}