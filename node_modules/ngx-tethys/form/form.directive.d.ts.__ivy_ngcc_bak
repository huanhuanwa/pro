import { ElementRef, OnInit, Renderer2, OnDestroy, NgZone } from '@angular/core';
import { UpdateHostClassService } from 'ngx-tethys/core';
import { NgForm } from '@angular/forms';
import { ThyFormLayout, ThyFormValidatorConfig, ThyFormConfig } from './form.class';
import { ThyFormValidatorService } from './form-validator.service';
export declare enum ThyEnterKeyMode {
    submit = "submit",
    alwaysSubmit = "alwaysSubmit",
    forbidSubmit = "forbidSubmit"
}
export declare class ThyFormDirective implements OnInit, OnDestroy {
    private ngForm;
    private elementRef;
    private renderer;
    private ngZone;
    private updateHostClassService;
    validator: ThyFormValidatorService;
    private config;
    private layout;
    private initialized;
    set thyLayout(value: ThyFormLayout);
    get thyLayout(): ThyFormLayout;
    get isHorizontal(): boolean;
    thyEnterKeyMode: ThyEnterKeyMode;
    set thyFormValidatorConfig(config: ThyFormValidatorConfig);
    wasValidated: boolean;
    onSubmitSuccess: ($event: any) => void;
    private _unsubscribe;
    constructor(ngForm: NgForm, elementRef: ElementRef, renderer: Renderer2, ngZone: NgZone, updateHostClassService: UpdateHostClassService, validator: ThyFormValidatorService, config: ThyFormConfig);
    ngOnInit(): void;
    submit($event: Event): void;
    updateClasses(): void;
    submitRunInZone($event: any): void;
    onKeydown($event: KeyboardEvent): void;
    ngOnDestroy(): void;
}
