{"version":3,"file":"form-validator.service.d.ts","sources":["form-validator.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { NgForm } from '@angular/forms';\nimport { ThyFormValidatorLoader } from './form-validator-loader';\nimport { ThyFormValidatorConfig } from './form.class';\nimport { Dictionary } from 'ngx-tethys/types';\nexport declare class ThyFormValidatorService {\n    private thyFormValidateLoader;\n    private _ngForm;\n    private _formElement;\n    private _config;\n    errors: string[];\n    validations: Dictionary<{\n        hasError?: boolean;\n        errorMessages?: string[];\n    }>;\n    private _getElement;\n    private _clearElementError;\n    private _tryGetValidation;\n    private _addError;\n    private _clearErrors;\n    private _initializeFormControlValidation;\n    private _restFormControlValidation;\n    private _formatValidationMessage;\n    private _getValidationMessage;\n    private _getValidationMessages;\n    private _setControlValidationError;\n    constructor(thyFormValidateLoader: ThyFormValidatorLoader);\n    initialize(ngForm: NgForm, formElement: HTMLElement): void;\n    setValidatorConfig(config: ThyFormValidatorConfig): void;\n    validateControl(name: string): void;\n    validateControls(): void;\n    addError(message: string): void;\n    validate($event?: Event): boolean;\n    reset(): void;\n    setElementErrorMessage(name: string, message: string): void;\n}\n"]}