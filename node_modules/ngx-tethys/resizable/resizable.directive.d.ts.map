{"version":3,"file":"resizable.directive.d.ts","sources":["resizable.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { AfterViewInit, OnDestroy, ElementRef, Renderer2, NgZone, EventEmitter } from '@angular/core';\nimport { Constructor, ThyUnsubscribe, MixinBase } from 'ngx-tethys/core';\nimport { ThyResizableService } from './resizable.service';\nimport { Platform } from '@angular/cdk/platform';\nimport { ThyResizeEvent } from './interface';\ndeclare const _MixinBase: Constructor<ThyUnsubscribe> & typeof MixinBase;\nexport declare class ThyResizableDirective extends _MixinBase implements AfterViewInit, OnDestroy {\n    private elementRef;\n    private renderer;\n    private platform;\n    private ngZone;\n    private thyResizableService;\n    thyBounds: 'window' | 'parent' | ElementRef<HTMLElement>;\n    thyMaxHeight?: number;\n    thyMaxWidth?: number;\n    thyMinHeight: number;\n    thyMinWidth: number;\n    thyGridColumnCount: number;\n    thyMaxColumn: number;\n    thyMinColumn: number;\n    thyLockAspectRatio: boolean;\n    thyPreview: boolean;\n    thyDisabled: boolean;\n    readonly thyResize: EventEmitter<ThyResizeEvent>;\n    readonly thyResizeEnd: EventEmitter<ThyResizeEvent>;\n    readonly thyResizeStart: EventEmitter<ThyResizeEvent>;\n    resizing: boolean;\n    private nativeElement;\n    private nativeElementRect;\n    private sizeCache;\n    private ghostElement;\n    private currentHandleEvent;\n    constructor(elementRef: ElementRef<HTMLElement>, renderer: Renderer2, platform: Platform, ngZone: NgZone, thyResizableService: ThyResizableService);\n    ngAfterViewInit(): void;\n    setCursor(): void;\n    setPosition(): void;\n    onMouseenter(): void;\n    onMouseleave(): void;\n    endResize(event: MouseEvent | TouchEvent): void;\n    resize(event: MouseEvent | TouchEvent): void;\n    calcSize(width: number, height: number, ratio: number): ThyResizeEvent;\n    previewResize({ width, height }: ThyResizeEvent): void;\n    createGhostElement(): void;\n    removeGhostElement(): void;\n    ngOnDestroy(): void;\n}\nexport {};\n"]}